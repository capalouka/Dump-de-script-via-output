  04:54:13.898  ----- [2711] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Coin Rewards HUD -----  -  Editar
  04:54:13.898  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local table1 = {
	"rbxassetid://6958715757",
	"rbxassetid://6958715675",
	"rbxassetid://6958715811",
	"rbxassetid://6958715614"
};
local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local Random_new_ret = Random.new();
function CoinBonusAnimation(p1) -- Line: 23
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table1
			[3] = Random_new_ret
	--]]
	debug.profilebegin("Coin Rewards HUD.CoinBonusAnimation");
	local v1, u1 = m_Library.Functions.CreateParticleHost(p1 + Vector3.new(0, 5, 0));
	m_Library.Audio.Play(table1, p1, 1, 1.65, 350);
	task.delay(0.5, function() -- Line: 30
		--[[
			Upvalues:
				[1] = m_Library
				[2] = u1
		--]]
		local Children = m_Library.Assets.Particles:FindFirstChild("Coin Bonus"):GetChildren();
		for _, val1 in ipairs(Children) do
			local Clone_ret = val1:Clone();
			Clone_ret.Parent = u1;
			Clone_ret:Emit(Clone_ret.Rate);
		end
	end);
	for index1 = 1, 6 do
		local v2 = math.pi / 6 * index1;
		local Clone_ret2 = m_Library.Assets.Other:FindFirstChild("Bonus Particle"):Clone();
		Clone_ret2.CFrame = CFrame.new(p1) * CFrame.Angles(v2, v2, v2);
		Clone_ret2.Velocity = Vector3.new(Random_new_ret:NextNumber(-30, 30), Random_new_ret:NextNumber(80, 85), Random_new_ret:NextNumber(-30, 30));
		Clone_ret2.Parent = m_Library.Debris;
		task.delay(1, function() -- Line: 46
			--[[
				Upvalues:
					[1] = Clone_ret2
			--]]
			if Clone_ret2 and Clone_ret2.Parent then
				Clone_ret2:FindFirstChildOfClass("Trail").Enabled = false;
			end
		end);
		m_Library.Functions.AddDebris(Clone_ret2, 3);
	end
	m_Library.WorldFX.RewardBillboard(p1, nil, "BonusReward");
	m_Library.Functions.AddDebris(v1, 5);
	debug.profileend();
end
m_Library.Network.Fired("Coin Bonus"):Connect(function(p2) -- Line: 61
	CoinBonusAnimation(p2);
end);
  -  Editar
  04:54:13.898    -  Editar
  04:54:13.898  ----- [2712] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Upgrades -----  -  Editar
  04:54:13.898  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local _ = {
	[0] = "rbxassetid://6869856569",
	[1] = "rbxassetid://6869856667",
	[2] = "rbxassetid://6869856744",
	[3] = "rbxassetid://6869856835",
	[4] = "rbxassetid://6869856917",
	[5] = "rbxassetid://6869856979"
};
local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_Upgrades = m_Library.GUI.Upgrades;
local Holder = t_Upgrades.Container:FindFirstChild("Holder");
local _ = Random.new();
local bool1 = false;
function Buy(p1) -- Line: 28
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v1, v2 = m_Library.Network.Invoke("Buy Upgrade", p1);
	if not v1 then
		m_Library.Message.New(v2 or "Something went wrong. Try again!");
		return;
	end
	m_Library.Functions.Wait(0.66);
end
function Update() -- Line: 38
	--[[
		Upvalues:
			[1] = m_Library
			[2] = Holder
			[3] = bool1
			[4] = t_Upgrades
	--]]
	local v3 = m_Library.Save.Get();
	if not v3 then return end
	local v4 = 0;
	local v5 = 0;
	for key1, val1 in pairs(m_Library.Directory.Upgrades) do
		if val1.isHalloweenEvent then continue end
		v4 = v4 + 5;
		local v6 = Holder:FindFirstChild(key1);
		if not v6 then
			v6 = m_Library.Assets.UI.Upgrades.Upgrade:Clone();
			v6.Frame.Title.Text = val1.title;
			v6.Frame.Icon.Image = val1.icon;
			v6.Name = key1;
			local v9 = m_Library.Directory.Currency[val1.currency];
			v6.Frame.CostFrame.Currency.Image = v9.ImageOutline;
			v9.Gradient:Clone().Parent = v6.Frame.CostFrame.Cost;
			v6.Buy.Activated:Connect(function() -- Line: 67
				--[[
					Upvalues:
						[1] = bool1
						[2] = key1
				--]]
				if not bool1 then
					bool1 = true;
					Buy(key1);
					bool1 = false;
				end
			end);
			m_Library.GUIFX.ButtonFX(v6.Buy);
			v6.Parent = Holder;
		end
		local v7 = v3.Upgrades[key1] or 0;
		local v8 = val1.prices[v7 + 1];
		v6.Frame.CostFrame.Cost.Text = v8 and m_Library.Functions.NumberShorten(v8) or "Maxed";
		for _, child2 in ipairs(v6.Frame.Bars:GetChildren()) do
			if child2.ClassName ~= "ImageLabel" then continue end
			child2.Image = child2.LayoutOrder <= v7 and "rbxassetid://7055997958" or "rbxassetid://7055998070";
		end
		v5 = v5 + v7;
	end
	t_Upgrades.Completed.Text = math.round(v5 / v4 * 100) .. "% Complete";
	local UIListLayout = Holder:FindFirstChildOfClass("UIListLayout");
	local UIPadding = Holder:FindFirstChildOfClass("UIPadding");
	UIListLayout:ApplyLayout();
	Holder.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + UIPadding.PaddingTop.Offset + UIPadding.PaddingBottom.Offset);
end
t_Upgrades.Close.Activated:Connect(function() -- Line: 110
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_Upgrades
	--]]
	if not bool1 then
		bool1 = true;
		t_Upgrades.Gui.Enabled = false;
		bool1 = false;
	end
end);
m_Library.Signal.Fired("Open Upgrades"):Connect(function() -- Line: 119
	--[[
		Upvalues:
			[1] = t_Upgrades
	--]]
	t_Upgrades.Gui.Enabled = true;
end);
m_Library.GUIFX.ButtonFX(t_Upgrades.Close);
Update();
m_Library.Signal.Fired("Stat Changed"):Connect(function(p2) -- Line: 132
	if p2 == "Upgrades" then
		Update();
	end
end);
  -  Editar
  04:54:13.898    -  Editar
  04:54:13.898  ----- [2713] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.WIndow Visibility Handling -----  -  Editar
  04:54:13.898  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = m_Library.Player.PlayerGui();
local t_Gui = m_Library.GUI.Message.Gui;
local t_ImportantWindows = m_Library.Variables.ImportantWindows;
local table1 = {};
local table2 = {};
local bool1 = false;
function WindowOpened(p1) -- Line: 31
	--[[
		Upvalues:
			[1] = t_Gui
			[2] = table1
			[3] = m_Library
			[4] = table2
	--]]
	local v1 = t_Gui == p1;
	if not v1 and t_Gui.Enabled then
		p1.Enabled = false;
		return;
	end
	if not CanOpen() and not v1 and p1.Name ~= "Trading" then
		p1.Enabled = false;
		return;
	end
	for _, val2 in ipairs(table1) do
		if val2 == p1 or not val2.Enabled then continue end
		if v1 and not m_Library.Variables.GuiThatWasEnabled then
			m_Library.Variables.GuiThatWasEnabled = val2;
			local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 53
				--[[
					Upvalues:
						[1] = p1
						[2] = m_Library
				--]]
				while p1.Enabled do
					m_Library.Heartbeat();
				end
				if m_Library.Variables.GuiThatWasEnabled then
					m_Library.Variables.GuiThatWasEnabled.Enabled = true;
					m_Library.Variables.GuiThatWasEnabled = nil;
				end
			end);
			coroutine_wrap_ret();
		end
		val2.Enabled = false;
	end
	m_Library.Signal.Fire("Window Opened", p1);
	m_Library.InfoOverlay.Remove();
	local Frame = p1:FindFirstChild("Frame");
	if not table2[p1] then
		table2[p1] = Frame.Position;
	end
	local v2 = table2[p1];
	Frame.Position = v2 + UDim2.new(0, 0, 0.066, 0);
	m_Library.Functions.Tween(Frame, {Position = v2}, {
		0.15,
		Enum.EasingStyle.Back,
		Enum.EasingDirection.Out
	});
end
function Track(p2) -- Line: 84
	--[[
		Upvalues:
			[1] = table1
			[2] = m_Library
	--]]
	table.insert(table1, p2);
	if p2.Enabled then
		WindowOpened(p2);
	end
	p2:GetPropertyChangedSignal("Enabled"):Connect(function() -- Line: 91
		--[[
			Upvalues:
				[1] = p2
				[2] = m_Library
		--]]
		if p2.Enabled then
			WindowOpened(p2);
			return;
		end
		m_Library.Signal.Fire("Window Closed", p2);
	end);
end
function CanOpen() -- Line: 101
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	return (m_Library.Variables.OpeningEgg <= 0 or not true) and not m_Library.Variables.UsingMachine and not m_Library.Variables.UsingCannon and not m_Library.Variables.Trading;
end
for _, child1 in ipairs(u1:GetChildren()) do
	if child1.ClassName ~= "ScreenGui" or not m_Library.Functions.SearchArray(t_ImportantWindows, child1.Name) then continue end
	Track(child1);
end
u1.ChildAdded:Connect(function(child) -- Line: 122
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_ImportantWindows
	--]]
	if child.ClassName == "ScreenGui" and m_Library.Functions.SearchArray(t_ImportantWindows, child.Name) then
		Track(child);
	end
end);
function CloseOpenWindow() -- Line: 132
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table1
	--]]
	if m_Library.GUI.Trading.Trade.Visible then
		m_Library.Signal.Fire("Attempt Cancel Trade");
		return true;
	end
	if m_Library.GUI.Mailbox.Gui.Enabled then
		m_Library.Signal.Fire("Close Mailbox");
		return true;
	end
	for _, val3 in ipairs(table1) do
		local t_Close = m_Library.GUI[val3.Name].Close;
		if not val3.Enabled then continue end
		if not t_Close or not t_Close.Visible then
			return false;
		end
		val3.Enabled = false;
		if m_Library.Variables.Console then
			m_Library.GuiService.SelectedObject = nil;
		end
		return true;
	end
	return true;
end
m_Library.Signal.Invoked("Close Open Window").OnInvoke = CloseOpenWindow;
m_Library.UserInputService.InputBegan:Connect(function(input, gameProcessedEvent) -- Line: 164
	--[[
		Upvalues:
			[1] = bool1
	--]]
	if not gameProcessedEvent and input.KeyCode == Enum.KeyCode.ButtonB and not bool1 then
		bool1 = true;
		CloseOpenWindow();
		bool1 = false;
	end
end);
local function HandleEggOpening() -- Line: 178
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
			[3] = t_ImportantWindows
	--]]
	local table3 = {};
	m_Library.GUI.Main.Gui.Enabled = false;
	for _, child4 in ipairs(u1:GetChildren()) do
		if child4.ClassName ~= "ScreenGui" or not m_Library.Functions.SearchArray(t_ImportantWindows, child4.Name) then continue end
		if child4.Enabled then
			table.insert(table3, child4);
		end
		child4.Enabled = false;
	end
	while m_Library.Variables.OpeningEgg > 0 do
		m_Library.Heartbeat();
	end
	m_Library.GUI.Main.Gui.Enabled = true;
	for _, val5 in ipairs(table3) do
		val5.Enabled = true;
	end
end
m_Library.Signal.Fired("Opening Egg"):Connect(function() -- Line: 202
	--[[
		Upvalues:
			[1] = HandleEggOpening
	--]]
	HandleEggOpening();
end);
  -  Editar
  04:54:13.898    -  Editar
  04:54:13.898  ----- [2714] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Exclusive Shop Before F2P -----  -  Editar
  04:54:13.899  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_ExclusiveShop = m_Library.GUI.ExclusiveShop;
local u1 = m_Library.Network.Invoke("Get OSTime");
local ServerTimeNow = workspace:GetServerTimeNow();
local bool1 = false;
local table1 = {};
local table2 = {};
local table3 = {};
local rng = Random.new()
--m_Library.FFlags.Get(m_Library.FFlags.Keys.DragDelete)
function UpdatePets() -- Line: 23
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_ExclusiveShop
			[3] = bool1
	--]]
	local function AddPet(p10) -- Line: 24
		--[[
			Upvalues:
				[1] = m_Library
				[2] = t_ExclusiveShop
				[3] = bool1
		--]]
		local t_ID = p10.ID;
		local t_petId = p10.PetData.petId;
		local t_extraData = p10.PetData.extraData;
		local Clone_ret = m_Library.Assets.UI.ExclusiveShop.Pet:Clone();
		Clone_ret.Name = t_petId;
		local Clone_ret2 = m_Library.Assets.UI.Inventory.Pet:Clone();
		Clone_ret2.Position = UDim2.new(0.5, 0, 0, 0);
		Clone_ret2.AnchorPoint = Vector2.new(0.5, 0);
		Clone_ret2.Size = UDim2.new(1, 0, 0.6, 0);
		Clone_ret2.Parent = Clone_ret;
		local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint");
		UIAspectRatioConstraint.Parent = Clone_ret2;
		Clone_ret2.Parent = Clone_ret;
		Clone_ret.Parent = t_ExclusiveShop.Container.Pets.Container;
		m_Library.PetUI.Create(Clone_ret2, t_petId, t_extraData);
		local Price = Clone_ret:FindFirstChild("Price");
		Clone_ret.LayoutOrder = 9999999999 - UpdatePriceFrame(Price, t_ID, false) or 0;
		m_Library.GUIFX.ButtonFX(Price);
		Price.Activated:Connect(function() -- Line: 49
			--[[
				Upvalues:
					[1] = bool1
					[2] = m_Library
					[3] = t_ID
			--]]
			if not bool1 then
				bool1 = true;
				m_Library.Shared.PromptPurchase(t_ID, true);
				bool1 = false;
			end
		end);
	end
	for _, val2 in pairs(m_Library.Directory.Products) do
		if not val2.PetData then continue end
		AddPet(val2);
	end
end
function UpdateBoosts() -- Line: 68
	--[[
		Upvalues:
			[1] = m_Library
			[2] = bool1
			[3] = t_ExclusiveShop
			[4] = table3
	--]]
	local function UpdateBoost(p11) -- Line: 69
		--[[
			Upvalues:
				[1] = m_Library
		--]]
		local Buttons = p11:FindFirstChild("Buttons");
		local Price2 = Buttons:FindFirstChild("Price");
		local Frame = Price2:FindFirstChild("Frame")
		local Attribute2 = p11:GetAttribute("Boost");
		local t_ID2 = m_Library.Directory.Products[p11:GetAttribute("Product")].ID;
		local diamondPurchasables = m_Library.FFlags.Get(m_Library.FFlags.Keys.DiamondPurchasables)
		if diamondPurchasables then
			local e = m_Library.Shared.BoostsCosts[Attribute2]
			Frame.Robux.Text = e and m_Library.Functions.NumberShorten(e) or "???"
			Frame.RobuxIcon.Image = "rbxassetid://7786012670"			
		else
			UpdatePriceFrame(Price2:FindFirstChild("Frame"), t_ID2, false);
			Frame.RobuxIcon.Image = "rbxassetid://6922231684"			
		end
		Frame.Robux["Diamonds Gradient"].Enabled = diamondPurchasables
		Frame.Robux["UIStroke"].Enabled = diamondPurchasables
		local v23 = m_Library.Save.Get();
		local Attribute = p11:GetAttribute("Boost");
		local v24 = v23.Boosts[Attribute];
		p11.TimeLeft.Visible = v24 ~= nil;
		if v24 then
			if v24 < 86400 then
				p11.TimeLeft.Text = m_Library.Functions.TimerString(v24);
			else
				p11.TimeLeft.Text = m_Library.Functions.TimeString(v24) .. " Left";
			end
		end
		local v25 = v23.BoostsInventory[Attribute];
		local Use = p11.Buttons:FindFirstChild("Use");
		Use.Visible = v25 ~= nil;
		if v25 then
			Use:FindFirstChild("Label").Text = "Use (" .. m_Library.Functions.Commas(v25) .. ")";
		end
		if Attribute == "Triple Diamonds" then
			p11.Visible = v25 and v25 > 0 and true or v24 and v24 > 0;
		end
	end
	local function SetupBoost(p12) -- Line: 95
		--[[
			Upvalues:
				[1] = m_Library
				[2] = bool1
		--]]
		local diamondPurchasables = m_Library.FFlags.Get(m_Library.FFlags.Keys.DiamondPurchasables)
		local t_ID2 = m_Library.Directory.Products[p12:GetAttribute("Product")].ID;
		local Attribute2 = p12:GetAttribute("Boost");
		local Buttons = p12:FindFirstChild("Buttons");
		local Price2 = Buttons:FindFirstChild("Price");
		local Frame = Price2:FindFirstChild("Frame")
		if diamondPurchasables then
			local e = m_Library.Shared.BoostsCosts[Attribute2]
			Frame.Robux.Text = e and m_Library.Functions.NumberShorten(e) or "???"
			Frame.RobuxIcon.Image = "rbxassetid://7786012670"			
		else
			UpdatePriceFrame(Price2:FindFirstChild("Frame"), t_ID2, false);
			Frame.RobuxIcon.Image = "rbxassetid://6922231684"			
		end
		Frame.Robux["Diamonds Gradient"].Enabled = diamondPurchasables
		Frame.Robux["UIStroke"].Enabled = diamondPurchasables

		m_Library.GUIFX.ButtonFX(Price2);
		Price2.Activated:Connect(function() -- Line: 103
			--[[
				Upvalues:
					[1] = bool1
					[2] = Attribute2
					[3] = m_Library
					[4] = t_ID2
			--]]
			if not bool1 then
				bool1 = true;
				if Attribute2 == "Triple Diamonds" then
					m_Library.Message.New("This is temporarily disabled!");
					bool1 = false;
					return;
				end
				if m_Library.FFlags.Get(m_Library.FFlags.Keys.DiamondPurchasables) then
					local s, r = m_Library.Network.Invoke("Purchase Boost", Attribute2)
					if not s then
						m_Library.Message.New(r or "Something went wrong, Please try again!")
					end
				else
					m_Library.Shared.PromptPurchase(t_ID2, true);
				end
				bool1 = false;
			end
		end);
		local Use2 = Buttons:FindFirstChild("Use");
		m_Library.GUIFX.ButtonFX(Use2);
		Use2.Activated:Connect(function() -- Line: 120
			--[[
				Upvalues:
					[1] = bool1
					[2] = m_Library
					[3] = Attribute2
			--]]
			if not bool1 then
				bool1 = true;
				m_Library.Network.Fire("Activate Boost", Attribute2);
				bool1 = false;
			end
		end);
	end
	for _, child3 in ipairs(t_ExclusiveShop.Container.Boosts:GetChildren()) do
		if not child3:GetAttribute("Boost") then continue end
		UpdateBoost(child3);
		if table3[child3] then continue end
		table3[child3] = true;
		SetupBoost(child3);
	end
end
function UpdateDiamonds() -- Line: 143
	--[[
		Upvalues:
			[1] = t_ExclusiveShop
			[2] = m_Library
			[3] = table2
			[4] = bool1
	--]]
	local t_BestCurrency = t_ExclusiveShop.Container.Diamonds.BestCurrency;
	for key4, val4 in ipairs(m_Library.Directory.Eggs["Diamond Egg"].drops) do
		local FindFirstChild_ret = t_BestCurrency:FindFirstChild(tostring(key4));
		m_Library.PetUI.CreateStaticHover(FindFirstChild_ret, val4[1]);
	end
	local function SetupDiamonds(p13) -- Line: 151
		--[[
			Upvalues:
				[1] = table2
				[2] = m_Library
				[3] = bool1
		--]]
		if table2[p13] then return end
		table2[p13] = true;
		local t_ID3 = m_Library.Directory.Products[p13:GetAttribute("Product")].ID;
		UpdatePriceFrame(p13:FindFirstChild("Price"), t_ID3, false);
		m_Library.GUIFX.ButtonFX(p13);
		p13.Activated:Connect(function() -- Line: 161
			--[[
				Upvalues:
					[1] = bool1
					[2] = m_Library
					[3] = t_ID3
			--]]
			if not bool1 then
				bool1 = true;
				m_Library.Shared.PromptPurchase(t_ID3, true);
				bool1 = false;
			end
		end);
	end
	SetupDiamonds(t_ExclusiveShop.Container.Diamonds.BestCurrency);
	for _, child5 in ipairs(t_ExclusiveShop.Container.Diamonds.CurrencyGroup:GetChildren()) do
		if child5.ClassName ~= "TextButton" then continue end
		SetupDiamonds(child5);
	end
end
function UpdateGamepasses() -- Line: 179
	--[[
		Upvalues:
			[1] = m_Library
			[2] = bool1
			[3] = t_ExclusiveShop
			[4] = table1
	--]]
	local function UpdateGamepass(p14) -- Line: 180
		--[[
			Upvalues:
				[1] = m_Library
		--]]
		local t_ID4 = m_Library.Directory.Gamepasses[p14:GetAttribute("Gamepass")].ID;
		local v26 = m_Library.Gamepasses.Owns(t_ID4);
		if v26 then
			p14:FindFirstChild("Price").Robux.Text = "Owns";
			p14:FindFirstChild("Price").RobuxIcon.Image = "rbxassetid://6516386809";
			return;
		end
		UpdatePriceFrame(p14:FindFirstChild("Price"), t_ID4, true);
	end
	local function SetupGamepass(p15) -- Line: 192
		--[[
			Upvalues:
				[1] = m_Library
				[2] = bool1
		--]]
		m_Library.GUIFX.ButtonFX(p15);
		local t_ID5 = m_Library.Directory.Gamepasses[p15:GetAttribute("Gamepass")].ID;
		p15.Activated:Connect(function() -- Line: 195
			--[[
				Upvalues:
					[1] = bool1
					[2] = m_Library
					[3] = t_ID5
			--]]
			if not bool1 then
				bool1 = true;
				m_Library.Shared.PromptPurchase(t_ID5);
				bool1 = false;
			end
		end);
	end
	for _, child6 in ipairs(t_ExclusiveShop.Gamepasses:GetChildren()) do
		for _, child10 in ipairs(child6:GetChildren()) do
			if not child10:GetAttribute("Gamepass") then continue end
			if not table1[child10] then
				table1[child10] = true;
				SetupGamepass(child10);
			end
			UpdateGamepass(child10);
		end
	end
end
function Update15PetsEquipped()
	local t_Deal = t_ExclusiveShop.Container["15Pets"].Deal;
	if not t_Deal.Visible then return end
	local v7 = m_Library.Save.Get();
	if not v7 then return end
	local v8 = v7.MaxEquipped >= 15;
	t_Deal.Title.Text = math.max(v8 and v7.MaxEquipped or v7.MaxEquipped + 7, 15) .. " Pets Equipped!";
	local Price3 = t_Deal.Buttons:FindFirstChild("Price");
	if v8 then
		Price3.Robux.Text = "Owned";
		Price3.RobuxIcon.Visible = false;
	else
        UpdatePriceFrame(Price3, m_Library.Directory.Gamepasses["15 Pets Equipped"].ID, true);
	end
	if not t_Deal:GetAttribute("Setup") then
		t_Deal:SetAttribute("Setup", true);
		m_Library.GUIFX.ButtonFX(Price3);
		Price3.Activated:Connect(function() 
			if not bool1 then
				bool1 = true;
				local v41, v42 = m_Library.Network.Invoke("Attempt Buy 15 Pets Equipped");
				if v41 then
					m_Library.Shared.PromptPurchase(m_Library.Directory.Gamepasses["15 Pets Equipped"].ID, false);
				elseif v42 == "You need to buy the 8 Pets Equipped pass first. Would you like to buy it now?" then
					local v47 = m_Library.Message.New(v42, true);
					if v47 then
						m_Library.Shared.PromptPurchase(m_Library.Directory.Gamepasses["8 Pets Equipped"].ID, false);
					end
				else
					m_Library.Message.New(v42 or "Error");
				end
				bool1 = false;
			end
		end);
		coroutine.wrap(function()
			local Splash = t_Deal:FindFirstChild("Splash");
			local t_Position = Splash.Position;
			while true do
				m_Library.Functions.Tween(Splash, {Position = t_Position - UDim2.new(0, 0, 0.05, 0)}, {
					1.5,
					"Sine",
					"InOut"
				}).Completed:Wait();
				m_Library.Functions.Tween(Splash, {Position = t_Position}, {
					1.25,
					"Sine",
					"InOut"
				}).Completed:Wait();
			end
		end)()
	end
end
function UpdateLazarGun() -- Line: 285
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_ExclusiveShop
			[3] = bool1
	--]]
	if not ({[1436154219] = true})[m_Library.LocalPlayer.UserId] then return end
	t_ExclusiveShop.Container.LazarGun.Visible = true;
	local t_Deal2 = t_ExclusiveShop.Container.LazarGun.Deal;
	if not t_Deal2.Visible then return end
	local v9 = m_Library.Save.Get();
	if not v9 then return end
	local Price4 = t_Deal2.Buttons:FindFirstChild("Price");
	UpdatePriceFrame(Price4, m_Library.Directory.Products["Lazar Gun"].ID, false);
	if not t_Deal2:GetAttribute("Setup") then
		t_Deal2:SetAttribute("Setup", true);
		m_Library.GUIFX.ButtonFX(Price4);
		Price4.Activated:Connect(function() -- Line: 313
			--[[
				Upvalues:
					[1] = bool1
					[2] = m_Library
			--]]
			if not bool1 then
				bool1 = true;
                m_Library.Shared.PromptPurchase(m_Library.Directory.Products["Lazar Gun"].ID, true);
				bool1 = false;
			end
		end);
	end
end
function UpdateOctupleEgg() -- Line: 324
	--[[
		Upvalues:
			[1] = t_ExclusiveShop
			[2] = m_Library
			[3] = bool1
	--]]
	local t_Deal3 = t_ExclusiveShop.Container.FeaturedOctuple.Deal;
	if not t_Deal3.Visible then return end
	local v10 = m_Library.Save.Get();
	if not v10 then return end
	local t_OwnsOctupleEggs = v10.OwnsOctupleEggs;
	local Price5 = t_Deal3.Buttons:FindFirstChild("Price");
	if t_OwnsOctupleEggs then
		Price5.Robux.Text = "Owned";
		Price5.RobuxIcon.Visible = false;
	else
        UpdatePriceFrame(Price5, m_Library.Directory.Gamepasses["Octuple Egg Open"].ID, false);
	end
	if not t_Deal3:GetAttribute("Setup") then
		t_Deal3:SetAttribute("Setup", true);
		m_Library.GUIFX.ButtonFX(Price5);
		Price5.Activated:Connect(function() -- Line: 352
			--[[
				Upvalues:
					[1] = bool1
					[2] = m_Library
			--]]
			if not bool1 then
				bool1 = true;
				local v43, v44 = m_Library.Network.Invoke("Attempt Buy Octuple Eggs");
				if v43 then
					m_Library.Shared.PromptPurchase(m_Library.Directory.Gamepasses["Octuple Egg Open"].ID, false);
				elseif v44 == "You need to buy the triple egg pass first. Would you like to buy it now?" then
					local v48 = m_Library.Message.New(v44, true);
					if v48 then
						m_Library.Shared.PromptPurchase(m_Library.Directory.Gamepasses["Triple Egg Open"].ID, false);
					end
				else
					m_Library.Message.New(v44 or "Error");
				end
				bool1 = false;
			end
		end);
		local coroutine_wrap_ret2 = coroutine.wrap(function() -- Line: 373
			--[[
				Upvalues:
					[1] = t_Deal3
					[2] = m_Library
			--]]
			local Splash2 = t_Deal3:FindFirstChild("Splash");
			local t_Position2 = Splash2.Position;
			while true do
				m_Library.Functions.Tween(Splash2, {Position = t_Position2 - UDim2.new(0, 0, 0.05, 0)}, {
					1.25,
					"Sine",
					"InOut"
				}).Completed:Wait();
				m_Library.Functions.Tween(Splash2, {Position = t_Position2}, {
					1.15,
					"Sine",
					"InOut"
				}).Completed:Wait();
			end
		end);
		coroutine_wrap_ret2();
	end
end
function UpdateSecretHunter()  
	local t_Deal4 = t_ExclusiveShop.Container.Featured.Deal;
	if not t_Deal4.Visible then return end
	local v11 = m_Library.Save.Get();
	if not v11 then return end
	local t_ID6 = m_Library.Directory.Gamepasses["Secret Hunter"].ID;
	local v12 = m_Library.Gamepasses.Owns(t_ID6);
	local Price6 = t_Deal4.Buttons:FindFirstChild("Price");
	if v12 then
		Price6.Robux.Text = "Owned";
		Price6.RobuxIcon.Visible = false;
	else
		UpdatePriceFrame(Price6, t_ID6, true);
	end
	if not t_Deal4:GetAttribute("Setup") then
		t_Deal4:SetAttribute("Setup", true);
		m_Library.GUIFX.ButtonFX(Price6);
		Price6.Activated:Connect(function() -- Line: 415
			--[[
				Upvalues:
					[1] = bool1
					[2] = m_Library
					[3] = t_ID6
			--]]
			if not bool1 then
				bool1 = true;
				m_Library.Shared.PromptPurchase(t_ID6);
				bool1 = false;
			end
		end);
		local coroutine_wrap_ret3 = coroutine.wrap(function() -- Line: 424
			--[[
				Upvalues:
					[1] = t_Deal4
					[2] = m_Library
			--]]
			local Splash3 = t_Deal4:FindFirstChild("Splash");
			local t_Position3 = Splash3.Position;
			while true do
				m_Library.Functions.Tween(Splash3, {Position = t_Position3 - UDim2.new(0, 0, 0.05, 0)}, {
					1.15,
					"Sine",
					"InOut"
				}).Completed:Wait();
				m_Library.Functions.Tween(Splash3, {Position = t_Position3}, {
					1,
					"Sine",
					"InOut"
				}).Completed:Wait();
			end
		end);
		coroutine_wrap_ret3();
	end
end
function MerchAnimation() -- Line: 539
	--[[
		Upvalues:
			[1] = t_ExclusiveShop
			[2] = m_Library
	--]]
	local Deal = t_ExclusiveShop.Container:FindFirstChild("Merch"):FindFirstChild("Deal");
	local One = Deal.Illustrations:FindFirstChild("One");
	local Two = Deal.Illustrations:FindFirstChild("Two");
	local t_Position4 = One.Position;
	local t_Position5 = Two.Position;
	local coroutine_wrap_ret4 = coroutine.wrap(function() -- Line: 544
		--[[
			Upvalues:
				[1] = m_Library
				[2] = One
				[3] = t_Position4
		--]]
		while true do
			m_Library.Functions.Tween(One, {Position = t_Position4 - UDim2.new(0, 0, 0.05, 0)}, {
				0.25,
				"Expo",
				"InOut"
			}).Completed:Wait();
			m_Library.Functions.Tween(One, {Position = t_Position4}, {
				0.35,
				"Quad",
				"InOut"
			}).Completed:Wait();
			m_Library.Functions.Wait(math.random(0, 2));
		end
	end);
	coroutine_wrap_ret4();
	local coroutine_wrap_ret5 = coroutine.wrap(function() -- Line: 554
		--[[
			Upvalues:
				[1] = m_Library
				[2] = Two
				[3] = t_Position5
		--]]
		while true do
			m_Library.Functions.Tween(Two, {Position = t_Position5 - UDim2.new(0, 0, 0.05, 0)}, {
				0.25,
				"Expo",
				"InOut"
			}).Completed:Wait();
			m_Library.Functions.Tween(Two, {Position = t_Position5}, {
				0.35,
				"Quad",
				"InOut"
			}).Completed:Wait();
			m_Library.Functions.Wait(math.random(0, 2));
		end
	end);
	coroutine_wrap_ret5();
end
local triangleWave = function(p7)
    p7 = p7 % 2
    if p7 >= 1 then
        p7 = 2 - p7
    end
    return (p7 + 1) / 2
end
local og = {}
function UpdateExclusiveEggs() 
	local t_ID7 = m_Library.Directory.Products["Exclusive Egg"].ID;
	local t_ID8 = m_Library.Directory.Products["3 Exclusive Eggs"].ID;
	local t_ID9 = m_Library.Directory.Products["10 Exclusive Eggs"].ID;
	local hunId = m_Library.Directory.Products["100 Exclusive Eggs"].ID;
	local t_Pets = t_ExclusiveShop.Container.Pets;
	local t_Price = t_Pets.Deal.Buttons.Price;
	local t_PriceTriple = t_Pets.Deal.Buttons.PriceTriple;
	local t_PriceTen = t_Pets.Deal.Buttons.PriceTen;
	local t_PriceHundred = t_Pets.Deal.Buttons.PriceHundred;
	for key7, val7 in ipairs(m_Library.Directory.Eggs["Exclusive Egg 16"].drops) do
		local FindFirstChild_ret2 = t_Pets.Deal.Pets:FindFirstChild(tostring(key7));
		local dir = m_Library.Directory.Pets[val7[1]]
		local replacements = dir.replacements
		local rep = {}
		if replacements then
			for i, v in pairs(replacements) do
				table.insert(rep, i)
			end
		end
		--FindFirstChild_ret2.PetIcon = m_Library.Directory.Pets[val7[1]].thumbnail; 
		m_Library.PetUI.CreateStaticHover(FindFirstChild_ret2, val7[1], {rep = rep});
	end
	local diamondPurchasables = m_Library.FFlags.Get(m_Library.FFlags.Keys.DiamondPurchasables)

	m_Library.GUIFX.ButtonFX(t_Price);
	m_Library.GUIFX.ButtonFX(t_PriceTriple);
	m_Library.GUIFX.ButtonFX(t_PriceTen);
	m_Library.GUIFX.ButtonFX(t_PriceHundred)
	t_PriceHundred.Visible = m_Library.Network.Invoke("Can Buy 100 Eggs") or false
	
	
	og["10"] = t_PriceTen.Frame.Robux.OGPrice.Text
	og["100"] = t_PriceHundred.Frame.Robux.OGPrice.Text
	local prices = m_Library.Shared.ExclusiveEggCosts
	local frameThings = {t_Price,t_PriceTriple,t_PriceTen,t_PriceHundred}
	if diamondPurchasables then
		t_Price.Frame.Robux.Text = m_Library.Functions.NumberShorten(prices[1])
		t_PriceTriple.Frame.Robux.Text = m_Library.Functions.NumberShorten(prices[3])
		t_PriceTen.Frame.Robux.Text = m_Library.Functions.NumberShorten(prices[10])
		t_PriceHundred.Frame.Robux.Text = m_Library.Functions.NumberShorten(prices[100])
		t_PriceTen.Frame.Robux.OGPrice.Text = m_Library.Functions.NumberShorten(prices[10] * 1.25)
		t_PriceHundred.Frame.Robux.OGPrice.Text = m_Library.Functions.NumberShorten(prices[100] * 1.25)
		for i, v in ipairs(frameThings) do
			v.Frame.RobuxIcon.Image = "rbxassetid://7786012670"			
		end	
	else
		UpdatePriceFrame(t_Price.Frame, t_ID7, false);
		UpdatePriceFrame(t_PriceTriple.Frame, t_ID8, false);
		UpdatePriceFrame(t_PriceTen.Frame, t_ID9, false);
		UpdatePriceFrame(t_PriceHundred.Frame, hunId, false);
		t_PriceTen.Frame.Robux.OGPrice.Text = og["10"] or "???"
		t_PriceHundred.Frame.Robux.OGPrice.Text = og["100"] or "???"
		for i, v in ipairs(frameThings) do
			v.Frame.RobuxIcon.Image = "rbxassetid://6922231684"			
		end	
	end
	for i, v in ipairs(frameThings) do
		v.Frame.Robux["Diamonds Gradient"].Enabled = diamondPurchasables
		v.Frame.Robux["UIStroke"].Enabled = diamondPurchasables
	end
	t_Price.Activated:Connect(function()
		if not bool1 then
			bool1 = true;
			local v31 = m_Library.Save.Get();
			if #v31.Pets + 1 <= v31.MaxSlots then
				if m_Library.FFlags.Get(m_Library.FFlags.Keys.DiamondPurchasables) then
					local s, r = m_Library.Network.Invoke("Purchase Exclusive Egg", 1)
					if not s then
						m_Library.Message.New(r or "Something went wrong, Please try again!")
					end
				else
					m_Library.Shared.PromptPurchase(t_ID7, true); 
				end
			else
				m_Library.Message.New("Your inventory is full! Clear some pets first.");
			end
			bool1 = false;
		end
	end);
	t_PriceTriple.Activated:Connect(function()
		if not bool1 then
			bool1 = true;
			local v32 = m_Library.Save.Get();
			if #v32.Pets + 3 <= v32.MaxSlots then
				if m_Library.FFlags.Get(m_Library.FFlags.Keys.DiamondPurchasables) then
					local s, r = m_Library.Network.Invoke("Purchase Exclusive Egg", 3)
					if not s then
						m_Library.Message.New(r or "Something went wrong, Please try again!")
					end
				else
					m_Library.Shared.PromptPurchase(t_ID8, true); 
				end				
			else
				m_Library.Message.New("You need more inventory space first!");
			end
			bool1 = false;
		end
	end);
	t_PriceTen.Activated:Connect(function()
		if not bool1 then
			bool1 = true;
			local v33 = m_Library.Save.Get();
			if #v33.Pets + 10 <= v33.MaxSlots then
				if m_Library.FFlags.Get(m_Library.FFlags.Keys.DiamondPurchasables) then
					local s, r = m_Library.Network.Invoke("Purchase Exclusive Egg", 10)
					if not s then
						m_Library.Message.New(r or "Something went wrong, Please try again!")
					end
				else
					m_Library.Shared.PromptPurchase(t_ID9, true); 
				end				
			else
				m_Library.Message.New("You need more inventory space first!");
			end
			bool1 = false;
		end
	end);
	t_PriceHundred.Activated:Connect(function()
		if not bool1 then
			bool1 = true;
			local v33 = m_Library.Save.Get();
			if #v33.Pets + 100 <= v33.MaxSlots then
				if m_Library.FFlags.Get(m_Library.FFlags.Keys.DiamondPurchasables) then
					local s, r = m_Library.Network.Invoke("Purchase Exclusive Egg", 100)
					if not s then
						m_Library.Message.New(r or "Something went wrong, Please try again!")
					end
				else
					m_Library.Shared.PromptPurchase(hunId, true); 
				end			
			else
				m_Library.Message.New("You need more inventory space first!");
			end
			bool1 = false;
		end
	end);
	coroutine.wrap(function() 
		local t_Egg = t_Pets.Deal.Egg;
		local t_Position6 = t_Egg.Position;
		while true do
			m_Library.Functions.Tween(t_Egg, {Position = t_Position6 - UDim2.new(0, 0, 0.05, 0)}, {0.4,"Sine","InOut"}).Completed:Wait();
			m_Library.Functions.Tween(t_Egg, {Position = t_Position6}, {0.4,"Sine","InOut"}).Completed:Wait();
		end
	end)()
	
	local v743 = {}
	local v936 = {"688", "689", "690", "2182", "2183", "3028"}
	for v744, v740 in ipairs(t_Pets.Deal.Pets:GetChildren()) do
		table.insert(v743, v740:FindFirstChild("PetIcon"))
		local v1036 = m_Library.Directory.Pets[v936[tonumber(v740.Name)]].titanic
		if not v1036 then
			v740.Stars.Visible = false
		end
	end
	
	local function animatePets()
		local v897 = t_Pets.Deal.bg
		local v896 = t_Pets.Deal.bg2
		local v902 = Vector2.new(-0.5, 0.5)
		local p1 = UDim2.new(0.5,0,0.5,0) --v897.Position
		local p2 = UDim2.new(0.5,0,0.5,0) --v896.Position
		m_Library.Functions.RenderStepped(function(p8, p9)
			local v908 = triangleWave(p9 * 0.05)
			local v913 = m_Library.Functions.Lerp(v902.X, v902.Y, v908)
			v897.Position = p1 + UDim2.fromScale(v913, 0) --v897.Position + UDim2.fromScale(v913, 0)
			v896.Position = p2 + UDim2.fromScale(-v913, 0) --v896.Position + UDim2.fromScale(-v913, 0)
			v897.ImageTransparency = v908
			v896.ImageTransparency = 1 - v908
		end)

		for index, v940 in ipairs(v936) do
			task.spawn(function()
				local v951 = t_Pets.Deal.Pets:WaitForChild(index)
				local v949 = {
					v951:WaitForChild("PetIcon"),
					v951:WaitForChild("PetIcon2"),
					v951:WaitForChild("PetIcon3")
				}

				local v988 = 1
				while true do
					local v957 = 1 + v988 % #v949
						
					local render = m_Library.Functions.RenderStepped(function(_, p11)
						v949[v957].ImageTransparency = p11
						v949[v957 % #v949 + 1].ImageTransparency = 1 - p11
					end, rng:NextNumber(1, 3), true)	
						
					local renderThen = render:Then(function()
						v949[v957].ImageTransparency = 1
						v949[v957 % #v949 + 1].ImageTransparency = 0
					end)
					
					v988 = v957
					renderThen:Wait()
				end
			end)
		end
	end

	task.spawn(animatePets)
	
	-- nightmare
	--[[coroutine.wrap(function()
		local GUI = t_Pets.Deal.Pets
		
		task.spawn(function()
			while true do
				m_Library.Functions.Tween(GUI["1"].PetIconGlowing, {ImageTransparency = 0}, { 2, "Sine", "InOut" }).Completed:Wait();
				m_Library.Functions.Tween(GUI["1"].PetIconGlowing, {ImageTransparency = 1}, { 2, "Sine", "InOut" }).Completed:Wait();
			end
		end)
		task.spawn(function()
			while true do
				m_Library.Functions.Tween(GUI["2"].PetIconGlowing, {ImageTransparency = 0}, { 2, "Sine", "InOut" }).Completed:Wait();
				m_Library.Functions.Tween(GUI["2"].PetIconGlowing, {ImageTransparency = 1}, { 2, "Sine", "InOut" }).Completed:Wait();
			end
		end)
		task.spawn(function()
			task.spawn(function()
				while wait() do
					vv = GUI["3"].PetIconLayer
					vv.Rotation += 5
					if vv.Rotation >= 360 then
						vv.Rotation = 0
					end
				end
			end)

			while wait(math.random(0.75,1)) do
				local random = math.random(1, 4)
				GUI["3"].PetIcon.Visible = random == 4
				GUI["3"].PetIconBlink1.Visible = random == 1
				GUI["3"].PetIconBlink2.Visible = random == 2
				GUI["3"].PetIconBlink3.Visible = random == 3
			end
		end)
		task.spawn(function()
			while true do
				m_Library.Functions.Tween(GUI["4"].PetIconGlowing, {ImageTransparency = 0}, { 2, "Sine", "InOut" }).Completed:Wait();
				m_Library.Functions.Tween(GUI["4"].PetIconGlowing, {ImageTransparency = 1}, { 2, "Sine", "InOut" }).Completed:Wait();
			end
		end)
		task.spawn(function()
			task.spawn(function()
				while wait() do
					vv = GUI["5"].PetIconLayer
					vv.Rotation += 5
					if vv.Rotation >= 360 then
						vv.Rotation = 0
					end
				end
			end)

			while wait(math.random(0.75,1)) do
				local random = math.random(1, 4)
				GUI["5"].PetIcon.Visible = random == 4
				GUI["5"].PetIconBlink1.Visible = random == 1
				GUI["5"].PetIconBlink2.Visible = random == 2
				GUI["5"].PetIconBlink3.Visible = random == 3
			end
		end)
		task.spawn(function()
			while true do
				m_Library.Functions.Tween(GUI["6"].PetIconGlowing, {ImageTransparency = 0}, { 2, "Sine", "InOut" }).Completed:Wait();
				m_Library.Functions.Tween(GUI["6"].PetIconGlowing, {ImageTransparency = 1}, { 2, "Sine", "InOut" }).Completed:Wait();
			end
		end)
	end)()]]--
	
	
	-- jelly animation
 	--[[coroutine.wrap(function() 
		for i, v in ipairs({'1','2','3','4','5','6'}) do
			coroutine.wrap(function() 
				local del = rng:NextNumber(0.75,2.5)
				task.wait(del)--idk
				local Pet = t_Pets.Deal.Pets[v]:FindFirstChild("PetIcon")
				local size = Pet.Size;
				task.spawn(function()
					if v == '6' then
						local star = t_Pets.Deal.Star
						local pos = star.Position;
						while true do
							m_Library.Functions.Tween(star, {Position = pos + UDim2.new(0, 0, 0.1, 0)}, { 1.5, "Sine", "InOut" }).Completed:Wait();
							m_Library.Functions.Tween(star, {Position = pos}, { 1.5, "Sine", "InOut" }).Completed:Wait();
						end
					end 
				end)
				while true do
					m_Library.Functions.Tween(Pet, {Size = size - UDim2.new(0, 0, 0.2, 0)}, { 1.5, "Sine", "InOut" }).Completed:Wait();
					m_Library.Functions.Tween(Pet, {Size = size}, { 1.5, "Sine", "InOut" }).Completed:Wait();
				end
			end)()
		end
	end)()]]--
end



function UpdateAnimeEggs() -- Line: 718
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_ExclusiveShop
			[3] = bool1
	--]]
	local t_ID10 = m_Library.Directory.Products["Exclusive Egg"].ID;
	local t_ID11 = m_Library.Directory.Products["3 Exclusive Eggs"].ID;
	local t_ID12 = m_Library.Directory.Products["10 Exclusive Eggs"].ID;
	local t_ExclusiveEggAnime = t_ExclusiveShop.Container.ExclusiveEggAnime;
	local t_Price2 = t_ExclusiveEggAnime.Deal.Buttons.Price;
	local t_PriceTriple2 = t_ExclusiveEggAnime.Deal.Buttons.PriceTriple;
	local t_PriceTen2 = t_ExclusiveEggAnime.Deal.Buttons.PriceTen;
	m_Library.GUIFX.ButtonFX(t_Price2);
	m_Library.GUIFX.ButtonFX(t_PriceTriple2);
	m_Library.GUIFX.ButtonFX(t_PriceTen2);
	UpdatePriceFrame(t_Price2.Frame, t_ID10, false);
	UpdatePriceFrame(t_PriceTriple2.Frame, t_ID11, false);
	UpdatePriceFrame(t_PriceTen2.Frame, t_ID12, false);
	t_Price2.Activated:Connect(function() -- Line: 731
		--[[
			Upvalues:
				[1] = bool1
				[2] = m_Library
				[3] = t_ID10
		--]]
		if not bool1 then
			bool1 = true;
			local v34 = m_Library.Save.Get();
			if #v34.Pets + 1 <= v34.MaxSlots then
				m_Library.Shared.PromptPurchase(t_ID10, true);
			else
				m_Library.Message.New("Your inventory is full! Clear some pets first.");
			end
			bool1 = false;
		end
	end);
	t_PriceTriple2.Activated:Connect(function() -- Line: 746
		--[[
			Upvalues:
				[1] = bool1
				[2] = m_Library
				[3] = t_ID11
		--]]
		if not bool1 then
			bool1 = true;
			local v35 = m_Library.Save.Get();
			if #v35.Pets + 3 <= v35.MaxSlots then
				m_Library.Shared.PromptPurchase(t_ID11, true);
			else
				m_Library.Message.New("You need more inventory space first!");
			end
			bool1 = false;
		end
	end);
	t_PriceTen2.Activated:Connect(function() -- Line: 761
		--[[
			Upvalues:
				[1] = bool1
				[2] = m_Library
				[3] = t_ID12
		--]]
		if not bool1 then
			bool1 = true;
			local v36 = m_Library.Save.Get();
			if #v36.Pets + 10 <= v36.MaxSlots then
				m_Library.Shared.PromptPurchase(t_ID12, true);
			else
				m_Library.Message.New("You need more inventory space first!");
			end
			bool1 = false;
		end
	end);
	local coroutine_wrap_ret7 = coroutine.wrap(function() -- Line: 776
		--[[
			Upvalues:
				[1] = t_ExclusiveEggAnime
				[2] = m_Library
		--]]
		local t_Egg2 = t_ExclusiveEggAnime.Deal.Egg;
		local t_Position7 = t_Egg2.Position;
		while true do
			m_Library.Functions.Tween(t_Egg2, {Position = t_Position7 - UDim2.new(0, 0, 0.05, 0)}, {
				0.4,
				"Sine",
				"InOut"
			}).Completed:Wait();
			m_Library.Functions.Tween(t_Egg2, {Position = t_Position7}, {
				0.4,
				"Sine",
				"InOut"
			}).Completed:Wait();
		end
	end);
	coroutine_wrap_ret7();
end
function UpdateStockings() -- Line: 789
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_ExclusiveShop
			[3] = bool1
	--]]
	local t_ID13 = m_Library.Directory.Products["Christmas 2022 Stocking"].ID;
	local t_Price3 = t_ExclusiveShop.Container.Christmas.Deal.Buttons.Price;
	m_Library.GUIFX.ButtonFX(t_Price3);
	UpdatePriceFrame(t_Price3.Frame, t_ID13, false);
	t_Price3.Activated:Connect(function() -- Line: 798
		--[[
			Upvalues:
				[1] = bool1
				[2] = m_Library
				[3] = t_ID13
		--]]
		if not bool1 then
			bool1 = true;
			local v37 = m_Library.Save.Get();
			if #v37.Pets + 1 <= v37.MaxSlots then
				m_Library.Shared.PromptPurchase(t_ID13, true);
			else
				m_Library.Message.New("Your inventory is full! Clear some pets first.");
			end
			bool1 = false;
		end
	end);
end
function UpdateExclusiveEggsDeal() -- Line: 826
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_ExclusiveShop
			[3] = bool1
	--]]
	local t_ID14 = m_Library.Directory.Products["25 Exclusive Eggs"].ID;
	local t_ExclusiveDeal = t_ExclusiveShop.Container.ExclusiveDeal;
	local t_Price4 = t_ExclusiveDeal.Deal.Buttons.Price;
	m_Library.GUIFX.ButtonFX(t_Price4);
	UpdatePriceFrame(t_Price4.Frame, t_ID14, false);
	t_Price4.Activated:Connect(function() -- Line: 835
		--[[
			Upvalues:
				[1] = bool1
				[2] = m_Library
				[3] = t_ID14
		--]]
		if not bool1 then
			bool1 = true;
			local v38 = m_Library.Save.Get();
			if #v38.Pets + 1 <= v38.MaxSlots then
				m_Library.Shared.PromptPurchase(t_ID14, true);
			else
				m_Library.Message.New("Your inventory is full! Clear some pets first.");
			end
			bool1 = false;
		end
	end);
	local coroutine_wrap_ret8 = coroutine.wrap(function() -- Line: 851
		--[[
			Upvalues:
				[1] = t_ExclusiveDeal
				[2] = m_Library
		--]]
		local Splash4 = t_ExclusiveDeal.Deal:FindFirstChild("Splash");
		local t_Position8 = Splash4.Position;
		while true do
			m_Library.Functions.Tween(Splash4, {Position = t_Position8 - UDim2.new(0, 0, 0.05, 0)}, {
				1.25,
				"Sine",
				"InOut"
			}).Completed:Wait();
			m_Library.Functions.Tween(Splash4, {Position = t_Position8}, {
				1.15,
				"Sine",
				"InOut"
			}).Completed:Wait();
		end
	end);
	coroutine_wrap_ret8();
end
function UpdateInfinitePets() -- Line: 865
	--[[
		Upvalues:
			[1] = t_ExclusiveShop
			[2] = m_Library
			[3] = bool1
			[4] = u1
			[5] = ServerTimeNow
	--]]
	local t_InfinitePets = t_ExclusiveShop.Container.InfinitePets;
	if not m_Library.FFlags.Get(m_Library.FFlags.Keys.InfinitePetPass) then
		t_InfinitePets.Visible = false;
		return;
	end
	t_InfinitePets.Visible = true;
	local t_ID15 = m_Library.Directory.Products["Infinite Pets"].ID;
	local t_Price5 = t_InfinitePets.Deal.Buttons.Price;
	local function BuyInfPets() -- Line: 876
		--[[
			Upvalues:
				[1] = m_Library
				[2] = t_ID15
		--]]
		local v27 = m_Library.Save.Get();
		if v27 and not v27.InfPetsEnabled then
			local v39 = m_Library.Message.New("Infinite Pets will only last for 72 hours. Are you sure?", true);
			if v39 then
				m_Library.Shared.PromptPurchase(t_ID15, true);
			end
		end
	end
	if not t_InfinitePets:GetAttribute("Setup") then
		t_InfinitePets:SetAttribute("Setup", true);
		m_Library.GUIFX.ButtonFX(t_Price5);
		t_Price5.Activated:Connect(function() -- Line: 892
			--[[
				Upvalues:
					[1] = bool1
					[2] = m_Library
					[3] = t_ID15
			--]]
			if not bool1 then
				bool1 = true;
				local v45 = m_Library.Save.Get();
				if v45 and not v45.InfPetsEnabled then
					local v46 = m_Library.Message.New("Infinite Pets will only last for 72 hours. Are you sure?", true);
					if v46 then
						m_Library.Shared.PromptPurchase(t_ID15, true);
					end
				end
				bool1 = false;
			end
		end);
	end
	local v13 = m_Library.Save.Get();
	if not v13 then return end
	if v13.InfPetsEnabled then
		t_Price5.Robux.Text = "Owned";
		t_Price5.RobuxIcon.Visible = false;
		local v21 = (v13.InfPetsTimeStart or 0) + 259200 - (u1 + (workspace:GetServerTimeNow() - ServerTimeNow));
		t_InfinitePets.Deal.TimeLeft.Visible = true;
		t_InfinitePets.Deal.TimeLeft.Text = v21 > 0 and m_Library.Functions.TimeString(v21) .. " Left" or "Expired";
		return;
	end
	UpdatePriceFrame(t_Price5, t_ID15, false);
end
function UpdatePriceFrame(p1, p2, p3) -- Line: 1011
	--[[
		Upvalues:
			[1] = m_Library 
	--]]
	local v14, v15 = m_Library.Functions.GetPrice(p2, not p3);
	local Robux = p1:FindFirstChild("Robux");
	if v15 and v14 > 0 then
		Robux.Text = m_Library.Functions.Commas(v14);
		return v14;
	end
	Robux.Text = "???";
	return v14;
end
function Scrollbar() -- Line: 1025
	--[[
		Upvalues:
			[1] = t_ExclusiveShop
	--]]
	local UIListLayout = t_ExclusiveShop.Container:FindFirstChildOfClass("UIListLayout");
	local UIPadding = t_ExclusiveShop.Container:FindFirstChildOfClass("UIPadding");
	local v16 = UIListLayout.AbsoluteContentSize.Y + UIPadding.PaddingTop.Offset + UIPadding.PaddingBottom.Offset;
	t_ExclusiveShop.Container.CanvasSize = UDim2.new(0, 0, 0, v16);
end
function SizeFrame(p4) -- Line: 1033
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v17 = m_Library.Functions.ResolutionScale();
	local v18 = 1;
	for _, child8 in ipairs(p4:GetChildren()) do
		if child8.ClassName == "UIPadding" then
			local v28 = m_Library.GUIFX.CacheProperty(child8, "PaddingTop");
			local v29 = m_Library.GUIFX.CacheProperty(child8, "PaddingBottom");
			child8.PaddingTop = UDim.new(v28.Scale, v28.Offset * v17);
			child8.PaddingBottom = UDim.new(v29.Scale, v29.Offset * v17);
			v18 = v18 + (child8.PaddingTop.Offset + child8.PaddingBottom.Offset);
			continue;
		end
		if child8.ClassName ~= "UIListLayout" and child8.ClassName ~= "UIGridLayout" then continue end
		v18 = v18 + child8.AbsoluteContentSize.Y;
		if child8.ClassName == "UIListLayout" then
			local v30 = m_Library.GUIFX.CacheProperty(child8, "Padding");
			child8.Padding = UDim.new(v30.Scale, v30.Offset * v17);
		elseif child8.ClassName == "UIGridLayout" then
			local v40 = m_Library.GUIFX.CacheProperty(child8, "CellPadding");
			child8.CellPadding = UDim2.new(v40.X.Scale, v40.X.Offset * v17, v40.Y.Scale, v40.Y.Offset * v17);
		end
		if child8.ClassName ~= "UIGridLayout" or not child8:FindFirstChildOfClass("UIAspectRatioConstraint") then continue end
		child8.CellSize = UDim2.new(child8.CellSize.X.Scale, child8.CellSize.X.Offset, 0, child8.AbsoluteCellSize.Y + 2);
	end
	p4.Size = UDim2.new(p4.Size.X.Scale, p4.Size.X.Offset, 0, v18);
end
function Scaling() -- Line: 1063
	--[[
		Upvalues:
			[1] = t_ExclusiveShop
	--]]
	if not t_ExclusiveShop.Gui.Enabled then return end
	local v19 = game.Workspace.CurrentCamera.ViewportSize.Y <= 1000;
	local UIAspectRatioConstraint2 = t_ExclusiveShop.Frame:FindFirstChildOfClass("UIAspectRatioConstraint");
	UIAspectRatioConstraint2.AspectRatio = v19 and 1.6 or 1.2;
	t_ExclusiveShop.Tabs.Size = v19 and UDim2.new(0.365, 0, 0.1, 0) or UDim2.new(0.365, 0, 0.065, 0);
	for _, child9 in ipairs(t_ExclusiveShop.Container:GetChildren()) do
		if not child9:IsA("GuiObject") then continue end
		for _, child11 in ipairs(child9:GetChildren()) do
			if not child11:FindFirstChildOfClass("UIListLayout") and not child11:FindFirstChildOfClass("UIGridLayout") then continue end
			SizeFrame(child11);
		end
		SizeFrame(child9);
	end
	Scrollbar();
end
local coroutine_wrap_ret9 = coroutine.wrap(function() -- Line: 1090
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	while true do
		m_Library.Heartbeat();
		Scaling();
	end
end);
coroutine_wrap_ret9();
function UpdateShopButton(a1) 
	if not m_Library.Save.Get() then
		return
	end
	m_Library.GUI.Main.Bottom.ExclusiveShop.Notification.Visible = m_Library.Save.Get().LastShopClick ~= m_Library.Shared.ShopNumber
	if a1 then
		task.spawn(function()
			while true do
				wait(5)
			end
		end)
	end
end
function UseTab(p5) -- Line: 1101
	--[[
		Upvalues:
			[1] = t_ExclusiveShop
			[2] = m_Library
	--]]
	local FindFirstChild_ret3 = t_ExclusiveShop.Container:FindFirstChild(p5.Name);
	if not FindFirstChild_ret3 then
		warn("No frame!");
		return;
	end
	if not t_ExclusiveShop.Container then
		warn("No frame!");
		return;
	end
	local v20 = t_ExclusiveShop.Container.CanvasPosition.Y + (FindFirstChild_ret3.AbsolutePosition.Y - t_ExclusiveShop.Container.AbsolutePosition.Y);
	m_Library.Functions.Tween(t_ExclusiveShop.Container, {CanvasPosition = Vector2.new(0, v20)}, {
		0.2,
		"Expo",
		"Out"
	});
	m_Library.Audio.Play("rbxassetid://7004248320", script, 1, 0.5);
end
function SetupTab(p6) -- Line: 1117
	--[[
		Upvalues:
			[1] = m_Library
			[2] = bool1
	--]]
	m_Library.GUIFX.ButtonFX(p6);
	m_Library.GUIFX.Tooltip(p6, p6.Name);
	p6.Activated:Connect(function() -- Line: 1121
		--[[
			Upvalues:
				[1] = bool1
				[2] = p6
		--]]
		if not bool1 then
			bool1 = true;
			UseTab(p6);
			bool1 = false;
		end
	end);
end
for _, child1 in ipairs(t_ExclusiveShop.Tabs:GetChildren()) do
	if child1.ClassName ~= "ImageButton" then continue end
	SetupTab(child1);
end
local t_Redeem = t_ExclusiveShop.Container.Codes.Frame.Buttons.Redeem;
m_Library.GUIFX.ButtonFX(t_Redeem);
t_Redeem.Activated:Connect(function() -- Line: 1143
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
	--]]
	if not bool1 then
		bool1 = true;
		m_Library.GUI.TwitterCodes.Gui.Enabled = true;
		bool1 = false;
	end
end);
if t_ExclusiveShop.Container.BoosterPack.Visible then
	local t_Price6 = t_ExclusiveShop.Container.BoosterPack.Deal.Buttons.Price;
	local cos = m_Library.Shared.BoostsCosts["Pack"] 
	
	local diamondPurchasables = m_Library.FFlags.Get(m_Library.FFlags.Keys.DiamondPurchasables)
	if diamondPurchasables then
		t_Price6.Robux.Text = cos and m_Library.Functions.NumberShorten(cos) or "???"
		t_Price6.RobuxIcon.Image = "rbxassetid://7786012670"			
	else
		UpdatePriceFrame(t_Price6, m_Library.Directory.Products["The Boost Bundle"].ID, false);
		t_Price6.RobuxIcon.Image = "rbxassetid://6922231684"			
	end	
	t_Price6.Robux["Diamonds Gradient"].Enabled = diamondPurchasables
	t_Price6.Robux["UIStroke"].Enabled = diamondPurchasables
	m_Library.GUIFX.ButtonFX(t_Price6);
	t_Price6.Activated:Connect(function()  
		if not bool1 then
			bool1 = true;
			if m_Library.FFlags.Get(m_Library.FFlags.Keys.DiamondPurchasables) then
				local s, r = m_Library.Network.Invoke("Purchase Boost", "Pack")
				if not s then
					m_Library.Message.New(r or "Something went wrong, Please try again!")
				end 
			else
				m_Library.Shared.PromptPurchase(m_Library.Directory.Products["The Boost Bundle"].ID, true);

			end
			bool1 = false;
		end
	end);
end
if t_ExclusiveShop.Container.PassBundle.Visible then
	local priceButton = t_ExclusiveShop.Container.PassBundle.Deal.Buttons.Price
	m_Library.GUIFX.ButtonFX(priceButton)
	priceButton.Activated:Connect(function()
		if not bool1 then
			bool1 = true;
			if m_Library.Message.New("Are you sure you want to purchase this?", true) then
				if m_Library.Message.New("ARE YOU REALLY SURE?", true) then
					if m_Library.Message.New("ARE YOU REALLY REALLY SURE? THIS WONT SAVE ON A GAME BAN", true) then
						local s, r = m_Library.Network.Invoke("Exclusive Offer")
						if not s then
							m_Library.Message.New(r or "Something went wrong, Please try again!")
						end
					end	
				end	
			end
			bool1 = false;
		end
	end);
	
	coroutine.wrap(function()
		local Splash4 = t_ExclusiveShop.Container.PassBundle.Deal:FindFirstChild("Splash");
		local t_Position8 = Splash4.Position;
		while true do
			m_Library.Functions.Tween(Splash4, {Position = t_Position8 - UDim2.new(0, 0, 0.05, 0)}, {
				1.25,
				"Sine",
				"InOut"
			}).Completed:Wait();
			m_Library.Functions.Tween(Splash4, {Position = t_Position8}, {
				1.15,
				"Sine",
				"InOut"
			}).Completed:Wait();
		end
	end)();
	coroutine.wrap(function()
		local Splash4 = t_ExclusiveShop.Container.PassBundle.Deal:FindFirstChild("Splash1");
		local t_Position8 = Splash4.Position;
		while true do
			m_Library.Functions.Tween(Splash4, {Position = t_Position8 - UDim2.new(0, 0, 0.05, 0)}, {
				1.25,
				"Sine",
				"InOut"
			}).Completed:Wait();
			m_Library.Functions.Tween(Splash4, {Position = t_Position8}, {
				1.15,
				"Sine",
				"InOut"
			}).Completed:Wait();
		end
	end)();
	coroutine.wrap(function()
		local Splash4 = t_ExclusiveShop.Container.PassBundle.Deal:FindFirstChild("Splash2");
		local t_Position8 = Splash4.Position;
		while true do
			m_Library.Functions.Tween(Splash4, {Position = t_Position8 - UDim2.new(0, 0, 0.05, 0)}, {
				1.25,
				"Sine",
				"InOut"
			}).Completed:Wait();
			m_Library.Functions.Tween(Splash4, {Position = t_Position8}, {
				1.15,
				"Sine",
				"InOut"
			}).Completed:Wait();
		end
	end)();
end
if t_ExclusiveShop.Container.Deal.Visible then
	local priceButton = t_ExclusiveShop.Container.Deal.Deal.Buttons.RedeemButton
	priceButton.Activated:Connect(function()
		if not bool1 then
			bool1 = true;
			if m_Library.Message.New("Would you like to redeem these rewards?", true) then
				m_Library.Message.New("Calculating compensation... (this may take a while)")
				local s, r = m_Library.Network.Invoke("Calculate Gamepass Rewards")
				if not s then
					m_Library.Message.New(r or "Something went wrong, Please try again!")
				end
				m_Library.Message.New("✅ You have recieved your rewards! Thank you so much for your support! 😊")
			end	
			bool1 = false;
		end
	end);
	coroutine.wrap(function()
		local Splash4 = t_ExclusiveShop.Container.Deal.Deal:FindFirstChild("Illustrations").Image;
		local t_Position8 = Splash4.Position;
		while true do
			m_Library.Functions.Tween(Splash4, {Position = t_Position8 - UDim2.new(0, 0, 0.025, 0)}, {
				1.25,
				"Sine",
				"InOut"
			}).Completed:Wait();
			m_Library.Functions.Tween(Splash4, {Position = t_Position8}, {
				1.15,
				"Sine",
				"InOut"
			}).Completed:Wait();
		end
	end)();
end
local t_Redeem2 = t_ExclusiveShop.Container.Merch.Deal.Buttons.Redeem;
m_Library.GUIFX.ButtonFX(t_Redeem2);
t_Redeem2.Activated:Connect(function() -- Line: 1168
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
	--]]
	if not bool1 then
		bool1 = true;
		m_Library.GUI.MerchCodes.Gui.Enabled = true;
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_ExclusiveShop.Close);
t_ExclusiveShop.Close.Activated:Connect(function() -- Line: 1178
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_ExclusiveShop
	--]]
	if not bool1 then
		bool1 = true;
		t_ExclusiveShop.Gui.Enabled = false;
		bool1 = false;
	end
end);
local u2 = 0;
local t_Subtitle = t_ExclusiveShop.Container.Pets.Deal.Subtitle;
m_Library.RunService.Heartbeat:Connect(function(p7) -- Line: 1194
	--[[
		Upvalues:
			[1] = u2
			[2] = m_Library
			[3] = t_Subtitle
	--]]
	u2 = u2 + p7;
	if u2 > 1 then
		u2 = u2 - 1;
		if not m_Library.FFlags.Get(m_Library.FFlags.Keys.ExclusiveEggTimer) then
			if t_Subtitle.Text ~= "Limited Time Pets!" then
				t_Subtitle.Text = "Limited Time Pets!";
			end
			return;
		end
		local v22 = 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999 - workspace:GetServerTimeNow();
		if v22 > 0 then
			if v22 < 345600 then
				t_Subtitle.Text = "Limited time for " .. m_Library.Functions.FormatTime(v22 >= 0 and v22 or 0, true, true) .. "!";
			end
		else
			t_Subtitle.Text = "Leaving any second! \240\159\142\137";
		end
	end
end);
UpdateGamepasses();
UpdateDiamonds();
UpdateBoosts();
UpdateOctupleEgg();
UpdateSecretHunter();
Update15PetsEquipped();
MerchAnimation();
UpdateExclusiveEggs();
UpdateLazarGun();
UpdateInfinitePets();
m_Library.Signal.Fired("Stat Changed"):Connect(function(p8) -- Line: 1244
	if p8 == "Gamepasses" then
		UpdateGamepasses();
		UpdateSecretHunter();
		return;
	end
	if p8 == "Boosts" or p8 == "BoostsInventory" then
		UpdateBoosts();
		return;
	end
	if p8 == "MaxEquipped" then
		Update15PetsEquipped();
		return;
	end
	if p8 == "InfPetsEnabled" or p8 == "InfPetsTimeStart" then
		UpdateInfinitePets();
		return;
	end
	if p8 == "OwnsOctupleEggs" then
		UpdateOctupleEgg();
	end
end);
m_Library.Signal.Fired("FFlags Changed"):Connect(function() -- Line: 1259
	UpdateInfinitePets();
	UpdateBoosts();
	local diamondPurchasables = m_Library.FFlags.Get(m_Library.FFlags.Keys.DiamondPurchasables)
	task.spawn(function()
		local t_Price6 = t_ExclusiveShop.Container.BoosterPack.Deal.Buttons.Price;
		local cos = m_Library.Shared.BoostsCosts["Pack"] 

		if diamondPurchasables then
			t_Price6.Robux.Text = cos and m_Library.Functions.NumberShorten(cos) or "???"
			t_Price6.RobuxIcon.Image = "rbxassetid://7786012670"			
		else
			UpdatePriceFrame(t_Price6, m_Library.Directory.Products["The Boost Bundle"].ID, false);
			t_Price6.RobuxIcon.Image = "rbxassetid://6922231684"			
		end	
		t_Price6.Robux["Diamonds Gradient"].Enabled = diamondPurchasables
		t_Price6.Robux["UIStroke"].Enabled = diamondPurchasables
	end)
	task.spawn(function()
		local t_ID7 = m_Library.Directory.Products["Exclusive Egg"].ID;
		local t_ID8 = m_Library.Directory.Products["3 Exclusive Eggs"].ID;
		local t_ID9 = m_Library.Directory.Products["10 Exclusive Eggs"].ID;
		local hunId = m_Library.Directory.Products["100 Exclusive Eggs"].ID;
		local t_Pets = t_ExclusiveShop.Container.Pets;
		local t_Price = t_Pets.Deal.Buttons.Price;
		local t_PriceTriple = t_Pets.Deal.Buttons.PriceTriple;
		local t_PriceTen = t_Pets.Deal.Buttons.PriceTen;
		local t_PriceHundred = t_Pets.Deal.Buttons.PriceHundred;
		local prices = m_Library.Shared.ExclusiveEggCosts
		local frameThings = {t_Price,t_PriceTriple,t_PriceTen,t_PriceHundred}
		if diamondPurchasables then
			t_Price.Frame.Robux.Text = m_Library.Functions.NumberShorten(prices[1])
			t_PriceTriple.Frame.Robux.Text = m_Library.Functions.NumberShorten(prices[3])
			t_PriceTen.Frame.Robux.Text = m_Library.Functions.NumberShorten(prices[10])
			t_PriceHundred.Frame.Robux.Text = m_Library.Functions.NumberShorten(prices[100])
			t_PriceTen.Frame.Robux.OGPrice.Text = m_Library.Functions.NumberShorten(prices[10] * 1.25)
			t_PriceHundred.Frame.Robux.OGPrice.Text = m_Library.Functions.NumberShorten(prices[100] * 1.25)
			for i, v in ipairs(frameThings) do
				v.Frame.RobuxIcon.Image = "rbxassetid://7786012670"			
			end	
		else
			UpdatePriceFrame(t_Price.Frame, t_ID7, false);
			UpdatePriceFrame(t_PriceTriple.Frame, t_ID8, false);
			UpdatePriceFrame(t_PriceTen.Frame, t_ID9, false);
			UpdatePriceFrame(t_PriceHundred.Frame, hunId, false);
			t_PriceTen.Frame.Robux.OGPrice.Text = og["10"] or "???"
			t_PriceHundred.Frame.Robux.OGPrice.Text = og["100"] or "???"
			for i, v in ipairs(frameThings) do
				v.Frame.RobuxIcon.Image = "rbxassetid://6922231684"			
			end	
		end
		for i, v in ipairs(frameThings) do
			v.Frame.Robux["Diamonds Gradient"].Enabled = diamondPurchasables
			v.Frame.Robux["UIStroke"].Enabled = diamondPurchasables
		end
	end);
end);
m_Library.Signal.Fired("Exlusive Shop Tab"):Connect(function(p9) -- Line: 1263
	--[[
		Upvalues:
			[1] = t_ExclusiveShop
	--]]
	local FindFirstChild_ret4 = t_ExclusiveShop.Tabs:FindFirstChild(p9);
	t_ExclusiveShop.Gui.Enabled = true;
	UseTab(FindFirstChild_ret4);
end);
m_Library.Signal.Fired("Clicked Shop Button"):Connect(function()
	UpdateShopButton()
end)
  -  Editar
  04:54:13.899    -  Editar
  04:54:13.899  ----- [2715] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Login Rewards -----  -  Editar
  04:54:13.899  -- Decompiled with the Synapse X Luau decompiler.

local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not v1.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end;
local l__Inventory__2 = v1.Assets.UI.Inventory;
local v3 = Color3.fromRGB(31, 145, 165);
local v4 = v1.Shared.ChristmasLoginRewards2022;
function isDone()
	local v5 = v1.Save.Get(v1.LocalPlayer);
	if not v5 then
		warn("Couldn't update! No save");
		return false;
	end;
	assert(v5);
	local v6 = nil;
	for v10, v11 in pairs(v1.Shared.ChristmasLoginRewards2022) do
		if v6 then
			if v6 < v10 then
				v6 = v10;
			end;
		else
			v6 = v10;
		end;	
	end;
	if v6 then
		if v5.ChristmasLoginReward2022.Stage + 1 <= v6 then

		else
			return true;
		end;
	end;
	return false;
end;
function getCurrentDay()
	return DateTime.fromUnixTimestamp(workspace:GetServerTimeNow() - 25200):ToUniversalTime().Day;
end;
local u1 = nil;
local l__LoginRewards__2 = v1.GUI.LoginRewards;
local u3 = v1.Shared.ChristmasLoginRewards2022;
local u4 = false;
function Setup()
	local v12 = v1.Save.Get(v1.LocalPlayer);
	if not v12 then
		return;
	end;
	local v13 = v12.ChristmasLoginReward2022.Stage + 1;
	local l__LastClaim__14 = v12.ChristmasLoginReward2022.LastClaim;
	if not u1 then
		u1 = v1.Network.Invoke("Get Login Time");
		if not u1 then
			return;
		end;
	end;
	local l__BottomRewards__15 = l__LoginRewards__2.BottomRewards;
	local l__RewardTemplate__16 = l__LoginRewards__2.RewardTemplate;
	l__RewardTemplate__16.Visible = false;
	for v20, v21 in pairs(u3) do
		local v22 = l__RewardTemplate__16:Clone();
		v22.Name = v20;
		if not v21 then
			warn("Failed to lookup stage Stage:", v13);
		else
			local v23 = nil;
			local v24 = workspace:GetServerTimeNow() - u1;
			local v25 = v12.ChristmasLoginReward2022.Stage + 1;
			local v26 = v1.Shared.ChristmasLoginRewards2022[v20];
			local l__Title__27 = v22.Content.Title;
			v23 = v22.Content.RewardIcon.Image;
			if v26.Reward[1] == "Diamonds" then
				l__Title__27.Visible = true;
				v23.Visible = true;
				v23.Image = v1.Directory.Currency.Diamonds.ImageOutline;
				l__Title__27.AutoLocalize = false;
				l__Title__27.Text = v1.Functions.NumberShorten(v26.Reward[2], false);
			elseif v26.Reward[1] == "Gingerbread" then
				l__Title__27.Visible = true;
				v23.Visible = true;
				v23.Image = v1.Directory.Currency.Gingerbread.ImageOutline;
				l__Title__27.AutoLocalize = false;
				l__Title__27.Text = v1.Functions.NumberShorten(v26.Reward[2], false);
			elseif v26.Reward[1] == "Pet" then
				l__Title__27.Visible = true;
				v23.Visible = false;
				local v28 = v1.Directory.Pets[v26.Reward[2]];
				local v29 = v1.Assets.UI.Inventory.Pet:Clone();
				v29.Size = UDim2.new(1, 0, 0.9, 0);
				Instance.new("UIAspectRatioConstraint").Parent = v29;
				local v30
				if v28.name == "Christmas 2022 Stocking" then
					v30 = "Stocking Gift";
				else
					v30 = v28.name;
				end;
				l__Title__27.Text = v30;
				local v31 = nil;
				local v32 = v26.Reward[3];
				if v28.strengthMax then
					v31 = v28.strengthMax;
					if v26.Reward[3] then
						if v32.r then
							v31 = v28.strengthMax * v1.Shared.PetTypeMult.Rainbow;
							v32.s = v31;
						end;
						if v32.g then
							v31 = v28.strengthMax * v1.Shared.PetTypeMult.Golden;
							v32.s = v31;
						end;
					end;
				end;
				v1.PetUI.Create(v29, v26.Reward[2], v32 or {});
				if v28.strengthMax then
					v29.Level.Visible = true;
					v29.Level.AutoLocalize = false;
					v29.Level.Text = v1.Functions.NumberShorten(v31);
				end;
				v29.Parent = v22.Content.RewardIcon.PetHolder;
			elseif v26.Reward[1] == "Boosters" then
				l__Title__27.Visible = true;
				v23.Visible = true;
				l__Title__27.Text = "x" .. v26.Reward[2][2];
				v23.Image = "rbxassetid://7402706511";
			elseif v26.Reward[1] == "Booth" then
				l__Title__27.Visible = true;
				v23.Visible = true;
				l__Title__27.Text = v26.Reward[2];
				local v33 = v1.Directory.Booths[v26.Reward[2]];
				if v33 then
					v23.Image = v33.Icon;
				end;
			end;
			v22.Visible = true;
			v22.Parent = l__BottomRewards__15;
			if v20 < v25 then
				v22.Blackout.Visible = false;
			elseif v25 < v20 then
				v22.Blackout.Visible = true;
				v22.Blackout.TextLabel.Visible = false;
			elseif v20 == v25 then
				v22.Blackout.Visible = false;
				if v12.ChristmasLoginReward2022.LastClaim == getCurrentDay() then
					v22.Blackout.Visible = true;
					v22.Blackout.TextLabel.Visible = true;
					v22.Blackout.TextLabel.Text = "Next Reward Tomorrow!";
				elseif v24 < v26.RequiredTime then
					v22.Blackout.Visible = true;
					v22.Blackout.TextLabel.Visible = true;
					v22.Blackout.TextLabel.Text = "Reward in: " .. v1.Functions.FormatTime(v26.RequiredTime - v24);
				end;
			end;
		end;	
	end;
	v1.GUIFX.ButtonFX(l__LoginRewards__2.Gui.Frame.pattern.Claim.ClaimButton);
	u4 = true;
end;
local u5 = Color3.fromRGB(48, 221, 255);
local l__ClaimButton__6 = l__LoginRewards__2.Gui.Frame.pattern.Claim.ClaimButton;
function FastUpdate()
	local v34 = v1.Save.Get(v1.LocalPlayer);
	if not v34 then
		return;
	end;
	local l__BottomRewards__35 = l__LoginRewards__2.BottomRewards;
	for v40, v41 in pairs(u3) do
		local v39 = nil 
		v39 = l__BottomRewards__35:FindFirstChild(v40);
		local v42 = workspace:GetServerTimeNow() - u1;
		local v43 = v34.ChristmasLoginReward2022.Stage + 1;
		local v44 = v1.Shared.ChristmasLoginRewards2022[v43];
		if v40 < v43 then
			v39.Blackout.Visible = false;
			v39.UIStroke.Color = u5;
		elseif v43 < v40 then
			v39.Blackout.Visible = true;
			v39.Blackout.TextLabel.Visible = false;
		elseif v44 then
			if v40 == v43 then
				v39.Blackout.Visible = false;
				if v34.ChristmasLoginReward2022.LastClaim == getCurrentDay() then
					v39.Blackout.Visible = true;
					v39.Blackout.TextLabel.Visible = true;
					v39.Blackout.TextLabel.Text = "Next Reward Tomorrow!";
				elseif v42 < v44.RequiredTime then
					v39.Blackout.Visible = true;
					v39.Blackout.TextLabel.Visible = true;
					v39.Blackout.TextLabel.Text = "Reward in: " .. v1.Functions.FormatTime(v44.RequiredTime - v42);
				else
					v39.Blackout.Visible = true;
					v39.Blackout.TextLabel.Visible = true;
					v39.Blackout.TextLabel.Text = "Claim now!";
				end;
			end;
		end;	
	end;
	l__ClaimButton__6.ImageColor3 = CanClaimReward() and Color3.new(1, 1, 1) or Color3.new(0.5, 0.5, 0.5);
	if CanClaimReward() then
		if not l__ClaimButton__6:GetAttribute("Connected") then
			l__ClaimButton__6.Activated:Connect(function()
				if not CanClaimReward() then
					return;
				end;
				local v45, v46 = v1.Network.Invoke("Claim Reward");
				if not v45 then
					v1.Message.New(v46);
					return;
				end;
				u1 = workspace:GetServerTimeNow();
				v1.Audio.Play("rbxassetid://7000716242", script, 1, 1);
				FastUpdate();
			end);
			l__ClaimButton__6:SetAttribute("Connected", true);
		end;
	end;
	UpdateTree();
end;
function CanClaimReward()
	local v47 = v1.Save.Get(v1.LocalPlayer);
	if not v47 then
		return false;
	end;
	if not u1 then
		return false;
	end;
	local v48 = nil;
	for v52, v53 in pairs(u3) do
		local v54 = workspace:GetServerTimeNow() - u1;
		local v55 = v47.ChristmasLoginReward2022.Stage + 1;
		local v56 = v1.Shared.ChristmasLoginRewards2022[v55];
		if v56 then
			if not (v52 < v55) then
				if not (v55 < v52) then
					if v52 == v55 then
						if v47.ChristmasLoginReward2022.LastClaim ~= getCurrentDay() then
							if v56.RequiredTime <= v54 then
								return true;
							end;
							v48 = v56.RequiredTime - v54;
						end;
					end;
				end;
			end;
		end;	
	end;
	return false, v48;
end;
function UpdateTree()
	local v57 = v1.WorldCmds.GetMap();
	if v57:FindFirstChild("Interactive") then
		local v58 = v57.Interactive:FindFirstChild("ChristmasTreeLoginRewards");
		if v58 then
			local v59, v60 = CanClaimReward();
			if v59 then
				local l__Pad__61 = v58:FindFirstChild("Pad");
				if l__Pad__61 then
					local l__BillboardGui__62 = l__Pad__61:FindFirstChild("BillboardGui");
					if l__BillboardGui__62 then
						local l__Timer__63 = l__BillboardGui__62:FindFirstChild("Timer");
						if l__Timer__63 then
							l__Timer__63.Text = "Now!";
						end;
					end;
				end;
				local l__Chest__64 = v58:FindFirstChild("Chest");
				if l__Chest__64 then
					local l__Particles__65 = l__Chest__64:FindFirstChild("Particles");
					if l__Particles__65 then
						for v66, v67 in ipairs(l__Particles__65:GetChildren()) do
							v67.Enabled = true;						
						end;
						return;
					end;
				end;
			else
				local l__Pad__69 = v58:FindFirstChild("Pad");
				if l__Pad__69 then
					local l__BillboardGui__70 = l__Pad__69:FindFirstChild("BillboardGui");
					if l__BillboardGui__70 then
						local l__Timer__71 = l__BillboardGui__70:FindFirstChild("Timer");
						if l__Timer__71 then
							if v60 then
								l__Timer__71.Text = v1.Functions.FormatTime(v60);
							elseif isDone() then
								l__Timer__71.Text = "All rewards claimed!";
							else
								l__Timer__71.Text = "Claim again tomorrow!";
							end;
						end;
					end;
				end;
				local l__Chest__72 = v58:FindFirstChild("Chest");
				if l__Chest__72 then
					local l__Particles__73 = l__Chest__72:FindFirstChild("Particles");
					if l__Particles__73 then
						for v74, v75 in ipairs(l__Particles__73:GetChildren()) do
							v75.Enabled = false;						
						end;
					end;
				end;
			end;
		end;
	end;
end;
v1.Signal.Fired("World Changed"):Connect(function()
	UpdateTree();
end);
v1.Signal.Fired("Stat Changed"):Connect(function(p1)
	if p1 == "ChristmasLoginReward2022" then
		FastUpdate();
	end;
end);
v1.GUIFX.ButtonFX(l__LoginRewards__2.Close);
local u7 = false;
l__LoginRewards__2.Close.Activated:Connect(function()
	if not u7 then
		u7 = true;
		l__LoginRewards__2.Gui.Enabled = false;
		u7 = false;
	end;
end);
Setup();
local u8 = 0;
v1.RunService.Heartbeat:Connect(function(p2)
	u8 = u8 + p2;
	if u8 >= 0.25 then
		u8 = 0;
		FastUpdate();
	end;
end);
  -  Editar
  04:54:13.899    -  Editar
  04:54:13.899  ----- [2716] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Achievement Progress -----  -  Editar
  04:54:13.899  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local table1 = {
	0.25,
	0.5,
	0.75,
	0.9
};
local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_AchievementProgress = m_Library.GUI.AchievementProgress;
local u1 = t_AchievementProgress.Frame.Position;
local udim2 = UDim2.new(0.5, 0, -1, 0);
local bool1 = true;
local table2 = {};
local table3 = {};
function Notification(p1, p2, p3) -- Line: 24
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table3
			[3] = bool1
			[4] = t_AchievementProgress
			[5] = udim2
			[6] = u1
	--]]
	local u2 = m_Library.Save.Get();
	if not u2 then return end
	if not p2 and table3[p1] and os.clock() - table3[p1] < 10 then return end
	table3[p1] = os.clock();
	local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 38
		--[[
			Upvalues:
				[1] = bool1
				[2] = m_Library
				[3] = u2
				[4] = p1
				[5] = p2
				[6] = p3
				[7] = t_AchievementProgress
				[8] = udim2
				[9] = u1
		--]]
		while not bool1 do
			m_Library.Heartbeat(5);
		end
		bool1 = false;
		local v4 = u2.Achievements[p1];
		local v5 = v4 and v4.stage or 1;
		local v6 = v4 and v4.progress or 0;
		if p2 then
			v5 = p3 - 1;
		end
		local v7 = m_Library.Directory.Achievements[p1][v5];
		if p2 then
			if v7.difficulty <= 2 then
				m_Library.Audio.Play("rbxassetid://7000716242", script, 1, 1);
			elseif v7.difficulty == 3 then
				m_Library.Audio.Play("rbxassetid://7000716206", script, 1, 1.25);
			else
				m_Library.Audio.Play("rbxassetid://7000716222", script, 1, 1.65);
			end
			local t_p = m_Library.Player.UpperTorso().CFrame.p;
			local t_rewardType = v7.rewardType;
			local t_reward = v7.reward;
			if t_rewardType == "Pet" or t_rewardType == "GoldenPet" or t_rewardType == "RainbowPet" or t_rewardType == "DarkMatterPet" then
				local v8 = m_Library.Directory.Pets[t_reward];
				local v9 = m_Library.WorldFX.RewardImage(t_p, "+1 Pet", t_rewardType == "DarkMatterPet" and v8.darkMatterThumbnail or t_rewardType == "GoldenPet" and v8.goldenThumbnail or v8.thumbnail, {time = 4});
				if t_rewardType == "RainbowPet" then
					m_Library.GUIFX.Rainbow(v9:FindFirstChild("icon"), "ImageColor3", 2);
				end
			elseif t_rewardType == "Slots" then
				m_Library.WorldFX.RewardImage(t_p, "+" .. t_reward .. " Pet Slots", "rbxassetid://7097738062", {time = 4});
			else
				m_Library.WorldFX.AddCurrency(t_p, t_reward, t_rewardType, false);
			end
		end
		t_AchievementProgress.Frame.Position = udim2;
		t_AchievementProgress.Gui.Enabled = true;
		m_Library.Functions.Tween(t_AchievementProgress.Frame, {Position = u1}, {
			1.25,
			"Quad",
			"Out"
		});
		t_AchievementProgress.Completed.Visible = p2;
		t_AchievementProgress.Progress.Visible = not p2;
		t_AchievementProgress.ProgressBar.Visible = not p2;
		t_AchievementProgress.Title.Visible = p2;
		t_AchievementProgress.Desc.Visible = not p2;
		t_AchievementProgress.Title.Text = v7.title;
		t_AchievementProgress.Desc.Text = v7.desc;
		if not p2 then
			local t_amount = v7.amount;
			t_AchievementProgress.Progress.Text = m_Library.Functions.Commas(v6) .. "/" .. m_Library.Functions.Commas(t_amount);
			t_AchievementProgress.ProgressBar.Bar.Size = UDim2.new(math.clamp(v6 / t_amount, 0, 1), 0, 1, 0);
		end
		task.delay(5, function() -- Line: 103
			--[[
				Upvalues:
					[1] = m_Library
					[2] = t_AchievementProgress
					[3] = udim2
					[4] = bool1
			--]]
			m_Library.Functions.Tween(t_AchievementProgress.Frame, {Position = udim2}, {
				0.6,
				"Linear"
			}).Completed:Wait();
			t_AchievementProgress.Gui.Enabled = false;
			bool1 = true;
		end);
	end);
	coroutine_wrap_ret();
end
function CheckForProgress() -- Line: 114
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table2
			[3] = table1
	--]]
	local v1 = m_Library.Save.Get();
	if not v1 then return end
	for key1, val1 in pairs(v1.Achievements) do
		local t_progress = val1.progress;
		local t_stage = val1.stage;
		if not m_Library.Directory.Achievements[key1] then continue end
		local v2 = m_Library.Directory.Achievements[key1][t_stage];
		if not v2 then continue end
		local t_amount2 = v2.amount;
		local v3 = table2[key1];
		if v3 and v3 < t_progress then
			local math_clamp_ret = math.clamp(v3 / t_amount2, 0, 1);
			local math_clamp_ret2 = math.clamp(t_progress / t_amount2, 0, 1);
			for _, val2 in ipairs(table1) do
				if val2 > math_clamp_ret2 or math_clamp_ret >= val2 then continue end
				Notification(key1);
			end
		end
		table2[key1] = t_progress;
	end
end
CheckForProgress();
m_Library.Network.Fired("Achievement Completed"):Connect(function(p4, p5) -- Line: 154
	Notification(p4, true, p5);
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p6) -- Line: 159
	if p6 == "Achievements" then
		CheckForProgress();
	end
end);
task.spawn(function() -- Line: 166
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	wait(2);
	if m_Library.Variables.Mobile then
		u1 = u1 - UDim2.new(0, 0, 0, 30);
	end
end);
  -  Editar
  04:54:13.899    -  Editar
  04:54:13.899  ----- [2717] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Server Boosts -----  -  Editar
  04:54:13.900  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_ServerBoosts = m_Library.GUI.ServerBoosts;
local table1 = {};
local bool1 = false;
function Update() -- Line: 22
	--[[
		Upvalues:
			[1] = m_Library
			[2] = bool1
			[3] = t_ServerBoosts
			[4] = table1
	--]]
	local function GetBoostingPlayers(p9) -- Line: 23
		local table2 = {};
		for _, val2 in ipairs(p9) do
			if not val2.userId then continue end
			table2[tostring(val2.userId)] = val2.name;
		end
		return table2;
	end
	local function UpdateBoost(p10) -- Line: 35
		--[[
			Upvalues:
				[1] = m_Library
				[2] = GetBoostingPlayers
		--]]
		local v5 = m_Library.Save.Get();
		if not v5 then return end
		local ActiveBoosts = m_Library.ServerBoosts.GetActiveBoosts();
		local Attribute = p10:GetAttribute("RequiredBoost");
		local v6 = ActiveBoosts[p10:GetAttribute("ServerBoost")];
		p10.TimeLeft.Visible = v6 ~= nil;
		p10.Heads.Visible = v6 ~= nil;
		if v6 then
			local v8 = GetBoostingPlayers(v6.boosters);
			local t_totalTimeLeft = v6.totalTimeLeft;
			if t_totalTimeLeft < 86400 then
				p10.TimeLeft.Text = m_Library.Functions.TimerString(t_totalTimeLeft);
			else
				p10.TimeLeft.Text = m_Library.Functions.TimeString(t_totalTimeLeft) .. " Left";
			end
			local table3 = {};
			for _, child3 in pairs(p10.Heads:GetChildren()) do
				if not child3:IsA("ImageLabel") or child3:GetAttribute("Template") then continue end
				if not v8[child3.Name] or table3[child3.Name] then
					child3:Destroy();
					continue;
				end
				table3[child3.Name] = true;
			end
			local ImageLabel = p10.Heads:WaitForChild("ImageLabel");
			for key4, val4 in pairs(v8) do
				local FindFirstChild_ret = p10.Heads:FindFirstChild(key4);
				if FindFirstChild_ret then continue end
				pcall(function() -- Line: 78
					--[[
						Upvalues:
							[1] = key4
							[2] = ImageLabel
							[3] = p10
							[4] = m_Library
							[5] = val4
					--]]
					local UserThumbnailAsync = game.Players:GetUserThumbnailAsync(key4, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size180x180);
					local Clone_ret = ImageLabel:Clone();
					Clone_ret:SetAttribute("Template", false);
					Clone_ret.Name = key4;
					Clone_ret.Image = UserThumbnailAsync;
					Clone_ret.Visible = true;
					Clone_ret.Parent = p10.Heads;
					m_Library.GUIFX.Tooltip(Clone_ret, val4);
				end);
			end
		end
		local v7 = v5.BoostsInventory[Attribute] or 0;
		local Use = p10.Buttons:FindFirstChild("Use");
		Use:FindFirstChild("Label").Text = "Use x20 (" .. m_Library.Functions.Commas(v7) .. ")";
		Use.ImageColor3 = v7 >= 20 and Color3.new(1, 1, 1) or Color3.new(0.5, 0.5, 0.5);
	end
	local function SetupBoost(p11) -- Line: 98
		--[[
			Upvalues:
				[1] = m_Library
				[2] = bool1
		--]]
		local _ = m_Library.Directory.Products[p11:GetAttribute("Product")].ID;
		local Attribute2 = p11:GetAttribute("ServerBoost");
		local Buttons = p11:FindFirstChild("Buttons");
		local Use2 = Buttons:FindFirstChild("Use");
		m_Library.GUIFX.ButtonFX(Use2);
		Use2.Activated:Connect(function() -- Line: 105
			--[[
				Upvalues:
					[1] = bool1
					[2] = m_Library
					[3] = Attribute2
			--]]
			if not bool1 then
				bool1 = true;
				m_Library.Network.Fire("Activate Server Boost", Attribute2);
				bool1 = false;
			end
		end);
	end
	for _, child1 in ipairs(t_ServerBoosts.Container:GetChildren()) do
		if not child1:GetAttribute("ServerBoost") then continue end
		UpdateBoost(child1);
		if table1[child1] then continue end
		table1[child1] = true;
		SetupBoost(child1);
	end
end
function UpdatePriceFrame(p1, p2, p3) -- Line: 130
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v3, v4 = m_Library.Functions.GetPrice(p2, not p3);
	local Robux = p1:FindFirstChild("Robux");
	if v4 and v3 > 0 then
		Robux.Text = m_Library.Functions.Commas(v3);
		return v3;
	end
	Robux.Text = "???";
	return v3;
end
function Scrolling() -- Line: 144
	--[[
		Upvalues:
			[1] = t_ServerBoosts
	--]]
	local t_Container = t_ServerBoosts.Container;
	local UIListLayout = t_Container:FindFirstChildOfClass("UIListLayout");
	local UIPadding = t_Container:FindFirstChildOfClass("UIPadding");
	t_Container.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + UIPadding.PaddingTop.Offset + UIPadding.PaddingBottom.Offset);
end
m_Library.GUIFX.ButtonFX(t_ServerBoosts.Close);
t_ServerBoosts.Close.Activated:Connect(function() -- Line: 156
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_ServerBoosts
	--]]
	if not bool1 then
		bool1 = true;
		t_ServerBoosts.Gui.Enabled = false;
		bool1 = false;
	end
end);
Update();
Scrolling();
m_Library.Network.Fired("Server Boost Update"):Connect(function(p4) -- Line: 172
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.ServerBoosts.SetActiveBoosts(p4);
	Update();
	m_Library.Signal.Fire("Server Boosts Changed");
end);
m_Library.Network.Fired("Server Boost Activated"):Connect(function(p5, p6, p7) -- Line: 179
	--[[
		Upvalues:
			[1] = m_Library
	--]]
    if p5 == m_Library.LocalPlayer then
		m_Library.Audio.Play("rbxassetid://11603330782", script, 1, 1);
	end
	local t_msg = m_Library.Shared.ServerBoostsInfo[p6].msg;
	if p5 then
		m_Library.ChatMsg.New("Server " .. p6 .. " Boost activated by " .. p5.DisplayName .. "!", Color3.fromRGB(46, 255, 63));
		return;
    end
	m_Library.ChatMsg.New("Server Event " .. p6 .. " has started for " .. p7 / 60 .. " minutes! " .. (t_msg and t_msg or ""), Color3.fromRGB(46, 255, 63));
end);
m_Library.Network.Fired("Server Boost Ended"):Connect(function(p8) -- Line: 197
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.ChatMsg.New("Server " .. p8 .. " Boost has ended!", Color3.fromRGB(46, 255, 63));
end);
m_Library.Signal.Fired("Resolution Changed"):Connect(function() -- Line: 202
	task.defer(function() -- Line: 203
		Scrolling();
	end);
end);
  -  Editar
  04:54:13.900    -  Editar
  04:54:13.900  ----- [2718] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Notifications -----  -  Editar
  04:54:13.900  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_Notifications = m_Library.GUI.Notifications;
local u1 = 0;
local u2 = 0;
function Add(p1, p2) -- Line: 30
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u2
			[3] = u1
			[4] = t_Notifications
	--]]
	while not m_Library.WorldCmds.CanDoAction() or m_Library.Variables.PickingStarter or os.clock() - u2 < 1.5 do
		m_Library.Heartbeat(5);
	end
	p2 = p2 or {};
	local v1 = m_Library.Save.Get();
	if not v1 or v1.Settings.Notifications == 2 and not p2.force then return end
	if p2.world and v1.World ~= p2.world then return end
	u2 = os.clock();
	u1 = u1 + 1;
	m_Library.Audio.Play("rbxassetid://7029271451", script, 1, 1);
	local v2 = p2.color or Color3.new(1, 1, 1);
	local v3 = p2.time or 5;
	local t_sound = p2.sound;
	local v4 = p2.volume or 1.5;
	if t_sound then
		m_Library.Audio.Play(t_sound, script, 1, v4);
	end
	local Clone_ret = script.Notification:Clone();
	local UIScale = Clone_ret:FindFirstChildOfClass("UIScale");
	local UIStroke = Clone_ret:FindFirstChildOfClass("UIStroke");
	UIScale.Scale = 1.3;
	Clone_ret.Text = p1;
	Clone_ret.LayoutOrder = u1;
	Clone_ret.TextColor3 = v2;
	Clone_ret.Parent = t_Notifications.Frame;
	m_Library.Functions.Tween(UIScale, {Scale = 1}, {
		0.3,
		"Expo",
		"Out"
	});
	task.delay(v3, function() -- Line: 71
		--[[
			Upvalues:
				[1] = m_Library
				[2] = UIStroke
				[3] = Clone_ret
		--]]
		m_Library.Functions.Tween(UIStroke, {Transparency = 1}, {
			0.4,
			"Expo",
			"Out"
		});
		m_Library.Functions.Tween(Clone_ret, {
			TextTransparency = 1,
			TextStrokeTransparency = 1
		}, {
			0.4,
			"Expo",
			"Out"
		}).Completed:Wait();
		Clone_ret:Destroy();
	end);
end
m_Library.Signal.Fired("Notification"):Connect(function(p3, p4) -- Line: 80
	Add(p3, p4);
end);
m_Library.Network.Fired("Notification"):Connect(function(p5, p6) -- Line: 85
	Add(p5, p6);
end);
  -  Editar
  04:54:13.900    -  Editar
  04:54:13.900  ----- [2719] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Progress Notifications -----  -  Editar
  04:54:13.900  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_IsHardcore = m_Library.Shared.IsHardcore;
local table1 = {
	Areas = {},
	Eggs = {},
	Upgrades = {}
};
function SendNotification(p1, p2) -- Line: 27
	--[[
		Upvalues:
			[1] = table1
			[2] = m_Library
	--]]
	table.insert(table1[p2], p1);
	local v1 = nil;
	local Color3_fromRGB_ret = Color3.fromRGB(103, 255, 80);
	if p2 == "Eggs" then
		v1 = "You can afford to buy the " .. m_Library.Directory.Eggs[p1].displayName .. "!";
	elseif p2 == "Areas" then
		v1 = "You can afford to unlock the " .. m_Library.Directory.Areas[p1].name .. " area!";
	elseif p2 == "Upgrades" then
		v1 = "You can afford to buy the " .. m_Library.Directory.Upgrades[p1].title .. " Upgrade!";
	end
	m_Library.Signal.Fire("Notification", v1, {
		color = Color3_fromRGB_ret,
		time = 4
	});
	m_Library.Network.Fire("Sent Progress Notification", p1, p2);
end
function AttemptNotification(p3, p4) -- Line: 49
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_IsHardcore
			[3] = table1
	--]]
	local v2 = m_Library.Save.Get();
	if not v2 then return end
	local v3 = t_IsHardcore and v2.Hardcore.ProgressNotifications or v2.ProgressNotifications;
	if not m_Library.Functions.SearchArray(table1[p4], p3) and not m_Library.Functions.SearchArray(v3[p4], p3) then
		SendNotification(p3, p4);
	end
end
function CheckForNotifications() -- Line: 62
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_IsHardcore
	--]]
	local v4 = m_Library.Save.Get();
	if not v4 then return end
	local AllEggs = m_Library.WorldCmds.GetAllEggs();
	for _, val1 in ipairs(AllEggs) do
		local Attribute = val1:GetAttribute("ID");
		local Attribute2 = val1:GetAttribute("Unlocked");
		if Attribute == "Cracked Egg" then continue end
		local v5 = m_Library.Directory.Eggs[Attribute];
		local v6 = v4[v5.currency];
		if t_IsHardcore and v5.currency ~= "Diamonds" then
			v6 = v4.HardcoreCurrency[v5.currency];
		end
		if not Attribute2 or not v6 or v5.cost > v6 then continue end
		AttemptNotification(Attribute, "Eggs");
	end
	local AllGates = m_Library.WorldCmds.GetAllGates();
	for _, val2 in ipairs(AllGates) do
		local t_Name = val2.Name;
		local v7 = m_Library.Directory.Areas[t_Name];
		if not v7 then
			warn("Missing area:", t_Name);
			continue;
		end
		if not v7.gate then return end
		local t_currency = v7.gate.currency;
		local v8 = v4[t_currency];
		if t_IsHardcore and t_currency ~= "Diamonds" then
			v8 = v4.HardcoreCurrency[t_currency];
		end
		if not v7.gate or not v8 or v7.gate.cost > v8 then continue end
		AttemptNotification(t_Name, "Areas");
	end
end
m_Library.Signal.Fired("Stat Changed"):Connect(function(p5) -- Line: 129
	if string.find(p5, "Coins") or p5 == "Diamonds" or p5 == "AreasUnlocked" or p5 == "Hardcore" then
		CheckForNotifications();
	end
end);
m_Library.Network.Fired("Upgrade Bought"):Connect(function(p6) -- Line: 136
	--[[
		Upvalues:
			[1] = table1
	--]]
	for key3, val3 in ipairs(table1.Upgrades) do
		if val3 ~= p6 then continue end
		table.remove(table1.Upgrades, key3);
		return;
	end
end);
  -  Editar
  04:54:13.900    -  Editar
  04:54:13.900  ----- [2720] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Teleport -----  -  Editar
  04:54:13.900  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_Teleport = m_Library.GUI.Teleport;
local Teleport_ = m_Library.GUI.Main.Left.Tools:FindFirstChild("Teleport");
local t_ID = m_Library.Directory.Gamepasses.Teleport.ID;
local t_ID2 = m_Library.Directory.Gamepasses.VIP.ID;
local t_IsHardcore = m_Library.Shared.IsHardcore;
local bool1 = false;
local u1 = "Spawn";
local bool2 = false;
local t_Areas = m_Library.Directory.Areas;
local table1 = {};
local table2 = {};
for key1, val1 in pairs(t_Areas) do
	if val1.hidden then continue end
	table.insert(table1, key1);
end
table.sort(table1, function(p1, p2) -- Line: 41
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v1 = m_Library.Directory.Areas[p1];
	local v2 = m_Library.Directory.Areas[p2];
	local v3 = m_Library.Directory.Worlds[v1.world];
	local v4 = m_Library.Directory.Worlds[v2.world];
	local v5 = m_Library.Directory.Currency[v3.mainCurrency];
	local v6 = m_Library.Directory.Currency[v4.mainCurrency];
	if v3.worldOrder == v4.worldOrder then
		if v5.order == v6.order then
			if v1.isShop == v2.isShop then
				if v1.gate and v2.gate then
					return v1.gate.cost < v2.gate.cost;
				end
				return v1.mult < v2.mult;
			end
			return v1.isShop;
		end
		return v5.order < v6.order;
	end
	return v3.worldOrder < v4.worldOrder;
end);
for _, val2 in ipairs(table1) do
	local t_world = m_Library.Directory.Areas[val2].world;
	if table.find(table2, t_world) then continue end
	table.insert(table2, t_world);
end
function GetTeleportIcon(p3) -- Line: 75
	return ({
		MachineUpgrade = "rbxassetid://12520076522",
		MachineFuse = "rbxassetid://12520076797",
		MachineRainbow = "rbxassetid://12520076664",
		MachineEnchant = "rbxassetid://12520076963",
		MachineDarkMatter = "rbxassetid://12520077127",
		MachineServerBoosts = "rbxassetid://12523969236",
		Chest = "rbxassetid://12520085862",
		Teleport = "rbxassetid://12520085508"
	})[p3];
end
function ActuallyTeleport(p4, p5) -- Line: 89
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	if not m_Library.WorldCmds.CanDoAction() then
		return false, "Cannot perform actions right now";
	end
	if not m_Library.FFlags.Get(m_Library.FFlags.Keys.Teleporting) and not m_Library.FFlags.CanBypass() then
		return false, "Sorry this is disabled right now! Try back soon!";
	end
	local v7 = m_Library.Directory.Areas[p4];
	if not v7 then
		return false, "Unknown area!";
	end
	if not p5 and not m_Library.WorldCmds.HasAccess(v7.world) then
		return false, "You do not have access to this world!";
	end
	if not p5 and not m_Library.WorldCmds.HasArea(p4) then
		return false, "You do not have access to this area!";
	end
	if not p5 and not m_Library.WorldCmds.HasTeleport(p4) then
		return false, "You do not own the teleport to this area!";
	end
	if not p5 then
		if v7 == "Diamond Mine" then
			local collpaseTime = m_Library.Signal.Invoke("Get Diamond Mine Collpase Time")
			if collpaseTime then
				return false, "The Diamond Mine has collapsed! Reopening in " .. m_Library.Functions.FormatTime(collpaseTime)
			end
		end
	end
	if m_Library.WorldCmds.Get() ~= v7.world and not m_Library.WorldCmds.Load(v7.world) then
		return false, "World failed to load!";
	end
	local FindFirstChild_ret = m_Library.WorldCmds.GetMap().Teleports:FindFirstChild(p4);
	if not FindFirstChild_ret then
		return false, "No such teleport for area!";
	end
	assert(FindFirstChild_ret);
	local t_LocalPlayer = m_Library.LocalPlayer;
	local v8 = t_LocalPlayer.Character or t_LocalPlayer.CharacterAdded:Wait();
	local Humanoid = v8:WaitForChild("Humanoid");
	local HumanoidRootPart = v8:WaitForChild("HumanoidRootPart");
	m_Library.Signal.Fire("Teleporting");
	task.wait(0.25);
	local t_CFrame = FindFirstChild_ret.CFrame;
	v8:PivotTo(t_CFrame + t_CFrame.UpVector * (Humanoid.HipHeight + HumanoidRootPart.Size.Y / 2));
	m_Library.Audio.Play("rbxassetid://7009904957", script, 1, 0.4);
	m_Library.Network.Fire("Performed Teleport", p4);
	task.wait(0.25);
	return true;
end
function Teleport(p6, p7) -- Line: 168
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.Asserts.string(p6);
	assert(m_Library.Directory.Areas[p6]);
	if m_Library.Variables.Teleporting then
		return false, "You are already teleporting!";
	end
	m_Library.Variables.Teleporting = true;
	local ActuallyTeleport_ret1, ActuallyTeleport_ret2 = ActuallyTeleport(p6, p7);
	m_Library.Variables.Teleporting = false;
	return ActuallyTeleport_ret1, ActuallyTeleport_ret2;
end
m_Library.Network.Invoked("Force Teleport").OnInvoke = function(p8) -- Line: 189
	return Teleport(p8, true);
end
function Purchase(p9) -- Line: 194
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v9 = m_Library.Message.New("It costs " .. m_Library.Functions.Commas(m_Library.Directory.Areas[p9].teleportPrice) .. " Diamonds to unlock this teleport. Are you sure?", true);
	if not v9 then return end
	local v10, v11 = m_Library.Network.Invoke("Buy Teleport Area", p9);
	if not v10 then
		m_Library.Message.New(v11 or "An error occurred.");
		return;
	end
	m_Library.Audio.Play("rbxassetid://7255664014", script);
end
function Clicked(p10) -- Line: 210
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	if m_Library.WorldCmds.HasTeleport(p10) then
		local Teleport_ret1, Teleport_ret2 = Teleport(p10);
		if not Teleport_ret1 then
			m_Library.Message.New(Teleport_ret2 or "An error occurred.");
		end
	else
		Purchase(p10);
	end
end
function ClickedWorld(p11) -- Line: 365
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
			[3] = t_Teleport
	--]]
	if u1 ~= p11 then
		u1 = p11;
		t_Teleport.Gui.Frame.RightContainer.Holder.Category.Text = "~ " .. ((u1 == "Hardcore" or u1 == "Normal" or u1 == "Trading Plaza") and u1 .. " Teleports" or m_Library.Directory.Worlds[u1].display) .. " ~";
		UpdateAreas();
		t_Teleport.RightContainer.Holder.CanvasPosition = Vector2.new(0, 0);
	end
end
function RealmClicked(p12) -- Line: 382
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	if p12 == "Hardcore" then
		m_Library.Variables.LoadingWorld = true;
		local v21, v22 = m_Library.Network.Invoke("Toggle Hardcore Mode");
		if v21 then
			m_Library.GUIFX.Loading("Hardcore Mode");
			return;
		end
		m_Library.Variables.LoadingWorld = false;
		m_Library.Message.New(v22 or "Something went wrong.");
		return;
	end
	if p12 == "Normal" then
		m_Library.Variables.LoadingWorld = true;
		local v23, v24 = m_Library.Network.Invoke("Toggle Hardcore Mode");
		if v23 then
			m_Library.GUIFX.Loading("Normal Mode");
			return;
		end
		m_Library.Variables.LoadingWorld = false;
		m_Library.Message.New(v24 or "Something went wrong.");
		return;
	end
	if p12 == "Trading Plaza" then
		local u2 = false;
		pcall(function() -- Line: 403
			--[[
				Upvalues:
					[1] = u2
					[2] = m_Library
			--]]
			u2 = m_Library.VoiceChatService:IsVoiceEnabledForUserIdAsync(m_Library.LocalPlayer.UserId);
		end);
		m_Library.Signal.Fire("Show Trading Plaza Choice", u2);
	end
end
function Setup() -- Line: 411
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_Teleport
			[3] = u1
			[4] = bool2
			[5] = table2
			[6] = bool1
			[7] = t_IsHardcore
			[8] = table1
			[9] = t_ID2
	--]]
	if m_Library.Shared.IsTradingPlaza then
		if not t_Teleport.Holder:FindFirstChild("TeleportsDisabled") then
			script.TeleportsDisabled:Clone().Parent = t_Teleport.Frame;
			t_Teleport.LeftContainer.Visible = false;
			t_Teleport.RightContainer.Visible = false;
			t_Teleport.UnlockAll.Visible = false;
		end
		return;
	end
	local v12 = m_Library.Save.Get();
	if not v12 then return end
	assert(v12);
	t_Teleport.Gui.Frame.RightContainer.Holder.Category.Text = "~ " .. m_Library.Directory.Worlds[u1].display .. " ~";
	local t_Holder = t_Teleport.Gui.Frame.LeftContainer.Holder;
	local t_WorldTemplate = t_Holder.WorldTemplate;
	local v13 = 1;
	if not bool2 then
		for _, val5 in ipairs(table2) do
			if val5 == "Diamond Mine" then continue end
			local v30 = m_Library.Directory.Worlds[val5];
			local FindFirstChild_ret2 = t_Holder:FindFirstChild(val5);
			if not FindFirstChild_ret2 then
				local Clone_ret = t_WorldTemplate:Clone();
				Clone_ret.ImageLabel.Image = v30.teleportImage or "rbxassetid://12405479224";
				Clone_ret.Visible = true;
				Clone_ret.Parent = t_Holder;
				Clone_ret.Name = val5;
				Clone_ret.Title.Text = v30.display;
				Clone_ret.LayoutOrder = v13;
				v13 = v13 + 1;
				m_Library.GUIFX.ButtonFX(Clone_ret);
				Clone_ret.Activated:Connect(function() -- Line: 453
					--[[
						Upvalues:
							[1] = bool1
							[2] = val5
					--]]
					if not bool1 then
						bool1 = true;
						ClickedWorld(val5);
						bool1 = false;
					end
				end);
			end
			bool2 = true;
		end
		t_Holder.CategoryRealms.LayoutOrder = v13;
		v13 = v13 + 1;
	end
	if not t_Holder:FindFirstChild("Diamond Mine") then
		local v25 = m_Library.Directory.Worlds["Diamond Mine"];
		local Clone_ret2 = t_WorldTemplate:Clone();
		Clone_ret2.Parent = t_Holder;
		Clone_ret2.Visible = true;
		Clone_ret2.Name = "Diamond Mine";
		Clone_ret2.Title.Text = "Diamond Mine";
		Clone_ret2.ImageLabel.Image = v25.teleportImage or "rbxassetid://12405479224";
		Clone_ret2.LayoutOrder = v13;
		m_Library.GUIFX.ButtonFX(Clone_ret2);
		Clone_ret2.Activated:Connect(function() -- Line: 481
			--[[
				Upvalues:
					[1] = bool1
			--]]
			if not bool1 then
				bool1 = true;
				ClickedWorld("Diamond Mine");
				bool1 = false;
			end
		end);
		v13 = v13 + 1;
	end
	if v12.HardcoreUnlocked and not t_IsHardcore then
		if not t_Holder:FindFirstChild("Hardcore") then
			local Clone_ret5 = t_WorldTemplate:Clone();
			Clone_ret5.Parent = t_Holder;
			Clone_ret5.Visible = true;
			Clone_ret5.Name = "Hardcore";
			Clone_ret5.Title.Text = "Hardcore Mode";
			Clone_ret5.LayoutOrder = v13;
			Clone_ret5.ImageLabel.Image = "rbxassetid://12447471006";
			m_Library.GUIFX.ButtonFX(Clone_ret5);
			Clone_ret5.Activated:Connect(function() -- Line: 503
				--[[
					Upvalues:
						[1] = bool1
				--]]
				if not bool1 then
					bool1 = true;
					ClickedWorld("Hardcore");
					bool1 = false;
				end
			end);
			v13 = v13 + 1;
		end
	elseif t_IsHardcore and not t_Holder:FindFirstChild("Normal") then
		local Clone_ret4 = t_WorldTemplate:Clone();
		Clone_ret4.Parent = t_Holder;
		Clone_ret4.Visible = true;
		Clone_ret4.Name = "Normal";
		Clone_ret4.Title.Text = "Normal Mode";
		Clone_ret4.LayoutOrder = v13;
		Clone_ret4.ImageLabel.Image = "rbxassetid://12447471006";
		m_Library.GUIFX.ButtonFX(Clone_ret4);
		Clone_ret4.Activated:Connect(function() -- Line: 524
			--[[
				Upvalues:
					[1] = bool1
			--]]
			if not bool1 then
				bool1 = true;
				ClickedWorld("Normal");
				bool1 = false;
			end
		end);
		v13 = v13 + 1;
	end
	if v12.OwnsTradingPlaza and not t_Holder:FindFirstChild("Trading Plaza") then
		local Clone_ret3 = t_WorldTemplate:Clone();
		Clone_ret3.Parent = t_Holder;
		Clone_ret3.Visible = true;
		Clone_ret3.Name = "Trading Plaza";
		Clone_ret3.Title.Text = "Trading Plaza";
		Clone_ret3.LayoutOrder = v13;
		Clone_ret3.ImageLabel.Image = "rbxassetid://12447471127";
		m_Library.GUIFX.ButtonFX(Clone_ret3);
		Clone_ret3.Activated:Connect(function() -- Line: 547
			--[[
				Upvalues:
					[1] = bool1
			--]]
			if not bool1 then
				bool1 = true;
				ClickedWorld("Trading Plaza");
				bool1 = false;
			end
		end);
		local _ = v13 + 1;
	end
	Scrolling(t_Teleport.Gui.Frame.LeftContainer.Holder);
	local t_Holder2 = t_Teleport.Gui.Frame.RightContainer.Holder;
	for _, child3 in ipairs(t_Holder2:GetChildren()) do
		if not child3:GetAttribute("World") or child3:GetAttribute("World") == u1 then continue end
		child3:Destroy();
	end
	local _ = t_Holder2.AreaTemplate;
	local v14 = 1;
	if u1 ~= "Hardcore" and u1 ~= "Trading Plaza" then
		for _, val6 in ipairs(table1) do
			local v31 = m_Library.Directory.Areas[val6];
			if v31.world ~= u1 or val6 == "VIP" and not m_Library.Gamepasses.Owns(t_ID2) then continue end
			local v32 = t_Holder2:FindFirstChild(val6);
			if not v32 then
				v32 = m_Library.Assets.UI.Teleport.Area:Clone();
				v32.LayoutOrder = v14;
				if val6 == "Easter" then
					v32.LayoutOrder = 0;
				end
				v14 = v14 + 1;
				v32.Name = val6;
				v32.Parent = t_Holder2;
				v32:SetAttribute("World", v31.world);
				m_Library.GUIFX.ButtonFX(v32);
				v32.Activated:Connect(function() -- Line: 595
					--[[
						Upvalues:
							[1] = bool1
							[2] = m_Library
							[3] = val6
					--]]
					if not bool1 and m_Library.WorldCmds.HasArea(val6) then
						bool1 = true;
						Clicked(val6);
						bool1 = false;
					end
				end);
			end
			local v33 = m_Library.WorldCmds.HasArea(val6);
			local v34 = m_Library.WorldCmds.HasTeleport(val6);
			local v35 = GetTeleportIcon(v31.tpIcon) or v31.isShop and "rbxassetid://7255478767" or "rbxassetid://6708234702";
			v32.ImageColor3 = v33 and Color3.new(1, 1, 1) or Color3.fromRGB(120, 120, 120);
			v32.Title.Text = v33 and v31.name or "???";
			v32.Image = (not v33 or v34) and "rbxassetid://6869680115" or "rbxassetid://7045637286";
			v32.HoverImage = (not v33 or v34) and "rbxassetid://6903539993" or "rbxassetid://7045637411";
			if not v33 then
				v32.Icon.Image = "rbxassetid://7255478600";
				continue;
			end
			if not v34 then
				v32.Icon.Image = "rbxassetid://7255478657";
				continue;
			end
			if not v34 or not v33 then continue end
			v32.Icon.Image = v35;
		end
	else
		local v26 = t_Holder2:FindFirstChild(u1);
		if not v26 then
			v26 = m_Library.Assets.UI.Teleport.Area:Clone();
			v26.LayoutOrder = v14;
			local _ = v14 + 1;
			v26.Name = u1;
			v26.Parent = t_Holder2;
			v26:SetAttribute("World", u1);
			m_Library.GUIFX.ButtonFX(v26);
			v26.Activated:Connect(function() -- Line: 632
				--[[
					Upvalues:
						[1] = bool1
						[2] = u1
				--]]
				if not bool1 then
					bool1 = true;
					RealmClicked(u1);
					bool1 = false;
				end
			end);
		end
		local v27 = u1 == "Hardcore" and v12.HardcoreUnlocked or v12.OwnsTradingPlaza;
		local v28 = u1 == "Hardcore" and v12.HardcoreUnlocked or v12.OwnsTradingPlaza;
		v26.ImageColor3 = v27 and Color3.new(1, 1, 1) or Color3.fromRGB(120, 120, 120);
		v26.Title.Text = u1;
		v26.Image = (not v27 or v28) and "rbxassetid://6869680115" or "rbxassetid://7045637286";
		v26.HoverImage = (not v27 or v28) and "rbxassetid://6903539993" or "rbxassetid://7045637411";
		if not v27 then
			v26.Icon.Image = "rbxassetid://7255478600";
		elseif not v28 then
			v26.Icon.Image = "rbxassetid://7255478657";
		elseif v28 and v27 then
			v26.Icon.Image = "rbxassetid://6708234702";
		end
	end
	Scrolling(t_Holder2);
end
function UpdateRealms() -- Line: 659
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_Teleport
			[3] = t_IsHardcore
			[4] = table2
			[5] = bool1
	--]]
	local v15 = m_Library.Save.Get();
	if not v15 then return end
	assert(v15);
	local t_Holder3 = t_Teleport.Gui.Frame.LeftContainer.Holder;
	local t_WorldTemplate2 = t_Holder3.WorldTemplate;
	if v15.HardcoreUnlocked and not t_IsHardcore then
		if not t_Holder3:FindFirstChild("Hardcore") then
			local Clone_ret8 = t_WorldTemplate2:Clone();
			Clone_ret8.Parent = t_Holder3;
			Clone_ret8.Visible = true;
			Clone_ret8.Name = "Hardcore";
			Clone_ret8.Title.Text = "Hardcore Mode";
			Clone_ret8.ImageLabel.Image = "rbxassetid://12447471006";
			Clone_ret8.LayoutOrder = #table2 + 2;
			m_Library.GUIFX.ButtonFX(Clone_ret8);
			Clone_ret8.Activated:Connect(function() -- Line: 681
				--[[
					Upvalues:
						[1] = bool1
				--]]
				if not bool1 then
					bool1 = true;
					ClickedWorld("Hardcore");
					bool1 = false;
				end
			end);
		end
	elseif t_IsHardcore and not t_Holder3:FindFirstChild("Normal") then
		local Clone_ret7 = t_WorldTemplate2:Clone();
		Clone_ret7.Parent = t_Holder3;
		Clone_ret7.Visible = true;
		Clone_ret7.Name = "Normal";
		Clone_ret7.Title.Text = "Normal Mode";
		Clone_ret7.ImageLabel.Image = "rbxassetid://12447471006";
		Clone_ret7.LayoutOrder = #table2 + 2;
		m_Library.GUIFX.ButtonFX(Clone_ret7);
		Clone_ret7.Activated:Connect(function() -- Line: 701
			--[[
				Upvalues:
					[1] = bool1
			--]]
			if not bool1 then
				bool1 = true;
				ClickedWorld("Normal");
				bool1 = false;
			end
		end);
	end
	if v15.OwnsTradingPlaza and not t_Holder3:FindFirstChild("Trading Plaza") then
		local Clone_ret6 = t_WorldTemplate2:Clone();
		Clone_ret6.Parent = t_Holder3;
		Clone_ret6.Visible = true;
		Clone_ret6.Name = "Trading Plaza";
		Clone_ret6.Title.Text = "Trading Plaza";
		Clone_ret6.ImageLabel.Image = "rbxassetid://12447471127";
		Clone_ret6.LayoutOrder = #table2 + 3;
		m_Library.GUIFX.ButtonFX(Clone_ret6);
		Clone_ret6.Activated:Connect(function() -- Line: 723
			--[[
				Upvalues:
					[1] = bool1
			--]]
			if not bool1 then
				bool1 = true;
				ClickedWorld("Trading Plaza");
				bool1 = false;
			end
		end);
	end
end
function UpdateAreas() -- Line: 734
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_Teleport
			[3] = u1
			[4] = table1
			[5] = t_ID2
			[6] = bool1
	--]]
	local v16 = m_Library.Save.Get();
	if not v16 then return end
	assert(v16);
	local t_Holder4 = t_Teleport.Gui.Frame.RightContainer.Holder;
	for _, child4 in ipairs(t_Holder4:GetChildren()) do
		if not child4:GetAttribute("World") or child4:GetAttribute("World") == u1 then continue end
		child4:Destroy();
	end
	local _ = t_Holder4.AreaTemplate;
	local v17 = 1;
	if u1 ~= "Hardcore" and u1 ~= "Trading Plaza" and u1 ~= "Normal" then
		for _, val7 in ipairs(table1) do
			local v36 = m_Library.Directory.Areas[val7];
			if v36.world ~= u1 or val7 == "VIP" and not m_Library.Gamepasses.Owns(t_ID2) then continue end
			local v37 = t_Holder4:FindFirstChild(val7);
			if not v37 then
				v37 = m_Library.Assets.UI.Teleport.Area:Clone();
				v37.LayoutOrder = v17;
				if val7 == "Easter" then
					v37.LayoutOrder = 0;
				end
				v17 = v17 + 1;
				v37.Name = val7;
				v37.Parent = t_Holder4;
				v37:SetAttribute("World", v36.world);
				m_Library.GUIFX.ButtonFX(v37);
				v37.Activated:Connect(function() -- Line: 773
					--[[
						Upvalues:
							[1] = bool1
							[2] = m_Library
							[3] = val7
					--]]
					if not bool1 and m_Library.WorldCmds.HasArea(val7) then
						bool1 = true;
						Clicked(val7);
						bool1 = false;
					end
				end);
			end
			local v38 = m_Library.WorldCmds.HasArea(val7);
			local v39 = m_Library.WorldCmds.HasTeleport(val7);
			local v40 = GetTeleportIcon(v36.tpIcon) or v36.isShop and "rbxassetid://7255478767" or "rbxassetid://6708234702";
			v37.ImageColor3 = v38 and Color3.new(1, 1, 1) or Color3.fromRGB(120, 120, 120);
			v37.Title.Text = v38 and v36.name or "???";
			v37.Image = (not v38 or v39) and "rbxassetid://6869680115" or "rbxassetid://7045637286";
			v37.HoverImage = (not v38 or v39) and "rbxassetid://6903539993" or "rbxassetid://7045637411";
			if not v38 then
				v37.Icon.Image = "rbxassetid://7255478600";
				continue;
			end
			if not v39 then
				v37.Icon.Image = "rbxassetid://7255478657";
				continue;
			end
			if not v39 or not v38 then continue end
			v37.Icon.Image = v40;
		end
	else
		local v29 = t_Holder4:FindFirstChild(u1);
		if not v29 then
			v29 = m_Library.Assets.UI.Teleport.Area:Clone();
			v29.LayoutOrder = v17;
			local _ = v17 + 1;
			v29.Name = u1;
			v29.Parent = t_Holder4;
			v29:SetAttribute("World", u1);
			m_Library.GUIFX.ButtonFX(v29);
			v29.Activated:Connect(function() -- Line: 810
				--[[
					Upvalues:
						[1] = bool1
						[2] = u1
				--]]
				if not bool1 then
					bool1 = true;
					RealmClicked(u1);
					bool1 = false;
				end
			end);
		end
		local t_HardcoreUnlocked = nil;
		local t_HardcoreUnlocked2 = nil;
		if u1 == "Hardcore" or u1 == "Normal" then
			t_HardcoreUnlocked = v16.HardcoreUnlocked;
			t_HardcoreUnlocked2 = v16.HardcoreUnlocked;
		elseif u1 == "Trading Plaza" then
			t_HardcoreUnlocked = v16.HardcoreUnlocked;
			t_HardcoreUnlocked2 = v16.HardcoreUnlocked;
		end
		v29.ImageColor3 = t_HardcoreUnlocked and Color3.new(1, 1, 1) or Color3.fromRGB(120, 120, 120);
		v29.Title.Text = u1;
		v29.Image = (not t_HardcoreUnlocked or t_HardcoreUnlocked2) and "rbxassetid://6869680115" or "rbxassetid://7045637286";
		v29.HoverImage = (not t_HardcoreUnlocked or t_HardcoreUnlocked2) and "rbxassetid://6903539993" or "rbxassetid://7045637411";
		if not t_HardcoreUnlocked then
			v29.Icon.Image = "rbxassetid://7255478600";
		elseif not t_HardcoreUnlocked2 then
			v29.Icon.Image = "rbxassetid://7255478657";
		elseif t_HardcoreUnlocked2 and t_HardcoreUnlocked then
			v29.Icon.Image = "rbxassetid://6708234702";
		end
	end
	Scrolling(t_Holder4);
end
function Scrolling(p13) -- Line: 842
	local UIListLayout = p13:FindFirstChildOfClass("UIListLayout");
	local UIPadding = p13:FindFirstChildOfClass("UIPadding");
	UIListLayout:ApplyLayout();
	p13.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + UIPadding.PaddingBottom.Offset + UIPadding.PaddingTop.Offset);
end
function UpdateBottom() -- Line: 853
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_ID
			[3] = t_Teleport
	--]]
	local v18 = m_Library.Gamepasses.Owns(t_ID);
	t_Teleport.UnlockAll.Visible = not v18;
	t_Teleport.RightContainer.Size = UDim2.new(0.6, 32, v18 and 1 or 0.85, v18 and 20 or 0);
	Scrolling(t_Teleport.Gui.Frame.RightContainer.Holder);
end
m_Library.GUIFX.ButtonFX(Teleport_);
m_Library.GUIFX.Tooltip(Teleport_, "Teleport");
Teleport_.Activated:Connect(function() -- Line: 866
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
			[3] = t_Teleport
	--]]
	if not bool1 then
		bool1 = true;
		if m_Library.Shared.IsTradingPlaza then
			local u3 = false;
			pcall(function() -- Line: 873
				--[[
					Upvalues:
						[1] = u3
						[2] = m_Library
				--]]
				u3 = m_Library.VoiceChatService:IsVoiceEnabledForUserIdAsync(m_Library.LocalPlayer.UserId);
			end);
			m_Library.Signal.Fire("Show Trading Plaza Choice", u3);
		else
			t_Teleport.Gui.Enabled = not t_Teleport.Gui.Enabled;
		end
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_Teleport.Close);
t_Teleport.Close.Activated:Connect(function() -- Line: 887
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_Teleport
	--]]
	if not bool1 then
		bool1 = true;
		t_Teleport.Gui.Enabled = false;
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_Teleport.UnlockAll.Buy);
t_Teleport.UnlockAll.Buy.Robux.Text = "???";
task.spawn(function() -- Line: 898
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_ID
			[3] = t_Teleport
	--]]
	local v19, v20 = m_Library.Functions.GetPrice(t_ID);
	if v20 then
		t_Teleport.UnlockAll.Buy.Robux.Text = m_Library.Functions.Commas(v19);
	end
end);
t_Teleport.UnlockAll.Buy.Activated:Connect(function() -- Line: 904
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
			[3] = t_ID
	--]]
	if not bool1 then
		bool1 = true;
		m_Library.Shared.PromptPurchase(t_ID, false);
		bool1 = false;
	end
end);
Setup();
if m_Library.Shared.IsTradingPlaza then return end
UpdateBottom();
m_Library.Signal.Fired("Stat Changed"):Connect(function(p14) -- Line: 925
	if p14 == "AreasUnlocked" or p14 == "TeleportsUnlocked" or p14 == "Gamepasses" then
		UpdateBottom();
		UpdateAreas();
		return;
	end
	if p14 == "Hardcore" or p14 == "OwnsTradingPlaza" then
		UpdateRealms();
		UpdateAreas();
	end
end);
m_Library.Signal.Fired("Resolution Changed"):Connect(function() -- Line: 936
	--[[
		Upvalues:
			[1] = t_Teleport
	--]]
	task.defer(function() -- Line: 937
		--[[
			Upvalues:
				[1] = t_Teleport
		--]]
		Scrolling(t_Teleport.Gui.Frame.LeftContainer.Holder);
		Scrolling(t_Teleport.Gui.Frame.RightContainer.Holder);
	end);
end);
local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 944
	--[[
		Upvalues:
			[1] = t_Teleport
			[2] = m_Library
	--]]
	while true do
		if t_Teleport.Gui.Enabled then
			Scrolling(t_Teleport.Gui.Frame.LeftContainer.Holder);
			Scrolling(t_Teleport.Gui.Frame.RightContainer.Holder);
		end
		m_Library.Heartbeat(30);
	end
end);
coroutine_wrap_ret();
  -  Editar
  04:54:13.901    -  Editar
  04:54:13.901  ----- [2721] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Settings -----  -  Editar
  04:54:13.901  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_Settings = m_Library.GUI.Settings;
local bool1 = false;
function ToggleSetting(p1) -- Line: 19
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v1 = m_Library.Save.Get();
	if not v1 then return end
	assert(v1);
	m_Library.Audio.Play("rbxassetid://7004248320", script, 1, 0.5);
	local v2 = v1.Settings[p1] or 1;
	local v3 = m_Library.Shared.SettingsInfo[p1].options[v2 + 1] and v2 + 1 or 1;
	local v4 = v1.Settings[p1];
	v1.Settings[p1] = v3;
	Update();
	local v5, _, v6 = m_Library.Network.Invoke("Toggle Setting", p1);
	if v5 then
		v1.Settings[p1] = v6;
		Update();
		return;
	end
	if v1.Settings[p1] == v3 then
		v1.Settings[p1] = v4;
		Update();
	end
end
function Update() -- Line: 52
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_Settings
			[3] = bool1
	--]]
	local v7 = m_Library.Save.Get();
	if not v7 then return end
	assert(v7);
	for key1, val1 in pairs(v7.Settings) do
		local v8 = m_Library.Shared.SettingsInfo[key1];
		if not v8 then continue end
		local v9 = v8.options[val1];
		local v10 = t_Settings.Container:FindFirstChild(key1);
		if not v10 then
			v10 = m_Library.Assets.UI.Settings.Setting:Clone();
			v10.Name = key1;
			v10.LayoutOrder = v8.sort;
			v10.Parent = t_Settings.Container;
			m_Library.GUIFX.ButtonFX(v10.Toggle);
			v10.Toggle.Activated:Connect(function() -- Line: 75
				--[[
					Upvalues:
						[1] = bool1
						[2] = key1
				--]]
				if not bool1 then
					bool1 = true;
					ToggleSetting(key1);
					bool1 = false;
				end
			end);
		end
		v10.Title.Text = v8.title;
		v10.Toggle.Label.Text = v9;
		if v9 == "Off" or v9 == "No" or v9 == "Disabled" then
			v10.Toggle.Image = "rbxassetid://7045637481";
			v10.Toggle.HoverImage = "rbxassetid://7045637564";
			continue;
		end
		if v9 == "On" or v9 == "Yes" or v9 == "Enabled" then
			v10.Toggle.Image = "rbxassetid://7045637286";
			v10.Toggle.HoverImage = "rbxassetid://7045637411";
			continue;
		end
		v10.Toggle.Image = "rbxassetid://6869680115";
		v10.Toggle.HoverImage = "rbxassetid://6903539993";
	end
	local UIListLayout = t_Settings.Container:FindFirstChildOfClass("UIListLayout");
	local UIPadding = t_Settings.Container:FindFirstChildOfClass("UIPadding");
	t_Settings.Container.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + UIPadding.PaddingTop.Offset + UIPadding.PaddingBottom.Offset);
end
m_Library.GUIFX.ButtonFX(t_Settings.Close);
t_Settings.Close.Activated:Connect(function() -- Line: 110
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_Settings
	--]]
	if not bool1 then
		bool1 = true;
		t_Settings.Gui.Enabled = false;
		bool1 = false;
	end
end);
Update();
m_Library.Signal.Fired("Stat Changed"):Connect(function(p2) -- Line: 125
	if p2 == "Settings" then
		Update();
	end
end);
  -  Editar
  04:54:13.901    -  Editar
  04:54:13.901  ----- [2722] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Ranks -----  -  Editar
  04:54:13.901  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_Rank = m_Library.GUI.Main.Right.Rank;
local t_Rank2 = nil;
local bool1 = false;
function Update() -- Line: 20
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_Rank2
			[3] = t_Rank
	--]]
	local v1 = m_Library.Save.Get();
	if not v1 then return end
	local v2 = m_Library.Directory.Ranks[v1.Rank];
	if not t_Rank2 or t_Rank2 ~= v1.Rank then
		t_Rank2 = v1.Rank;
		t_Rank.RankName.Text = v2.title;
		local FindFirstChild_ret = m_Library.Assets.UI.Ranks:FindFirstChild(v1.Rank);
		for _, descendant2 in ipairs(t_Rank:GetDescendants()) do
			if descendant2.ClassName ~= "UIGradient" then continue end
			FindFirstChild_ret:Clone().Parent = descendant2.Parent;
			descendant2:Destroy();
		end
	end
	t_Rank.Add.Visible = v2.productId ~= 0;
	if v2.needed > 0 then
		local math_clamp_ret = math.clamp(v1.RankProgress / v2.needed, 0, 1);
		m_Library.Functions.Tween(t_Rank.Progress.Bar, {Size = UDim2.new(math_clamp_ret, 0, 1, 0)}, {
			0.2,
			"Quad",
			"Out"
		});
		t_Rank.Percent.Text = math.round(math_clamp_ret * 100) .. "%";
		return;
	end
	t_Rank.Progress.Bar.Size = UDim2.new(1, 0, 1, 0);
	t_Rank.Percent.Text = "MAX";
end
m_Library.Network.Fired("Rank Changed"):Connect(function(p1, p2) -- Line: 57
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	if p1 == m_Library.LocalPlayer then
		m_Library.Signal.Fire("Notification", "Congrats! You've ranked up to " .. p2 .. "!", {
			color = Color3.fromRGB(33, 255, 218),
			time = 5
		});
	end
	local v3 = m_Library.Player.UpperTorso(p1);
	if not v3 then return end
	m_Library.Signal.Fire("Fireworks Animation", p1);
	m_Library.Audio.Play("rbxassetid://7050300236", v3, 1, 1.25, 400);
	local Children = m_Library.Assets.Particles:FindFirstChild("Rank Up"):GetChildren();
	for _, val1 in ipairs(Children) do
		local Clone_ret = val1:Clone();
		Clone_ret.Parent = v3;
		Clone_ret:Emit(20);
		m_Library.Functions.AddDebris(Clone_ret, 5);
	end
	m_Library.WorldFX.RewardImage(v3.CFrame.p, "Rank Up!", "rbxassetid://6923341333");
end);
function PromptInstantRankup() -- Line: 85
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v4 = m_Library.Save.Get();
	if not v4 then return end
	local v5 = m_Library.Directory.Ranks[v4.Rank];
	if v5.productId ~= 0 then
		m_Library.Shared.PromptPurchase(v5.productId, true);
	end
end
m_Library.GUIFX.ButtonFX(t_Rank.Add);
t_Rank.Add.Activated:Connect(function() -- Line: 99
	--[[
		Upvalues:
			[1] = bool1
	--]]
	if not bool1 then
		bool1 = true;
		PromptInstantRankup();
		bool1 = false;
	end
end);
Update();
m_Library.Signal.Fired("Stat Changed"):Connect(function(p3) -- Line: 114
	if p3 == "Rank" or p3 == "RankProgress" then
		Update();
	end
end);
  -  Editar
  04:54:13.901    -  Editar
  04:54:13.901  ----- [2723] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Active Server Boosts -----  -  Editar
  04:54:13.901  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_Main = m_Library.GUI.Main;
local _ = m_Library.Shared.IsTradingPlaza;
local table1 = {
	"Triple Damage",
	"Super Lucky",
	"Triple Coins"
};
function Render() -- Line: 19
	--[[
		Upvalues:
			[1] = t_Main
			[2] = m_Library
			[3] = table1
	--]]
	local u1 = t_Main.Boosts or t_Main.ServerBoosts;
	local v1 = m_Library.Save.Get();
	if not v1 then return end
	t_Main.ServerBoosts.Visible = false;
	if not m_Library.Variables.ImportantWindowOpened then
		u1.Visible = v1.Settings.ShowBoosts == 1;
	else
		u1.Visible = false;
	end
    local ActiveBoosts = m_Library.ServerBoosts.GetActiveBoosts();
	for _, child1 in pairs(u1:GetChildren()) do
		if child1.ClassName ~= "Frame" or not child1:GetAttribute("Timed") or not child1:GetAttribute("ServerBoost") then continue end
		local v3 = ActiveBoosts[string.gsub(child1.Name, "Server ", "")];
		if v3 and v3.totalTimeLeft > 0 then continue end
		child1:Destroy();
	end
	local function AddBoost(p2, p3) -- Line: 47
		--[[
			Upvalues:
				[1] = u1
				[2] = m_Library
		--]]
		local v5 = u1:FindFirstChild("Server " .. p2);
		if not v5 then
			local v6 = m_Library.Shared.ServerBoostsInfo[p2].tripleIcon and m_Library.Assets.UI.Main.TripleServerBoost:Clone() or m_Library.Assets.UI.Main.ServerBoost:Clone();
			v5 = v6;
			v6.TimeLeft.Text = "";
			for _, child3 in pairs(v5:GetChildren()) do
				if child3.Name ~= "Icon" then continue end
				child3.Image = m_Library.Shared.ServerBoostsInfo[p2].icon;
			end
			v5.Name = "Server " .. p2;
			v5.LayoutOrder = 4;
			v5.Parent = u1;
			if p3 then
				v5:SetAttribute("Timed", true);
			end
			local t_desc = m_Library.Shared.ServerBoostsInfo[p2].desc;
			m_Library.GUIFX.Tooltip(v5, t_desc);
		end
		return v5;
	end
	local function RemoveBoost(p4) -- Line: 72
		--[[
			Upvalues:
				[1] = u1
		--]]
		local FindFirstChild_ret = u1:FindFirstChild("Server " .. p4);
		if FindFirstChild_ret then
			FindFirstChild_ret:Destroy();
		end
	end
	for key2, val2 in pairs(ActiveBoosts) do
		if not m_Library.Functions.SearchArray(table1, key2) then continue end
		local t_totalTimeLeft = val2.totalTimeLeft;
		local v4 = AddBoost(key2, true);
		if t_totalTimeLeft >= 86400 then
			v4.TimeLeft.Text = m_Library.Functions.TimeString(t_totalTimeLeft);
			continue;
		end
		v4.TimeLeft.Text = os.date("!%X", t_totalTimeLeft);
	end
end
function Scaling() -- Line: 97
end
Render();
Scaling();
m_Library.Signal.Fired("Server Boosts Changed"):Connect(function() -- Line: 120
	Render();
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p1) -- Line: 125
	if p1 == "Boosts" or p1 == "Gamepasses" or p1 == "IsFollowingOnTwitter" or p1 == "Settings" or p1 == "FriendsBoost" then
		Render();
	end
end);
m_Library.Signal.Fired("Important Window Toggled"):Connect(function() -- Line: 132
	Render();
end);
m_Library.Signal.Fired("Resolution Changed"):Connect(function() -- Line: 137
	Scaling();
end);
  -  Editar
  04:54:13.901    -  Editar
  04:54:13.901  ----- [2724] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Fuse Pets -----  -  Editar
  04:54:13.902  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_FusePets = m_Library.GUI.FusePets;
local t_FuseMinPets = m_Library.Shared.FuseMinPets;
local t_FuseMaxPets = m_Library.Shared.FuseMaxPets;
local t_FusePetsCost = m_Library.Shared.FusePetsCost;
local t_FuseHardcoreCost = m_Library.Shared.FuseHardcoreCost;
local Random_new_ret = Random.new();
local bool1 = false;
local table1 = {};
local bool2 = false;
local u1 = {};
local u2 = false;
function Fuse() -- Line: 25
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
			[3] = t_FusePets
	--]]
	if #u1 > 0 then
		m_Library.Variables.UsingMachine = true;
		t_FusePets.Gui.Enabled = false;
		local v9, v10 = m_Library.Network.Invoke("Fuse Pets", u1);
		if v9 then
			m_Library.Functions.Wait(1.2);
		else
			m_Library.Message.New(v10 or "Something went wrong. Try again!");
		end
		m_Library.Variables.UsingMachine = false;
	end
end
function Select(p1) -- Line: 47
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table1
			[3] = u2
			[4] = t_FuseMaxPets
			[5] = Random_new_ret
	--]]
	local v1 = m_Library.PetCmds.Get(p1);
	if not p1 then return end
	if #table1 > 0 and (v1.hc or false) ~= u2 then return end
	if t_FuseMaxPets <= #table1 then return end
	m_Library.Audio.Play("rbxassetid://7139317934", script, Random_new_ret:NextNumber(0.95, 1.05), 0.75);
	table.insert(table1, p1);
	u2 = v1.hc or false;
	Update();
end
function Deselect(p2) -- Line: 75
	--[[
		Upvalues:
			[1] = table1
			[2] = m_Library
			[3] = Random_new_ret
			[4] = u2
	--]]
	for key1, val1 in ipairs(table1) do
		if val1 ~= p2 then continue end
		m_Library.Audio.Play("rbxassetid://7139317909", script, Random_new_ret:NextNumber(0.95, 1.05), 0.75);
		table.remove(table1, key1);
		break;
	end
	if #table1 <= 0 then
		u2 = false;
	end
	Update();
end
function Update() -- Line: 94
	--[[
		Upvalues:
			[1] = table1
			[2] = m_Library
			[3] = t_FusePets
			[4] = u2
			[5] = t_FuseHardcoreCost
			[6] = t_FusePetsCost
			[7] = t_FuseMinPets
			[8] = t_FuseMaxPets
	--]]
	local function UpdatePets() -- Line: 96
		--[[
			Upvalues:
				[1] = table1
				[2] = m_Library
				[3] = t_FusePets
				[4] = u2
		--]]
		local v12 = table1[1] and m_Library.PetCmds.Get(table1[1]) or nil;
		for _, child4 in ipairs(t_FusePets.Holder:GetChildren()) do
			if child4.ClassName ~= "TextButton" then continue end
			local t_Name = child4.Name;
			local v17 = m_Library.Functions.SearchArray(table1, t_Name);
			child4.Equipped.Visible = v17;
			child4.BackgroundColor3 = v17 and Color3.fromRGB(69, 239, 69) or Color3.fromRGB(59, 177, 252);
			local Attribute = child4:GetAttribute("Locked");
			if not Attribute then
				child4.BackgroundColor3 = v17 and Color3.fromRGB(69, 239, 69) or Color3.fromRGB(59, 177, 252);
				child4.PetIcon.ImageTransparency = 0;
			end
			child4.Visible = v12 == nil and true or child4:GetAttribute("Hardcore") == u2;
		end
	end
	local function UpdateSide() -- Line: 123
		--[[
			Upvalues:
				[1] = u2
				[2] = t_FuseHardcoreCost
				[3] = t_FusePetsCost
				[4] = table1
				[5] = t_FuseMinPets
				[6] = t_FusePets
				[7] = m_Library
				[8] = t_FuseMaxPets
		--]]
		local v13 = u2 and t_FuseHardcoreCost or t_FusePetsCost;
		local v14 = t_FuseMinPets <= #table1 and table1[1] or false;
		t_FusePets.Side.Fuse.ImageColor3 = v14 and Color3.new(1, 1, 1) or Color3.new(0.5, 0.5, 0.5);
		t_FusePets.Side.CostFrame.Cost.Text = m_Library.Functions.Commas(v13);
		if m_Library.Variables.Console then
			t_FusePets.Side.Fuse.ButtonKeybind.Visible = true;
		else
			t_FusePets.Side.Fuse.ButtonKeybind.Visible = false;
		end
		if v14 then
			t_FusePets.Side.Notice.Text = "Fuse " .. #table1 .. "/" .. t_FuseMaxPets .. " Pets";
			return;
		end
		t_FusePets.Side.Notice.Text = "Select 3+ pets you want to fuse!";
	end
	UpdatePets();
	UpdateSide();
	Scaling();
end
function Setup() -- Line: 147
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_FusePets
			[3] = bool1
			[4] = table1
	--]]
	local v4 = m_Library.Save.Get();
	if not v4 then return end
	local v5 = 0;
	local v6 = m_Library.Shared.SortPets(v4, table.clone(v4.Pets));
	for key2, val2 in ipairs(v6) do
		local t_uid = val2.uid;
		local _ = val2.s;
		local t_hc = val2.hc;
		local v11 = m_Library.Directory.Pets[val2.id];
		local t_rarity = v11.rarity;
		if v11.isPremium or t_rarity == "Event" or t_rarity == "Exclusive" or t_rarity == "Secret" or t_rarity == "Mythical" or v11.isGift then continue end
		local Clone_ret = m_Library.Assets.UI.Inventory.Pet:Clone();
		m_Library.PetUI.Create(Clone_ret, t_uid);
		Clone_ret.LayoutOrder = key2;
		Clone_ret:SetAttribute("DirId", val2.id);
		Clone_ret:SetAttribute("Hardcore", t_hc or false);
		Clone_ret.Parent = t_FusePets.Holder;
		Clone_ret.Activated:Connect(function() -- Line: 177
			--[[
				Upvalues:
					[1] = bool1
					[2] = m_Library
					[3] = t_uid
					[4] = val2
					[5] = table1
			--]]
			if not bool1 then
				bool1 = true;
				local v18 = m_Library.Signal.Invoke("Is Trading Booth Pet", t_uid);
				if val2.l then
					m_Library.Message.New("This pet is locked! Unlock it before you can fuse it!");
				elseif v18 then
					m_Library.Message.New("This pet is currently in your trading booth! Remove it before you can fuse it!");
				elseif not m_Library.Functions.SearchArray(table1, t_uid) then
					Select(t_uid);
				else
					Deselect(t_uid);
				end
				bool1 = false;
			end
		end);
		m_Library.GUIFX.ButtonFX(Clone_ret);
		v5 = v5 + 1;
	end
	t_FusePets.Container.NoPets.Visible = v5 <= 0;
	Update();
	Scaling();
end
function Scaling() -- Line: 208
	--[[
		Upvalues:
			[1] = t_FusePets
			[2] = m_Library
	--]]
	local t_Holder = t_FusePets.Container.Holder;
	local UIGridLayout = t_Holder:FindFirstChildOfClass("UIGridLayout");
	local UIPadding = t_Holder:FindFirstChildOfClass("UIPadding");
	local v7 = m_Library.Functions.ResolutionScale();
	local v8 = (t_Holder.AbsoluteSize.X - t_Holder.ScrollBarThickness - UIPadding.PaddingLeft.Offset - UIPadding.PaddingRight.Offset) / (v7 <= 0.5 and 4 or v7 <= 1.1 and 5 or 6) - UIGridLayout.CellPadding.X.Offset;
	local udim2 = UDim2.new(0, v8, 0, v8);
	UIGridLayout.CellSize = udim2;
	UIGridLayout:ApplyLayout();
	t_Holder.CanvasSize = UDim2.new(0, UIGridLayout.AbsoluteContentSize.X, 0, UIGridLayout.AbsoluteContentSize.Y + 30);
end
function Clear() -- Line: 232
	--[[
		Upvalues:
			[1] = table1
			[2] = u2
			[3] = t_FusePets
	--]]
	table1 = {};
	u2 = false;
	for _, child3 in ipairs(t_FusePets.Holder:GetChildren()) do
		if child3.ClassName ~= "TextButton" then continue end
		child3:Destroy();
	end
end
t_FusePets.Side.Fuse.Activated:Connect(function() -- Line: 247
	--[[
		Upvalues:
			[1] = bool1
			[2] = bool2
			[3] = table1
			[4] = t_FuseMinPets
			[5] = u1
			[6] = m_Library
	--]]
	if not bool1 then
		bool1 = true;
		bool2 = true;
		if t_FuseMinPets <= #table1 then
			u1 = m_Library.Functions.DeepCopyUnsafe(table1);
			local v15 = m_Library.Message.New("Are you sure?", true);
			if v15 then
				Fuse();
			end
		end
		bool2 = false;
		bool1 = false;
	end
end);
t_FusePets.Close.Activated:Connect(function() -- Line: 269
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_FusePets
	--]]
	if not bool1 then
		bool1 = true;
		t_FusePets.Gui.Enabled = false;
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_FusePets.Close);
m_Library.GUIFX.ButtonFX(t_FusePets.Side.Fuse);
m_Library.Signal.Fired("Window Closed"):Connect(function(p3) -- Line: 285
	--[[
		Upvalues:
			[1] = t_FusePets
	--]]
	if p3 == t_FusePets.Gui then
		Clear();
	end
end);
m_Library.Signal.Fired("Window Opened"):Connect(function(p4) -- Line: 296
	--[[
		Upvalues:
			[1] = bool2
			[2] = t_FusePets
			[3] = m_Library
	--]]
	if bool2 then return end
	if p4 == t_FusePets.Gui then
		Clear();
		Setup();
		if t_FusePets.Gui.Enabled and m_Library.Variables.Console then
			print("Set selected obj");
			m_Library.GuiService.SelectedObject = m_Library.LocalPlayer.PlayerGui:FindFirstChild("FusePets"):FindFirstChild("Frame"):FindFirstChild("Container"):FindFirstChild("Holder");
		end
	end
end);
m_Library.Signal.Fired("Resolution Changed"):Connect(function() -- Line: 313
	--[[
		Upvalues:
			[1] = t_FusePets
	--]]
	if t_FusePets.Gui.Enabled then
		task.defer(function() -- Line: 315
			Scaling();
		end);
	end
end);
m_Library.Signal.Fired("Attempt Fuse"):Connect(function() -- Line: 321
	--[[
		Upvalues:
			[1] = bool1
			[2] = bool2
			[3] = table1
			[4] = t_FuseMinPets
			[5] = u1
			[6] = m_Library
	--]]
	if not bool1 then
		bool1 = true;
		bool2 = true;
		if t_FuseMinPets <= #table1 then
			u1 = m_Library.Functions.DeepCopyUnsafe(table1);
			local v16 = m_Library.Message.New("Are you sure?", true);
			if v16 then
				Fuse();
			end
		end
		bool2 = false;
		bool1 = false;
	end
end);
  -  Editar
  04:54:13.902    -  Editar
  04:54:13.902  ----- [2725] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Rainbow Machine -----  -  Editar
  04:54:13.902  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_Rainbow = m_Library.GUI.Rainbow;
local t_RainbowMachineOdds = m_Library.Shared.RainbowMachineOdds;
local Random_new_ret = Random.new();
local bool1 = false;
local table1 = {};
local bool2 = false;
local u1 = {};
local u2 = false;
local table2 = nil;
function Convert() -- Line: 26
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
			[3] = t_Rainbow
			[4] = table2
	--]]
	if #u1 > 0 then
		m_Library.Variables.UsingMachine = true;
		t_Rainbow.Gui.Enabled = false;
		if #u1 > 0 then
			local v22 = m_Library.PetCmds.Get(u1[1]);
			if not v22 then
				table2 = nil;
			else
				table2 = {
					PetId = v22.id,
					Hardcore = v22.hc,
					Amount = #u1
				};
			end
		end
		local v11, v12 = m_Library.Network.Invoke("Use Rainbow Machine", u1);
		m_Library.Functions.Wait(0.5);
		if v11 then
			m_Library.Audio.Play("rbxassetid://7009851850", script);
			m_Library.Message.New("\226\156\133 Success!");
		else
			m_Library.Message.New(v12 or "Something went wrong. Try again!");
		end
		m_Library.Variables.UsingMachine = false;
	end
end
function Select(p1) -- Line: 63
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u2
			[3] = t_RainbowMachineOdds
			[4] = table1
			[5] = Random_new_ret
	--]]
	local v1 = m_Library.PetCmds.Get(p1);
	if not p1 then return end
	if #table1 >= #(u2 and t_RainbowMachineOdds.Hardcore or t_RainbowMachineOdds.Normal) then return end
	for _, val1 in ipairs(table1) do
		local v13 = m_Library.PetCmds.Get(val1);
		if v1.id == v13.id and v1.hc == v13.hc then continue end
		return;
	end
	m_Library.Audio.Play("rbxassetid://7139317934", script, Random_new_ret:NextNumber(0.95, 1.05), 0.75);
	table.insert(table1, p1);
	u2 = v1.hc or false;
	Update();
end
function Deselect(p2) -- Line: 95
	--[[
		Upvalues:
			[1] = table1
			[2] = m_Library
			[3] = Random_new_ret
	--]]
	for key2, val2 in ipairs(table1) do
		if val2 ~= p2 then continue end
		m_Library.Audio.Play("rbxassetid://7139317909", script, Random_new_ret:NextNumber(0.95, 1.05), 0.75);
		table.remove(table1, key2);
		break;
	end
	Update();
end
function Update() -- Line: 110
	--[[
		Upvalues:
			[1] = table1
			[2] = m_Library
			[3] = t_Rainbow
			[4] = u2
			[5] = t_RainbowMachineOdds
	--]]
	local function UpdatePets() -- Line: 112
		--[[
			Upvalues:
				[1] = table1
				[2] = m_Library
				[3] = t_Rainbow
		--]]
		local v20 = table1[1] and m_Library.PetCmds.Get(table1[1]) or nil;
		for _, child6 in ipairs(t_Rainbow.Holder:GetChildren()) do
			if child6.ClassName ~= "TextButton" then continue end
			local t_Name = child6.Name;
			local Attribute = child6:GetAttribute("DirId");
			local Attribute2 = child6:GetAttribute("Locked");
			local Attribute3 = child6:GetAttribute("Hardcore");
			if not Attribute then continue end
			local v23 = not v20 or Attribute == v20.id and Attribute3 == v20.hc or false;
			child6.Visible = v23;
			local v24 = m_Library.Functions.SearchArray(table1, t_Name);
			child6.Equipped.Visible = v24;
			child6.BackgroundColor3 = v24 and Color3.fromRGB(69, 239, 69) or Color3.fromRGB(59, 177, 252);
			if not v23 or Attribute2 then continue end
			child6.BackgroundColor3 = v24 and Color3.fromRGB(69, 239, 69) or Color3.fromRGB(59, 177, 252);
			child6.PetIcon.ImageTransparency = 0;
		end
	end
	local function UpdateSide() -- Line: 144
		--[[
			Upvalues:
				[1] = table1
				[2] = t_Rainbow
				[3] = m_Library
				[4] = u2
				[5] = t_RainbowMachineOdds
		--]]
		local v21 = #table1 > 0;
		local CanRepeat_ret = CanRepeat();
		if v21 then
			t_Rainbow.Side.Ok.Visible = true;
			t_Rainbow.Side.Notice.Visible = true;
			t_Rainbow.Side.Repeat.Visible = false;
			t_Rainbow.Side.NoticeRepeat.Visible = false;
			t_Rainbow.Side.NoticeEmpty.Visible = false;
		elseif CanRepeat_ret then
			t_Rainbow.Side.Repeat.Visible = true;
			t_Rainbow.Side.NoticeRepeat.Visible = true;
			t_Rainbow.Side.Ok.Visible = false;
			t_Rainbow.Side.Notice.Visible = false;
			t_Rainbow.Side.NoticeEmpty.Visible = false;
		else
			t_Rainbow.Side.Ok.Visible = false;
			t_Rainbow.Side.Notice.Visible = false;
			t_Rainbow.Side.Repeat.Visible = false;
			t_Rainbow.Side.NoticeRepeat.Visible = false;
			t_Rainbow.Side.NoticeEmpty.Visible = true;
		end
		if m_Library.Variables.Console then
			t_Rainbow.Side.Ok.ButtonKeybind.Visible = true;
		else
			t_Rainbow.Side.Ok.ButtonKeybind.Visible = false;
		end
		if v21 then
			local v25 = m_Library.PetCmds.Get(table1[1]);
			if not v25 then return end
			local v26 = m_Library.Directory.Pets[v25.id];
			local v27 = u2 and t_RainbowMachineOdds.Hardcore or t_RainbowMachineOdds.Normal;
			local v28 = v27[math.min(#table1, #v27)];
			local t_chance = v28.chance;
			local t_cost = v28.cost;
			t_Rainbow.Side.CostFrame.Cost.Text = m_Library.Functions.Commas(t_cost);
			t_Rainbow.Side.Percent.Text = m_Library.Functions.FormatChance(t_chance / 100);
			if u2 then
				t_Rainbow.Side.Reward.Text = "For a Hardcore Rainbow " .. v26.name;
				return;
			end
			t_Rainbow.Side.Reward.Text = "For a Rainbow " .. v26.name;
			return;
		end
		t_Rainbow.Side.CostFrame.Cost.Text = "0";
		t_Rainbow.Side.Percent.Text = "0%";
		t_Rainbow.Side.Reward.Text = "";
	end
	UpdatePets();
	UpdateSide();
	Scaling();
end
function Setup() -- Line: 215
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_Rainbow
			[3] = bool1
			[4] = table1
	--]]
	local v4 = m_Library.Save.Get();
	if not v4 then return end
	local v5 = 0;
	local v6 = m_Library.Shared.SortPets(v4, table.clone(v4.Pets));
	for key3, val3 in ipairs(v6) do
		local t_uid = val3.uid;
		local _ = val3.s;
		local t_g = val3.g;
		local t_r = val3.r;
		local t_dm = val3.dm;
		local t_hc = val3.hc;
		local v14 = m_Library.Directory.Pets[val3.id];
		local t_rarity = v14.rarity;
		if v14.isPremium or not t_g or t_r or t_dm or t_rarity == "Event" or t_rarity == "Exclusive" or v14.isGift or val3.l then continue end
		local Clone_ret = m_Library.Assets.UI.Inventory.Pet:Clone();
		m_Library.PetUI.Create(Clone_ret, t_uid);
		Clone_ret.LayoutOrder = key3;
		Clone_ret:SetAttribute("DirId", val3.id);
		Clone_ret:SetAttribute("Hardcore", t_hc);
		Clone_ret.Parent = t_Rainbow.Holder;
		Clone_ret.Activated:Connect(function() -- Line: 252
			--[[
				Upvalues:
					[1] = bool1
					[2] = m_Library
					[3] = t_uid
					[4] = val3
					[5] = table1
			--]]
			if not bool1 then
				bool1 = true;
				local v29 = m_Library.Signal.Invoke("Is Trading Booth Pet", t_uid);
				if val3.l then
					m_Library.Message.New("This pet is locked! Unlock it before you can convert it to Rainbow!");
				elseif v29 then
					m_Library.Message.New("This pet is currently in your trading booth! Remove it before you can convert it to Rainbow!");
				elseif not m_Library.Functions.SearchArray(table1, t_uid) then
					Select(t_uid);
				else
					Deselect(t_uid);
				end
				bool1 = false;
			end
		end);
		m_Library.GUIFX.ButtonFX(Clone_ret);
		v5 = v5 + 1;
	end
	t_Rainbow.NoPets.Visible = v5 <= 0;
	Update();
	Scaling();
end
function Scaling() -- Line: 284
	--[[
		Upvalues:
			[1] = t_Rainbow
			[2] = m_Library
	--]]
	local t_Holder = t_Rainbow.Container.Holder;
	local UIGridLayout = t_Holder:FindFirstChildOfClass("UIGridLayout");
	local UIPadding = t_Holder:FindFirstChildOfClass("UIPadding");
	local v7 = m_Library.Functions.ResolutionScale();
	local v8 = (t_Holder.AbsoluteSize.X - t_Holder.ScrollBarThickness - UIPadding.PaddingLeft.Offset - UIPadding.PaddingRight.Offset) / (v7 <= 0.5 and 2 or v7 <= 1.1 and 3 or 4) - UIGridLayout.CellPadding.X.Offset;
	local udim2 = UDim2.new(0, v8, 0, v8);
	UIGridLayout.CellSize = udim2;
	UIGridLayout:ApplyLayout();
	t_Holder.CanvasSize = UDim2.new(0, UIGridLayout.AbsoluteContentSize.X, 0, UIGridLayout.AbsoluteContentSize.Y + 30);
end
function Clear() -- Line: 308
	--[[
		Upvalues:
			[1] = u2
			[2] = table1
			[3] = t_Rainbow
	--]]
	u2 = false;
	table1 = {};
	for _, child4 in ipairs(t_Rainbow.Holder:GetChildren()) do
		if child4.ClassName ~= "TextButton" then continue end
		child4:Destroy();
	end
end
function CanRepeat() -- Line: 320
	--[[
		Upvalues:
			[1] = table2
			[2] = m_Library
	--]]
	if not table2 then
		return false;
	end
	local v9 = m_Library.Save.Get();
	if not v9 then
		return false;
	end
	local v10 = m_Library.Shared.SortPets(v9, table.clone(v9.Pets));
	local table3 = {};
	for _, val5 in ipairs(v10) do
		local t_id = val5.id;
		local v15 = m_Library.Directory.Pets[val5.id];
		local t_g2 = val5.g;
		local t_r2 = val5.r;
		local t_dm2 = val5.dm;
		local t_hc2 = val5.hc;
		local t_rarity2 = v15.rarity;
		if v15.isPremium or not t_g2 or t_r2 or t_dm2 or t_rarity2 == "Event" or t_rarity2 == "Exclusive" or v15.isGift or val5.l or t_id ~= table2.PetId or t_hc2 ~= table2.Hardcore then continue end
		table.insert(table3, val5.uid);
		if #table3 ~= table2.Amount then continue end
		table2.RetryPets = table3;
		return true;
	end
	return false;
end
t_Rainbow.Side.Ok.Activated:Connect(function() -- Line: 367
	--[[
		Upvalues:
			[1] = bool1
			[2] = bool2
			[3] = u2
			[4] = t_RainbowMachineOdds
			[5] = table1
			[6] = u1
			[7] = m_Library
	--]]
	if not bool1 then
		bool1 = true;
		bool2 = true;
		local v16 = u2 and t_RainbowMachineOdds.Hardcore or t_RainbowMachineOdds.Normal;
		local t_chance2 = v16[math.min(#table1, #v16)].chance;
		u1 = m_Library.Functions.DeepCopyUnsafe(table1);
		local v17 = m_Library.Message.New("You have a " .. t_chance2 .. "% chance. Are you sure?", true);
		if v17 then
			Convert();
		end
		bool2 = false;
		bool1 = false;
	end
end);
t_Rainbow.Side.Repeat.Activated:Connect(function() -- Line: 392
	--[[
		Upvalues:
			[1] = bool1
			[2] = bool2
			[3] = table2
	--]]
	if not bool1 then
		bool1 = true;
		bool2 = true;
		if table2 and table2.RetryPets then
			for _, val7 in ipairs(table2.RetryPets) do
				Select(val7);
			end
		end
		bool2 = false;
		bool1 = false;
	end
end);
t_Rainbow.Close.Activated:Connect(function() -- Line: 426
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_Rainbow
	--]]
	if not bool1 then
		bool1 = true;
		t_Rainbow.Gui.Enabled = false;
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_Rainbow.Close);
m_Library.GUIFX.ButtonFX(t_Rainbow.Side.Ok);
m_Library.GUIFX.ButtonFX(t_Rainbow.Side.Repeat);
m_Library.Signal.Fired("Window Closed"):Connect(function(p3) -- Line: 443
	--[[
		Upvalues:
			[1] = bool2
			[2] = t_Rainbow
	--]]
	if bool2 then return end
	if p3 == t_Rainbow.Gui then
		Clear();
	end
end);
m_Library.Signal.Fired("Window Opened"):Connect(function(p4) -- Line: 454
	--[[
		Upvalues:
			[1] = bool2
			[2] = t_Rainbow
			[3] = m_Library
	--]]
	if bool2 then return end
	if p4 == t_Rainbow.Gui then
		Clear();
		Setup();
		if t_Rainbow.Gui.Enabled and m_Library.Variables.Console then
			print("Set selected obj");
			m_Library.GuiService.SelectedObject = m_Library.LocalPlayer.PlayerGui:FindFirstChild("Rainbow"):FindFirstChild("Frame"):FindFirstChild("Container"):FindFirstChild("Holder");
		end
	end
end);
m_Library.Signal.Fired("Resolution Changed"):Connect(function() -- Line: 471
	--[[
		Upvalues:
			[1] = t_Rainbow
	--]]
	if t_Rainbow.Gui.Enabled then
		task.defer(function() -- Line: 473
			Scaling();
		end);
	end
end);
m_Library.Signal.Fired("Attempt Rainbow"):Connect(function() -- Line: 479
	--[[
		Upvalues:
			[1] = table1
			[2] = bool1
			[3] = bool2
			[4] = u2
			[5] = t_RainbowMachineOdds
			[6] = u1
			[7] = m_Library
	--]]
	if #table1 <= 0 then return end
	if not bool1 then
		bool1 = true;
		bool2 = true;
		local v18 = u2 and t_RainbowMachineOdds.Hardcore or t_RainbowMachineOdds.Normal;
		local t_chance3 = v18[math.min(#table1, #v18)].chance;
		u1 = m_Library.Functions.DeepCopyUnsafe(table1);
		local v19 = m_Library.Message.New("You have a " .. t_chance3 .. "% chance. Are you sure?", true);
		if v19 then
			Convert();
		end
		bool2 = false;
		bool1 = false;
	end
end);
  -  Editar
  04:54:13.902    -  Editar
  04:54:13.902  ----- [2726] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Twiter Codes -----  -  Editar
  04:54:13.902  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_TwitterCodes = m_Library.GUI.TwitterCodes;
local bool1 = false;
function Redeem() -- Line: 18
	--[[
		Upvalues:
			[1] = t_TwitterCodes
			[2] = m_Library
	--]]
	t_TwitterCodes.Redeem.ImageColor3 = Color3.new(0.5, 0.5, 0.5);
	t_TwitterCodes.Redeem.TextLabel.Text = "(...)";
	local tostring_ret = tostring(t_TwitterCodes.Input.Text);
	if tostring_ret and tostring_ret ~= "" then
		local v1, v2 = m_Library.Network.Invoke("Redeem Twitter Code", tostring_ret);
		if not v1 then
			m_Library.Message.New(v2 or "Could not redeem");
		else
			m_Library.Audio.Play("rbxassetid://7055150312", script, 1, 1);
			m_Library.Message.New("\226\156\133 Successfully redeemed!");
		end
		t_TwitterCodes.Input.Text = "";
	end
	t_TwitterCodes.Redeem.ImageColor3 = Color3.new(1, 1, 1);
	t_TwitterCodes.Redeem.TextLabel.Text = "Redeem!";
end
m_Library.GUIFX.ButtonFX(t_TwitterCodes.Redeem);
t_TwitterCodes.Redeem.Activated:Connect(function() -- Line: 40
	--[[
		Upvalues:
			[1] = bool1
	--]]
	if not bool1 then
		bool1 = true;
		Redeem();
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_TwitterCodes.Close);
t_TwitterCodes.Close.Activated:Connect(function() -- Line: 50
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_TwitterCodes
	--]]
	if not bool1 then
		bool1 = true;
		t_TwitterCodes.Gui.Enabled = false;
		bool1 = false;
	end
end);
  -  Editar
  04:54:13.902    -  Editar
  04:54:13.902  ----- [2727] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Update Log -----  -  Editar
  04:54:13.902  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local table1 = {
	"\226\155\143\239\184\143 Diamond Mine!",
	"\240\159\146\142 Diamond Breakables!",
	"\226\156\168 Diamond Chest!",
	"\240\159\142\129 Diamond Loot Bags!",
	"\240\159\148\174 Diamond Enchants!",
	"\240\159\167\170 3x Diamonds Potion!",
	"\240\159\165\154 New Easter Huge!",
	"\240\159\143\134 New Rank!",
	"\240\159\144\190 Crystal Exclusives!",
	"\240\159\148\168 Bug Fixes!",
	"\240\159\147\133 Updates weekly!",
	"(Saturday 11am CDT)"
};
local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_UpdateLog = m_Library.GUI.UpdateLog;
local bool1 = false;
function Show() -- Line: 33
	--[[
		Upvalues:
			[1] = t_UpdateLog
			[2] = table1
			[3] = m_Library
	--]]
	t_UpdateLog.Desc.Text = "New Update! (" .. "April 15th, 2023" .. ")";
	for key1, val1 in ipairs(table1) do
		local Clone_ret = m_Library.Assets.UI.Changelog.Change:Clone();
		Clone_ret.Label.Text = val1;
		Clone_ret.LayoutOrder = key1;
		Clone_ret.Parent = t_UpdateLog.Changes;
	end
	local UIListLayout = t_UpdateLog.Changes:FindFirstChildOfClass("UIListLayout");
	local UIPadding = t_UpdateLog.Changes:FindFirstChildOfClass("UIPadding");
	UIListLayout:ApplyLayout();
	t_UpdateLog.Changes.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + UIPadding.PaddingTop.Offset + UIPadding.PaddingBottom.Offset);
	t_UpdateLog.Gui.Enabled = true;
end
function DoShow() -- Line: 52
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v1 = m_Library.Save.Get();
	if v1.LastUpdateLog == m_Library.Shared.UpdateLogId then return end
	if m_Library.Variables.PickingStarter or not v1.PickedStarter then return end
	return true;
end
function Close() -- Line: 67
	--[[
		Upvalues:
			[1] = t_UpdateLog
			[2] = m_Library
	--]]
	t_UpdateLog.Gui.Enabled = false;
	m_Library.Audio.Play(4233372211, script, 1, 0.65);
	m_Library.Network.Fire("Read Changelog");
end
if DoShow() then
	Show();
end
t_UpdateLog.Close.Activated:Connect(function() -- Line: 82
	--[[
		Upvalues:
			[1] = bool1
	--]]
	if not bool1 then
		bool1 = true;
		Close();
		bool1 = false;
	end
end);
t_UpdateLog.Ok.Activated:Connect(function() -- Line: 91
	--[[
		Upvalues:
			[1] = bool1
	--]]
	if not bool1 then
		bool1 = true;
		Close();
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_UpdateLog.Ok);
m_Library.GUIFX.ButtonFX(t_UpdateLog.Close);
  -  Editar
  04:54:13.902    -  Editar
  04:54:13.902  ----- [2728] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Diamonds Rain Animation -----  -  Editar
  04:54:13.903  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local table1 = {
	m_Library.Directory.Products["Tiny Diamonds"].ID,
	m_Library.Directory.Products["Medium Diamonds"].ID,
	m_Library.Directory.Products["Large Diamonds"].ID,
	m_Library.Directory.Products["Massive Diamonds"].ID
};
local Random_new_ret = Random.new();
local ScreenGui = Instance.new("ScreenGui");
ScreenGui.Name = "Diamonds Animation";
ScreenGui.Parent = m_Library.Player.PlayerGui();
function RainDiamonds(p1) -- Line: 29
	--[[
		Upvalues:
			[1] = m_Library
			[2] = Random_new_ret
			[3] = ScreenGui
	--]]
	local u1 = p1 or 4;
	local os_clock_ret = os.clock();
	local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 32
		--[[
			Upvalues:
				[1] = os_clock_ret
				[2] = u1
				[3] = m_Library
				[4] = Random_new_ret
				[5] = ScreenGui
		--]]
		while os.clock() - os_clock_ret <= u1 do
			local Clone_ret = m_Library.Assets.UI["Diamond Rain"].Diamond:Clone();
			local NextNumber_ret = Random_new_ret:NextNumber(0, 1);
			local NextNumber_ret2 = Random_new_ret:NextNumber(0.075, 0.175);
			Clone_ret.Position = UDim2.new(NextNumber_ret, 0, -0.1, 0);
			Clone_ret.Rotation = Random_new_ret:NextInteger(-360, 360);
			Clone_ret.Size = UDim2.new(NextNumber_ret2, 0, NextNumber_ret2, 0);
			Clone_ret.Parent = ScreenGui;
			local v3 = Clone_ret.Rotation + Random_new_ret:NextInteger(-30, 30);
			local udim2 = UDim2.new(NextNumber_ret + Random_new_ret:NextNumber(-0.1, 0.1), 0, 1.1, 0);
			m_Library.Functions.Tween(Clone_ret, {
				Position = udim2,
				Rotation = v3
			}, {
				Random_new_ret:NextNumber(0.3, 1),
				"Linear"
			}).Completed:Connect(function() -- Line: 46
				--[[
					Upvalues:
						[1] = Clone_ret
				--]]
				Clone_ret:Destroy();
			end);
			m_Library.Functions.Wait(Random_new_ret:NextNumber(0, 0.03));
		end
	end);
	coroutine_wrap_ret();
end
m_Library.Signal.Fired("Rain Diamonds"):Connect(function(p2) -- Line: 56
	RainDiamonds(p2);
end);
m_Library.Network.Fired("Rain Diamonds"):Connect(function(p3) -- Line: 60
	RainDiamonds(p3);
end);
m_Library.Network.Fired("Product Bought"):Connect(function(p4) -- Line: 65
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table1
	--]]
	if m_Library.Functions.SearchArray(table1, p4) then
		RainDiamonds(3.5);
	end
end);
m_Library.Network.Fired("Shower Diamonds"):Connect(function(p5, p6, p7, p8) -- Line: 71
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.Audio.Play(11648890524, p5, 1, 1, 80);
	local t_Booth = m_Library.Assets.Particles.Booth;
	local u2 = m_Library.Functions.CreateParticleHost(p5);
	local Clone_ret2 = t_Booth.Diamonds:Clone();
	Clone_ret2.Rate = Clone_ret2.Rate * p6;
	local v1 = Vector2.new(Clone_ret2.Speed.Min, Clone_ret2.Speed.Max);
	if p7 then
		v1 = v1 * p7;
	end
	Clone_ret2.Speed = NumberRange.new(v1.X, v1.Y);
	Clone_ret2.Parent = u2;
	local v2 = p8 * 1;
	task.delay(v2, function() -- Line: 94
		--[[
			Upvalues:
				[1] = Clone_ret2
				[2] = p8
				[3] = u2
		--]]
		Clone_ret2.Enabled = false;
		task.delay(p8 * 10, function() -- Line: 96
			--[[
				Upvalues:
					[1] = u2
			--]]
			u2:Destroy();
		end);
	end);
end);
  -  Editar
  04:54:13.903    -  Editar
  04:54:13.903  ----- [2729] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Enchant Pets -----  -  Editar
  04:54:13.903  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_EnchantPets = m_Library.GUI.EnchantPets;
local t_EnchantCost = m_Library.Shared.EnchantCost;
local t_EnchantHardcoreCost = m_Library.Shared.EnchantHardcoreCost;
local Random_new_ret = Random.new();
local bool1 = false;
local table1 = {};
local u1 = false;
local bool2 = false;
local bool3 = false;
local table2 = {};
local table3 = {};
function GetEnchants() -- Line: 29
	--[[
		Upvalues:
			[1] = table3
			[2] = m_Library
	--]]
	if #table3 > 0 then
		return table3;
	end
	for _, val1 in pairs(m_Library.Directory.Powers) do
		table.insert(table3, val1);
	end
	table.sort(table3, function(p6, p7) -- Line: 38
		return p6.dropWeight < p7.dropWeight;
	end);
	return table3;
end
function UpdateEnchantButton() -- Line: 46
	--[[
		Upvalues:
			[1] = bool3
			[2] = t_EnchantPets
	--]]
	if bool3 then
		t_EnchantPets.Side.Enchant.TextLabel.Text = "Stop";
		t_EnchantPets.Side.Enchant.HoverImage = "rbxassetid://7045637564";
		t_EnchantPets.Side.Enchant.Image = "rbxassetid://7045637481";
		return;
	end
	t_EnchantPets.Side.Enchant.TextLabel.Text = "Enchant";
	t_EnchantPets.Side.Enchant.HoverImage = "rbxassetid://6903539993";
	t_EnchantPets.Side.Enchant.Image = "rbxassetid://6869680115";
end
function Enchant() -- Line: 59
	--[[
		Upvalues:
			[1] = table1
			[2] = m_Library
			[3] = t_EnchantPets
			[4] = bool3
			[5] = table2
	--]]
	if #table1 > 0 then
		m_Library.Variables.UsingMachine = true;
		t_EnchantPets.Gui.Enabled = false;
		local v12 = {};
		if bool3 then
			for _, val7 in ipairs(table1) do
				local v25 = m_Library.PetCmds.Get(val7);
				if HasAutoEnchant(v25) then continue end
				table.insert(v12, val7);
			end
			if #v12 == 0 then
				m_Library.Message.New("These pets already have the desired enchant!");
				bool3 = false;
				UpdateEnchantButton();
				m_Library.Variables.UsingMachine = false;
				return;
			end
		else
			v12 = table1;
		end
		local v13, v14 = m_Library.Network.Invoke("Enchant Pets", v12, bool3);
		if v13 then
			m_Library.Functions.Wait(2.5);
		else
			m_Library.Message.New(v14 or "Something went wrong. Try again!");
		end
		UpdateEnchantButton();
		m_Library.Variables.UsingMachine = false;
		if bool3 and #table1 > 0 and #table2 > 0 then
			local v21 = 0;
			for _, val8 in ipairs(table1) do
				local v26 = m_Library.PetCmds.Get(val8);
				v21 = v21 + (HasAutoEnchant(v26) and 1 or 0);
			end
			if #table1 <= v21 then
				bool3 = false;
				UpdateEnchantButton();
			end
		end
		if not bool3 then return end
		task.delay(2, function() -- Line: 120
			--[[
				Upvalues:
					[1] = bool3
					[2] = table1
					[3] = t_EnchantPets
					[4] = table2
			--]]
			if not bool3 then return end
			if #table1 <= 0 or not t_EnchantPets.Gui.Enabled or #table2 == 0 then
				bool3 = false;
				UpdateEnchantButton();
				return;
			end
			Enchant();
		end);
	end
end
function Select(p1) -- Line: 137
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table1
			[3] = Random_new_ret
			[4] = u1
	--]]
	local v1 = m_Library.PetCmds.Get(p1);
	if not p1 then return end
	local v2 = m_Library.Signal.Invoke("Is Trading Booth Pet", p1);
	if v2 then
		m_Library.Message.New("This pet is currently in your trading booth! Remove it before you can enchant it!");
		return;
	end
	if #table1 >= 3 then return end
	m_Library.Audio.Play("rbxassetid://7139317934", script, Random_new_ret:NextNumber(0.95, 1.05), 0.75);
	table.insert(table1, p1);
	u1 = v1.hc or false;
	Update();
end
function Deselect(p2) -- Line: 163
	--[[
		Upvalues:
			[1] = m_Library
			[2] = Random_new_ret
			[3] = table1
			[4] = u1
	--]]
	m_Library.Audio.Play("rbxassetid://7139317909", script, Random_new_ret:NextNumber(0.95, 1.05), 0.75);
	m_Library.Functions.RemoveTable(table1, p2);
	u1 = false;
	Update();
end
function Update() -- Line: 173
	--[[
		Upvalues:
			[1] = t_EnchantPets
			[2] = bool1
			[3] = m_Library
			[4] = table2
			[5] = table1
	--]]
	local function UpdateAuto() -- Line: 175
		--[[
			Upvalues:
				[1] = t_EnchantPets
				[2] = bool1
				[3] = m_Library
				[4] = table2
		--]]
		local t_Holder = t_EnchantPets.Auto.Container.Holder;
		local t_AutoEnchantButton = t_Holder.AutoEnchantButton;
		local Enchants = GetEnchants();
		t_AutoEnchantButton.Visible = false;
		for _, val5 in ipairs(Enchants) do
			for _, val12 in ipairs(val5.tiers) do
				if t_Holder:FindFirstChild(val12.title) or not val5.canDrop then continue end
				local Clone_ret = t_AutoEnchantButton:Clone();
				Clone_ret.Name = val12.title;
				Clone_ret.Label.Text = val12.title;
				Clone_ret.ImageColor3 = Color3.new(0.5, 0.5, 0.5);
				Clone_ret.Visible = true;
				Clone_ret.Parent = t_Holder;
				Clone_ret.Activated:Connect(function() -- Line: 197
					--[[
						Upvalues:
							[1] = bool1
							[2] = m_Library
							[3] = table2
							[4] = val12
							[5] = Clone_ret
					--]]
					if not bool1 then
						bool1 = true;
						if m_Library.Functions.SearchArray(table2, val12.title) then
							m_Library.Functions.RemoveTable(table2, val12.title);
							Clone_ret.ImageColor3 = Color3.new(0.5, 0.5, 0.5);
						else
							table.insert(table2, val12.title);
							Clone_ret.ImageColor3 = Color3.new(1, 1, 1);
						end
						bool1 = false;
					end
				end);
				m_Library.GUIFX.ButtonFX(Clone_ret);
			end
		end
		local function Scrolling() -- Line: 217
			--[[
				Upvalues:
					[1] = t_Holder
			--]]
			local UIListLayout = t_Holder:FindFirstChildOfClass("UIListLayout");
			local UIPadding = t_Holder:FindFirstChildOfClass("UIPadding");
			UIListLayout:ApplyLayout();
			t_Holder.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + UIPadding.PaddingBottom.Offset + UIPadding.PaddingTop.Offset);
		end
		Scrolling();
	end
	local function UpdatePets() -- Line: 228
		--[[
			Upvalues:
				[1] = t_EnchantPets
				[2] = m_Library
				[3] = table1
		--]]
		for _, child6 in ipairs(t_EnchantPets.Holder:GetChildren()) do
			if child6.ClassName ~= "TextButton" then continue end
			local t_Name = child6.Name;
			local v24 = m_Library.Functions.SearchArray(table1, t_Name);
			child6.Equipped.Visible = v24;
			child6.BackgroundColor3 = v24 and Color3.fromRGB(69, 239, 69) or Color3.fromRGB(59, 177, 252);
			local Attribute = child6:GetAttribute("Locked");
			if Attribute then continue end
			child6.BackgroundColor3 = v24 and Color3.fromRGB(69, 239, 69) or Color3.fromRGB(59, 177, 252);
			child6.PetIcon.ImageTransparency = 0;
		end
	end
	local function UpdateSide() -- Line: 249
		--[[
			Upvalues:
				[1] = table1
				[2] = m_Library
				[3] = t_EnchantPets
		--]]
		local v18 = #table1 > 0;
		local v19 = GetCost();
		if m_Library.Variables.Console then
			t_EnchantPets.Side.Enchant.ButtonKeybind.Visible = true;
		else
			t_EnchantPets.Side.Enchant.ButtonKeybind.Visible = false;
		end
		local function HasPerk() -- Line: 259
			--[[
				Upvalues:
					[1] = m_Library
			--]]
			local v27 = m_Library.Save.Get();
			if not v27 then
				return false;
			end
			local t_Enchanting = v27.Mastery.Enchanting;
			if t_Enchanting and m_Library.Shared.MasteryXPToLevel(t_Enchanting) >= 99 then
				return true;
			end
			return false;
		end
		local v20 = m_Library.Save.Get();
		local bool4;
		if not v20 then
			bool4 = false;
		else
			local t_Enchanting2 = v20.Mastery.Enchanting;
			if t_Enchanting2 and m_Library.Shared.MasteryXPToLevel(t_Enchanting2) >= 99 then
				bool4 = true;
			else
				bool4 = false;
			end
		end
		if bool4 then
			v19 = math.round(v19 * 0.75);
		end
		t_EnchantPets.Side.Enchant.ImageColor3 = v18 and Color3.new(1, 1, 1) or Color3.new(0.5, 0.5, 0.5);
		t_EnchantPets.Side.CostFrame.Cost.Text = m_Library.Functions.Commas(v19);
	end
	UpdateAuto();
	UpdatePets();
	UpdateSide();
	Scaling();
end
function Setup() -- Line: 291
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_EnchantPets
			[3] = bool1
			[4] = table1
	--]]
	local v6 = m_Library.Save.Get();
	if not v6 then return end
	local v7 = 0;
	local v8 = m_Library.Shared.SortPets(v6, table.clone(v6.Pets));
	for key2, val2 in ipairs(v8) do
		local t_uid = val2.uid;
		local _ = val2.s;
		local v15 = m_Library.Directory.Pets[val2.id];
		local t_rarity = v15.rarity;
		if v15.isPremium or t_rarity == "Secret" or t_rarity == "Mythical" or t_rarity == "Event" or t_rarity == "Exclusive" or v15.isGift then continue end
		local Clone_ret2 = m_Library.Assets.UI.Inventory.Pet:Clone();
		m_Library.PetUI.Create(Clone_ret2, t_uid);
		Clone_ret2.LayoutOrder = key2;
		Clone_ret2:SetAttribute("DirId", val2.id);
		Clone_ret2.Parent = t_EnchantPets.Holder;
		Clone_ret2.Activated:Connect(function() -- Line: 319
			--[[
				Upvalues:
					[1] = bool1
					[2] = m_Library
					[3] = table1
					[4] = t_uid
			--]]
			if not bool1 then
				bool1 = true;
				if not m_Library.Functions.SearchArray(table1, t_uid) then
					Select(t_uid);
				else
					Deselect(t_uid);
				end
				bool1 = false;
			end
		end);
		m_Library.GUIFX.ButtonFX(Clone_ret2);
		v7 = v7 + 1;
	end
	t_EnchantPets.Container.NoPets.Visible = v7 <= 0;
	Update();
	Scaling();
end
function Scaling() -- Line: 343
	--[[
		Upvalues:
			[1] = t_EnchantPets
			[2] = m_Library
	--]]
	local t_Holder2 = t_EnchantPets.Container.Holder;
	local UIGridLayout = t_Holder2:FindFirstChildOfClass("UIGridLayout");
	local UIPadding2 = t_Holder2:FindFirstChildOfClass("UIPadding");
	local v9 = m_Library.Functions.ResolutionScale();
	local v10 = (t_Holder2.AbsoluteSize.X - t_Holder2.ScrollBarThickness - UIPadding2.PaddingLeft.Offset - UIPadding2.PaddingRight.Offset) / (v9 <= 0.5 and 4 or v9 <= 1.1 and 5 or 6) - UIGridLayout.CellPadding.X.Offset;
	local udim2 = UDim2.new(0, v10, 0, v10);
	UIGridLayout.CellSize = udim2;
	UIGridLayout:ApplyLayout();
	t_Holder2.CanvasSize = UDim2.new(0, UIGridLayout.AbsoluteContentSize.X, 0, UIGridLayout.AbsoluteContentSize.Y + 30);
end
function Clear() -- Line: 367
	--[[
		Upvalues:
			[1] = t_EnchantPets
	--]]
	for _, child3 in ipairs(t_EnchantPets.Holder:GetChildren()) do
		if child3.ClassName ~= "TextButton" then continue end
		child3:Destroy();
	end
end
function HasAutoEnchant(p3) -- Line: 378
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table2
	--]]
	if p3 then
		local t_powers = p3.powers;
		if t_powers then
			for _, val9 in ipairs(t_powers) do
				if not m_Library.Functions.SearchArray(table2, m_Library.Directory.Powers[val9[1]].tiers[val9[2]].title) then continue end
				return true;
			end
		end
	end
	return false;
end
function GetCost() -- Line: 397
	--[[
		Upvalues:
			[1] = table1
			[2] = m_Library
			[3] = t_EnchantHardcoreCost
			[4] = t_EnchantCost
	--]]
	local v11 = 0;
	for _, val4 in ipairs(table1) do
		local v16 = m_Library.PetCmds.Get(val4);
		if not v16 then continue end
		v11 = v11 + (v16.hc and t_EnchantHardcoreCost or t_EnchantCost);
	end
	return v11;
end
t_EnchantPets.Side.Enchant.Activated:Connect(function() -- Line: 415
	--[[
		Upvalues:
			[1] = bool1
			[2] = bool2
			[3] = bool3
			[4] = table1
			[5] = m_Library
			[6] = table2
	--]]
	if not bool1 then
		bool1 = true;
		bool2 = true;
		if bool3 then
			bool3 = false;
			UpdateEnchantButton();
			bool2 = false;
			bool1 = false;
			return;
		end
		if #table1 > 0 then
			local str1 = "Are you sure?";
			for _, val10 in ipairs(table1) do
				local v28 = m_Library.PetCmds.Get(val10);
				if not v28 or not v28.powers or #v28.powers <= 0 then continue end
				str1 = "Are you sure? Enchantments will be replaced.";
			end
			local v22 = m_Library.Message.New(str1, true);
			if v22 then
				if #table2 > 0 then
					bool3 = true;
					UpdateEnchantButton();
				end
				Enchant();
			end
		end
		bool2 = false;
		bool1 = false;
	end
end);
t_EnchantPets.Close.Activated:Connect(function() -- Line: 463
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_EnchantPets
	--]]
	if not bool1 then
		bool1 = true;
		t_EnchantPets.Gui.Enabled = false;
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_EnchantPets.Close);
m_Library.GUIFX.ButtonFX(t_EnchantPets.Side.Enchant);
m_Library.Signal.Fired("Window Closed"):Connect(function(p4) -- Line: 479
	--[[
		Upvalues:
			[1] = t_EnchantPets
	--]]
	if p4 == t_EnchantPets.Gui then
		Clear();
	end
end);
m_Library.Signal.Fired("Window Opened"):Connect(function(p5) -- Line: 490
	--[[
		Upvalues:
			[1] = bool2
			[2] = t_EnchantPets
			[3] = m_Library
	--]]
	if bool2 then return end
	if p5 == t_EnchantPets.Gui then
		Clear();
		Setup();
		if t_EnchantPets.Gui.Enabled and m_Library.Variables.Console then
			m_Library.GuiService.SelectedObject = m_Library.LocalPlayer.PlayerGui:FindFirstChild("EnchantPets"):FindFirstChild("Frame"):FindFirstChild("Container"):FindFirstChild("Holder");
		end
		m_Library.Audio.Play("rbxassetid://7216322559", script, 1, 0.5);
	end
end);
m_Library.Signal.Fired("Resolution Changed"):Connect(function() -- Line: 508
	--[[
		Upvalues:
			[1] = t_EnchantPets
	--]]
	if t_EnchantPets.Gui.Enabled then
		task.defer(function() -- Line: 510
			Scaling();
		end);
	end
end);
m_Library.Signal.Fired("Attempt Enchant"):Connect(function() -- Line: 517
	--[[
		Upvalues:
			[1] = table1
			[2] = bool1
			[3] = bool2
			[4] = m_Library
			[5] = table2
			[6] = bool3
	--]]
	if #table1 <= 0 then return end
	if not bool1 then
		bool1 = true;
		bool2 = true;
		if #table1 > 0 then
			local str2 = "Are you sure?";
			for _, val11 in ipairs(table1) do
				local v29 = m_Library.PetCmds.Get(val11);
				if not v29 or not v29.powers or #v29.powers <= 0 then continue end
				str2 = "Are you sure? Enchantments will be replaced.";
			end
			local v23 = m_Library.Message.New(str2, true);
			if v23 then
				if #table2 > 0 then
					bool3 = true;
					UpdateEnchantButton();
				end
				Enchant();
			end
		end
		bool2 = false;
		bool1 = false;
	end
end);
  -  Editar
  04:54:13.903    -  Editar
  04:54:13.903  ----- [2730] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Auto Settings -----  -  Editar
  04:54:13.903  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_AutoSettings = m_Library.GUI.AutoSettings;
local AutoSettings = m_Library.GUI.Main.Left.Tools:FindFirstChild("AutoSettings");
local t_ID = m_Library.Directory.Gamepasses["Auto Hatch"].ID;
local bool1 = false;
function ToggleRarity(p1) -- Line: 20
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v1 = m_Library.Save.Get();
	if not v1 then return end
	assert(v1);
	m_Library.Audio.Play("rbxassetid://7004248320", script, 1, 0.5);
	local v2 = v1.AutoDelete[p1] == nil and true or not v1.AutoDelete[p1];
	local v3 = v1.AutoDelete[p1];
	v1.AutoDelete[p1] = v2;
	UpdateRaritys();
	local v4, _, v5 = m_Library.Network.Invoke("Toggle Auto Delete", p1);
	if v4 then
		v1.AutoDelete[p1] = v5;
		UpdateRaritys();
		return;
	end
	if v1.AutoDelete[p1] == v2 then
		v1.AutoDelete[p1] = v3;
		UpdateRaritys();
	end
end
function UpdateRaritys() -- Line: 52
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_AutoSettings
	--]]
	local v6 = m_Library.Save.Get();
	if not v6 then return end
	for _, child5 in ipairs(t_AutoSettings.Container:GetChildren()) do
		if not child5:GetAttribute("AutoDelete") then continue end
		local ImageButton = child5:FindFirstChildOfClass("ImageButton");
		if not ImageButton or not m_Library.Shared.PetRarityNumbers[ImageButton.Name] then continue end
		local v24 = v6.AutoDelete[ImageButton.Name];
		ImageButton.Image = v24 and "rbxassetid://7045637481" or "rbxassetid://7045637286";
		ImageButton.HoverImage = v24 and "rbxassetid://7045637564" or "rbxassetid://7045637411";
		ImageButton.Label.Text = v24 and "Delete" or "Keep";
	end
	local v7 = false;
	for _, val6 in pairs(v6.AutoDelete) do
		v7 = val6 or v7;
	end
	m_Library.Variables.AutoDeleteEnabled = v7;
end
for _, child1 in ipairs(t_AutoSettings.Container:GetChildren()) do
	if not child1:GetAttribute("AutoDelete") then continue end
	local ImageButton6 = child1:FindFirstChildOfClass("ImageButton");
	m_Library.GUIFX.ButtonFX(ImageButton6);
	ImageButton6.Activated:Connect(function() -- Line: 87
		--[[
			Upvalues:
				[1] = bool1
				[2] = ImageButton6
		--]]
		if not bool1 then
			bool1 = true;
			ToggleRarity(ImageButton6.Name);
			bool1 = false;
		end
	end);
end
function UpdateAutoHatch() -- Line: 101
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_ID
			[3] = t_AutoSettings
	--]]
	local v8 = m_Library.Gamepasses.Owns(t_ID);
	if not v8 then
		local v25, v26 = m_Library.Functions.GetPrice(t_ID);
		local t_Robux = t_AutoSettings.Container.Locked.PriceFrame.Buy.Robux;
		if v26 and v25 > 0 then
			t_Robux.Text = m_Library.Functions.Commas(v25);
		else
			t_Robux.Text = "???";
		end
	end
	t_AutoSettings.Container.Locked.Visible = not v8;
	for _, child7 in ipairs(t_AutoSettings.Container:GetChildren()) do
		if not child7:GetAttribute("AutoHatch") then continue end
		child7.Visible = v8;
	end
	local v9 = m_Library.Save.Get();
    if not v9 then return end
    if not v9.AutoHatchSettings then return end
	local t_StopOnFailure = v9.AutoHatchSettings.StopOnFailure;
	local t_TripleEggs = v9.AutoHatchSettings.TripleEggs;
	local t_OctupleEggs = v9.AutoHatchSettings.OctupleEggs;
	for _, child8 in ipairs(t_AutoSettings.Container:GetChildren()) do
		if not child8:GetAttribute("AutoHatch") then continue end
		local ImageButton2 = child8:FindFirstChildOfClass("ImageButton");
		local v27 = nil;
		if ImageButton2.Name == "StopOnFailure" then
			v27 = t_StopOnFailure;
		elseif ImageButton2.Name == "Enabled" then
			v27 = true;
		elseif ImageButton2.Name == "TripleEggs" then
			v27 = t_TripleEggs;
		elseif ImageButton2.Name == "OctupleEggs" then
			v27 = t_OctupleEggs;
		end
		ImageButton2.Label.Text = v27 and "On" or "Off";
		ImageButton2.Image = v27 and "rbxassetid://7045637286" or "rbxassetid://7045637481";
		ImageButton2.HoverImage = v27 and "rbxassetid://7045637411" or "rbxassetid://7045637564";
	end
	UpdateScrolling();
end
function ToggleAutoHatchSetting(p2) -- Line: 152
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v10 = m_Library.Save.Get();
	if not v10 then return end
	assert(v10);
	m_Library.Audio.Play("rbxassetid://7004248320", script, 1, 0.5);
    local v11 = m_Library.Functions.DeepCopyUnsafe(v10.AutoHatchSettings);
	if not v10.AutoHatchSettings[p2] then
		v10.AutoHatchSettings[p2] = false;
	end
	v10.AutoHatchSettings[p2] = not v10.AutoHatchSettings[p2];
	if p2 == "OctupleEggs" and v10.AutoHatchSettings[p2] then
		v10.AutoHatchSettings.TripleEggs = false;
	end
	if p2 == "TripleEggs" and v10.AutoHatchSettings[p2] then
		v10.AutoHatchSettings.OctupleEggs = false;
	end
	local v12 = m_Library.Functions.DeepCopyUnsafe(v10.AutoHatchSettings);
	UpdateAutoHatch();
	UpdateAlwaysKeep();
	local v13, _, v14 = m_Library.Network.Invoke("Toggle Auto Hatch Setting", p2);
	if v13 then
		v10.AutoHatchSettings = v14;
		UpdateAutoHatch();
		UpdateAlwaysKeep();
		return;
	end
	if m_Library.Functions.DeepEqualsUnsafe(v10.AutoHatchSettings, v12) then
		v10.AutoHatchSettings = v11;
		UpdateAutoHatch();
		UpdateAlwaysKeep();
	end
end
local t_Buy = t_AutoSettings.Container.Locked.PriceFrame.Buy;
m_Library.GUIFX.ButtonFX(t_Buy);
t_Buy.Activated:Connect(function() -- Line: 200
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
			[3] = t_ID
	--]]
	if not bool1 then
		bool1 = true;
		m_Library.Shared.PromptPurchase(t_ID);
		bool1 = false;
	end
end);
for _, child2 in ipairs(t_AutoSettings.Container:GetChildren()) do
	if not child2:GetAttribute("AutoHatch") then continue end
	local ImageButton5 = child2:FindFirstChildOfClass("ImageButton");
	m_Library.GUIFX.ButtonFX(ImageButton5);
	ImageButton5.Activated:Connect(function() -- Line: 217
		--[[
			Upvalues:
				[1] = bool1
				[2] = ImageButton5
		--]]
		if not bool1 then
			bool1 = true;
			ToggleAutoHatchSetting(ImageButton5.Name);
			bool1 = false;
		end
	end);
end
function UpdateAlwaysKeep() -- Line: 230
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_AutoSettings
	--]]
	local v15 = m_Library.Save.Get();
    if not v15 then return end
    if not v15.AutoHatchSettings then return end
	local v16 = v15.AutoHatchSettings.AlwaysKeep;
	if not v16 then
		local table1 = {
			GoldPets = "Exclusive",
			RainbowPets = "Exclusive",
			ShinyPets = "Exclusive"
		};
		v16 = table1;
	end
	for _, child9 in ipairs(t_AutoSettings.Container:GetChildren()) do
		if not child9:GetAttribute("AlwaysKeep") then continue end
		local ImageButton3 = child9:FindFirstChildOfClass("ImageButton");
		if not ImageButton3 then continue end
		ImageButton3.Label.Text = v16[ImageButton3.Name] or "Basic";
	end
end
local table2 = {};
for key3, val3 in pairs(m_Library.Shared.PetRarityNumbers) do
	table2[val3] = key3;
end
function ToggleAlwaysKeepSetting(p3) -- Line: 269
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table2
	--]]
	local v17 = m_Library.Save.Get();
	if not v17 then return end
	assert(v17);
	m_Library.Audio.Play("rbxassetid://7004248320", script, 1, 0.5);
	local v18 = m_Library.Functions.DeepCopyUnsafe(v17.AutoHatchSettings);
	if not v17.AutoHatchSettings.AlwaysKeep then
		v17.AutoHatchSettings.AlwaysKeep = {
			GoldPets = "Exclusive",
			RainbowPets = "Exclusive",
			ShinyPets = "Exclusive"
		};
	end
	local v19 = m_Library.Shared.PetRarityNumbers[v17.AutoHatchSettings.AlwaysKeep[p3]];
	if v19 < 8 then
		v19 = v19 + 1;
	elseif v19 == 8 then
		v19 = 1;
	end
	local v20 = table2[v19];
	v17.AutoHatchSettings.AlwaysKeep[p3] = v20;
	local v21 = m_Library.Functions.DeepCopyUnsafe(v17.AutoHatchSettings);
	UpdateAutoHatch();
	UpdateAlwaysKeep();
	local v22, _, v23 = m_Library.Network.Invoke("Toggle Always Keep Setting", p3);
	if v22 then
		v17.AutoHatchSettings = v23;
		UpdateAutoHatch();
		UpdateAlwaysKeep();
		return;
	end
    if m_Library.Functions.DeepEqualsUnsafe(v17.AutoHatchSettings, v21) then
		v17.AutoHatchSettings = v18;
		UpdateAutoHatch();
		UpdateAlwaysKeep();
	end
end
for _, child4 in ipairs(t_AutoSettings.Container:GetChildren()) do
	if not child4:GetAttribute("AlwaysKeep") then continue end
	local ImageButton4 = child4:FindFirstChildOfClass("ImageButton");
	m_Library.GUIFX.ButtonFX(ImageButton4);
	ImageButton4.Activated:Connect(function() -- Line: 327
		--[[
			Upvalues:
				[1] = bool1
				[2] = ImageButton4
		--]]
		if not bool1 then
			bool1 = true;
			ToggleAlwaysKeepSetting(ImageButton4.Name);
			bool1 = false;
		end
	end);
end
function UpdateSideButton() -- Line: 340
	--[[
		Upvalues:
			[1] = m_Library
			[2] = AutoSettings
	--]]
	AutoSettings.BackgroundColor3 = m_Library.Variables.AutoDeleteEnabled and Color3.fromRGB(103, 255, 103) or Color3.fromRGB(59, 177, 252);
end
function UpdateScrolling() -- Line: 346
	--[[
		Upvalues:
			[1] = t_AutoSettings
	--]]
	local t_Container = t_AutoSettings.Gui.Frame.Container;
	local UIListLayout = t_Container:FindFirstChildOfClass("UIListLayout");
	local UIPadding = t_Container:FindFirstChildOfClass("UIPadding");
	t_Container.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + UIPadding.PaddingTop.Offset + UIPadding.PaddingBottom.Offset);
end
m_Library.GUIFX.ButtonFX(t_AutoSettings.Close);
t_AutoSettings.Close.Activated:Connect(function() -- Line: 355
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_AutoSettings
	--]]
	if not bool1 then
		bool1 = true;
		t_AutoSettings.Gui.Enabled = false;
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(AutoSettings);
m_Library.GUIFX.Tooltip(AutoSettings, "Auto-Settings");
AutoSettings.Activated:Connect(function() -- Line: 366
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_AutoSettings
	--]]
	if not bool1 then
		bool1 = true;
		t_AutoSettings.Gui.Enabled = not t_AutoSettings.Gui.Enabled;
		bool1 = false;
	end
end);
UpdateRaritys();
UpdateSideButton();
UpdateAutoHatch();
UpdateAlwaysKeep();
m_Library.Signal.Fired("Stat Changed"):Connect(function(p4) -- Line: 383
	if p4 == "AutoDelete" then
		UpdateRaritys();
		UpdateSideButton();
		return;
	end
	if p4 == "Gamepasses" or p4 == "AutoHatchSettings" then
		UpdateAutoHatch();
		UpdateAlwaysKeep();
	end
end);
  -  Editar
  04:54:13.903    -  Editar
  04:54:13.903  ----- [2731] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Collection -----  -  Editar
  04:54:13.903  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_Collection = m_Library.GUI.Collection;
local bool1 = false;
local bool2 = false;
local u1 = false;
local u2 = false;
local str1 = "";
function Update() -- Line: 23
	local v1 = m_Library.Save.Get();
	if not v1 or not v1.Collection then return end
	local v10;
	if t_Collection.Query.Text == "" then
		v10 = false;
	else
		v10 = t_Collection.Query.Text ~= nil;
	end
	local v2 = v10 and m_Library.Functions.RegexEscape(string.lower(tostring(t_Collection.Query.Text))) or nil;
	for _, child1 in ipairs(t_Collection.Container.Holder:GetChildren()) do
		if not child1:GetAttribute("petId") then continue end
		local Attribute = child1:GetAttribute("petId");
		local Attribute2 = child1:GetAttribute("name");
		local Attribute3 = child1:GetAttribute("rarity");
		local Attribute4 = child1:GetAttribute("isGolden");
		local Attribute5 = child1:GetAttribute("isRainbow");
		local Attribute6 = child1:GetAttribute("isDarkMatter");
		local v11 = m_Library.Functions.SearchArray(v1.Collection, Attribute .. "-" .. (Attribute4 and 2 or Attribute5 and 3 or Attribute6 and 4 or 1));
		child1.PetIcon.ImageColor3 = v11 and Color3.new(1, 1, 1) or Color3.new(0, 0, 0);
		child1.PetIcon.Locked.Visible = not v11;
		local str2 = nil;
		if Attribute4 then
			str2 = "Golden";
		elseif Attribute5 then
			str2 = "Rainbow";
		elseif Attribute6 then
			str2 = "Dark Matter";
		end
		local v12 = true;
		if v10 then
			local bool3 = false;
			if string.find(string.lower(Attribute2), v2, 1, true) then
				bool3 = true;
			elseif string.find(string.lower(Attribute3), v2, 1, true) then
				bool3 = true;
			elseif str2 and string.find(string.lower(str2), v2, 1, true) then
				bool3 = true;
			end
			v12 = bool3;
		end
		if u2 then
			child1.Visible = not v11 and v12;
			continue;
		end
		child1.Visible = v12;
	end
	UpdateBottom();
end
function UpdateBottom() -- Line: 83
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_Collection
			[3] = u1
			[4] = u2
	--]]
	local v3 = m_Library.Save.Get();
	if not v3 or not v3.Collection then return end
	local t_CollectionTier = v3.CollectionTier;
	local v4 = #v3.Collection;
	local v5 = m_Library.Shared.PetCollectionTiers[t_CollectionTier + 1];
	local v6 = v5 and v5 <= v4;
	t_Collection.Bottom.Tier.Text = "Tier " .. t_CollectionTier;
	t_Collection.Bottom.PetGoal.Text = v5 and m_Library.Functions.Commas(v5) .. " Pets" or "Max";
	t_Collection.Bottom.PetProgress.Text = m_Library.Functions.Commas(v4) .. " Pets";
	t_Collection.Bottom.Redeem.Visible = v6;
	t_Collection.Bottom.Progress.Visible = not v6;
	t_Collection.Bottom.Title.Visible = not v6;
	t_Collection.BottomBar.Grid.Image = u1 and "rbxassetid://6958935961" or "rbxassetid://6958936066";
	t_Collection.BottomBar.Missing.Image = u2 and "rbxassetid://11783443248" or "rbxassetid://11783443142";
	if not v6 then
		local v13 = 1;
		if v5 then
			local v23 = m_Library.Shared.PetCollectionTiers[t_CollectionTier] or 0;
			v13 = math.clamp((v4 - v23) / (v5 - v23), 0, 1);
		end
		t_Collection.Bottom.Progress.Bar.Size = UDim2.new(v13, 0, 1, 0);
	end
end
function Render(p1) -- Line: 119
	--[[
		Upvalues:
			[1] = m_Library
			[2] = bool2
			[3] = t_Collection
			[4] = u2
	--]]
	local u3 = m_Library.Save.Get();
	if not u3 or not u3.Collection then return end
	bool2 = true;
	local AllCollectablePets = m_Library.Shared.GetAllCollectablePets();
	table.sort(AllCollectablePets, function(p5, p6) -- Line: 130
		--[[
			Upvalues:
				[1] = m_Library
		--]]
		local v15 = m_Library.Directory.Pets[p5.petId];
		local v16 = m_Library.Directory.Pets[p6.petId];
		local v17 = m_Library.Shared.PetRarityNumbers[v15.rarity];
		local v18 = m_Library.Shared.PetRarityNumbers[v16.rarity];
		local v19 = (v15.strengthMin + v15.strengthMax) / 2;
		local v20 = (v16.strengthMin + v16.strengthMax) / 2;
		local v21 = p5.isGolden and 2 or p5.isRainbow and 3 or p5.isDarkMatter and 4 or 1;
		local v22 = p6.isGolden and 2 or p6.isRainbow and 3 or p6.isDarkMatter and 4 or 1;
		if v17 == v18 then
			if v19 == v20 then
				if v21 == v22 then
					return tonumber(p5.petId) > tonumber(p6.petId);
				end
				return v21 < v22;
			end
			return v19 < v20;
		end
		return v17 < v18;
	end);
	task.spawn(function() -- Line: 151
		--[[
			Upvalues:
				[1] = AllCollectablePets
				[2] = bool2
				[3] = m_Library
				[4] = u3
				[5] = t_Collection
				[6] = u2
				[7] = p1
		--]]
		for key3, val3 in ipairs(AllCollectablePets) do
			if not bool2 then return end
			if key3 % 50 == 0 then
				Scaling();
				wait(0.1);
			end
			local t_petId = val3.petId;
			local t_isGolden = val3.isGolden;
			local t_isRainbow = val3.isRainbow;
			local t_isDarkMatter = val3.isDarkMatter;
			local v24 = m_Library.Directory.Pets[t_petId];
			local t_name = v24.name;
			local t_rarity = v24.rarity;
			local Clone_ret = m_Library.Assets.UI.Inventory.Pet:Clone();
			m_Library.PetUI.Create(Clone_ret, t_petId, {
				g = t_isGolden,
				r = t_isRainbow,
				dm = t_isDarkMatter
			});
			Clone_ret:FindFirstChild("Level"):Destroy();
			if v24.titanic then
				Clone_ret.LayoutOrder = 9999999;
			elseif v24.huge then
				Clone_ret.LayoutOrder = 99999;
			else
				Clone_ret.LayoutOrder = key3;
			end
			Clone_ret:SetAttribute("petId", t_petId);
			Clone_ret:SetAttribute("name", t_name);
			Clone_ret:SetAttribute("rarity", t_rarity);
			Clone_ret:SetAttribute("isGolden", t_isGolden);
			Clone_ret:SetAttribute("isRainbow", t_isRainbow);
			Clone_ret:SetAttribute("isDarkMatter", t_isDarkMatter);
			local Attribute7 = Clone_ret:GetAttribute("petId");
			local Attribute8 = Clone_ret:GetAttribute("isGolden");
			local Attribute9 = Clone_ret:GetAttribute("isRainbow");
			local Attribute10 = Clone_ret:GetAttribute("isDarkMatter");
			local v25 = m_Library.Functions.SearchArray(u3.Collection, Attribute7 .. "-" .. (Attribute8 and 2 or Attribute9 and 3 or Attribute10 and 4 or 1));
			Clone_ret.PetIcon.ImageColor3 = v25 and Color3.new(1, 1, 1) or Color3.new(0, 0, 0);
			Clone_ret.PetIcon.Locked.Visible = not v25;
			local v28;
			if t_Collection.Query.Text == "" then
				v28 = false;
			else
				v28 = t_Collection.Query.Text ~= nil;
			end
			local v26 = v28 and m_Library.Functions.RegexEscape(string.lower(tostring(t_Collection.Query.Text))) or nil;
			local str3 = nil;
			if Attribute8 then
				str3 = "Golden";
			elseif Attribute9 then
				str3 = "Rainbow";
			elseif Attribute10 then
				str3 = "Dark Matter";
			end
			local v27 = true;
			if v28 then
				local bool4 = false;
				if string.find(string.lower(t_name), v26, 1, true) then
					bool4 = true;
				elseif string.find(string.lower(t_rarity), v26, 1, true) then
					bool4 = true;
				elseif str3 and string.find(string.lower(str3), v26, 1, true) then
					bool4 = true;
				end
				v27 = bool4;
			end
			if u2 then
				Clone_ret.Visible = not v25 and v27;
			else
				Clone_ret.Visible = v27;
			end
			Clone_ret.Parent = t_Collection.Container.Holder;
		end
		if p1 then
			p1();
		end
	end);
end
function Scaling() -- Line: 235
	--[[
		Upvalues:
			[1] = t_Collection
			[2] = m_Library
			[3] = u1
	--]]
	local t_Holder = t_Collection.Container.Holder;
	local UIGridLayout = t_Holder:FindFirstChildOfClass("UIGridLayout");
	local UIPadding = t_Holder:FindFirstChildOfClass("UIPadding");
	local v7 = m_Library.Functions.ResolutionScale();
	local v8 = v7 <= 0.5 and 6 or v7 <= 1.1 and 7 or 8;
	if u1 then
		UIGridLayout.CellPadding = UDim2.new(0, 10, 0, 10);
	else
		UIGridLayout.CellPadding = UDim2.new(0, 20, 0, 20);
	end
	local v9 = (t_Holder.AbsoluteSize.X - t_Holder.ScrollBarThickness - UIPadding.PaddingLeft.Offset - UIPadding.PaddingRight.Offset) / v8 - UIGridLayout.CellPadding.X.Offset;
	local udim2 = UDim2.new(0, v9, 0, v9);
	if u1 then
		udim2 = UDim2.new(0, udim2.X.Offset / 2, 0, udim2.Y.Offset / 2);
	end
	UIGridLayout.CellSize = udim2;
	UIGridLayout:ApplyLayout();
	t_Holder.CanvasSize = UDim2.new(0, UIGridLayout.AbsoluteContentSize.X, 0, UIGridLayout.AbsoluteContentSize.Y + (u1 and 25.38 or 30));
end
function ToggleGrid() -- Line: 270
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
	--]]
	debug.profilebegin("Collection.ToggleGrid");
	u1 = not u1;
	m_Library.Audio.Play("rbxassetid://7004248320", script, 1, 0.5);
	Scaling();
	UpdateBottom();
	debug.profileend();
end
function ToggleMissing() -- Line: 280
	--[[
		Upvalues:
			[1] = u2
	--]]
	debug.profilebegin("Collection.ToggleGrid");
	u2 = not u2;
	Update();
	Scaling();
	debug.profileend();
end
function Clear() -- Line: 289
	--[[
		Upvalues:
			[1] = t_Collection
			[2] = u1
			[3] = str1
			[4] = bool2
	--]]
	for _, child2 in ipairs(t_Collection.Container.Holder:GetChildren()) do
		if not child2:GetAttribute("petId") then continue end
		child2:Destroy();
	end
	u1 = false;
	str1 = "";
	bool2 = false;
end
m_Library.GUIFX.ButtonFX(t_Collection.BottomBar.Grid);
m_Library.GUIFX.Tooltip(t_Collection.BottomBar.Grid, "Toggle Grid View");
t_Collection.BottomBar.Grid.Activated:Connect(function() -- Line: 306
	--[[
		Upvalues:
			[1] = bool1
	--]]
	if not bool1 then
		bool1 = true;
		ToggleGrid();
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_Collection.BottomBar.Missing);
m_Library.GUIFX.Tooltip(t_Collection.BottomBar.Missing, "Toggle Missing Only");
t_Collection.BottomBar.Missing.Activated:Connect(function() -- Line: 317
	--[[
		Upvalues:
			[1] = bool1
	--]]
	if not bool1 then
		bool1 = true;
		ToggleMissing();
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_Collection.Close);
t_Collection.Close.Activated:Connect(function() -- Line: 327
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_Collection
	--]]
	if not bool1 then
		bool1 = true;
		t_Collection.Gui.Enabled = false;
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_Collection.Bottom.Redeem);
t_Collection.Bottom.Redeem.Activated:Connect(function() -- Line: 337
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
	--]]
	if not bool1 then
		bool1 = true;
		local v14 = m_Library.Network.Invoke("Redeem Pet Collection");
		if v14 then
			m_Library.Audio.Play("rbxassetid://7349140281", script);
			m_Library.Message.New("Congrats! You earned +1 Pet Equipped! \240\159\152\132");
		else
			m_Library.Message.New("Could not redeem.");
		end
		bool1 = false;
	end
end);
t_Collection.BottomBar.Search.Query:GetPropertyChangedSignal("Text"):Connect(function() -- Line: 355
	--[[
		Upvalues:
			[1] = t_Collection
	--]]
	if t_Collection.BottomBar.Search.Query.Text ~= "" then
		t_Collection.Container.Holder.CanvasPosition = Vector2.new();
	end
	Update();
	Scaling();
end);
m_Library.Signal.Fired("Window Opened"):Connect(function(p2) -- Line: 368
	--[[
		Upvalues:
			[1] = t_Collection
			[2] = bool2
			[3] = m_Library
	--]]
	if p2 == t_Collection.Gui and not bool2 then
		Render(function() -- Line: 370
			Update();
			Scaling();
		end);
		if t_Collection.Gui.Enabled and m_Library.Variables.Console then
			print("Set selected obj");
			m_Library.GuiService.SelectedObject = m_Library.LocalPlayer.PlayerGui:FindFirstChild("Collection"):FindFirstChild("Frame"):FindFirstChild("Container"):FindFirstChild("Holder");
		end
	end
end);
m_Library.Signal.Fired("Window Closed"):Connect(function(p3) -- Line: 383
	--[[
		Upvalues:
			[1] = t_Collection
	--]]
	if p3 == t_Collection.Gui then
		Clear();
	end
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p4) -- Line: 390
	if p4 == "Collection" or p4 == "CollectionTier" then
		Update();
		Scaling();
	end
end);
m_Library.Signal.Fired("Resolution Changed"):Connect(function() -- Line: 398
	task.defer(function() -- Line: 399
		Scaling();
	end);
end);
  -  Editar
  04:54:13.904    -  Editar
  04:54:13.904  ----- [2732] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Merch Codes -----  -  Editar
  04:54:13.904  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_MerchCodes = m_Library.GUI.MerchCodes;
local bool1 = false;
function Redeem() -- Line: 18
	--[[
		Upvalues:
			[1] = t_MerchCodes
			[2] = m_Library
	--]]
	local tostring_ret = tostring(t_MerchCodes.Input.Text);
	if tostring_ret and tostring_ret ~= "" then
		if m_Library.Message.New("Would you like to redeem this code?", "Yes", "No") == 1 then
			local v1, v2, _ = m_Library.Network.Invoke("Redeem Merch Code", tostring_ret);
			if not v1 then
				m_Library.Message.New(v2 or "We are sorry for the inconvenience, but please try again in a few hours as we are making updates to the DLC system.  If this problem persists for more than 24 hours, contact merchandise support.");
			else
				m_Library.Audio.Play("rbxassetid://7055150312", script, 1, 1);
				m_Library.Signal.Fire("Notification", "\226\156\133 Successfully redeemed! Thanks for supporting us \226\152\186\239\184\143", {
					color = Color3.fromRGB(105, 255, 168),
					force = true
				});
			end
		end
		t_MerchCodes.Input.Text = "";
	end
	t_MerchCodes.Redeem.ImageColor3 = Color3.new(1, 1, 1);
	t_MerchCodes.Redeem.TextLabel.Text = "Redeem!";
end
m_Library.GUIFX.ButtonFX(t_MerchCodes.Redeem);
t_MerchCodes.Redeem.Activated:Connect(function() -- Line: 46
	--[[
		Upvalues:
			[1] = bool1
	--]]
	if not bool1 then
		bool1 = true;
		Redeem();
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_MerchCodes.Close);
t_MerchCodes.Close.Activated:Connect(function() -- Line: 56
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_MerchCodes
	--]]
	if not bool1 then
		bool1 = true;
		t_MerchCodes.Gui.Enabled = false;
		bool1 = false;
	end
end);
  -  Editar
  04:54:13.904    -  Editar
  04:54:13.904  ----- [2733] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Merchant -----  -  Editar
  04:54:13.904  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
if m_Library.Shared.IsHardcore then return end
local t_Merchant = m_Library.GUI.Merchant;
local bool1 = false;
local u1 = nil;
local u2 = {};
function Buy(p1) -- Line: 37
	--[[
		Upvalues:
			[1] = u2
			[2] = m_Library
	--]]
	local v1 = u2["Level " .. p1];
	if not v1 then return end
	local v2 = m_Library.Message.New("Are you sure you want to purchase this " .. string.lower(v1.itemType) .. " for " .. m_Library.Functions.Commas(v1.price) .. " Diamonds?", true);
	if v2 then
		local v8, v9 = m_Library.Network.Invoke("Buy Merchant Item", p1);
		if not v8 then
			m_Library.Message.New(v9 or "Something went wrong.");
			return;
		end
		m_Library.Audio.Play("rbxassetid://7399584366", script, 1, 1.25);
		m_Library.Message.New("\226\156\133 Purchase successful!");
	end
end
function UpdateLevel() -- Line: 56
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_Merchant
	--]]
	local v3 = m_Library.Save.Get();
	if not v3 then return end
	local t_MerchantLevel = v3.MerchantLevel;
	local t_MerchantSales = v3.MerchantSales;
	local v4 = m_Library.Shared.MerchantLevelReq[t_MerchantLevel + 1];
	t_Merchant.Level.Text = "Respect Level " .. m_Library.Functions.ToRomanNum(t_MerchantLevel);
	if v4 then
		local v10 = (t_MerchantSales - m_Library.Shared.MerchantLevelReq[t_MerchantLevel]) / (v4 - m_Library.Shared.MerchantLevelReq[t_MerchantLevel]);
		t_Merchant.LevelBar.Bar.Size = UDim2.new(v10, 0, 1, 0);
		return;
	end
	t_Merchant.LevelBar.Bar.Size = UDim2.new(1, 0, 1, 0);
end
function UpdateTimer() -- Line: 75
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
			[3] = t_Merchant
	--]]
	if not u1 then
		local v11, v12 = m_Library.Network.Invoke("Get Merchant Timer");
		if not v11 then
			u1 = nil;
			return;
		end
		local v13 = v12 - v11;
		u1 = os.clock() + v13;
	end
	local v5 = u1 - os.clock();
	if v5 <= 0 then
		t_Merchant.Timer.Text = "Closed";
		return;
	end
	if v5 <= 5 then
		t_Merchant.Timer.Text = "Departing now...";
		return;
	end
	t_Merchant.Timer.Text = "Departs in " .. m_Library.Functions.TimerString(v5);
end
function UpdateItems() -- Line: 98
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u2
			[3] = t_Merchant
	--]]
	ClearItems();
	local v6 = m_Library.Save.Get();
	if not v6 then return end
	local v7 = m_Library.Functions.DictionaryLength(u2) > 0;
	t_Merchant.Container.Visible = v7;
	if not v7 then return end
	for key1, val1 in pairs(u2) do
		if val1.itemType ~= "Pet" then continue end
		local tonumber_ret = tonumber(key1:match("%d+"));
		local v14 = val1.left <= 0;
		local v15 = not v14 and tonumber_ret <= v6.MerchantLevel;
		local FindFirstChild_ret = t_Merchant.Container:FindFirstChild(tonumber_ret);
		local Clone_ret = m_Library.Assets.UI.Inventory.Pet:Clone();
		Clone_ret.Size = UDim2.new(1, 0, 0.7, 0);
		Clone_ret.Position = UDim2.new(0.5, 0, 0.5, 0);
		Clone_ret.AnchorPoint = Vector2.new(0.5, 0.5);
		Clone_ret.Parent = FindFirstChild_ret.Item;
		local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint");
		UIAspectRatioConstraint.Parent = Clone_ret;
		m_Library.PetUI.Create(Clone_ret, val1.petId, val1.petExtra);
		if v6.MerchantLevel < tonumber_ret then
			FindFirstChild_ret.Locked.Desc.Text = "Respect Level " .. m_Library.Functions.ToRomanNum(tonumber_ret) .. " Required";
		elseif v14 then
			FindFirstChild_ret.Locked.Desc.Text = "Out of Stock";
		end
		FindFirstChild_ret.Locked.Visible = not v15;
		FindFirstChild_ret.Buy.ImageColor3 = v15 and Color3.new(1, 1, 1) or Color3.new(0.5, 0.5, 0.5);
		FindFirstChild_ret.CostFrame.Cost.Text = not v14 and m_Library.Functions.NumberShorten(val1.price) or "Offsale";
	end
end
function ClearItems() -- Line: 146
	--[[
		Upvalues:
			[1] = t_Merchant
	--]]
	for _, child2 in ipairs(t_Merchant.Container:GetChildren()) do
		if not child2:FindFirstChild("Item") then continue end
		child2.Item:ClearAllChildren();
	end
end
function SetupButtons() -- Line: 160
	--[[
		Upvalues:
			[1] = t_Merchant
			[2] = m_Library
			[3] = bool1
	--]]
	for _, child3 in ipairs(t_Merchant.Container:GetChildren()) do
		local Buy_ = child3:FindFirstChild("Buy");
		if not Buy_ then continue end
		m_Library.GUIFX.ButtonFX(Buy_);
		Buy_.Activated:Connect(function() -- Line: 165
			--[[
				Upvalues:
					[1] = bool1
					[2] = child3
			--]]
			if not bool1 then
				bool1 = true;
				Buy(tonumber(child3.Name));
				bool1 = false;
			end
		end);
	end
end
SetupButtons();
m_Library.GUIFX.ButtonFX(t_Merchant.Close);
t_Merchant.Close.Activated:Connect(function() -- Line: 179
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_Merchant
	--]]
	if not bool1 then
		bool1 = true;
		t_Merchant.Gui.Enabled = false;
		bool1 = false;
	end
end);
local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 191
	--[[
		Upvalues:
			[1] = t_Merchant
	--]]
	while true do
		if t_Merchant.Gui.Enabled then
			UpdateTimer();
		end
		wait(0.5);
	end
end);
coroutine_wrap_ret();
m_Library.Network.Fired("Merchant Departed"):Connect(function() -- Line: 201
	--[[
		Upvalues:
			[1] = u2
			[2] = u1
			[3] = t_Merchant
	--]]
	u2 = {};
	ClearItems();
	u1 = nil;
	t_Merchant.Gui.Enabled = false;
end);
m_Library.Network.Fired("Merchant Arrival"):Connect(function(_) -- Line: 209
	--[[
		Upvalues:
			[1] = u2
			[2] = m_Library
	--]]
	u2 = m_Library.Network.Invoke("Get Merchant Items");
	UpdateItems();
end);
m_Library.Network.Fired("Merchant Updated"):Connect(function(p2) -- Line: 215
	--[[
		Upvalues:
			[1] = u2
	--]]
	u2 = p2;
	UpdateItems();
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p3) -- Line: 221
	if p3 == "MerchantLevel" then
		UpdateItems();
		UpdateLevel();
		return;
	end
	if p3 == "MerchantSales" then
		UpdateLevel();
	end
end);
u2 = m_Library.Network.Invoke("Get Merchant Items");
UpdateItems();
UpdateLevel();
  -  Editar
  04:54:13.904    -  Editar
  04:54:13.904  ----- [2734] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Verify Twitter -----  -  Editar
  04:54:13.904  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_VerifyTwitter = m_Library.GUI.VerifyTwitter;
local bool1 = false;
local u1 = false;
local u2 = "";
function Verify() -- Line: 20
	--[[
		Upvalues:
			[1] = u1
			[2] = t_VerifyTwitter
			[3] = m_Library
			[4] = u2
	--]]
	if u1 then return end
	t_VerifyTwitter.Verify.ImageColor3 = Color3.new(0.5, 0.5, 0.5);
	t_VerifyTwitter.Verify.TextLabel.Text = "(...)";
	local tostring_ret = tostring(t_VerifyTwitter.Input.Text);
	if tostring_ret and tostring_ret ~= "" then
		local v2, v3 = m_Library.Network.Invoke("Verify Twitter", tostring_ret);
		if not v2 then
			m_Library.Message.New(v3 or "Failed to verify.");
		else
			m_Library.Audio.Play("rbxassetid://7055150312", script, 1, 1);
			m_Library.Message.New("\226\156\133 Verified!");
		end
		t_VerifyTwitter.Input.Text = "";
		u2 = "";
	end
	t_VerifyTwitter.Verify.ImageColor3 = Color3.new(1, 1, 1);
	t_VerifyTwitter.Verify.TextLabel.Text = "Verify!";
end
t_VerifyTwitter.Input:GetPropertyChangedSignal("Text"):Connect(function() -- Line: 45
	--[[
		Upvalues:
			[1] = t_VerifyTwitter
			[2] = m_Library
			[3] = u2
	--]]
	if #t_VerifyTwitter.Input.Text <= 15 and m_Library.Functions.IsASCII(t_VerifyTwitter.Input.Text) then
		u2 = t_VerifyTwitter.Input.Text;
		return;
	end
	t_VerifyTwitter.Input.Text = u2;
end);
function Update() -- Line: 54
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
			[3] = t_VerifyTwitter
	--]]
	local v1 = m_Library.Save.Get();
	if not v1 then return end
	u1 = v1.IsFollowingOnTwitter;
	t_VerifyTwitter.Verified.Visible = u1;
	t_VerifyTwitter.Verify.Visible = not u1;
	t_VerifyTwitter.Input.Visible = not u1;
	t_VerifyTwitter.Help.Visible = not u1;
end
m_Library.GUIFX.ButtonFX(t_VerifyTwitter.Verify);
t_VerifyTwitter.Verify.Activated:Connect(function() -- Line: 72
	--[[
		Upvalues:
			[1] = bool1
	--]]
	if not bool1 then
		bool1 = true;
		Verify();
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_VerifyTwitter.Close);
t_VerifyTwitter.Close.Activated:Connect(function() -- Line: 82
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_VerifyTwitter
	--]]
	if not bool1 then
		bool1 = true;
		t_VerifyTwitter.Gui.Enabled = false;
		bool1 = false;
	end
end);
Update();
m_Library.Signal.Fired("Stat Changed"):Connect(function(p1) -- Line: 97
	if p1 == "IsFollowingOnTwitter" then
		Update();
	end
end);
  -  Editar
  04:54:13.904    -  Editar
  04:54:13.904  ----- [2735] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Daycare -----  -  Editar
  04:54:13.904  -- Decompiled with the Synapse X Luau decompiler.

local v1 = require(game.ReplicatedStorage.Library);
v1.Load();
local v2 = require(game.ReplicatedStorage.Library.Modules.Pets);
local v3 = require(game.ReplicatedStorage.Library.Modules.Daycare);
local v4 = {};
local u1 = false;
local u2 = {};
local u3 = Random.new();
function PetsSelect(p1)
	local v5 = v1.PetCmds.Get(p1);
	if not p1 then
		return;
	end;
	local v6 = v1.Save.Get();
	if not v6 then
		return;
	end;
	assert(v6);
	local v7
	if v1.Shared.IsHardcore then
		v7 = v6.DaycareHardcoreQueue;
	else
		v7 = v6.DaycareQueue;
	end;
	local v8 = v1.Shared.DaycareComputeSlotsForTier(v6.DaycareTier);
	local v9 = math.max(0, v8 - #v7);
	if v9 == 0 then

	elseif v9 <= #u2 then
		return;
	elseif table.find(u2, p1) then
		return;
	else
		v1.Audio.Play("rbxassetid://7139317934", script, u3:NextNumber(0.95, 1.05), 0.75);
		table.insert(u2, p1);
		UpdateSelectedAmount();
		UpdateEnrollLazy();
		return;
	end;
	if v8 < 20 then
		if v1.Message.New("You're out of daycare slots! Would you like to buy more?", true) then

		else
			return;
		end;
	else
		v1.Message.New("You're out of daycare slots!");
		return;
	end;
	local v10, v11 = v1.Network.Invoke("Attempt Buy +10 Daycare Slots");
	if v10 ~= true then

	else
		v1.Shared.PromptPurchase(1378709263, true);
		return;
	end;
	v1.Message.New(v11);
	u1 = false;
end;
function PetsDeselect(p2)
	v1.Audio.Play("rbxassetid://7139317909", script, u3:NextNumber(0.95, 1.05), 0.75);
	table.remove(u2, table.find(u2, p2));
	UpdateSelectedAmount();
	UpdateEnrollLazy();
end;
local l__Daycare__4 = v1.GUI.Daycare;
function PetsUpdate()
	(function()
		if u2[1] then
			if not v1.PetCmds.Get(u2[1]) then

			end;
		end;
		for v12, v13 in ipairs((0 < #u2 and l__Daycare__4.Holder1Stage2 or l__Daycare__4.HolderStage1):GetChildren()) do
			if v13.ClassName == "TextButton" then
				local v15 = v13:GetAttribute("Locked");
				local v16 = v13:GetAttribute("Hardcore");
				if v13:GetAttribute("DirId") then
					local v17 = v1.Functions.SearchArray(u2, v13.Name);
					v13.Equipped.Visible = v17;
					v13.BackgroundColor3 = v17 and Color3.fromRGB(69, 239, 69) or Color3.fromRGB(59, 177, 252);
					if not v15 then
						v13.BackgroundColor3 = v17 and Color3.fromRGB(69, 239, 69) or Color3.fromRGB(59, 177, 252);
						v13.PetIcon.ImageTransparency = 0;
					end;
				end;
			end;		
		end;
	end)();
	ScaleScrolling();
end;
local u5 = false;
function Update()
	local v18 = v1.Save.Get();
	if not v18 then
		return;
	end;
	assert(v18);
	if 0 < v18.DaycareTier then
		l__Daycare__4.UpgradeSlots.Visible = false;
	end;
	l__Daycare__4.Categories.ViewPets.Frame.PetReady.Visible = u5;
end;
local u6 = {
	Diamonds = {
		Position = UDim2.new(0.47, 0, 0.5, 0), 
		Size = UDim2.new(0.7, 0, 0.7, 0)
	}, 
	Currency = {
		Position = UDim2.new(0.5, 0, 0.5, 0), 
		Size = UDim2.new(0.8, 0, 0.8, 0)
	}, 
	["Super Lucky"] = {
		Position = UDim2.new(0.54, 0, 0.5, 0), 
		Size = UDim2.new(1.05, 0, 1.05, 0)
	}, 
	["Triple Coins"] = {
		Position = UDim2.new(0.54, 0, 0.5, 0), 
		Size = UDim2.new(1.05, 0, 1.05, 0)
	}, 
	["Triple Damage"] = {
		Position = UDim2.new(0.54, 0, 0.5, 0), 
		Size = UDim2.new(1.05, 0, 1.05, 0)
	}, 
	["Ultra Lucky"] = {
		Position = UDim2.new(0.47, 0, 0.5, 0), 
		Size = UDim2.new(0.9, 0, 0.9, 0)
	}
};
local u7 = {
	["Triple Coins"] = "rbxassetid://7402604552", 
	["Triple Damage"] = "rbxassetid://7402604431", 
	["Super Lucky"] = "rbxassetid://7402604677", 
	["Ultra Lucky"] = "rbxassetid://7402706511"
};
local u8 = nil;
function UpdateClaim(p3, p4)
	local v19 = v1.Save.Get();
	if not v19 then
		return;
	end;
	assert(v19);
	local l__Pets__20 = l__Daycare__4.LootView.Pets;
	for v21, v22 in ipairs(l__Pets__20:GetChildren()) do
		if v22:isA("TextButton") then
			v22:Destroy();
		end;	
	end;
	for v24, v25 in ipairs(p3) do
		local l__s__27 = v25.s;
		local l__g__28 = v25.g;
		local l__r__29 = v25.r;
		local l__dm__30 = v25.dm;
		local v31 = v1.Directory.Pets[v25.id];
		local l__rarity__32 = v31.rarity;
		if not v31.huge then
			if v31.companionEnchantLevel == nil then
				if not v31.titanic then
					if not v31.isGift then
						local v33 = v1.Assets.UI.Inventory.Pet:Clone();
						v1.PetUI.Create(v33, v25.uid);
						v33:SetAttribute("DirId", v25.id);
						v33:SetAttribute("Hardcore", v25.hc);
						v33.Size = UDim2.new(1, 0, 1, 0);
						v33.Parent = l__Pets__20;
					end;
				end;
			end;
		end;	
	end;
	local l__LootHolder__34 = l__Daycare__4.LootHolder;
	for v35, v36 in ipairs(l__LootHolder__34:GetChildren()) do
		if v36.ClassName == "Frame" then
			if not v36:GetAttribute("template") then
				v36:Destroy();
			end;
		end;	
	end;
	local l__Loot__38 = l__LootHolder__34:FindFirstChild("Loot");
	l__Loot__38.Visible = false;
	for v39, v40 in ipairs(p4) do
		local v42 = l__Loot__38:Clone();
		v42:SetAttribute("template", false);
		v42.NonPet.Level.AutoLocalize = false;
		v42.NonPet.Level.Text = v1.Functions.NumberShorten(v40.Min);
		if v40.Category == "Currency" then
			v42.NonPet.Icon.Image = v1.Directory.Currency[v40.Data].ImageTiny;
			if u6[v40.Data] then
				v42.NonPet.Icon.Position = u6[v40.Data].Position;
				v42.NonPet.Icon.Size = u6[v40.Data].Size;
			else
				v42.NonPet.Icon.Position = u6.Currency.Position;
				v42.NonPet.Icon.Size = u6.Currency.Size;
			end;
			if v1.Shared.IsHardcore then
				if v1.Directory.Currency[v40.Data].HardcoreSeparate then
					v42.NonPet.Icon.HC.Visible = true;
				end;
			end;
			v1.GUIFX.Tooltip(v42.NonPet, v40.Data);
		elseif v40.Category == "Boost" then
			v42.NonPet.Icon.Image = u7[v40.Data];
			if u6[v40.Data] then
				v42.NonPet.Icon.Position = u6[v40.Data].Position;
				v42.NonPet.Icon.Size = u6[v40.Data].Size;
			end;
			v1.GUIFX.Tooltip(v42.NonPet, v40.Data);
		elseif v40.Category == "Pet" then
			v42.NonPet.Visible = false;
			local l__Data__43 = v40.Data;
			local l__id__44 = l__Data__43.id;
			local l__isGolden__45 = l__Data__43.isGolden;
			local l__isRainbow__46 = l__Data__43.isRainbow;
			local l__isDarkMatter__47 = l__Data__43.isDarkMatter;
			local v48 = v1.Directory.Pets[l__id__44];
			local v49 = v1.Assets.UI.Inventory.Pet:Clone();
			v49.Size = UDim2.new(1, 0, 1, 0);
			v1.PetUI.Create(v49, l__id__44, {
				g = l__isGolden__45, 
				r = l__isRainbow__46, 
				dm = l__isDarkMatter__47
			});
			v49:FindFirstChild("Level"):Destroy();
			v49:SetAttribute("petId", l__id__44);
			v49:SetAttribute("name", v48.name);
			v49:SetAttribute("rarity", v48.rarity);
			v49:SetAttribute("isGolden", l__isGolden__45);
			v49:SetAttribute("isRainbow", l__isRainbow__46);
			v49:SetAttribute("isDarkMatter", l__isDarkMatter__47);
			local v50 = v49:GetAttribute("petId");
			local v51 = v49:GetAttribute("isRainbow");
			local v52 = v49:GetAttribute("isDarkMatter");
			if v49:GetAttribute("isGolden") then

			elseif v51 then

			elseif v52 then

			end;
			v49.PetIcon.ImageColor3 = Color3.new(1, 1, 1);
			v49.PetIcon.Locked.Visible = false;
			if l__Data__43.id ~= "1027" then
				u8 = l__Data__43;
			end;
			v49.Parent = v42;
		elseif u6[v40.Data] then
			v42.NonPet.Icon.Position = u6[v40.Data].Position;
			v42.NonPet.Icon.Size = u6[v40.Data].Size;
		end;
		v42.Parent = l__LootHolder__34;
		v42.Visible = true;	
	end;
	ClaimScrolling();
end;
function ClaimScrolling()
	local l__Pets__53 = l__Daycare__4.Pets;
	local v54 = l__Pets__53:FindFirstChildOfClass("UIGridLayout");
	local v55 = l__Pets__53:FindFirstChildOfClass("UIPadding");
	local v56 = v1.Functions.ResolutionScale();
	local v57
	if v56 <= 0.5 then
		v57 = 2;
	elseif v56 <= 1.1 then
		v57 = 2.5;
	else
		v57 = 3;
	end;
	local v58 = (l__Pets__53.AbsoluteSize.X - l__Pets__53.ScrollBarThickness - v55.PaddingLeft.Offset - v55.PaddingRight.Offset) / v57 - v54.CellPadding.X.Offset;
	v54.CellSize = UDim2.new(0, v58, 0, v58);
	v54:ApplyLayout();
	l__Pets__53.CanvasSize = UDim2.new(0, v54.AbsoluteContentSize.X, 0, v54.AbsoluteContentSize.Y + 30);
	local l__LootHolder__59 = l__Daycare__4.LootHolder;
	local v60 = l__LootHolder__59:FindFirstChildOfClass("UIGridLayout");
	local v61 = l__LootHolder__59:FindFirstChildOfClass("UIPadding");
	local v62 = v1.Functions.ResolutionScale();
	local v63 
	if v62 <= 0.5 then
		v63 = 2;
	elseif v62 <= 1.1 then
		v63 = 2.5;
	else
		v63 = 3;
	end;
	local v64 = (l__LootHolder__59.AbsoluteSize.X - l__LootHolder__59.ScrollBarThickness - v61.PaddingLeft.Offset - v61.PaddingRight.Offset) / v63 - v60.CellPadding.X.Offset;
	v60.CellSize = UDim2.new(0, v64, 0, v64);
	v60:ApplyLayout();
	l__LootHolder__59.CanvasSize = UDim2.new(0, v60.AbsoluteContentSize.X, 0, v60.AbsoluteContentSize.Y + 30);
end;
local u9 = 0;
local u10 = nil;
local u11 = nil;
game:GetService("RunService").RenderStepped:Connect(function(p5)
	u9 = u9 + p5;
	u10 = Color3.fromHSV(u9 / 2 % 1, 1, 1);
	u11 = 0.7 + math.sin(u9 * 4) * 0.2;
end);
function UpdateView()
	local v65 = v1.Save.Get();
	if not v65 then
		return;
	end;
	assert(v65);
	local l__Holder__66 = l__Daycare__4.View.Holder;
	local v67 
	if v1.Shared.IsHardcore then
		v67 = v65.DaycareHardcoreQueue;
	else
		v67 = v65.DaycareQueue;
	end;
	for v68, v69 in ipairs(v67) do
		local v71 = l__Holder__66:FindFirstChild(v68);
		if v71 then

		else
			local l__Pet__72 = v69.Pet;
			local v73 = v1.Directory.Pets[l__Pet__72.id];
			local u12 = v69;
			local u13 = v1.Shared.DaycareComputeRemainingTime(v65, v69);
			local u14 = v71;
			local function v74()
				u12 = v67[v68];
				if not u12 then
					return;
				end;
				u13 = v1.Shared.DaycareComputeRemainingTime(v65, u12);
				local v75 = u13 <= 0;
				u14.TimeDescStage1.Visible = not v75;
				u14.TimeLeftStage1.Visible = not v75;
				u14.ClaimStage2.Visible = v75;
				u14.ClaimDescStage2.Visible = v75;
				u14.PetIcon.UIGradient.Enabled = not v75;
				if l__Pet__72.hc then
					u14.PetIcon.HC.Visible = true;
				end;
				if not v75 then
					u14.TimeLeftStage1.Text = v1.Functions.FormatTime(u13);
					return;
				end;
				u5 = true;
				l__Daycare__4.ClaimAll.ImageColor3 = u5 and Color3.new(1, 1, 1) or Color3.new(0.5, 0.5, 0.5);
				l__Daycare__4.Categories.ViewPets.Frame.PetReady.Visible = u5;
			end;
			u14 = l__Daycare__4.View.Holder.ViewTemplate:Clone();
			u14.Name = v68;
			u14.PetIcon.Image = l__Pet__72.dm and v73.darkMatterThumbnail or (l__Pet__72.g and v73.goldenThumbnail or v73.thumbnail);
			u14:SetAttribute("SlotId", v68);
			u14.Parent = l__Holder__66;
			u14.Visible = true;
			if l__Pet__72.r then
				coroutine.wrap(function()
					while true do
						if u14 then

						else
							break;
						end;
						if u14.Parent then

						else
							break;
						end;
						if l__Pet__72.r then

						else
							break;
						end;
						if l__Daycare__4.Gui.Enabled then
							if u14.PetIcon.ImageColor3 ~= Color3.new(0, 0, 0) then
								u14.PetIcon.ImageColor3 = u10;
							end;
						end;
						if l__Daycare__4.Gui.Enabled then
							v1.RunService.RenderStepped:Wait();
						else
							task.wait(0.5);
						end;					
					end;
				end)();
			end;
			v74();
			v1.GUIFX.ButtonFX(u14.ClaimStage2);
			u14.ClaimStage2.Activated:Connect(function()
				if not u1 then
					u1 = true;
					local v76, v77, v78, v79, v80 = v1.Network.Invoke("Daycare: Claim", v68);
					if not v76 then
						v1.Message.New(v77 or "Something went wrong!");
						u1 = false;
						return;
					end;
					assert(v78);
					assert(v79);
					if v80 then
						if v1.Shared.IsHardcore then
							v65.DaycareHardcoreQueue = v80;
						else
							v65.DaycareQueue = v80;
						end;
						UpdateView();
					end;
					l__Daycare__4.Title.Text = "Your Loot!";
					UpdateClaim(v78, v79);
					u5 = false;
					l__Daycare__4.Categories.ViewPets.Frame.PetReady.Visible = false;
					l__Daycare__4.Categories.Visible = false;
					l__Daycare__4.LootView.Visible = true;
					l__Daycare__4.PetsAndLoot.Visible = false;
					l__Daycare__4.View.Visible = false;
					u1 = false;
				end;
			end);
			task.spawn(function()
				while true do
					if u14 then

					else
						break;
					end;
					if u14.Parent then

					else
						break;
					end;
					if l__Daycare__4.Gui.Enabled then
						v74();
					end;
					v1.Heartbeat(5);				
				end;
			end);
		end;	
	end;
	for v81, v82 in ipairs(l__Holder__66:GetChildren()) do
		local v84 = v82:GetAttribute("SlotId");
		if v84 then
			if not v67[v84] then
				v82:Destroy();
			end;
		end;	
	end;
	l__Daycare__4.View.None.Visible = #v67 <= 0;
	l__Daycare__4.ClaimAll.ImageColor3 = u5 and Color3.new(1, 1, 1) or Color3.new(0.5, 0.5, 0.5);
	l__Daycare__4.SlotAmount.Text = GetUsedSlots() .. "/" .. GetMaxSlots() .. " Slots";
	QueueScrolling();
end;
function QueueScrolling()
	local l__Holder__85 = l__Daycare__4.View.Holder;
	local v86 = l__Holder__85:FindFirstChildOfClass("UIPadding");
	local v87 = l__Holder__85:FindFirstChildOfClass("UIListLayout");
	v87:ApplyLayout();
	l__Holder__85.CanvasSize = UDim2.new(0, v87.AbsoluteContentSize.X + v86.PaddingLeft.Offset + v86.PaddingRight.Offset, 0, 0);
end;
function GetRemainingSlots()
	return math.max(0, GetMaxSlots() - GetUsedSlots());
end;
function GetMaxSlots()
	local v88 = v1.Save.Get();
	if not v88 then
		return 0;
	end;
	assert(v88);
	if v1.Shared.IsHardcore then
		local l__DaycareHardcoreQueue__89 = v88.DaycareHardcoreQueue;
	else
		local l__DaycareQueue__90 = v88.DaycareQueue;
	end;
	return v1.Shared.DaycareComputeSlotsForTier(v88.DaycareTier);
end;
function GetUsedSlots()
	local v91 = v1.Save.Get();
	if not v91 then
		return 0;
	end;
	assert(v91);
	local v92 
	if v1.Shared.IsHardcore then
		v92 = v91.DaycareHardcoreQueue;
	else
		v92 = v91.DaycareQueue;
	end;
	return #v92;
end;
function UpdateSelectedAmount()
	l__Daycare__4.AmountStage2.Text = "Selected " .. #u2 .. "/" .. GetRemainingSlots() .. " Pets";
end;
function isVisible()
	return l__Daycare__4.Gui.Enabled;
end;
local u15 = false;
local u16 = true;
local u17 = false;
function UpdateEnroll(p6)
	if u15 then
		return;
	end;
	u15 = true;
	if not u16 then
		u15 = false;
		return;
	end;
	if not isVisible() then
		u15 = false;
		return;
	end;
	local v93 = v1.Save.Get();
	if not v93 then
		u15 = false;
		return;
	end;
	assert(v93);
	if not v93.Pets then
		u15 = false;
		v1.Print("Failed to grab pets", true);
		return;
	end;
	u16 = false;
	local v94 = 0 < #u2;
	l__Daycare__4.DividerStage2.Visible = v94;
	l__Daycare__4.Holder1Stage2.Visible = v94;
	l__Daycare__4.Holder2Stage2.Visible = v94;
	l__Daycare__4.TimerFrameStage2.Visible = v94;
	l__Daycare__4.TimerStage2.Visible = v94;
	l__Daycare__4.AmountStage2.Visible = v94;
	l__Daycare__4.NoticeOnStage1.Visible = not v94;
	l__Daycare__4.HolderStage1.Visible = not v94;
	l__Daycare__4.NoticeStage1.Visible = not v94;
	l__Daycare__4.TitleRight.Text = "Possible Loot";
	l__Daycare__4.TitleRight.Visible = v94;
	l__Daycare__4.SlotAmount.Visible = not v94;
	local v95 = v94 and l__Daycare__4.Holder1Stage2 or l__Daycare__4.HolderStage1;
	for v96, v97 in ipairs(v95:GetChildren()) do
		if v97:isA("TextButton") then
			if not v1.PetCmds.Get(v97.Name) then
				v97:Destroy();
			end;
		end;	
	end;
	local v99 = 0;
	for v100, v101 in ipairs((v1.Shared.SortPets(v93, table.clone(v93.Pets), true))) do
		local v103 = v1.Shared.HasPetEquipped(v93, v101);
		local v104 = v95:FindFirstChild(v101.uid);
		if v104 then
			if v104.Locked.Visible ~= v101.l then
				v104.Locked.Visible = v101.l;
			end;
			if v104.Stars.Visible ~= not v104.Locked.Visible then
				v104.Stars.Visible = not v104.Locked.Visible;
			end;
			if v104.LayoutOrder ~= v100 then
				v104.LayoutOrder = v100;
			end;
		else
			local l__uid__105 = v101.uid;
			local l__s__106 = v101.s;
			local l__g__107 = v101.g;
			local l__r__108 = v101.r;
			local l__dm__109 = v101.dm;
			local v110 = v1.Directory.Pets[v101.id];
			local l__rarity__111 = v110.rarity;
			if not v110.huge then
				if v110.companionEnchantLevel == nil then
					if not v110.titanic then
						if v110.isGift then

						else
							local v112 = v1.Assets.UI.Inventory.Pet:Clone();
							v1.PetUI.Create(v112, l__uid__105);
							v112.LayoutOrder = v100;
							v112:SetAttribute("DirId", v101.id);
							v112:SetAttribute("Hardcore", v101.hc);
							v112.Parent = v95;
							local u18 = v101;
							v112.Activated:Connect(function()
								if not u1 then
									u1 = true;
									u18 = v1.PetCmds.Get(l__uid__105);
									local v113 = v1.Signal.Invoke("Is Trading Booth Pet", l__uid__105);
									if u18.l then
										v1.Message.New("This pet is locked! Unlock it before you can enroll it in Daycare!");
									elseif v113 then
										v1.Message.New("This pet is currently in your trading booth! Remove it before you can enroll it in Daycare!");
									elseif not v1.Functions.SearchArray(u2, l__uid__105) then
										PetsSelect(l__uid__105);
									else
										PetsDeselect(l__uid__105);
									end;
									u1 = false;
								end;
							end);
							v1.GUIFX.ButtonFX(v112);
							v99 = v99 + 1;
						end;
					end;
				end;
			end;
		end;	
	end;
	if v94 then
		if not p6 then
			local l__Holder2Stage2__114 = l__Daycare__4.Holder2Stage2;
			if not u17 then
				u17 = true;
				local v115 = {};
				local v116 = nil;
				if not p6 then
					local v117, v118 = v1.Network.Invoke("Daycare: Compute Loot", u2);
					v115 = v117;
					v116 = v118;
				end;
				u17 = false;
				if not v115 then
					v1.Message.New(v116 or "Error!");
					u15 = false;
					return;
				end;
				assert(v115);
				for v119, v120 in ipairs(l__Holder2Stage2__114:GetChildren()) do
					if v120.ClassName == "Frame" then
						if not v120:GetAttribute("template") then
							v120:Destroy();
						end;
					end;				
				end;
				local l__Loot__122 = l__Holder2Stage2__114:FindFirstChild("Loot");
				l__Loot__122.Visible = false;
				for v123, v124 in ipairs(v115) do
					local v126 = l__Loot__122:Clone();
					v126:SetAttribute("template", false);
					v126.LootRange.Range.AutoLocalize = false;
					v126.LootRange.Range.Text = v1.Functions.NumberShorten(v124.Min) .. " - " .. v1.Functions.NumberShorten(v124.Max);
					if v124.Min == 0 then
						v126.LootRange.Range.Text = "Max " .. v1.Functions.NumberShorten(v124.Max);
					end;
					if v124.Category == "Currency" then
						local v127 = v1.Directory.Currency[v124.Data];
						v126.NonPet.Icon.Image = v127.ImageTiny;
						if u6[v124.Data] then
							v126.NonPet.Icon.Position = u6[v124.Data].Position;
							v126.NonPet.Icon.Size = u6[v124.Data].Size;
						else
							v126.NonPet.Icon.Position = u6.Currency.Position;
							v126.NonPet.Icon.Size = u6.Currency.Size;
						end;
						if v1.Shared.IsHardcore then
							if v127.HardcoreSeparate then
								v126.NonPet.Icon.HC.Visible = true;
							end;
						end;
						v1.GUIFX.Tooltip(v126.NonPet, v124.Data);
					elseif v124.Category == "Boost" then
						v126.NonPet.Icon.Image = u7[v124.Data];
						if u6[v124.Data] then
							v126.NonPet.Icon.Position = u6[v124.Data].Position;
							v126.NonPet.Icon.Size = u6[v124.Data].Size;
						end;
						v1.GUIFX.Tooltip(v126.NonPet, v124.Data);
					elseif v124.Category == "Pet" then
						v126.NonPet.Visible = false;
						local l__Data__128 = v124.Data;
						local l__id__129 = l__Data__128.id;
						local l__isGolden__130 = l__Data__128.isGolden;
						local l__isRainbow__131 = l__Data__128.isRainbow;
						local l__isDarkMatter__132 = l__Data__128.isDarkMatter;
						local v133 = v1.Directory.Pets[l__id__129];
						local v134 = v1.Assets.UI.Inventory.Pet:Clone();
						v1.PetUI.Create(v134, l__id__129, {
							g = l__isGolden__130, 
							r = l__isRainbow__131, 
							dm = l__isDarkMatter__132
						});
						v134:FindFirstChild("Level"):Destroy();
						v134:SetAttribute("petId", l__id__129);
						v134:SetAttribute("name", v133.name);
						v134:SetAttribute("rarity", v133.rarity);
						v134:SetAttribute("isGolden", l__isGolden__130);
						v134:SetAttribute("isRainbow", l__isRainbow__131);
						v134:SetAttribute("isDarkMatter", l__isDarkMatter__132);
						local v135 = v134:GetAttribute("petId");
						local v136 = v134:GetAttribute("isGolden");
						local v137 = v134:GetAttribute("isRainbow");
						local v138 = v134:GetAttribute("isDarkMatter");
						if v136 then

						elseif v137 then

						elseif v138 then

						end;
						v134.PetIcon.ImageColor3 = Color3.new(1, 1, 1) or Color3.new(0, 0, 0);
						v134.PetIcon.Locked.Visible = false;
						if v136 then

						elseif v137 then

						elseif v138 then

						end;
						v126.LootRange.Range.Text = "???";
						v134.Parent = v126;
					elseif u6[v124.Data] then
						v126.NonPet.Icon.Position = u6[v124.Data].Position;
						v126.NonPet.Icon.Size = u6[v124.Data].Size;
					end;
					v126.Parent = l__Holder2Stage2__114;
					v126.Visible = true;				
				end;
			end;
		end;
	end;
	l__Daycare__4.EnrollStage12.ImageColor3 = 0 < #u2 and Color3.new(1, 1, 1) or Color3.new(0.5, 0.5, 0.5);
	PetsUpdate();
	u15 = false;
end;
function UpdateEnrollLazy(p7)
	u16 = true;
	UpdateEnroll(p7);
end;
function ScaleScrolling()
	local v139 = 0 < #u2;
	local v140 = v139 and l__Daycare__4.Holder1Stage2 or l__Daycare__4.HolderStage1;
	local v141
	if v139 then
		v141 = 2;
	else
		v141 = 1;
	end;
	local v142 = v140:FindFirstChildOfClass("UIGridLayout");
	local v143 = v140:FindFirstChildOfClass("UIPadding");
	local v144 = v1.Functions.ResolutionScale();
	local v145
	if v144 <= 0.5 then
		v145 = 4 / v141;
	elseif v144 <= 1.1 then
		v145 = 5 / v141;
	else
		v145 = 6 / v141;
	end;
	local v146 = (v140.AbsoluteSize.X - v140.ScrollBarThickness - v143.PaddingLeft.Offset - v143.PaddingRight.Offset) / v145 - v142.CellPadding.X.Offset;
	v142.CellSize = UDim2.new(0, v146, 0, v146);
	v142:ApplyLayout();
	v140.CanvasSize = UDim2.new(0, v142.AbsoluteContentSize.X, 0, v142.AbsoluteContentSize.Y + 30);
	if v139 then
		local l__Holder2Stage2__147 = l__Daycare__4.Holder2Stage2;
		local v148 = l__Holder2Stage2__147:FindFirstChildOfClass("UIListLayout");
		local v149 = l__Holder2Stage2__147:FindFirstChildOfClass("UIPadding");
		v148:ApplyLayout();
		l__Holder2Stage2__147.CanvasSize = UDim2.new(0, 0, 0, v148.AbsoluteContentSize.Y + v149.PaddingBottom.Offset + v149.PaddingTop.Offset);
	end;
end;
v1.GUIFX.ButtonFX(l__Daycare__4.OpenEnrollMenu);
l__Daycare__4.EnrollStage12.Activated:Connect(function()
	if not u1 then
		u1 = true;
		if #u2 > 0 then
			local v150 = v1.Save.Get();
			if v150 and v1.Message.New("Put these pets in daycare? They cannot be taken out early!", true) then
				local v151, v152, v153 = v1.Network.Invoke("Daycare: Enroll", u2);
				if v151 then
					u2 = {};
					l__Daycare__4.PetsAndLoot.Visible = false;
					l__Daycare__4.Categories.Visible = false;
					l__Daycare__4.View.Visible = true;
					if v153 then
						if v1.Shared.IsHardcore then
							v150.DaycareHardcoreQueue = v153;
						else
							v150.DaycareQueue = v153;
						end;
					end;
					l__Daycare__4.Title.Text = "Daycare!";
					UpdateView();
					UpdateEnrollLazy(true);
				else
					v1.Message.New(v152 or "Something went wrong!");
				end;
			end;
		end;
		u1 = false;
	end;
end);
v1.GUIFX.ButtonFX(l__Daycare__4.ClaimAll);
l__Daycare__4.ClaimAll.Activated:Connect(function()
	if not u1 then
		u1 = true;
		local v154 = v1.Save.Get();
		if not v154 then
			u1 = false;
			v1.Message.New("Something went wrong! Try re-logging!");
			return;
		end;
		assert(v154);
		local v155, v156, v157, v158, v159 = v1.Network.Invoke("Daycare: Claim", nil);
		if not v155 then
			v1.Message.New(v156 or "Something went wrong!");
			u1 = false;
			return;
		end;
		assert(v157);
		assert(v158);
		if v159 then
			if v1.Shared.IsHardcore then
				v154.DaycareHardcoreQueue = v159;
			else
				v154.DaycareQueue = v159;
			end;
			UpdateView();
		end;
		l__Daycare__4.Title.Text = "Your Loot!";
		UpdateClaim(v157, v158);
		l__Daycare__4.Categories.Visible = false;
		l__Daycare__4.LootView.Visible = true;
		l__Daycare__4.PetsAndLoot.Visible = false;
		l__Daycare__4.View.Visible = false;
		u5 = false;
		l__Daycare__4.Categories.ViewPets.Frame.PetReady.Visible = false;
		u1 = false;
	end;
end);
v1.GUIFX.ButtonFX(l__Daycare__4.UpgradeSlots);
l__Daycare__4.UpgradeSlots.Activated:Connect(function()
	local v160, v161
	if not u1 then
		u1 = true;
		v160, v161 = v1.Network.Invoke("Attempt Buy +10 Daycare Slots");
		if v160 == true then
			v1.Shared.PromptPurchase(1378709263, true);
			u1 = false;
			return;
		end;
	else
		return;
	end;
	v1.Message.New(v161);
	u1 = false;
end);
v1.GUIFX.ButtonFX(l__Daycare__4.OpenEnrollMenu);
l__Daycare__4.OpenEnrollMenu.Activated:Connect(function()
	if not u1 then
		u1 = true;
		UpdateEnrollLazy();
		l__Daycare__4.Title.Text = "Daycare!";
		l__Daycare__4.LootView.Visible = false;
		l__Daycare__4.Categories.Visible = false;
		l__Daycare__4.PetsAndLoot.Visible = true;
		u1 = false;
	end;
end);
v1.GUIFX.ButtonFX(l__Daycare__4.OpenViewMenu);
l__Daycare__4.OpenViewMenu.Activated:Connect(function()
	if not u1 then
		u1 = true;
		UpdateView();
		l__Daycare__4.Title.Text = "Daycare!";
		l__Daycare__4.LootView.Visible = false;
		l__Daycare__4.Categories.Visible = false;
		l__Daycare__4.View.Visible = true;
		u1 = false;
	end;
end);
v1.GUIFX.ButtonFX(l__Daycare__4.Close);
l__Daycare__4.Close.Activated:Connect(function()
	if not u1 then
		u1 = true;
		l__Daycare__4.TitleRight.Visible = false;
		l__Daycare__4.LootView.Visible = false;
		l__Daycare__4.Categories.Visible = true;
		l__Daycare__4.PetsAndLoot.Visible = false;
		l__Daycare__4.View.Visible = false;
		u2 = {};
		l__Daycare__4.Gui.Enabled = false;
		if u8 then
			u8 = nil;
			v1.Signal.Fire("Open Egg", "Huge Machine Egg 1", { u8 });
		end;
		u1 = false;
	end;
end);
v1.Signal.Fired("Window Opened"):Connect(function(p8)
	if p8 == l__Daycare__4.Gui then
		l__Daycare__4.LootView.Visible = false;
		l__Daycare__4.Categories.Visible = true;
		l__Daycare__4.PetsAndLoot.Visible = false;
		l__Daycare__4.View.Visible = false;
		l__Daycare__4.Title.Text = "Daycare!";
		v1.Audio.Play("rbxassetid://7495293012", script, 1, 0.4);
	end;
end);
v1.Signal.Fired("Window Closed"):Connect(function(p9)
	if p9 == l__Daycare__4.Gui then
		Update();
		l__Daycare__4.LootView.Visible = false;
		l__Daycare__4.Categories.Visible = true;
		l__Daycare__4.PetsAndLoot.Visible = false;
		l__Daycare__4.View.Visible = false;
	end;
end);
v1.Signal.Fired("Resolution Changed"):Connect(function()
	if l__Daycare__4.Gui.Enabled then
		task.defer(function()
			ScaleScrolling();
		end);
	end;
end);
v1.Signal.Fired("Stat Changed"):Connect(function(p10)
	if p10 == "DaycareQueue" then
		UpdateView();
	end;
	if p10 == "DaycareTier" then
		Update();
		UpdateView();
	end;
end);
UpdateEnrollLazy();
UpdateView();
Update();
l__Daycare__4.LootView.Visible = false;
l__Daycare__4.Categories.Visible = true;
l__Daycare__4.PetsAndLoot.Visible = false;
l__Daycare__4.View.Visible = false;
  -  Editar
  04:54:13.905    -  Editar
  04:54:13.905  ----- [2736] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Hoverboards -----  -  Editar
  04:54:13.905  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_Hoverboards = m_Library.GUI.Hoverboards;
local Random_new_ret = Random.new();
local t_Holder = t_Hoverboards.Container.Holder;
local t_Customize = m_Library.GUI.Main.Left.Tools.Hoverboard.Customize;
local bool1 = false;
function Equip(p1) -- Line: 25
	--[[
		Upvalues:
			[1] = m_Library
			[2] = Random_new_ret
	--]]
	local v1, v2 = m_Library.Network.Invoke("Equip Hoverboard", p1);
	if v1 then
		m_Library.Audio.Play("rbxassetid://8304479813", script, Random_new_ret:NextNumber(0.95, 1.05), 1);
		return;
	end
	m_Library.Message.New(v2 or "Something went wrong.");
end
function Update() -- Line: 35
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_Holder
			[3] = bool1
	--]]
	local u1 = m_Library.Save.Get();
	if not u1 then return end
	for key1, val1 in pairs(m_Library.Directory.Hoverboards) do
		local u2 = t_Holder:FindFirstChild(key1);
		if not u2 then
			u2 = m_Library.Assets.UI.Hoverboards.Hoverboard:Clone();
			u2.Icon.Image = val1.thumbnail;
			u2.Name = key1;
			u2.Speed:FindFirstChild(1).Visible = val1.speed >= 1;
			u2.Speed:FindFirstChild(2).Visible = val1.speed >= 2;
			u2.Speed:FindFirstChild(3).Visible = val1.speed >= 3;
			u2.Parent = t_Holder;
			m_Library.GUIFX.ButtonFX(u2);
			u2.Activated:Connect(function() -- Line: 55
				--[[
					Upvalues:
						[1] = bool1
						[2] = key1
				--]]
				if not bool1 then
					bool1 = true;
					Equip(key1);
					bool1 = false;
				end
			end);
			local function ShowOverlay() -- Line: 63
				--[[
					Upvalues:
						[1] = u1
						[2] = m_Library
						[3] = key1
						[4] = val1
						[5] = u2
				--]]
				u1 = m_Library.Save.Get();
				local v10 = m_Library.Functions.SearchArray(u1.Hoverboards, key1);
				local table1 = {
					{
						"Title",
						val1.name
					},
					{
						"HoverboardSpeed",
						val1.speed
					},
					{
						"HoverboardNeeded",
						val1.neededDesc
					}
				};
				if v10 then
					table.insert(table1, {"HoverboardUnlocked"});
				end
				m_Library.InfoOverlay.Add(u2, unpack(table1));
			end
			u2.MouseEnter:Connect(function() -- Line: 73
				--[[
					Upvalues:
						[1] = m_Library
						[2] = ShowOverlay
				--]]
				m_Library.Audio.Play("rbxassetid://6907626084", script, 1, 0.2);
				ShowOverlay();
			end);
			u2.SelectionGained:Connect(function() -- Line: 78
				--[[
					Upvalues:
						[1] = m_Library
						[2] = ShowOverlay
				--]]
				m_Library.Audio.Play("rbxassetid://6907626084", script, 1, 0.2);
				ShowOverlay();
			end);
		end
		local v8 = u1.EquippedHoverboard == key1;
		local v9 = m_Library.Functions.SearchArray(u1.Hoverboards, key1);
		u2.Locked.Visible = not v9;
		u2.Icon.ImageColor3 = v9 and Color3.fromRGB(255, 255, 255) or Color3.fromRGB(143, 143, 143);
		if v8 then
			u2.Background.BackgroundColor3 = Color3.fromRGB(64, 252, 59);
		else
			u2.Background.BackgroundColor3 = Color3.fromRGB(59, 177, 252) or Color3.fromRGB(143, 143, 143);
		end
		if v8 and not u2.Equipped.Visible then
			u2.Equipped.Size = UDim2.new(0.8, 0, 0.8, 0);
			m_Library.Functions.Tween(u2.Equipped, {Size = UDim2.new(0.4, 0, 0.4, 0)}, {
				0.25,
				"Back",
				"Out"
			});
		else
			u2.BackgroundColor3 = v8 and Color3.fromRGB(69, 239, 69) or Color3.fromRGB(59, 177, 252);
		end
		u2.Equipped.Visible = v8;
		u2.LayoutOrder = v9 and 1 or 100;
	end
	Scaling();
end
function Scaling() -- Line: 110
	--[[
		Upvalues:
			[1] = t_Holder
			[2] = m_Library
	--]]
	local UIGridLayout = t_Holder:FindFirstChildOfClass("UIGridLayout");
	local UIPadding = t_Holder:FindFirstChildOfClass("UIPadding");
	local v3 = m_Library.Functions.ResolutionScale();
	local num1 = 6;
	if v3 <= 0.65 then
		num1 = 3;
	elseif v3 <= 1 then
		num1 = 4;
	elseif v3 <= 1.2 then
		num1 = 5;
	end
	local v4 = (t_Holder.AbsoluteSize.X - t_Holder.ScrollBarThickness - UIPadding.PaddingLeft.Offset - UIPadding.PaddingRight.Offset) / num1 - UIGridLayout.CellPadding.X.Offset;
	local udim2 = UDim2.new(0, v4, 0, v4);
	UIGridLayout.CellSize = udim2;
	UIGridLayout:ApplyLayout();
	t_Holder.CanvasSize = UDim2.new(0, 0, 0, UIGridLayout.AbsoluteContentSize.Y + (UIPadding.PaddingTop.Offset + UIPadding.PaddingBottom.Offset));
end
function UpdateGamepassFrame() -- Line: 131
	--[[
		Upvalues:
			[1] = t_Hoverboards
			[2] = m_Library
	--]]
	local t_BuyGamepass = t_Hoverboards.BuyGamepass;
	local v5 = m_Library.Gamepasses.Owns(m_Library.Directory.Gamepasses.Hoverboard.ID);
	if v5 then
		t_BuyGamepass.Visible = false;
		t_Hoverboards.Container.Size = UDim2.new(1, 32, 1, 0);
		return;
	end
	t_BuyGamepass.Visible = true;
	t_Hoverboards.Container.Size = UDim2.new(1, 32, 0.8, -15);
end
function UpdateCustomizeButton() -- Line: 145
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_Customize
	--]]
	local t_HoverboardMenuActive = m_Library.Variables.HoverboardMenuActive;
	local v6 = m_Library.Save.Get();
	if not v6 then return end
	local v7 = m_Library.Directory.Hoverboards[v6.EquippedHoverboard];
	if v7 then
		t_Customize.HoverboardIcon.Image = v7.thumbnail;
	else
		t_Customize.HoverboardIcon.Image = m_Library.Directory.Hoverboards.Original.thumbnail;
	end
	if not t_Customize.Visible then
		local t_Position = t_Customize.Position;
		t_Customize.Position = UDim2.new(1, t_Position.X.Offset, t_Position.Y.Scale, t_Position.Y.Offset);
		t_Customize.Swap.Rotation = 0;
		m_Library.Functions.Tween(t_Customize, {Position = UDim2.new(1.5, t_Position.X.Offset, t_Position.Y.Scale, t_Position.Y.Offset)}, {
			0.2,
			"Expo",
			"Out"
		});
		local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 166
			--[[
				Upvalues:
					[1] = t_Customize
					[2] = m_Library
			--]]
			local os_clock_ret = os.clock();
			repeat
				local math_clamp_ret = math.clamp((os.clock() - os_clock_ret) / 0.3, 0, 1);
				t_Customize.Swap.Rotation = m_Library.Functions.Easing(math_clamp_ret, "Sine", "Out") * 360;
				m_Library.RenderStepped();
			until math_clamp_ret > 1 or not t_Customize.Visible;
		end);
		coroutine_wrap_ret();
	end
	t_Customize.Visible = t_HoverboardMenuActive;
end
m_Library.GUIFX.ButtonFX(t_Hoverboards.Close);
t_Hoverboards.Close.Activated:Connect(function() -- Line: 183
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_Hoverboards
	--]]
	if not bool1 then
		bool1 = true;
		t_Hoverboards.Gui.Enabled = false;
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_Hoverboards.BuyGamepass.Buy);
t_Hoverboards.BuyGamepass.Buy.Robux.Text = m_Library.Functions.Commas(m_Library.Functions.GetPrice(m_Library.Directory.Gamepasses.Hoverboard.ID));
t_Hoverboards.BuyGamepass.Buy.Activated:Connect(function() -- Line: 194
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
	--]]
	if not bool1 then
		bool1 = true;
		m_Library.Shared.PromptPurchase(m_Library.Directory.Gamepasses.Hoverboard.ID);
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_Customize);
t_Customize.Activated:Connect(function() -- Line: 204
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
			[3] = t_Hoverboards
	--]]
	if not bool1 and m_Library.WorldCmds.CanDoAction() then
		t_Hoverboards.Gui.Enabled = not t_Hoverboards.Gui.Enabled;
	end
end);
m_Library.Signal.Fired("Resolution Changed"):Connect(function() -- Line: 214
	task.defer(function() -- Line: 215
		Scaling();
	end);
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p2) -- Line: 221
	if p2 == "Hoverboards" or p2 == "EquippedHoverboard" then
		Update();
		UpdateCustomizeButton();
		return;
	end
	if p2 == "Gamepasses" then
		UpdateGamepassFrame();
	end
end);

m_Library.Signal.Fired("Toggled Hoverboard Menu"):Connect(function() -- Line: 231
	UpdateCustomizeButton();
end);
Update();
UpdateGamepassFrame();
UpdateCustomizeButton();
  -  Editar
  04:54:13.905    -  Editar
  04:54:13.905  ----- [2737] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Bank Client -----  -  Editar
  04:54:13.905  local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do game:GetService("RunService").Heartbeat:Wait(); end

local t_Bank = m_Library.GUI.Bank;
local t_Bank2 = m_Library.Assets.UI.Bank;
local t_BankLoading = m_Library.GUI.BankLoading;
local t_Settings = t_Bank.Container.Settings;
local Random_new_ret = Random.new();
local _ = m_Library.RunService:IsStudio();
local u1 = {};
local bool1 = false;
local u2 = {};
local bool2 = false;
local u3 = nil;
local bool3 = false;
local u4 = false;
local u5 = false;
local u6 = 0;
local table1 = {};
local u7 = 0;
local table2 = {};
local bool4 = false;
local bool5 = false;
local u8 = false;
local u9 = false;
local u10 = 0;
local u11 = 0;
local u12 = nil;
local u13 = nil;
local u14 = nil;
local u15 = nil;
local u16 = 0;
local u17 = nil;
function Deposit()
	local v1 = u7 > 0;
	local v2 = #table2 > 0;
	if not u5 or not bool3 or not v2 and not v1 then return end
	local v3 = "";
	if v2 and v1 then
		v3 = "Are you sure you want to deposit " .. m_Library.Functions.Commas(#table2) .. " Pet" .. (#table2 > 1 and "s" or "") .. " and " .. m_Library.Functions.Commas(u7) .. " Diamonds?";
	elseif v2 then
		v3 = "Are you sure you want to deposit " .. m_Library.Functions.Commas(#table2) .. " Pet" .. (#table2 > 1 and "s" or "") .. "?";
	elseif v1 then
		v3 = "Are you sure you want to deposit " .. m_Library.Functions.Commas(u7) .. " Diamonds?";
	end
	local v4 = m_Library.Message.New(v3, true);
	if v4 then
		Processing(true, true);
		local t_BUID = u3.BUID;
		local v48, v49 = m_Library.Network.Invoke("Bank Deposit", t_BUID, table2, u7);
		Processing(false);
		if v48 then
			m_Library.Audio.Play("rbxassetid://8168485698", script);
			m_Library.Message.New("\226\156\133 Success!");
			u5 = false;
			UpdateDeposit();
			UpdateBank(t_BUID);
			return;
		end
		m_Library.Message.New(v49 or "Something went wrong. Try again!");
	end
end
local bool6 = false;
local table3 = {};
local u18 = nil;
local u19 = nil;
local u20 = nil;
function updateInventoryDrag(p1, p2, p3, p4)  
	if not t_Bank.Gui.Enabled then return end
	if m_Library.Variables.MessageOpen then return end
	if not m_Library.FFlags.Get(m_Library.FFlags.Keys.DragDelete) then return end
	if u5 == false and u4 == false then return end
	if bool6 then return end
	bool6 = true;
	local v5 = u5 == true and t_Bank.Deposit.Pets or t_Bank.Container.Bank.Pets;
	local v6 = v5.AbsolutePosition.Y + v5.AbsoluteSize.Y;
	local t_Y = v5.AbsolutePosition.Y;
	if p2 == p4 then
		p4 = p4 + 1;
	end
	local vec2 = Vector2.new(p1, p2);
	local vec2_2 = Vector2.new(p3, p4);
	if (vec2 - vec2_2).magnitude < 20 then
		bool6 = false;
		return;
	end
	local table4 = {};
	for _, child2 in ipairs(v5:GetChildren()) do
		if not child2:isA("TextButton") then continue end
		table.insert(table4, child2);
	end
	local num1 = nil;
	for _, val3 in ipairs(table3) do
		local t_Name2 = val3.Name;
		local _ = m_Library.PetCmds.Get(t_Name2);
		local t_AbsolutePosition = val3.AbsolutePosition;
		local v50 = t_AbsolutePosition.X or 0;
		local v51 = t_AbsolutePosition.Y or 0;
		if v6 < v51 or v51 < t_Y then continue end
		local t_AbsoluteSize = val3.AbsoluteSize;
		local vec2_5 = Vector2.new(v50, v51);
		local vec2_6 = Vector2.new(v50 + t_AbsoluteSize.X, v51 + t_AbsoluteSize.Y);
		if m_Library.Functions.CheckRectangleIntersection(vec2, vec2_2, vec2_5, vec2_6) then continue end
		if num1 == nil then
			num1 = 1;
		end
		if num1 == 1 then
			for _, val23 in ipairs(u5 == true and table2 or table1) do
				if val23 ~= t_Name2 then continue end
				SelectPet(u5 == true and table2 or table1, t_Name2);
				if u5 == true then
					UpdateDeposit();
					break;
				end
				UpdateBank();
				UpdateWithdraw();
				break;
			end
		end
		table.remove(table3, table.find(table3, val3));
	end
	for _, val4 in ipairs(table4) do
		if table.find(table3, val4) or not val4:GetAttribute("isVisible") or not val4.Visible then continue end
		local t_X = val4.AbsolutePosition.X;
		local t_Y2 = val4.AbsolutePosition.Y;
		local vec2_3 = Vector2.new(t_X, t_Y2);
		local vec2_4 = Vector2.new(t_X + val4.AbsoluteSize.X, t_Y2 + val4.AbsoluteSize.Y);
		local bool7 = false;
		if not m_Library.Functions.CheckRectangleIntersection(vec2, vec2_2, vec2_3, vec2_4) or v6 < t_Y2 + val4.AbsoluteSize.Y / 2 or t_Y2 + val4.AbsoluteSize.Y / 2 < t_Y then continue end
		local t_Name = val4.Name;
		local v52 = nil;
		local v53 = nil;
		if u5 == true then
			v52 = m_Library.PetCmds.Get(t_Name);
			if not v52 then continue end
			assert(v52);
			v53 = m_Library.Directory.Pets[v52.id];
		end
		if not m_Library.Functions.SearchArray(u5 == true and table2 or table1, t_Name) then
			if num1 == nil then
				num1 = 0;
			end
			if num1 == 0 then
				if u5 == true then
					if v52.l or v53.titanic then continue end
					local v97 = m_Library.Signal.Invoke("Is Trading Booth Pet", t_Name);
					if v97 then continue end
				end
				SelectPet(u5 == true and table2 or table1, t_Name);
				if u5 then
					UpdateDeposit();
				else
					UpdateBank();
					UpdateWithdraw();
				end
				bool7 = true;
			end
		end
		if not bool7 then continue end
		table.insert(table3, val4);
	end
	bool6 = false;
end
function newDrag()  
	assert(u19 and u20);
	local Mouse = game.Players.LocalPlayer:GetMouse();
	local t_X2 = Mouse.X;
	local t_Y3 = Mouse.Y;
	u18 = Instance.new("ScreenGui");
	assert(u18);
	u18.DisplayOrder = 9999;
	u18.Name = "DragUI";
	local Frame = Instance.new("Frame");
	Frame.BackgroundColor3 = Color3.fromRGB(59, 177, 252);
	Frame.Parent = u18;
	u18.Parent = m_Library.LocalPlayer.PlayerGui;
	Frame.Position = UDim2.new(0, u19, 0, u20);
	Frame.Size = UDim2.new(0, t_X2 - u19, 0, t_Y3 - u20);
	Frame.ZIndex = 9999;
	Frame.BackgroundTransparency = 0.5;
end
function updateDrag() 
	local DragUI = m_Library.LocalPlayer.PlayerGui:FindFirstChild("DragUI");
	if not DragUI then return end
	local Frame2 = DragUI:FindFirstChild("Frame");
	if not Frame2 then return end
	assert(u19 and u20);
	local Mouse2 = game.Players.LocalPlayer:GetMouse();
	local t_X3 = Mouse2.X;
	local t_Y4 = Mouse2.Y;
	Frame2.Position = UDim2.new(0, u19, 0, u20);
	Frame2.Size = UDim2.new(0, t_X3 - u19, 0, t_Y4 - u20);
end
m_Library.Signal.Fired("Click Drag Complete"):Connect(function() 
	table3 = {};
end);
m_Library.Signal.Fired("Click Drag Update"):Connect(updateInventoryDrag);
m_Library.UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)  
	if not t_Bank.Gui.Enabled then return end
	if m_Library.Variables.MessageOpen then return end
	if not m_Library.FFlags.Get(m_Library.FFlags.Keys.DragDelete) then return end
	if not m_Library.FFlags.Get(m_Library.FFlags.Keys.BankDragDelete) then return end
	if u5 == false and u4 == false then return end
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		local Mouse3 = game.Players.LocalPlayer:GetMouse();
		u19 = Mouse3.X;
		u20 = Mouse3.Y;
		m_Library.Signal.Fire("Click Drag Start", u19, u20);
	end
end);
m_Library.UserInputService.InputEnded:Connect(function(input2, gameProcessedEvent2)  
	if input2.UserInputType == Enum.UserInputType.MouseButton1 then
		local Mouse4 = game.Players.LocalPlayer:GetMouse();
		local t_X4 = Mouse4.X;
		local t_Y5 = Mouse4.Y;
		if u19 and u20 then
			m_Library.Signal.Fire("Click Drag Complete", u19, u20, t_X4, t_Y5);
			if u18 then
				u18:Destroy();
				u18 = nil;
			end
			u19 = nil;
			u20 = nil;
		end
	end
end);
m_Library.UserInputService.InputChanged:Connect(function(input3, gameProcessedEvent3)  
	if input3.UserInputType == Enum.UserInputType.MouseMovement and u19 and u20 then
		if not u18 then
			newDrag();
			return;
		end
		updateDrag();
		local Mouse5 = game.Players.LocalPlayer:GetMouse();
		local t_X5 = Mouse5.X;
		local t_Y6 = Mouse5.Y;
		m_Library.Signal.Fire("Click Drag Update", u19, u20, t_X5, t_Y6);
	end
end);
function Withdraw() 
	local v7 = u6 > 0;
	local v8 = #table1 > 0;
	if not u4 or not bool3 or not v8 and not v7 then return end
	local v9 = "";
	if v8 and v7 then
		v9 = "Are you sure you want to withdraw " .. m_Library.Functions.Commas(#table1) .. " Pet" .. (#table1 > 1 and "s" or "") .. " and " .. m_Library.Functions.Commas(u6) .. " Diamonds?";
	elseif v8 then
		v9 = "Are you sure you want to withdraw " .. m_Library.Functions.Commas(#table1) .. " Pet" .. (#table1 > 1 and "s" or "") .. "?";
	elseif v7 then
		v9 = "Are you sure you want to withdraw " .. m_Library.Functions.Commas(u6) .. " Diamonds?";
	end
	local v10 = m_Library.Message.New(v9, true);
	if v10 then
		Processing(true, true);
		local t_BUID2 = u3.BUID;
		local v54, v55 = m_Library.Network.Invoke("Bank Withdraw", t_BUID2, table1, u6);
		Processing(false);
		if v54 then
			m_Library.Audio.Play("rbxassetid://8168485924", script);
			m_Library.Message.New("\226\156\133 Success!");
			u4 = false;
			UpdateWithdraw();
			UpdateBank(t_BUID2);
			return;
		end
		m_Library.Message.New(v55 or "Something went wrong. Try again!");
	end
end
function UpgradeBank(p5)  
	if not bool3 then return end
	local v11 = u3.Tier + 1;
	local t_BUID3 = u3.BUID;
	if p5 then
		local t_ProductId = m_Library.Directory.Banks[v11].ProductId;
		local v56, v57 = m_Library.Network.Invoke("Prompt Upgrade Bank", t_BUID3, t_ProductId);
		if v56 then
			m_Library.Shared.PromptPurchase(t_ProductId, true);
			return;
		end
		m_Library.Message.New(v57 or "Something went wrong. Try again later!");
		return;
	end
	local v12 = m_Library.Message.New("Are you sure you want to upgrade your bank to Tier " .. v11 .. "?", true);
	if v12 then
		Processing(true);
		local v58, v59 = m_Library.Network.Invoke("Upgrade Bank", t_BUID3);
		Processing(false);
		if v58 then
			m_Library.Audio.Play("rbxassetid://8167470240", script);
			m_Library.Message.New("\226\156\133 Success! Your bank is now Tier " .. v11 .. "!");
			GetBank(t_BUID3);
			UpdateSettings();
			return;
		end
		m_Library.Message.New(v59 or "Something went wrong. Try again!");
	end
end
function LeaveBank(p6)  
	local v13 = m_Library.Message.New("Are you sure you want to leave this bank?", true);
	if v13 then
		Processing(true);
		local v60, v61 = m_Library.Network.Invoke("Leave Bank", p6 or u3.BUID);
		Processing(false);
		if v60 then
			GetMyBanks();
			UpdateSide();
			SwitchWindow("Empty");
			return;
		end
		m_Library.Message.New(v61 or "Something went wrong. Try again!");
	end
end
function BuyBank()  
	local v14 = m_Library.Message.New("This costs " .. m_Library.Functions.Commas(m_Library.Directory.Banks[1].Cost) .. " Diamonds. Are you sure?", true);
	if v14 then
		Processing(true);
		local v62, v63, v64 = m_Library.Network.Invoke("Buy Bank");
		Processing(false);
		if v62 then
			m_Library.Audio.Play("rbxassetid://8167470240", script);
			m_Library.Message.New("\240\159\142\137 Congrats! You now own a bank account!");
			GetMyBanks();
			UpdateSide();
			UpdateBank(v64);
			return;
		end
		m_Library.Message.New(v63 or "Something went wrong. Try again!");
	end
end
function CancelOutgoingInvites()  
	local v15 = m_Library.Message.New("Are you sure? This will cancel ALL outgoing invites.", true);
	if v15 then
		Processing(true);
		local v65, v66 = m_Library.Network.Invoke("Cancel Bank Outgoing Invites");
		Processing(false);
		if v65 then
			m_Library.Message.New("Any outgoing invites are now canceled!");
			return;
		end
		m_Library.Message.New(v66 or "Something went wrong. Try again!");
	end
end
function DecideInvite(p7)  
	local v16 = m_Library.Message.New("Do you want to accept this invite?", true);
	if v16 then
		local v67, v68 = m_Library.Network.Invoke("Accept Bank Invite", p7);
		if v67 then
			m_Library.Message.New("Success! You are now a member.");
			GetMyBanks();
			GetMyInvites();
			UpdateSide();
			UpdateBank(p7);
			return;
		end
		m_Library.Message.New(v68 or "Something went wrong. Try again!");
		return;
	end
	local v17, _ = m_Library.Network.Invoke("Decline Bank Invite", p7);
	if v17 then
		GetMyInvites();
		UpdateSide();
	end
end
function RejectAllInvites() 
	local v18 = m_Library.Message.New("Are you sure you want to reject ALL invites?", true);
	if v18 then
		local v69, _ = m_Library.Network.Invoke("Decline All Bank Invites");
		if v69 then
			GetMyInvites();
			UpdateSide();
		end
	end
end
function InviteToBank(p8) 
	local UserIdFromNameAsync = nil;
	local success = pcall(function()  
		UserIdFromNameAsync = game.Players:GetUserIdFromNameAsync(p8 or "");
	end);
	
	local TESTID = {
		["Player1"] = -1,
		["Player2"] = -2
	}
	
	if not success or not UserIdFromNameAsync and not (TESTID[p8] and m_Library.RunService:IsStudio()) then
		m_Library.Message.New("Couldn't find player. Are you sure that's the correct @?");
		return;
	end
	
	if TESTID[p8] then
		UserIdFromNameAsync = TESTID[p8]
	end
	
	if u3.Owner == UserIdFromNameAsync then
		m_Library.Message.New("You may not invite yourself!");
		return;
	end
	if table.find(u3.Players, UserIdFromNameAsync) then
		m_Library.Message.New("Player is already a member of your bank!");
		return;
	end
	local v19 = m_Library.Message.New("Are you sure you want to invite " .. p8 .. " to your bank? They will have access to your pets & diamonds.", true);
	if v19 then
		Processing(true);
		local v70, v71 = m_Library.Network.Invoke("Invite To Bank", u3.BUID, UserIdFromNameAsync);
		Processing(false);
		if v70 then
			m_Library.Message.New("\240\159\147\169 Bank invite sent to " .. p8 .. "!");
		else
			m_Library.Message.New(v71 or "Something went wrong. Try again!");
		end
	end
end
function KickMember(p9, p10)  
	local v20 = m_Library.Message.New("Are you sure you want to kick " .. p10 .. " from your bank?", true);
	if v20 then
		Processing(true);
		local t_BUID4 = u3.BUID;
		local v72, v73 = m_Library.Network.Invoke("Kick From Bank", t_BUID4, p9);
		Processing(false);
		if v72 then
			m_Library.Message.New("\226\156\133 Player has been kicked.");
			GetBank(t_BUID4);
			UpdateSettings();
			return;
		end
		m_Library.Message.New(v73 or "Something went wrong. Try again!");
	end
end
function CollectInterest()  
	if not bool3 then return end
	m_Library.Message.New("This is temporarily disabled!");
end
function UpdateBank(p11) 
	local t_Bank3 = t_Bank.Container.Bank;
	local t_Pets = t_Bank3.Pets;
	local t_Balance = t_Bank3.Bottom.Balance;
	local t_Top = t_Bank3.Top;
	local function LocalProcessing(p24)  
		local t_Processing = t_Bank.Container.Bank.Processing;
		if p24 and not u15 then
			u15 = m_Library.GIF.Create(t_Processing.GIF, {
				100,
				100
			}, {
				5,
				6
			}, 28, 0.65, true);
			t_Processing.Visible = true;
			t_Bank3.NoPets.Visible = false;
			t_Pets.Visible = false;
			return;
		end
		if u15 then
			u15();
			u15 = nil;
			t_Processing.Visible = false;
			t_Pets.Visible = true;
		end
	end
	if p11 ~= u16 then
		LocalProcessing(true);
		u16 = p11;
		t_Top.PetsAm.Text = "";
		t_Balance.Amount.Text = "";
		t_Bank3.Pets.CanvasPosition = Vector2.new();
	end
	local Bank = nil;
	if p11 then
		Bank = GetBank(p11);
		u4 = false;
		UpdateWithdraw();
	end
	if not bool3 then
		for _, child20 in ipairs(t_Pets:GetChildren()) do
			if not child20:GetAttribute("PetId") then continue end
			child20:Destroy();
		end
		if Bank and string.find(Bank, "banned") then
			u17 = p11;
			SwitchWindow("Banned");
		end
		return;
	end
	SwitchWindow("Bank");
	UpdateSide();
	local v22 = u3;
	if not v22 then return end
	if not v22.Storage then return end
	local table5 = {};
	local t_Pets2 = v22.Storage.Pets;
	local u23 = v22.Owner == (m_Library.LocalPlayer:GetAttribute("CustomUserId") or m_Library.LocalPlayer.UserId);
	t_Bank3.Bottom.Settings.Visible = not u4 and u23;
	local t_Search = t_Bank3.Top.Search;
	local v74;
	if t_Search.Query.Text == "" then
		v74 = false;
	else
		v74 = tostring(t_Search.Query.Text) ~= nil;
	end
	local v23 = v74 and string.lower(tostring(t_Search.Query.Text)) or nil;
	local v24 = 0;
	local table_clone_ret = table.clone(t_Pets2);
	local v25 = m_Library.Shared.SortPets(nil, table_clone_ret);
	for key5, val5 in pairs(v25) do
		local t_uid = val5.uid;
		local v75 = m_Library.Directory.Pets[val5.id];
		local t_name = v75.name;
		local t_rarity = v75.rarity;
		local t_powers = val5.powers;
		local t_g = val5.g;
		local t_r = val5.r;
		local t_dm = val5.dm;
		local t_sh = val5.sh;
		local t_l = val5.l;
		local v76 = t_Pets:FindFirstChild(t_uid);
		if not v76 then
			v24 = v24 + 1;
			if v24 % 250 == 0 then
				m_Library.Heartbeat();
			end
			v76 = m_Library.Assets.UI.Inventory.Pet:Clone();
			v76.Name = t_uid;
			v76:SetAttribute("PetId", t_uid);
			m_Library.PetUI.Create(v76, t_uid, val5);
			m_Library.GUIFX.ButtonFX(v76);
			v76.PetIcon.ImageTransparency = (not val5.l or u23) and 0 or 0.5;
			v76.Parent = t_Pets;
			v76.Activated:Connect(function() 
				if not bool4 and u4 then
					bool4 = true;
					if val5.l and not u23 then
						m_Library.Message.New("You cannot withdraw someone else's locked pets!");
					else
						SelectPet(table1, t_uid);
						UpdateBank();
						UpdateWithdraw();
					end
					bool4 = false;
				end
			end);
		end
		v76.LayoutOrder = key5;
		v76.Level:FindFirstChildOfClass("UIStroke").Thickness = u9 and 2 or 4;
		v76.HC:FindFirstChildOfClass("UIStroke").Thickness = u9 and 2 or 4;
		local v77 = u4 and m_Library.Functions.SearchArray(table1, t_uid);
		v76.Equipped.Visible = v77;
		if v74 then
			local bool8 = false;
			if string.find(string.lower(t_name), v23, 1, true) then
				bool8 = true;
			elseif val5.nk and string.find(string.lower(val5.nk), v23, 1, true) then
				bool8 = true;
			elseif string.find(string.lower(t_rarity), v23, 1, true) then
				bool8 = true;
			elseif t_sh and string.find("shiny", v23, 1, true) then
				bool8 = true;
			elseif t_g and (string.find("gold", v23, 1, true) or string.find("golden", v23, 1, true)) then
				bool8 = true;
			elseif t_r and string.find("rainbow", v23, 1, true) then
				bool8 = true;
			elseif t_dm and string.find("dark matter", v23, 1, true) then
				bool8 = true;
			elseif t_l and string.find("lock", v23, 1, true) then
				bool8 = true;
			elseif t_powers and #t_powers > 0 then
				for _, val25 in ipairs(t_powers) do
					local unpack_ret1, unpack_ret2 = unpack(val25);
					local v101, _ = m_Library.Shared.GetPowerDir(unpack_ret1, unpack_ret2);
					if not string.find(string.lower(v101.title), v23, 1, true) then continue end
					bool8 = true;
					break;
				end
			end
			v76.Visible = bool8 or v77;
		else
			v76.Visible = true;
		end
		table5[t_uid] = true;
	end
	for _, child6 in ipairs(t_Pets:GetChildren()) do
		local Attribute = child6:GetAttribute("PetId");
		if not Attribute or table5[Attribute] then continue end
		child6:Destroy();
	end
	t_Bank3.NoPets.Text = "Bank is empty. Deposit some pets! \240\159\153\130";
	t_Bank3.NoPets.Visible = #v25 <= 0;
	t_Balance.Amount.Text = m_Library.Functions.NumberShorten(v22.Storage.Currency.Diamonds, false);
	t_Top.PetsAm.Text = #v25 .. " Pets";
	t_Top.Grid.Image = u9 and "rbxassetid://6958935961" or "rbxassetid://6958936066";
	BankScrolling();
	LocalProcessing(false);
end
function UpdateSide() 
	local t_Holder = t_Bank.Side.Holder;
	u10 = u10 + 1;
	for index1 = 1, 2 do
		local FindFirstChild_ret = t_Holder:FindFirstChild(index1 == 1 and "_BanksLoading" or "_InvitesLoading");
		if index1 == 1 and not bool1 or index1 == 2 and not bool2 then
			if not FindFirstChild_ret then
				local Clone_ret3 = t_Bank2.Side.Loading:Clone();
				Clone_ret3.LayoutOrder = index1 == 1 and 2 or 101;
				Clone_ret3.Name = index1 == 1 and "_BanksLoading" or "_InvitesLoading";
				Clone_ret3.Parent = t_Holder;
				m_Library.GIF.Create(Clone_ret3.GIF, {
					100,
					100
				}, {
					5,
					6
				}, 28, 0.65, true);
			end
		elseif FindFirstChild_ret then
			FindFirstChild_ret:Destroy();
		end
	end
	if bool1 then
		local v78 = false;
		for _, val21 in ipairs(u1) do
			local t_BUID6 = val21.BUID;
			local t_Owner = val21.Owner;
			local v87 = t_Owner == (m_Library.LocalPlayer:GetAttribute("CustomUserId") or m_Library.LocalPlayer.UserId);
			local u28 = t_Holder:FindFirstChild(t_BUID6);
			if not u28 then
				if v87 then
					u28 = t_Bank2.Side.MyBank:Clone();
					u28.LayoutOrder = 2;
				else
					u28 = t_Bank2.Side.Account:Clone();
					u28.LayoutOrder = 10;
					coroutine.wrap(function() 
						u28.Owner.Text = "...";
						local v99 = m_Library.Functions.UserIdToUsername(t_Owner);
						if u28 and u28:FindFirstChild("Owner") then
							u28.Owner.Text = "@" .. v99 or "???";
						end
					end)()
				end
				u28.Name = t_BUID6;
				u28.Parent = t_Holder;
				m_Library.GUIFX.ButtonFX(u28);
				u28.Activated:Connect(function()  
					if not bool4 and not bool5 then
						bool4 = true;
						bool5 = true;
						m_Library.Audio.Play({
							"rbxassetid://8168486176",
							"rbxassetid://8168485794"
						}, script, Random_new_ret:NextNumber(0.95, 1.01), 0.5);
						UpdateBank(t_BUID6);
						bool4 = false;
						task.wait(2);
						bool5 = false;
					end
				end);
			end
			u28:SetAttribute("Tick", u10);
			if bool3 and u3.BUID == t_BUID6 then
				u28.Image = "rbxassetid://8121303915";
				u28.HoverImage = "rbxassetid://8121307910";
			else
				u28.Image = "rbxassetid://6869680115";
				u28.HoverImage = "rbxassetid://6903539993";
			end
			v78 = v78 or v87;
		end
		local _BuyBankButton = t_Holder:FindFirstChild("_BuyBankButton");
		if not v78 and not _BuyBankButton then
			local Clone_ret2 = t_Bank2.Side.BuyAccount:Clone();
			Clone_ret2.LayoutOrder = 2;
			Clone_ret2.Name = "_BuyBankButton";
			Clone_ret2.Parent = t_Holder;
			m_Library.GUIFX.ButtonFX(Clone_ret2);
			Clone_ret2.Activated:Connect(function()  
				if not bool4 then
					bool4 = true;
					BuyBank();
					bool4 = false;
				end
			end);
		elseif v78 and _BuyBankButton then
			_BuyBankButton:Destroy();
		end
	end
	if bool2 then
		local v79 = #u2 > 0;
		if v79 then
			local v88 = 0;
			for _, val24 in ipairs(u2) do
				local t_BUID5 = val24.BUID;
				local u29 = t_Holder:FindFirstChild("INVITE-" .. t_BUID5);
				if not u29 then
					u29 = t_Bank2.Side.Invite:Clone();
					u29.Name = "INVITE-" .. t_BUID5;
					coroutine.wrap(function()  
						u29.Player.Text = "...";
						local v100 = m_Library.Functions.UserIdToUsername(val24.Sender);
						if u29:FindFirstChild("Player") then
							u29.Player.Text = "@" .. v100 or "???";
						end
					end)()
					u29.LayoutOrder = val24.Timestamp;
					u29.Parent = t_Holder;
					if v88 < val24.Timestamp then
						v88 = val24.Timestamp;
					end
					m_Library.GUIFX.ButtonFX(u29);
					u29.Activated:Connect(function()  
						if not bool4 then
							bool4 = true;
							DecideInvite(val24.BUID);
							bool4 = false;
						end
					end);
				end
				u29:SetAttribute("Tick", u10);
			end
			local v89 = t_Holder:FindFirstChild("RejectAll");
			if not v89 then
				v89 = t_Bank2.Side.Invite:Clone();
				v89.HoverImage = "rbxassetid://7045637564";
				v89.Image = "rbxassetid://7045637481";
				v89.PressedImage = "rbxassetid://6903534547";
				v89:FindFirstChild("Icon").Visible = false;
				v89:FindFirstChild("Player").Position = UDim2.new(0.25, 0, 0, 0);
				v89.Name = "RejectAll";
				v89.Player.Text = "Reject All";
				v89.LayoutOrder = v88 + 1;
				v89.Parent = t_Holder;
				m_Library.GUIFX.ButtonFX(v89);
				v89.Activated:Connect(function() 
					if not bool4 then
						bool4 = true;
						RejectAllInvites();
						bool4 = false;
					end
				end);
			end
			v89.Visible = v88 > 0;
		end
		local _NoInvites = t_Holder:FindFirstChild("_NoInvites");
		if not v79 and not _NoInvites then
			local Clone_ret = t_Bank2.Side.Desc:Clone();
			Clone_ret.Title.Text = "No invites pending.";
			Clone_ret.Name = "_NoInvites";
			Clone_ret.LayoutOrder = 101;
			Clone_ret.Parent = t_Holder;
		elseif v79 and _NoInvites then
			_NoInvites:Destroy();
		end
	end
	for _, child7 in ipairs(t_Holder:GetChildren()) do
		local Attribute2 = child7:GetAttribute("Tick");
		if not Attribute2 or Attribute2 == u10 then continue end
		child7:Destroy();
	end
	local _Banks = t_Holder:FindFirstChild("_Banks");
	t_Holder:FindFirstChild("_Invites").Title.Text = #u2 >= 1 and "Invites (" .. #u2 .. "/50)" or "Invites";
	_Banks.Title.Text = #u1 >= 1 and "Banks (" .. #u1 .. "/5)" or "Banks";
	SideScrolling();
end
function UpdateHistory() 
	local function TranslateHistory(p25) 
		local t_kind = p25.kind;
		local table6 = {
			[1] = "%s deposited %s pets & %s Diamonds.",
			[2] = "%s withdrew %s pets & %s Diamonds.",
			[3] = "%s was invited.",
			[4] = "%s was kicked.",
			[5] = "%s left!",
			[6] = "%s joined!",
			[7] = "Upgraded to Tier %s.",
			[8] = "Collected %s Diamonds.",
			[9] = "%s pet(s) were deleted for being duplicated."
		};
		local string_format_ret = nil;
		if t_kind == 1 or t_kind == 2 then
			string_format_ret = string.format(table6[t_kind], m_Library.Functions.UserIdToUsername(p25.sender), m_Library.Functions.Commas(p25.pets), m_Library.Functions.NumberShorten(p25.diamonds or 0));
		elseif t_kind == 3 or t_kind == 4 or t_kind == 5 or t_kind == 6 then
			string_format_ret = string.format(table6[t_kind], m_Library.Functions.UserIdToUsername(p25.target or p25.sender));
		elseif t_kind == 7 or t_kind == 8 then
			string_format_ret = string.format(table6[t_kind], m_Library.Functions.NumberShorten(p25.amount or p25.newLevel or 0));
		elseif t_kind == 9 then
			string_format_ret = string.format(table6[t_kind], m_Library.Functions.Commas(p25.pets or 0));
		end
		local v86 = workspace:GetServerTimeNow() - p25.ts;
		return string_format_ret, v86 <= 120 and "Just now" or m_Library.Functions.TimeString(v86) .. " ago";
	end
	local t_History = t_Settings.History;
	for _, child8 in ipairs(t_History.Logs:GetChildren()) do
		if child8.ClassName ~= "Frame" then continue end
		child8:Destroy();
	end
	local t_History2 = u3.History;
	for key9, val9 in ipairs(t_History2) do
		local Clone_ret5 = t_Bank2.History.HistoryLog:Clone();
		Clone_ret5.LayoutOrder = key9;
		Clone_ret5.desc.Text = "Loading...";
		Clone_ret5.date.Text = "";
		Clone_ret5.Name = "Log" .. key9;
		Clone_ret5.Parent = t_History.Logs;
		coroutine.wrap(function()  
			local v92, v93 = TranslateHistory(val9);
			if Clone_ret5 and Clone_ret5.Parent then
				Clone_ret5.desc.Text = v92;
				Clone_ret5.date.Text = v93;
			end
		end)()
	end
	if #t_History2 <= 0 then
		local Clone_ret4 = t_Bank2.History.HistoryLog:Clone();
		Clone_ret4.LayoutOrder = 1;
		Clone_ret4.desc.Text = "No recent history";
		Clone_ret4.Name = "Log1";
		Clone_ret4.Parent = t_History.Logs;
	end
end
function UpdateMembers() 
	local t_List = t_Settings.Members.Members.List;
	for _, child10 in ipairs(t_List:GetChildren()) do
		if child10.ClassName ~= "Frame" then continue end
		child10:Destroy();
	end
	local Clone_ret6 = t_Bank2.Settings.Owner:Clone();
	Clone_ret6.Username.Text = m_Library.LocalPlayer.Name;
	Clone_ret6.LayoutOrder = 1;
	Clone_ret6.Parent = t_List;
	local t_Players = u3.Players;
	for key11, val11 in ipairs(t_Players) do
		local Clone_ret9 = t_Bank2.Settings.Member:Clone();
		Clone_ret9.LayoutOrder = key11 + 1;
		local u25 = nil;
		coroutine.wrap(function() 
			u25 = m_Library.Functions.UserIdToUsername(val11);
			Clone_ret9:WaitForChild("Username").Text = "@" .. u25 or "???";
		end)()
		Clone_ret9.Parent = t_List;
		m_Library.GUIFX.ButtonFX(Clone_ret9.Kick);
		Clone_ret9.Kick.Activated:Connect(function() 
			if not bool4 then
				bool4 = true;
				KickMember(val11, "@" .. u25 or "[UNKNOWN PLAYER]");
				bool4 = false;
			end
		end);
	end
	local v26 = m_Library.Directory.Banks[u3.Tier].MaxPlayers - (#t_Players + 1);
	local math_max_ret = math.max(6 - (#t_Players + 1) - v26, 0);
	for index2 = 1, v26 do
		local Clone_ret8 = t_Bank2.Settings.MemberEmpty:Clone();
		Clone_ret8.LayoutOrder = index2 + 20;
		Clone_ret8.Parent = t_List;
	end
	for index3 = 1, math_max_ret do
		local Clone_ret7 = t_Bank2.Settings.MemberLocked:Clone();
		Clone_ret7.LayoutOrder = index3 + 100;
		Clone_ret7.Parent = t_List;
	end
end
function UpdateUpgrades()  
	local t_Upgrades = t_Settings.Upgrades;
	local v27 = m_Library.Directory.Banks[u3.Tier];
	local v28 = m_Library.Directory.Banks[u3.Tier + 1];
	local v29 = not v28;
	t_Upgrades.CostFrame.isMax.Visible = v29;
	t_Upgrades.CostFrame.Cost.Visible = not v29;
	t_Upgrades.CostFrame.Currency.Visible = not v29;
	t_Upgrades.Buttons.Visible = not v29;
	t_Upgrades.Info.Current.Tier.Text = "Tier " .. v27.Tier;
	t_Upgrades.Info.Current.Title.Text = v27.Title;
	if not v29 then
		t_Upgrades.Info.New.Tier.Text = "Tier " .. v28.Tier;
		t_Upgrades.Info.New.Title.Text = v28.Title;
		t_Upgrades.CostFrame.Cost.Text = m_Library.Functions.NumberShorten(v28.Cost, false);
		if v28.ProductId ~= 0 then
			t_Upgrades.Buttons.BuyRobux.Robux.Text = m_Library.Functions.Commas(m_Library.Functions.GetPrice(v28.ProductId, true));
			t_Upgrades.Buttons.BuyRobux.Visible = true;
		else
			t_Upgrades.Buttons.BuyRobux.Visible = false;
		end
	else
		t_Upgrades.Info.New.Tier.Text = "Max";
		t_Upgrades.Info.New.Title.Text = "You have the best bank!";
	end
	for _, child12 in ipairs(t_Upgrades.Stats:GetChildren()) do
		if child12.ClassName ~= "Frame" then continue end
		if child12.Name == "MaxDiamonds" then
			child12.Old.Amount.Text = m_Library.Functions.NumberShorten(v27.MaxDiamonds, false) .. " Cap";
			child12.New.Amount.Text = v29 and "Max" or m_Library.Functions.NumberShorten(v28.MaxDiamonds, false) .. " Cap";
			continue;
		end
		if child12.Name == "MaxPlayers" then
			child12.Old.Amount.Text = v27.MaxPlayers .. " Players";
			child12.New.Amount.Text = v29 and "Max" or v28.MaxPlayers .. " Players";
			continue;
		end
		if child12.Name ~= "PetSlots" then continue end
		child12.Old.Amount.Text = v27.PetSlots .. " Pets";
		child12.New.Amount.Text = v29 and "Max" or v28.PetSlots .. " Pets";
	end
end
function UpdateSettings() 
	if not bool3 then return end
	UpdateUpgrades();
	UpdateHistory();
	UpdateMembers();
	SwitchWindow("Settings");
end
function SelectPet(p12, p13) 
	for key13, val13 in ipairs(p12) do
		if val13 ~= p13 then continue end
		m_Library.Audio.Play("rbxassetid://7139317909", script, Random_new_ret:NextNumber(0.95, 1.05), 0.75);
		table.remove(p12, key13);
		return;
	end
	if #p12 < m_Library.Shared.BankMaxPetsPerTransaction then
		m_Library.Audio.Play("rbxassetid://7139317934", script, Random_new_ret:NextNumber(0.95, 1.05), 0.75);
		table.insert(p12, p13);
	end
end
function UpdateDeposit()  
	t_Bank.Container.Visible = not u5;
	t_Bank.Side.Visible = not u5;
	t_Bank.Deposit.Visible = u5;
	t_Bank.Deposit.Bottom.Diamonds.Add.Visible = m_Library.Variables.Console;
	t_Bank.Deposit.Bottom.Diamonds.Minus.Visible = m_Library.Variables.Console;
	t_Bank.Deposit.Bottom.Cancel.ButtonKeybind.Visible = m_Library.Variables.Console;
	t_Bank.Deposit.Bottom.Ok.ButtonKeybind.Visible = m_Library.Variables.Console;
	local v30 = m_Library.Save.Get();
	if not v30 then return end
	local t_Pets3 = t_Bank.Deposit.Pets;
	local t_Diamonds = t_Bank.Deposit.Bottom.Diamonds;
	if not u5 then
		table2 = {};
		u7 = 0;
		t_Diamonds.Display.Input.Text = "";
		for _, child22 in ipairs(t_Pets3:GetChildren()) do
			if child22.ClassName ~= "Frame" then continue end
			child22:Destroy();
		end
		return;
	end
	local t_Search2 = t_Bank.Deposit.Top.Search;
	local v80;
	if t_Search2.Query.Text == "" then
		v80 = false;
	else
		v80 = tostring(t_Search2.Query.Text) ~= nil;
	end
	local v31 = v80 and string.lower(tostring(t_Search2.Query.Text)) or nil;
	u11 = u11 + 1;
	local v32 = m_Library.Shared.SortPets(v30, table.clone(v30.Pets));
	for key14, val14 in ipairs(v32) do
		local t_uid2 = val14.uid;
		local v81 = m_Library.Directory.Pets[val14.id];
		local t_name2 = v81.name;
		local t_rarity2 = v81.rarity;
		local t_powers2 = val14.powers;
		local t_g2 = val14.g;
		local t_r2 = val14.r;
		local t_dm2 = val14.dm;
		local t_sh2 = val14.sh;
		local t_l2 = val14.l;
		local t_tradeable = v81.tradeable;
		local v82 = t_Pets3:FindFirstChild(t_uid2);
		local _ = m_Library.Functions.SearchArray(table2, t_uid2);
		if not t_tradeable then continue end
		if not v82 then
			v82 = m_Library.Assets.UI.Inventory.Pet:Clone();
			v82.Name = t_uid2;
			m_Library.PetUI.Create(v82, t_uid2);
			m_Library.GUIFX.ButtonFX(v82);
			v82.Activated:Connect(function()  
				local v96 = u3 and u3.Owner == (m_Library.LocalPlayer:GetAttribute("CustomUserId") or m_Library.LocalPlayer.UserId);
				if not bool4 then
					bool4 = true;
					local v98 = m_Library.Signal.Invoke("Is Trading Booth Pet", t_uid2);
					if val14.l and not v96 then
						m_Library.Message.New("You can only deposit locked pets into your own bank!");
					elseif v98 then
						m_Library.Message.New("This pet is currently in your trading booth! Remove it before you can deposit it!");
					else
						SelectPet(table2, t_uid2);
						UpdateDeposit();
					end
					bool4 = false;
				end
			end);
		end
		local v83 = u5 and m_Library.Functions.SearchArray(table2, t_uid2);
		v82.Equipped.Visible = v83;
		if v31 then
			local bool9 = false;
			if string.find(string.lower(t_name2), v31, 1, true) then
				bool9 = true;
			elseif string.find(string.lower(val14.nk), v31, 1, true) then
				bool9 = true;
			elseif string.find(string.lower(t_rarity2), v31, 1, true) then
				bool9 = true;
			elseif t_sh2 and string.find("shiny", v31, 1, true) then
				bool9 = true;
			elseif t_g2 and (string.find("gold", v31, 1, true) or string.find("golden", v31, 1, true)) then
				bool9 = true;
			elseif t_r2 and string.find("rainbow", v31, 1, true) then
				bool9 = true;
			elseif t_dm2 and string.find("dark matter", v31, 1, true) then
				bool9 = true;
			elseif t_l2 and string.find("lock", v31, 1, true) then
				bool9 = true;
			elseif t_powers2 and #t_powers2 > 0 then
				for _, val26 in ipairs(t_powers2) do
					local unpack_ret1_2, unpack_ret2_2 = unpack(val26);
					local v102, _ = m_Library.Shared.GetPowerDir(unpack_ret1_2, unpack_ret2_2);
					if not string.find(string.lower(v102.title), v31, 1, true) then continue end
					bool9 = true;
					break;
				end
			end
			v82.Visible = bool9 or v83;
		else
			v82.Visible = true;
		end
		v82.LayoutOrder = key14;
		v82:SetAttribute("Tick", u11);
		v82.Parent = t_Pets3;
	end
	for _, child15 in ipairs(t_Pets3:GetChildren()) do
		local Attribute3 = child15:GetAttribute("Tick");
		if not Attribute3 or Attribute3 == u11 then continue end
		child15:Destroy();
	end
	t_Bank.Deposit.Bottom.Ok.ImageColor3 = (#table2 >= 1 and true or u7 >= 1) and Color3.new(1, 1, 1) or Color3.new(0.5, 0.5, 0.5);
	t_Bank.Deposit.Bottom.Ok.Label.TextColor3 = t_Bank.Deposit.Bottom.Ok.ImageColor3;
	t_Diamonds.Display.Input.TextScaled = false;
	t_Diamonds.Display.Input.TextScaled = true;
	DepositScrolling();
end
function UpdateDepositDiamonds() 
	local t_Display = t_Bank.Deposit.Bottom.Diamonds.Display;
	local t_Input = t_Bank.Deposit.Bottom.Diamonds.Display.Input;
	local v33 = m_Library.Save.Get();
	if v33 and u5 and bool3 then
		local u26 = 0;
		pcall(function() 
			u26 = math.round((m_Library.Functions.ParseNumberSmart(t_Input.Text)));
		end);
		if u26 < 0 then
			u26 = 0;
		end
		if v33.Diamonds <= u26 then
			u26 = v33.Diamonds;
		end
		u7 = u26;
		t_Input.Text = m_Library.Functions.Commas(u26);
		m_Library.Audio.Play(4586418198, script, 1, 0.2);
		m_Library.GUIFX.FlashText(t_Input);
		t_Display.Input.TextScaled = false;
		t_Display.Input.TextScaled = true;
		UpdateDeposit();
	end
end
function UpdateWithdraw()  
	if not bool3 then return end
	local v34 = u3.Owner == (m_Library.LocalPlayer:GetAttribute("CustomUserId") or m_Library.LocalPlayer.UserId);
	local t_Bottom = t_Bank.Container.Bank.Bottom;
	t_Bottom.CancelWithdraw.Visible = u4;
	t_Bottom.CancelWithdraw.ButtonKeybind.Visible = u4 and m_Library.Variables.Console;
	t_Bottom.AcceptWithdraw.Visible = u4;
	t_Bottom.AcceptWithdraw.ButtonKeybind.Visible = u4 and m_Library.Variables.Console;
	t_Bottom.Deposit.Visible = not u4;
	t_Bottom.Deposit.ButtonKeybind.Visible = not u4 and m_Library.Variables.Console;
	t_Bottom.Withdraw.Visible = not u4;
	t_Bottom.Withdraw.ButtonKeybind.Visible = not u4 and m_Library.Variables.Console;
	t_Bottom.Settings.Visible = not u4 and v34;
	t_Bottom.Balance.Visible = not u4;
	t_Bottom.BalanceInput.Visible = u4;
	t_Bottom.WithdrawMsg.Visible = u4;
	t_Bottom.Leave.Visible = not u4 and not v34;
	t_Bottom.Leave.ButtonKeybind.Visible = not u4 and not v34 and m_Library.Variables.Console;
	t_Bottom.BalanceInput.Add.Visible = m_Library.Variables.Console;
	t_Bottom.BalanceInput.Minus.Visible = m_Library.Variables.Console;
	if not u4 then
		local t_BalanceInput = t_Bottom.BalanceInput;
		table1 = {};
		u6 = 0;
		t_BalanceInput.Display.Input.Text = "";
		UpdateBank();
		return;
	end
	local v35 = #table1;
	if v35 > 0 then
		if m_Library.Shared.BankMaxPetsPerTransaction <= v35 then
			t_Bottom.WithdrawMsg.Text = "Withdrawing " .. m_Library.Functions.Commas(v35) .. " Pet" .. (v35 > 1 and "s" or "" .. " (max)");
		else
			t_Bottom.WithdrawMsg.Text = "Withdrawing " .. m_Library.Functions.Commas(v35) .. " Pet" .. (v35 > 1 and "s" or "");
		end
	else
		t_Bottom.WithdrawMsg.Text = "Select Pets to Withdraw";
	end
	t_Bottom.AcceptWithdraw.ImageColor3 = (#table1 >= 1 and true or u6 >= 1) and Color3.new(1, 1, 1) or Color3.new(0.5, 0.5, 0.5);
	t_Bottom.AcceptWithdraw.Label.TextColor3 = t_Bottom.AcceptWithdraw.ImageColor3;
end
function UpdateWithdrawDiamonds()  
	local t_Input2 = t_Bank.Container.Bank.Bottom.BalanceInput.Display.Input;
	local v36 = m_Library.Save.Get();
	if v36 and u4 and bool3 then
		local u27 = 0;
		pcall(function()  
			u27 = math.round((m_Library.Functions.ParseNumberSmart(t_Input2.Text)));
		end);
		if u27 < 0 then
			u27 = 0;
		end
		if u3.Storage.Currency.Diamonds <= u27 then
			u27 = u3.Storage.Currency.Diamonds;
		end
		u6 = u27;
		t_Input2.Text = m_Library.Functions.Commas(u27);
		m_Library.Audio.Play(4586418198, script, 1, 0.2);
		m_Library.GUIFX.FlashText(t_Input2);
		UpdateWithdraw();
	end
end
function BankScrolling()  
	local t_Pets4 = t_Bank.Container.Bank.Pets;
	local UIGridLayout = t_Pets4:FindFirstChildOfClass("UIGridLayout");
	local UIPadding = t_Pets4:FindFirstChildOfClass("UIPadding");
	local v37 = m_Library.Functions.ResolutionScale();
	local v38 = v37 <= 0.5 and 3 or v37 <= 1 and 4 or v37 <= 1.3 and 5 or 6;
	if u9 then
		UIGridLayout.CellPadding = UDim2.new(0, 10, 0, 10);
	else
		UIGridLayout.CellPadding = UDim2.new(0, 20, 0, 20);
	end
	if u9 then
		v38 = v38 * 2;
	end
	local v39 = (t_Pets4.AbsoluteSize.X - t_Pets4.ScrollBarThickness - UIPadding.PaddingLeft.Offset - UIPadding.PaddingRight.Offset) / v38 - UIGridLayout.CellPadding.X.Offset;
	local udim2 = UDim2.new(0, v39, 0, v39);
	UIGridLayout.CellSize = udim2;
	UIGridLayout:ApplyLayout();
	t_Pets4.CanvasSize = UDim2.new(1, 0, 0, UIGridLayout.AbsoluteContentSize.Y + (u9 and 55 or 65));
end
function DepositScrolling()  
	local t_Pets5 = t_Bank.Deposit.Pets;
	local UIGridLayout2 = t_Pets5:FindFirstChildOfClass("UIGridLayout");
	local UIPadding2 = t_Pets5:FindFirstChildOfClass("UIPadding");
	local v40 = m_Library.Functions.ResolutionScale();
	local v41 = (t_Pets5.AbsoluteSize.X - t_Pets5.ScrollBarThickness - UIPadding2.PaddingLeft.Offset - UIPadding2.PaddingRight.Offset) / (v40 <= 0.5 and 4 or v40 <= 0.7 and 5 or v40 <= 1 and 6 or v40 <= 1.2 and 7 or 8) - UIGridLayout2.CellPadding.X.Offset;
	local udim2_2 = UDim2.new(0, v41, 0, v41);
	UIGridLayout2.CellSize = udim2_2;
	UIGridLayout2:ApplyLayout();
	t_Pets5.CanvasSize = UDim2.new(0, UIGridLayout2.AbsoluteContentSize.X, 0, UIGridLayout2.AbsoluteContentSize.Y + 30);
end
function SideScrolling() 
	local t_Holder2 = t_Bank.Side.Holder;
	local UIListLayout = t_Holder2:FindFirstChildOfClass("UIListLayout");
	local UIPadding3 = t_Holder2:FindFirstChildOfClass("UIPadding");
	UIListLayout:ApplyLayout();
	t_Holder2.CanvasSize = UDim2.new(0, UIListLayout.AbsoluteContentSize.X, 0, UIListLayout.AbsoluteContentSize.Y + UIPadding3.PaddingBottom.Offset + UIPadding3.PaddingTop.Offset);
end
function GetBank(p14)  
	local v42, v43 = m_Library.Network.Invoke("Get Bank", p14);
	if v42 then
		bool3 = true;
		u3 = v42;
		return;
	end
	bool3 = false;
	m_Library.Print("Failed to grab bank (" .. tostring(v43) .. ")", true);
	return v43;
end
function GetMyBanks()  
	local v44, v45 = m_Library.Network.Invoke("Get My Banks");
	if v44 then
		bool1 = true;
		u1 = v44;
		return;
	end
	bool1 = false;
	m_Library.Print("Failed to load banks (" .. tostring(v45) .. ")", true);
end
function GetMyInvites()  
	local v46, v47 = m_Library.Network.Invoke("Get Bank Invites");
	if v46 then
		bool2 = true;
		u2 = v46;
		return;
	end
	bool2 = false;
	m_Library.Print("Failed to get bank invites (" .. tostring(v47) .. ")", true);
end
function Processing(p15, p16)
	u8 = p15;
	m_Library.Variables.UsingMachine = u8;
	if u8 and not u12 then
		u12 = m_Library.GIF.Create(t_Bank.Processing.GIF, {100,100}, {5,6}, 28, 0.65, true);
		u14 = m_Library.GIF.Create(t_BankLoading.Loading.GIF, {100,100}, {5,6}, 28, 0.65, true);
		if p16 then
			u13 = m_Library.Audio.Play("rbxassetid://8167470315", script, 1, 1, nil, nil, true);
		end
	elseif not u8 and u12 then
		u12();
		u14();
		u12 = nil;
		u14 = nil;
		if u13 then
			u13:Stop();
			u13 = nil;
		end
	end
	t_BankLoading.Gui.Enabled = u8;
	t_Bank.Processing.Visible = u8;
end
function SwitchWindow(p17)  
	if p17 == "Settings" then
		SwitchSettingsWindow("Info");
	end
	for _, child16 in ipairs(t_Bank.Container:GetChildren()) do
		if child16.ClassName ~= "Frame" then continue end
		child16.Visible = child16.Name == p17;
	end
	if p17 ~= "Empty" and bool3 then
		t_Bank.BankTitle.Tier.Text = "Tier " .. u3.Tier .. " Bank";
		coroutine.wrap(function() 
			t_Bank.BankTitle.Owner.Text = "@" .. m_Library.Functions.UserIdToUsername(u3.Owner) or "???";
		end)()
		t_Bank.BankTitle.Visible = true;
		t_Bank.Title.Visible = false;
		return;
	end
	t_Bank.BankTitle.Visible = false;
	t_Bank.Title.Visible = true;
end
function SwitchSettingsWindow(p18)  
	for _, child17 in ipairs(t_Settings:GetChildren()) do
		if child17.ClassName ~= "Frame" and child17.ClassName ~= "ScrollingFrame" then continue end
		child17.Visible = p18 == child17.Name;
	end
end
function Reset() 
	u4 = false;
	u5 = false;
	u6 = 0;
	table1 = {};
	u7 = 0;
	table2 = {};
	u3 = nil;
	bool3 = false;
	u9 = false;
	t_Bank.Deposit.Visible = false;
	SwitchWindow("Empty");
	UpdateBank();
	UpdateDeposit();
	UpdateWithdraw();
end
local t_Top2 = t_Bank.Container.Bank.Top;
local t_Bottom2 = t_Bank.Container.Bank.Bottom;
m_Library.GUIFX.ButtonFX(t_Top2.Grid);
t_Top2.Grid.Activated:Connect(function()  
	if not bool4 then
		bool4 = true;
		u9 = not u9;
		m_Library.Audio.Play("rbxassetid://7004248320", script, 1, 0.5);
		UpdateBank();
		bool4 = false;
	end
end);
m_Library.GUIFX.Tooltip(t_Bottom2.Deposit, "Deposit");
m_Library.GUIFX.ButtonFX(t_Bottom2.Deposit);
function openDeposit()  
	if not bool4 then
		bool4 = true;
		u5 = not u5;
		UpdateDeposit();
		bool4 = false;
	end
end
t_Bottom2.Deposit.Activated:Connect(openDeposit);
m_Library.GUIFX.Tooltip(t_Bottom2.Withdraw, "Withdraw");
m_Library.GUIFX.ButtonFX(t_Bottom2.Withdraw);
function openWithdraw()  
	if not bool4 then
		bool4 = true;
		u4 = not u4;
		UpdateWithdraw();
		bool4 = false;
	end
end
t_Bottom2.Withdraw.Activated:Connect(openWithdraw);
m_Library.GUIFX.ButtonFX(t_Bottom2.Settings);
m_Library.GUIFX.Tooltip(t_Bottom2.Settings, "Settings");
function openSettings() 
	if not bool4 then
		bool4 = true;
		UpdateSettings();
		bool4 = false;
	end
end
t_Bottom2.Settings.Activated:Connect(openSettings);
m_Library.GUIFX.ButtonFX(t_Bottom2.Leave);
function pressedLeave()  
	if not bool4 then
		bool4 = true;
		LeaveBank();
		bool4 = false;
	end
end
t_Bottom2.Leave.Activated:Connect(pressedLeave);
m_Library.GUIFX.ButtonFX(t_Bottom2.AcceptWithdraw);
function acceptWithdraw() 
	if not bool4 then
		bool4 = true;
		Withdraw();
		bool4 = false;
	end
end
t_Bottom2.AcceptWithdraw.Activated:Connect(acceptWithdraw);
m_Library.GUIFX.ButtonFX(t_Bottom2.CancelWithdraw);
function cancelWithdraw()  
	if not bool4 then
		bool4 = true;
		u4 = false;
		UpdateWithdraw();
		bool4 = false;
	end
end
t_Bottom2.CancelWithdraw.Activated:Connect(cancelWithdraw);
t_Bottom2.BalanceInput.Display.Input.FocusLost:Connect(function() 
	if u4 then
		UpdateWithdrawDiamonds();
	end
end);
t_Top2.Search.Query:GetPropertyChangedSignal("Text"):Connect(function() 
	if bool3 then
		if t_Top2.Search.Query.Text ~= "" then
			t_Bank.Container.Bank.Pets.CanvasPosition = Vector2.new();
		end
		UpdateBank();
	end
end);
m_Library.GUIFX.ContentScale(t_Settings.Info);
m_Library.GUIFX.ContentScale(t_Settings.Upgrades);
m_Library.GUIFX.ContentScale(t_Settings.Members);
m_Library.GUIFX.ContentScale(t_Settings.History);
for _, child1 in ipairs(t_Settings.Info:GetChildren()) do
	local Button = child1:FindFirstChild("Button");
	if child1.ClassName ~= "Frame" or not Button then continue end
	m_Library.GUIFX.ButtonFX(Button);
	Button.Activated:Connect(function()  
		if not bool4 then
			bool4 = true;
			if child1.Name == "Interest" then
				CollectInterest();
			else
				SwitchSettingsWindow(child1.Name);
			end
			bool4 = false;
		end
	end);
end
m_Library.GUIFX.ButtonFX(t_Settings.Back);
t_Settings.Back.Activated:Connect(function() 
	if not bool4 then
		bool4 = true;
		if not t_Settings.Info.Visible then
			SwitchSettingsWindow("Info");
		else
			SwitchWindow("Bank");
		end
		bool4 = false;
	end
end);
local t_Upgrades2 = t_Settings.Upgrades;
m_Library.GUIFX.ButtonFX(t_Upgrades2.Buttons.Buy);
t_Upgrades2.Buttons.Buy.Activated:Connect(function() 
	if not bool4 then
		bool4 = true;
		UpgradeBank(false);
		bool4 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_Upgrades2.Buttons.BuyRobux);
t_Upgrades2.Buttons.BuyRobux.Activated:Connect(function()  
	if not bool4 then
		bool4 = true;
		UpgradeBank(true);
		bool4 = false;
	end
end);
local t_Members = t_Settings.Members;
m_Library.GUIFX.ButtonFX(t_Members.Members.Search.Invite);
t_Members.Members.Search.Invite.Activated:Connect(function() 
	if not bool4 then
		bool4 = true;
		local t_Query = t_Members.Members.Search.InputField.Query;
		local t_Text = t_Query.Text;
		t_Query.Text = "(...)";
		InviteToBank(t_Text);
		t_Query.Text = "";
		bool4 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_Members.CancelInvites.Button);
t_Members.CancelInvites.Button.Activated:Connect(function()  
	if not bool4 then
		bool4 = true;
		CancelOutgoingInvites();
		bool4 = false;
	end
end);
local t_Bottom3 = t_Bank.Deposit.Bottom;
t_Bottom3.Diamonds.Display.Input.FocusLost:Connect(function() 
	if u5 then
		UpdateDepositDiamonds();
	end
end);
m_Library.GUIFX.ButtonFX(t_Bottom3.Cancel);
function promptWithdraw() 
	if not bool4 then
		bool4 = true;
		local v84 = true;
		if #table1 >= 1 or u6 > 0 then
			v84 = m_Library.Message.New("Are you sure?", true);
		end
		if v84 then
			u5 = false;
			UpdateDeposit();
		end
		bool4 = false;
	end
end
t_Bottom3.Cancel.Activated:Connect(promptWithdraw);
m_Library.GUIFX.ButtonFX(t_Bottom3.Ok);
function acceptDeposit() 
	if not bool4 then
		bool4 = true;
		Deposit();
		bool4 = false;
	end
end
t_Bottom3.Ok.Activated:Connect(acceptDeposit);
t_Bank.Deposit.Top.Search.Query:GetPropertyChangedSignal("Text"):Connect(function()  
	if bool3 then
		if t_Bank.Deposit.Top.Search.Query.Text ~= "" then
			t_Bank.Deposit.Pets.CanvasPosition = Vector2.new();
		end
		UpdateDeposit();
	end
end);
m_Library.GUIFX.ButtonFX(t_Bank.Close);
t_Bank.Close.Activated:Connect(function() 
	if not bool4 then
		t_Bank.Gui.Enabled = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_Bank.Container.Banned.LeaveBank);
t_Bank.Container.Banned.LeaveBank.Activated:Connect(function()  
	if not bool4 then
		bool4 = true;
		LeaveBank(u17);
		bool4 = false;
	end
end);
local bool10 = false;
local bool11 = false;
local u21 = 0;
m_Library.Signal.Fired("Xbox Start Subtract"):Connect(function() 
	if not m_Library.Variables.Console then return end
	bool10 = true;
	u21 = 0;
end);
m_Library.Signal.Fired("Xbox Stop Subtract"):Connect(function()  
	if not m_Library.Variables.Console then return end
	bool10 = false;
	u21 = 0;
end);
m_Library.Signal.Fired("Xbox Start Add"):Connect(function()  
	if not m_Library.Variables.Console then return end
	bool11 = true;
	u21 = 0;
end);
m_Library.Signal.Fired("Xbox Stop Add"):Connect(function()  
	if not m_Library.Variables.Console then return end
	bool11 = false;
	u21 = 0;
end);
m_Library.RunService.Heartbeat:Connect(function(p19) 
	if not m_Library.Variables.Console then return end
	if m_Library.GUI.Bank.Gui.Enabled and (bool10 or bool11) then
		u21 = u21 + p19;
		local math_pow_ret = math.pow(10, (math.floor(u21 / 4)));
		local v85 = 1;
		if bool10 then
			v85 = v85 - math_pow_ret * 1;
			if v85 < 10 then
				v85 = 0;
			end
		elseif bool11 then
			v85 = v85 + math_pow_ret * 1;
			if v85 < 10 then
				v85 = 10;
			end
		end
		print("Bank Hold RB/LB", v85);
		if (bool11 or bool10) and (v85 > 0 or v85 == 0) then
			local v90 = m_Library.Save.Get();
			if not v90 or not bool3 then return end
			if u5 then
				local t_Display2 = t_Bank.Deposit.Bottom.Diamonds.Display;
				local t_Input4 = t_Bank.Deposit.Bottom.Diamonds.Display.Input;
				local v94 = bool11 and u7 + v85 or u7 - v85;
				if v94 < 0 then
					v94 = 0;
				end
				if v90.Diamonds <= v94 then
					v94 = v90.Diamonds;
				end
				u7 = v94;
				t_Input4.Text = m_Library.Functions.Commas(v94);
				m_Library.GUIFX.FlashText(t_Input4);
				t_Display2.Input.TextScaled = false;
				t_Display2.Input.TextScaled = true;
				UpdateDeposit();
				return;
			end
			if u4 then
				local t_Input3 = t_Bank.Container.Bank.Bottom.BalanceInput.Display.Input;
				local v95 = m_Library.Save.Get();
				if v95 and u4 and bool3 then
					local u30 = 0;
					pcall(function() 
						u30 = math.round((m_Library.Functions.ParseNumberSmart(t_Input3.Text)));
					end);
					u30 = bool11 and u6 + v85 or u6 - v85;
					if u30 < 0 then
						u30 = 0;
					end
					if u3.Storage.Currency.Diamonds <= u30 then
						u30 = u3.Storage.Currency.Diamonds;
					end
					u6 = u30;
					t_Input3.Text = m_Library.Functions.Commas(u30);
					m_Library.GUIFX.FlashText(t_Input3);
					UpdateWithdraw();
				end
			end
		end
	end
end);
local table7 = {
	{
		Name = "Accept Deposit",
		Requirement = function() 
			return t_Bank.Gui.Frame.Deposit.Bottom.Ok.Visible and u5 and (#table2 >= 1 and true or u7 >= 1);
		end,
		Keycode = Enum.KeyCode.ButtonX,
		Action = acceptDeposit
	},
	{
		Name = "Accept Withdraw",
		Requirement = function()  
			return t_Bank.Gui.Frame.Container.Bank.Bottom.AcceptWithdraw.Visible and u4 and (#table1 >= 1 and true or u6 >= 1);
		end,
		Keycode = Enum.KeyCode.ButtonX,
		Action = acceptWithdraw
	},
	{
		Name = "Open Deposit",
		Requirement = function() 
			return t_Bank.Gui.Frame.Container.Bank.Bottom.Deposit.Visible and not u4;
		end,
		Keycode = Enum.KeyCode.ButtonX,
		Action = openDeposit
	},
	{
		Name = "Open Withdraw",
		Requirement = function()  
			return t_Bank.Gui.Frame.Container.Bank.Bottom.Withdraw.Visible and not u5 and not u4;
		end,
		Keycode = Enum.KeyCode.ButtonY,
		Action = openWithdraw
	},
	{
		Name = "Cancel Withdraw",
		Requirement = function() 
			return t_Bank.Gui.Frame.Container.Bank.Bottom.CancelWithdraw.Visible and not u5 and u4;
		end,
		Keycode = Enum.KeyCode.ButtonY,
		Action = function() 
			u4 = false;
			UpdateWithdraw();
		end
	},
	{
		Name = "Cancel Deposit",
		Requirement = function()  
			return t_Bank.Gui.Frame.Deposit.Bottom.Cancel.Visible and not u4 and u5;
		end,
		Keycode = Enum.KeyCode.ButtonY,
		Action = function() 
			u5 = false;
			UpdateDeposit();
		end
	}
};
m_Library.UserInputService.InputEnded:Connect(function(input4, gameProcessedEvent4)  
	if gameProcessedEvent4 or not m_Library.Variables.Console then return end
	if not m_Library.GUI.Bank.Gui.Enabled then
		return false;
	end
	for _, val18 in ipairs(table7) do
		if not val18.Requirement() or val18.Keycode ~= input4.KeyCode then continue end
		print("Calling", val18.Name, "=", val18.Requirement, "withdrawing=", u4, "depositing=", u5);
		val18.Action();
		return;
	end
end);
m_Library.Signal.Fired("Resolution Changed"):Connect(function()  
	task.defer(function()  
		BankScrolling();
		SideScrolling();
		DepositScrolling();
	end);
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p20)  
	if p20 == "Pets" and bool3 then
		UpdateDeposit();
		UpdateBank();
	end
end);
m_Library.Signal.Fired("Window Opened"):Connect(function(p21) 
	if p21 == t_Bank.Gui and not bool3 then
		m_Library.Signal.Fire("Hide HUD Keybinds");
		m_Library.Variables.BankOpen = true;
		GetMyBanks();
		GetMyInvites();
		UpdateSide();
		UpdateBank();
		UpdateDeposit();
		UpdateWithdraw();
		if m_Library.Variables.Console then
			m_Library.GuiService.SelectedObject = t_Bank.Gui.Frame.Side.Holder;
		end
		m_Library.Audio.Play("rbxassetid://8167469855", script, 1, 0.4);
	end
end);
m_Library.Signal.Fired("Window Closed"):Connect(function(p22)  
	if u8 or bool4 then return end
	if p22 == t_Bank.Gui then
		m_Library.Signal.Fire("Show HUD Keybinds");
		m_Library.Variables.BankOpen = false;
		Reset();
	end
end);
m_Library.Signal.Fired("Lock Status Changed"):Connect(function(p23) 
	local t_Pets6 = t_Bank.Deposit.Pets;
	for key19, _ in pairs(p23) do
		local FindFirstChild_ret2 = t_Pets6:FindFirstChild(key19);
		if not FindFirstChild_ret2 then continue end
		FindFirstChild_ret2:Destroy();
	end
end);
coroutine.wrap(function()
	while true do
		task.wait(10);
		if t_Bank.Gui.Enabled then
			GetMyInvites();
			UpdateSide();
		end
	end
end)()
coroutine.wrap(function() 
	while true do
		task.wait(5);
		if bool3 and t_Bank.Container.Visible and t_Bank.Container.Bank.Visible and not bool5 then
			bool5 = true;
			GetBank(u3.BUID);
			UpdateBank();
			bool5 = false;
		end
	end
end)()
local function CheckForWorldShop()  
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		local Bank2 = Map.Interactive:FindFirstChild("Bank");
		if Bank2 and Bank2.PrimaryPart then
			local v91 = m_Library.Audio.Play("rbxassetid://8168486040", Bank2.PrimaryPart, 1, 0.15, nil, nil, true);
			if v91 then
				v91.RollOffMaxDistance = 90;
				v91.RollOffMinDistance = 35;
			end
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function()  
	CheckForWorldShop();
end);  -  Editar
  04:54:13.906    -  Editar
  04:54:13.906  ----- [2738] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Mastery -----  -  Editar
  04:54:13.906  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_Mastery = m_Library.GUI.Mastery;
local t_Holder = t_Mastery.Skills.Holder;
local bool1 = false;
function Update() -- Line: 19
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_Holder
			[3] = t_Mastery
	--]]
	local u1 = m_Library.Save.Get();
	if not u1 then return end
	for key1, val1 in pairs(m_Library.Directory.Mastery) do
		local u2 = m_Library.Directory.Mastery[key1];
		if not u2.enabled then continue end
		local u3 = t_Holder:FindFirstChild(key1);
		if not u3 then
			u3 = m_Library.Assets.UI.Mastery.Skill:Clone();
			u3.Icon.Image = val1.icon;
			u3.Name = key1;
			m_Library.GUIFX.ButtonFX(u3);
			m_Library.GUIFX.CircularBar(u3.CircularBar);
			u3.Level.Text = math.random(1, 99);
			u3.CircularBar:SetAttribute("Progress", math.random());
			u3.Parent = t_Holder;
			local function ShowOverlay() -- Line: 45
				--[[
					Upvalues:
						[1] = u1
						[2] = m_Library
						[3] = key1
						[4] = u2
						[5] = u3
				--]]
				u1 = m_Library.Save.Get();
				local v14 = u1.Mastery[key1] or 0;
				local v15 = m_Library.Shared.MasteryXPToLevel(v14);
				local v16 = m_Library.Shared.MasteryLevelToXP(v15);
				local v17 = m_Library.Shared.MasteryLevelToXP(v15 + 1);
				local table1 = {{
					"Title",
					u2.title .. " Mastery"
				}};
				if u2.maxLvl <= v15 then
					table.insert(table1, {
						"MasteryLvl",
						"Lvl " .. v15 .. " (Max)"
					});
					table.insert(table1, {
						"MasteryXP",
						"Max XP"
					});
				else
					table.insert(table1, {
						"MasteryLvl",
						"Lvl " .. v15 .. " (" .. u2.maxLvl .. " Max)"
					});
					table.insert(table1, {
						"MasteryXP",
						m_Library.Functions.Commas(v14 - v16) .. " / " .. m_Library.Functions.Commas(v17 - v16) .. " XP"
					});
				end
				for _, val4 in ipairs(u2.perks) do
					local t_level = val4.level;
					local v18 = t_level <= v15;
					table.insert(table1, {
						"MasteryPerk",
						t_level,
						val4.desc,
						v18
					});
				end
				m_Library.InfoOverlay.Add(u3, unpack(table1));
			end
			u3.MouseEnter:Connect(function() -- Line: 72
				--[[
					Upvalues:
						[1] = m_Library
						[2] = ShowOverlay
				--]]
				m_Library.Audio.Play("rbxassetid://6907626084", script, 1, 0.2);
				ShowOverlay();
			end);
			u3.SelectionGained:Connect(function() -- Line: 77
				--[[
					Upvalues:
						[1] = m_Library
						[2] = ShowOverlay
				--]]
				m_Library.Audio.Play("rbxassetid://6907626084", script, 1, 0.2);
				ShowOverlay();
			end);
		end
		local v7 = u1.Mastery[key1];
		if not v7 then
			u3.CircularBar:SetAttribute("Progress", 0);
			u3.Level.Text = "??";
			continue;
		end
		local v8 = m_Library.Shared.MasteryXPToLevel(v7);
		local v9 = m_Library.Shared.MasteryLevelToXP(v8);
		local v10 = m_Library.Shared.MasteryLevelToXP(v8 + 1);
		u3.Level.Text = v8;
		if u2.maxLvl <= v8 then
			u3.CircularBar:SetAttribute("Progress", 1);
			u3.CircularBar.Left.ImageColor3 = Color3.fromRGB(252, 50, 242);
			u3.CircularBar.Right.ImageColor3 = Color3.fromRGB(252, 50, 242);
		else
			local math_clamp_ret = math.clamp((v7 - v9) / (v10 - v9), 0, 1);
			u3.CircularBar:SetAttribute("Progress", math_clamp_ret);
		end
		u3.LayoutOrder = 10000000 - v8 * 1000 + u2.sort;
	end
	local v1 = 0;
	local v2 = 0;
	for key2, val2 in pairs(m_Library.Directory.Mastery) do
		if not val2.enabled then continue end
		v1 = v1 + val2.maxLvl;
		local v11 = u1.Mastery[key2];
		if not v11 then continue end
		v2 = v2 + m_Library.Shared.MasteryXPToLevel(v11);
	end
	t_Mastery.Skills.Completed.Text = (m_Library.Functions.Commas(v2) .. " / " .. m_Library.Functions.Commas(v1)) .. " (" .. math.floor(v2 / v1 * 100) .. "%)";
	Scaling();
end
function Scaling() -- Line: 127
	--[[
		Upvalues:
			[1] = t_Holder
			[2] = m_Library
	--]]
	local UIGridLayout = t_Holder:FindFirstChildOfClass("UIGridLayout");
	local UIPadding = t_Holder:FindFirstChildOfClass("UIPadding");
	local v3 = m_Library.Functions.ResolutionScale();
	local num1 = 5;
	if v3 <= 0.65 then
		num1 = 3;
	elseif v3 <= 1.2 then
		num1 = 4;
	end
	local v4 = (t_Holder.AbsoluteSize.X - t_Holder.ScrollBarThickness - UIPadding.PaddingLeft.Offset - UIPadding.PaddingRight.Offset) / num1 - UIGridLayout.CellPadding.X.Offset;
	local udim2 = UDim2.new(0, v4, 0, v4);
	UIGridLayout.CellSize = udim2;
	UIGridLayout:ApplyLayout();
	t_Holder.CanvasSize = UDim2.new(0, 0, 0, UIGridLayout.AbsoluteContentSize.Y + (UIPadding.PaddingTop.Offset + UIPadding.PaddingBottom.Offset));
end
function LevelUpNotification(p1, p2) -- Line: 150
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v5 = m_Library.Directory.Mastery[p1];
	local bool2 = false;
	for _, val3 in ipairs(v5.perks) do
		if val3.level ~= p2 then continue end
		bool2 = true;
		break;
	end
	local v6 = bool2 and "rbxassetid://8951545959" or "rbxassetid://8951545789";
	if v5.maxLvl <= p2 then
		local v12 = v5.title .. " Mastery reached Max Level!";
		m_Library.Signal.Fire("Notification", v12, {
			color = Color3.fromRGB(185, 246, 255),
			time = 5,
			sound = v6
		});
	else
		local v13 = v5.title .. " Mastery is now Level " .. p2 .. "!";
		m_Library.Signal.Fire("Notification", v13, {
			color = Color3.fromRGB(185, 246, 255),
			time = 5,
			sound = v6
		});
	end
	if bool2 then
		m_Library.Signal.Fire("Notification", "\226\156\168 New perk unlocked!", {
			color = Color3.fromRGB(255, 204, 77),
			time = 5
		});
	end
end
m_Library.Network.Fired("Mastery Leveled Up"):Connect(function(p3, p4) -- Line: 179
	LevelUpNotification(p3, p4);
end);
m_Library.Signal.Fired("Resolution Changed"):Connect(function() -- Line: 187
	task.defer(function() -- Line: 188
		Scaling();
	end);
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p5) -- Line: 194
	if p5 == "Mastery" or p5 == "MasteryUnlocked" then
		Update();
	end
end);
t_Mastery.Gui:GetPropertyChangedSignal("Enabled"):Connect(function() -- Line: 200
	Scaling();
end);
m_Library.GUIFX.ButtonFX(t_Mastery.Close);
t_Mastery.Close.Activated:Connect(function() -- Line: 206
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_Mastery
	--]]
	if not bool1 then
		bool1 = true;
		t_Mastery.Gui.Enabled = false;
		bool1 = false;
	end
end);
Update();
  -  Editar
  04:54:13.906    -  Editar
  04:54:13.906  ----- [2739] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Free Gifts -----  -  Editar
  04:54:13.906  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_FreeGifts = m_Library.GUI.FreeGifts;
local t_Container = t_FreeGifts.Frame.Container;
local t_Button = m_Library.GUI.FreeGiftsTop.Button;
local u1 = m_Library.Network.Invoke("Get OSTime");
local os_clock_ret = os.clock();
local bool1 = false;
function Redeem(p1) -- Line: 21
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v1, v2 = m_Library.Network.Invoke("Redeem Free Gift", p1);
	if v1 then
		local v11 = m_Library.Directory.FreeGifts[p1];
		m_Library.Signal.Fire("Fireworks Animation");
		m_Library.Audio.Play(v11.rare and "rbxassetid://8993965384" or "rbxassetid://8993965480", script, 1, 1.5);
		return;
	end
	m_Library.Message.New(v2 or "Something went wrong.");
end
function Update() -- Line: 34
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_Container
			[3] = u1
			[4] = os_clock_ret
	--]]
	local v3 = m_Library.Save.Get();
	if not v3 then return end
	for key1, val1 in ipairs(m_Library.Directory.FreeGifts) do
		local FindFirstChild_ret = t_Container.Gifts:FindFirstChild("Gift" .. key1);
		local v12 = v3.FreeGiftsTime >= val1.waitTime;
		local v13 = m_Library.Functions.SearchArray(v3.FreeGiftsRedeemed, key1);
		if v13 then
			FindFirstChild_ret.Timer.Text = "\226\156\133";
			FindFirstChild_ret.Progress.Visible = false;
			continue;
		end
		if v12 then
			FindFirstChild_ret.Timer.Text = "Redeem!";
			FindFirstChild_ret.Progress.Visible = false;
			continue;
		end
		local t_FreeGiftsTime = v3.FreeGiftsTime;
		local t_waitTime = val1.waitTime;
		local math_clamp_ret = math.clamp(t_FreeGiftsTime / t_waitTime, 0, 1);
		local math_max_ret = math.max(t_waitTime - t_FreeGiftsTime, 0);
		FindFirstChild_ret.Timer.Text = m_Library.Functions.TimerString(math_max_ret);
		FindFirstChild_ret.Progress:SetAttribute("Progress", math_clamp_ret);
		FindFirstChild_ret.Progress.Visible = true;
	end
	local v4 = v3.FreeGiftsResetTime - (u1 + (os.clock() - os_clock_ret));
	local v5 = #v3.FreeGiftsRedeemed;
	local v6 = #m_Library.Directory.FreeGifts;
	if v4 >= 7200 and v5 < v6 then
		t_Container.Top.Claimed.Visible = true;
		t_Container.Top.RefreshTime.Visible = false;
	else
		t_Container.Top.Claimed.Visible = false;
		t_Container.Top.RefreshTime.Visible = true;
	end
	if v4 > 0 then
		t_Container.Top.RefreshTime.Text = "New gifts ready in " .. m_Library.Functions.TimerString(v4);
	else
		t_Container.Top.RefreshTime.Text = "Refreshing gifts...";
	end
	t_Container.Top.Claimed.Text = string.format("%s/%s Gifts Claimed", v5, v6);
end
function Render() -- Line: 87
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_Container
			[3] = bool1
			[4] = t_FreeGifts
	--]]
	for key2, val2 in ipairs(m_Library.Directory.FreeGifts) do
		local Clone_ret = m_Library.Assets.UI.FreeGifts.Gift:Clone();
		Clone_ret.Name = "Gift" .. key2;
		Clone_ret.Icon.Image = val2.icon;
		Clone_ret.LayoutOrder = key2;
		m_Library.GUIFX.CircularBar(Clone_ret.Progress);
		m_Library.GUIFX.ButtonFX(Clone_ret);
		Clone_ret.Parent = t_Container.Gifts;
		Clone_ret.Activated:Connect(function() -- Line: 100
			--[[
				Upvalues:
					[1] = bool1
					[2] = key2
			--]]
			if not bool1 then
				bool1 = true;
				Redeem(key2);
				bool1 = false;
			end
		end);
		if not t_FreeGifts.Enabled or not m_Library.Variables.Console then continue end
		print("Set selected obj");
		m_Library.GuiService.SelectedObject = Clone_ret;
	end
end
function UpdateTop() -- Line: 116
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_Button
	--]]
	local v7 = m_Library.Save.Get();
	if not v7 then return end
	for key3, val3 in ipairs(m_Library.Directory.FreeGifts) do
		if v7.FreeGiftsTime < val3.waitTime or m_Library.Functions.SearchArray(v7.FreeGiftsRedeemed, key3) then continue end
		t_Button.Timer.Text = "Ready!";
		t_Button.Progress:SetAttribute("Progress", 1);
		return;
	end
	local v8 = nil;
	local v9 = 99999999;
	for key4, val4 in ipairs(m_Library.Directory.FreeGifts) do
		if val4.waitTime < v7.FreeGiftsTime or val4.waitTime >= v9 then continue end
		v8 = key4;
		v9 = val4.waitTime;
	end
	local v10 = m_Library.Directory.FreeGifts[v8];
	if v10 then
		local v14 = m_Library.Directory.FreeGifts[v8 - 1];
		local t_FreeGiftsTime2 = v7.FreeGiftsTime;
		local t_waitTime2 = v10.waitTime;
		local v15 = v14 and v14.waitTime or 0;
		local math_clamp_ret2 = math.clamp((t_FreeGiftsTime2 - v15) / (t_waitTime2 - v15), 0, 1);
		local math_max_ret2 = math.max(t_waitTime2 - t_FreeGiftsTime2, 0);
		t_Button.Timer.Text = m_Library.Functions.TimerString(math_max_ret2);
		t_Button.Progress:SetAttribute("Progress", math_clamp_ret2);
		return;
	end
	t_Button.Timer.Text = "";
	t_Button.Progress:SetAttribute("Progress", 0);
end
function TopAnimation() -- Line: 158
	--[[
		Upvalues:
			[1] = t_Button
			[2] = m_Library
	--]]
	local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 159
		--[[
			Upvalues:
				[1] = t_Button
				[2] = m_Library
		--]]
		local t_Position = t_Button.Icon.Position;
		while true do
			m_Library.Functions.Tween(t_Button.Icon, {Position = t_Position - UDim2.new(0, 0, 0.05, 0)}, {
				0.5,
				"Sine",
				"InOut"
			}).Completed:Wait();
			m_Library.Functions.Tween(t_Button.Icon, {Position = t_Position}, {
				1,
				"Sine",
				"InOut"
			}).Completed:Wait();
		end
	end);
	coroutine_wrap_ret();
end
m_Library.GUIFX.Sparkles(t_Button, 2);
m_Library.GUIFX.CircularBar(t_Button.Progress);
m_Library.GUIFX.ButtonFX(t_Button);
t_Button.Activated:Connect(function() -- Line: 177
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_FreeGifts
	--]]
	if not bool1 then
		bool1 = true;
		t_FreeGifts.Gui.Enabled = not t_FreeGifts.Gui.Enabled;
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_FreeGifts.Close);
t_FreeGifts.Close.Activated:Connect(function() -- Line: 187
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_FreeGifts
	--]]
	if not bool1 then
		bool1 = true;
		t_FreeGifts.Gui.Enabled = false;
		bool1 = false;
	end
end);
m_Library.Signal.Fired("Important Window Toggled"):Connect(function(p2) -- Line: 199
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_Button
	--]]
	if m_Library.Variables.Mobile then
		t_Button.Visible = not p2;
	end
end);
if m_Library.Shared.IsTradingPlaza then
	t_Container.Top.Claimed.Visible = false;
	t_Container.Top.RefreshTime.Visible = false;
	t_FreeGifts.TradingPlaza.Visible = true;
	t_Button.Timer.Text = "";
	t_Button.Progress:SetAttribute("Progress", 0);
	return;
end
Render();
UpdateTop();
TopAnimation();
Update();
m_Library.Signal.Fired("Stat Changed"):Connect(function(p3) -- Line: 222
	if p3 == "FreeGiftsRedeemed" or p3 == "FreeGiftsTime" or p3 == "FreeGiftsResetTime" then
		Update();
		UpdateTop();
	end
end);
m_Library.Signal.Fired("Opening Egg"):Connect(function(_) -- Line: 229
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.GUI.FreeGiftsTop.Gui.Enabled = m_Library.Variables.OpeningEgg <= 0;
end);
m_Library.Signal.Fired("Done Opening Egg"):Connect(function(_) -- Line: 233
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.GUI.FreeGiftsTop.Gui.Enabled = m_Library.Variables.OpeningEgg <= 0;
end);
  -  Editar
  04:54:13.906    -  Editar
  04:54:13.906  ----- [2740] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Boosts -----  -  Editar
  04:54:13.906  local _L = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
while (not _L.Loaded) do  game:GetService("RunService").Heartbeat:Wait()  end


_L.Network.Fired("Boost Activated"):Connect(function(boost, _) 
	_L.Signal.Fire("Notification", boost .. " Boost activated!", {
		color = Color3.fromRGB(105, 255, 168),
		sound = "rbxassetid://7047600380"
	})
end)

_L.Network.Fired("Boost Ended"):Connect(function(boost)  
	local ask = _L.Message.New("Your " .. boost .. " Boost has expired. Would you like to renew?", true)
	if ask then
		_L.Signal.Fire("Exlusive Shop Tab", "Boosts")
	end
end)
  -  Editar
  04:54:13.906    -  Editar
  04:54:13.906  ----- [2741] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Active Boosts -----  -  Editar
  04:54:13.906  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_Boosts = m_Library.GUI.Main.Boosts;
local t_ID = m_Library.Directory.Gamepasses.Lucky.ID;
local t_ID2 = m_Library.Directory.Gamepasses["Mythical Hunter"].ID;
local t_ID3 = m_Library.Directory.Gamepasses["Secret Hunter"].ID;
local t_ID4 = m_Library.Directory.Gamepasses["Shiny Hunter"].ID;
local t_ID5 = m_Library.Directory.Gamepasses.VIP.ID;
local t_IsTradingPlaza = m_Library.Shared.IsTradingPlaza;
local table1 = {};
function Render() -- Line: 25
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_Boosts
			[3] = t_ID
			[4] = t_ID2
			[5] = t_ID3
			[6] = t_ID4
			[7] = t_ID5
			[8] = t_IsTradingPlaza
	--]]
	local v1 = m_Library.Save.Get();
	if not v1 then return end
	if not m_Library.Variables.ImportantWindowOpened then
		t_Boosts.Visible = v1.Settings.ShowBoosts == 1;
	else
		t_Boosts.Visible = false;
	end
	local v2 = m_Library.Gamepasses.Owns(t_ID);
	local v3 = m_Library.Gamepasses.Owns(t_ID2);
	local v4 = m_Library.Gamepasses.Owns(t_ID3);
	local v5 = m_Library.Gamepasses.Owns(t_ID4);
	local v6 = m_Library.Gamepasses.Owns(t_ID5);
	local v7 = m_Library.Functions.CloneTable(v1.Boosts);
	for _, child1 in pairs(t_Boosts:GetChildren()) do
		if child1.ClassName ~= "Frame" or not child1:GetAttribute("Timed") or child1:GetAttribute("ServerBooster") or child1:GetAttribute("Fruit") or string.match(child1.Name, "Server") then continue end
		local v13 = v7[child1.Name];
        if v13 and v13 > 0 then continue end
		child1:Destroy();
	end
	local function AddBoost(p2, p3) -- Line: 54
		--[[
			Upvalues:
				[1] = t_Boosts
				[2] = m_Library
				[3] = t_IsTradingPlaza
		--]]
		local v19 = t_Boosts:FindFirstChild(p2);
		if not v19 then
			v19 = m_Library.Assets.UI.Main.Boost:Clone();
			v19.TimeLeft.Text = "";
			v19.Icon.Image = m_Library.Shared.BoostsInfo[p2].icon;
			v19.Name = p2;
			v19.LayoutOrder = p3 and 1 or 2;
			v19.Parent = t_Boosts;
			if p3 then
				v19:SetAttribute("Timed", true);
			end
			local v22 = m_Library.Shared.BoostsInfo[p2].desc;
			if t_IsTradingPlaza then
				v22 = v22 .. " (paused)";
			end
			m_Library.GUIFX.Tooltip(v19, v22);
		end
		return v19;
	end
	local function RemoveBoost(p4) -- Line: 77
		--[[
			Upvalues:
				[1] = t_Boosts
		--]]
		local FindFirstChild_ret = t_Boosts:FindFirstChild(p4);
		if FindFirstChild_ret then
			FindFirstChild_ret:Destroy();
		end
	end
	for key2, val2 in pairs(v7) do
		local v14 = AddBoost(key2, true);
		if val2 >= 86400 then
			v14.TimeLeft.Text = m_Library.Functions.TimeString(val2);
			continue;
		end
		v14.TimeLeft.Text = os.date("!%X", val2);
	end
	if v2 then
		AddBoost("Lucky");
	end
	if v3 then
		AddBoost("Mythical Hunter");
	end
	if v4 then
		AddBoost("Secret Hunter");
	end
	if v5 then
		AddBoost("Shiny Hunter");
	end
	if v6 then
		AddBoost("VIP");
	end
	if v1.IsFollowingOnTwitter then
		AddBoost("Verified");
	else
		local Verified = t_Boosts:FindFirstChild("Verified");
		if Verified then
			Verified:Destroy();
		end
	end
	local v9 = m_Library.FFlags.Get(m_Library.FFlags.Keys.CoinsEvent);
	if typeof(v9) ~= "number" then
		v9 = 0;
	end
	if v9 > 1 then
		AddBoost("Coins Event");
	else
		local FindFirstChild_ret2 = t_Boosts:FindFirstChild("Coins Event");
		if FindFirstChild_ret2 then
			FindFirstChild_ret2:Destroy();
		end
	end
	local v10 = m_Library.FFlags.Get(m_Library.FFlags.Keys.LuckEvent);
	if typeof(v10) ~= "number" then
		v10 = 0;
	end
	if v10 > 0 then
		AddBoost("Luck Event");
	else
		local FindFirstChild_ret3 = t_Boosts:FindFirstChild("Luck Event");
		if FindFirstChild_ret3 then
			FindFirstChild_ret3:Destroy();
		end
	end
	if v1.FriendsBoost and v1.FriendsBoost > 1 then
		AddBoost("Friends").TimeLeft.Text = "x" .. v1.FriendsBoost;
		return;
	end
	local Friends = t_Boosts:FindFirstChild("Friends");
	if Friends then
		Friends:Destroy();
	end
end
function RenderFruit() -- Line: 150
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_Boosts
			[3] = table1
	--]]
	local table2 = {};
	for key3, val3 in pairs(m_Library.FruitCmds.Directory) do
        local v15 = m_Library.FruitCmds.Get(m_Library.LocalPlayer, val3);
        local math_ceil_ret = math.ceil(v15);
		local v16 = v15 - math.floor(v15);
		if v16 <= 0 then
			v16 = 1;
		end
		local v17 = m_Library.FruitCmds.GetBonus(m_Library.LocalPlayer, val3);
		if math_ceil_ret <= 0 then continue end
		table2[key3] = {
			Amount = v15,
			FullStacks = math_ceil_ret,
			PartialStack = v16,
			Boost = v17
		};
    end
    
	local function AddFruit(p5) -- Line: 172
		--[[
			Upvalues:
				[1] = t_Boosts
				[2] = m_Library
				[3] = table2
				[4] = table1
		--]]
        local v20 = t_Boosts:FindFirstChild(p5);
		if not v20 then
            v20 = m_Library.Assets.UI.Main.Boost:Clone();
            v20.TimeLeft.Text = "";
			v20.Icon.Image = m_Library.Shared.BoostsInfo[p5].icon;
			v20.Name = p5;
			v20.LayoutOrder = 3;
			v20.Parent = t_Boosts;
			v20:SetAttribute("Fruit", true);
		end
		local v21 = table2[p5];
		local t_desc = m_Library.Shared.BoostsInfo[p5].desc;
		local gsub_ret = t_desc:gsub("{percent}", (math.ceil(v21.Boost * 100)));
		local gsub_ret2 = string.format("%0.2f", v21.Boost + 1):gsub("0*$", ""):gsub("%.$", "");
		local gsub_ret3 = gsub_ret:gsub("{mult}", gsub_ret2);
		if not table1[p5] or table1[p5].Desc ~= gsub_ret3 then
			if table1[p5] then
				table1[p5].Cancel();
			end
			local v23 = m_Library.GUIFX.Tooltip(v20, gsub_ret3);
			table1[p5] = {
				Desc = gsub_ret3,
				Cancel = v23
			};
        end
		return v20;
	end
	for key4, val4 in pairs(table2) do
        local v18 = AddFruit(key4);
		if val4.FullStacks <= 0 then continue end
		v18.TimeLeft.Text = "x" .. tostring(val4.FullStacks);
	end
	for _, child5 in pairs(t_Boosts:GetChildren()) do
        if child5.ClassName ~= "Frame" or
            not child5:GetAttribute("Fruit") or 
            table2[child5.Name] and
            m_Library.FFlags.Get(m_Library.FFlags.Keys.Fruit) then 
            continue
        end
        
        table1[child5.Name] = nil;
		child5:Destroy();
	end
end
function Scaling() -- Line: 227
	--[[
		Upvalues:
			[1] = t_Boosts
			[2] = m_Library
	--]]
	local UIGridLayout = t_Boosts:FindFirstChildOfClass("UIGridLayout");
	local v12 = m_Library.Functions.ResolutionScale();
	local num1 = 50;
	if v12 <= 0.55 then
		num1 = 35;
	elseif v12 <= 0.75 then
		num1 = 45;
	end
	UIGridLayout.CellSize = UDim2.new(0, num1, 0, num1);
end
Render();
Scaling();
m_Library.Signal.Fired("Stat Changed"):Connect(function(p1) -- Line: 248
	if p1 == "Boosts" or p1 == "Gamepasses" or p1 == "IsFollowingOnTwitter" or p1 == "Settings" or p1 == "FriendsBoost" or p1 == "Fruits" then
		Render();
	end
end);
m_Library.Signal.Fired("Important Window Toggled"):Connect(function() -- Line: 255
	Render();
end);
m_Library.Signal.Fired("Resolution Changed"):Connect(function() -- Line: 260
	Scaling();
end);
m_Library.Signal.Fired("FFlags Changed"):Connect(function() -- Line: 264
	Render();
end);
task.spawn(function() -- Line: 269
	while true do
		RenderFruit();
		wait(1);
	end
end);
  -  Editar
  04:54:13.906    -  Editar
  04:54:13.906  ----- [2742] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Pet Reward -----  -  Editar
  04:54:13.906  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local _ = {
	"rbxassetid://6907636858",
	"rbxassetid://6907636843"
};
local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_PetReward = m_Library.GUI.PetReward;
local t_Inventory = m_Library.Assets.UI.Inventory;
local Random_new_ret = Random.new();
local bool1 = false;
function Update(p1) -- Line: 26
	--[[
		Upvalues:
			[1] = t_PetReward
			[2] = m_Library
			[3] = t_Inventory
	--]]
	if not p1 or #p1 == 0 then return end
	t_PetReward.Desc.Text = "Valuable Player Rewards";
	t_PetReward.Title.Text = "Congrats!";
	for key1, val1 in ipairs(p1) do
		local v1 = m_Library.PetCmds.Get(val1);
		local t_id = v1.id;
		local _ = v1.idt;
		local _ = v1.s;
		local t_g = v1.g;
		local _ = v1.r;
		local _ = v1.dm;
		local _ = v1.powers;
		local v2 = m_Library.Directory.Pets[t_id];
		local _ = v2.isGift;
		if not t_g or not v2.goldenThumbnail then
			local _ = v2.thumbnail;
		end
		local _ = v2.name;
		local _ = v2.rarity;
		local Clone_ret = t_Inventory.Pet:Clone();
		m_Library.PetUI.Create(Clone_ret, val1);
		Clone_ret.HC:FindFirstChildOfClass("UIStroke").Thickness = 4;
		Clone_ret.DeleteOverlay.Visible = false;
		Clone_ret.PetIcon.ImageTransparency = 0;
		Clone_ret.Stars.Visible = not Clone_ret.Locked.Visible;
		Clone_ret.Visible = true;
		Clone_ret.Parent = t_PetReward.PetHolder:FindFirstChild("Pet" .. key1);
		t_PetReward.PetHolder:FindFirstChild("Pet" .. key1).Visible = true;
	end
	m_Library.GUI.Inventory.Gui.Enabled = false;
	task.delay(1, function() -- Line: 63
		--[[
			Upvalues:
				[1] = t_PetReward
				[2] = m_Library
		--]]
		t_PetReward.Gui.Enabled = true;
		m_Library.Signal.Fire("Fireworks Animation", m_Library.LocalPlayer);
		local v3 = m_Library.Player.UpperTorso(m_Library.LocalPlayer);
		if not v3 then return end
		m_Library.Audio.Play("rbxassetid://7000716222", v3, 1, 1.25, 400);
	end);
end
t_PetReward.Ok.Activated:Connect(function() -- Line: 79
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
			[3] = Random_new_ret
			[4] = t_PetReward
	--]]
	if not bool1 then
		bool1 = true;
		m_Library.Audio.Play("rbxassetid://8951380772", script, Random_new_ret:NextNumber(0.95, 1.05), 0.1);
		m_Library.Signal.Fire("Notification", "Valuable Player Rewards added to inventory!", {color = Color3.fromRGB(221, 85, 255)});
		t_PetReward.Gui.Enabled = false;
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_PetReward.Ok);
m_Library.Network.Fired("Notify Pet Rewards"):Connect(Update);
  -  Editar
  04:54:13.907    -  Editar
  04:54:13.907  ----- [2743] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.List Pet -----  -  Editar
  04:54:13.907  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_ListPet = m_Library.GUI.ListPet;
local t_Input = t_ListPet.InputFrame.Input;
local u1 = nil;
local bool1 = false;
function List(p1, p2) -- Line: 20
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local table1 = {};
	for _, val1 in ipairs(p1) do
		table.insert(table1, {
			val1,
			p2
		});
	end
	local v1, v2 = m_Library.Network.Invoke("Add Trading Booth Pet", table1);
	if not v1 then
		m_Library.Message.New(v2);
	end
	return v1;
end
function Prompt(p3) -- Line: 36
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
			[3] = t_Input
			[4] = t_ListPet
			[5] = bool1
	--]]
	for _, val2 in ipairs(p3) do
		local v4, v5 = m_Library.PetCmds.Get(val2);
		if v4 and v5 == m_Library.LocalPlayer then continue end
		return;
	end
	if m_Library.Variables.ListingPet then return end
	m_Library.Variables.ListingPet = true;
	if u1 then
		u1:Disconnect();
		u1 = nil;
	end
	t_Input.Text = "";
	u1 = t_ListPet.Sell.Activated:Connect(function() -- Line: 57
		--[[
			Upvalues:
				[1] = bool1
				[2] = m_Library
				[3] = t_Input
				[4] = p3
				[5] = t_ListPet
		--]]
		if not bool1 then
			bool1 = true;
			local v7 = m_Library.Functions.ParseNumberSmart(t_Input.Text);
			if typeof(v7) ~= "number" or not m_Library.Functions.IsFinite(v7) then
				m_Library.Message.New("Please enter a valid number!");
				bool1 = false;
				return;
			end
			local math_round_ret = math.round(v7);
			if math_round_ret <= 0 then
				m_Library.Message.New("Please enter a price greater than zero!");
				bool1 = false;
				return;
			end
			local bool2 = false;
			local bool3 = false;
			for _, val3 in ipairs(p3) do
				local v10 = m_Library.Directory.Pets[m_Library.PetCmds.Get(val3).id];
				if not v10 then
					m_Library.Message.New("Invalid pet!");
					bool1 = false;
					return;
				end
				if v10.huge and math_round_ret < 1000000000 then
					bool2 = true;
					continue;
				end
				if not v10.isPremium or math_round_ret >= 100000000 then continue end
				bool3 = true;
			end
			local v8 = #p3 > 1 and "(" .. #p3 .. ") " or "";
			local v9 = m_Library.Message.New("Are you sure you want to list these pets " .. v8 .. "for " .. m_Library.Functions.Commas(math_round_ret) .. " Diamonds?", true);
			if v9 then
				if bool2 then
					local v11 = m_Library.Message.New("ARE YOU SURE? You are only listing a huge pet for " .. m_Library.Functions.Commas(math_round_ret) .. "!", true);
					if v11 then
						local List_ret3 = List(p3, math_round_ret);
						if List_ret3 then
							t_ListPet.Gui.Enabled = false;
							m_Library.Audio.Play("rbxassetid://11648890721", script, 1, 1);
						end
					end
					bool1 = false;
					return;
				end
				if bool3 then
					local v12 = m_Library.Message.New("ARE YOU SURE? You are only listing this premium pet for " .. m_Library.Functions.Commas(math_round_ret) .. "!", true);
					if v12 then
						local List_ret2 = List(p3, math_round_ret);
						if List_ret2 then
							t_ListPet.Gui.Enabled = false;
							m_Library.Audio.Play("rbxassetid://11648890721", script, 1, 1);
						end
					end
					bool1 = false;
					return;
				end
				local List_ret = List(p3, math_round_ret);
				if List_ret then
					t_ListPet.Gui.Enabled = false;
					m_Library.Audio.Play("rbxassetid://11648890721", script, 1, 1);
				end
			end
			bool1 = false;
		end
	end);
	t_ListPet.Gui.Enabled = true;
	if m_Library.Variables.Console then
		m_Library.GuiService.SelectedObject = m_Library.LocalPlayer.PlayerGui:FindFirstChild("ListPet"):FindFirstChild("Frame"):FindFirstChild("Sell");
	end
	while t_ListPet.Gui.Enabled do
		m_Library.Heartbeat();
	end
	m_Library.Variables.ListingPet = false;
	if m_Library.Variables.Console then
		m_Library.GuiService.SelectedObject = nil;
	end
	return true;
end
t_ListPet.Close.Activated:Connect(function() -- Line: 199
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_ListPet
	--]]
	if not bool1 then
		bool1 = true;
		t_ListPet.Gui.Enabled = false;
		bool1 = false;
	end
end);
t_ListPet.InputFrame.Input:GetPropertyChangedSignal("Text"):Connect(function() -- Line: 208
	--[[
		Upvalues:
			[1] = t_ListPet
			[2] = m_Library
	--]]
	local t_Text = t_ListPet.InputFrame.Input.Text;
	local v3 = m_Library.Functions.ParseNumberSmart(t_Text);
	if not v3 then
		t_ListPet.DiamondsDisplay.Frame.Amount.Text = "0";
		return;
	end
	t_ListPet.DiamondsDisplay.Frame.Amount.Text = m_Library.Functions.Commas((math.round(v3)));
end);
m_Library.GUIFX.ButtonFX(t_ListPet.Close);
m_Library.GUIFX.ButtonFX(t_ListPet.Sell);
m_Library.Signal.Invoked("List Pet").OnInvoke = function(p4) -- Line: 231
	--[[
		Upvalues:
			[1] = t_ListPet
			[2] = m_Library
	--]]
	t_ListPet.Gui.Frame.XboxAdd.Visible = m_Library.Variables.Console;
	return Prompt(p4);
end
local bool4 = false;
local bool5 = false;
local u2 = 0;
m_Library.Signal.Fired("Xbox Start Subtract"):Connect(function() -- Line: 240
	--[[
		Upvalues:
			[1] = bool4
			[2] = u2
	--]]
	bool4 = true;
	u2 = 0;
end);
m_Library.Signal.Fired("Xbox Stop Subtract"):Connect(function() -- Line: 246
	--[[
		Upvalues:
			[1] = bool4
			[2] = u2
	--]]
	bool4 = false;
	u2 = 0;
end);
m_Library.Signal.Fired("Xbox Start Add"):Connect(function() -- Line: 252
	--[[
		Upvalues:
			[1] = bool5
			[2] = u2
	--]]
	bool5 = true;
	u2 = 0;
end);
m_Library.Signal.Fired("Xbox Stop Add"):Connect(function() -- Line: 257
	--[[
		Upvalues:
			[1] = bool5
			[2] = u2
	--]]
	bool5 = false;
	u2 = 0;
end);
local t_Input2 = t_ListPet.Gui.Frame.InputFrame.Input;
m_Library.RunService.Heartbeat:Connect(function(p5) -- Line: 263
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_ListPet
			[3] = bool4
			[4] = bool5
			[5] = u2
			[6] = t_Input2
	--]]
	if not m_Library.Variables.Console then return end
	if t_ListPet.Gui.Enabled and (bool4 or bool5) then
		u2 = u2 + p5;
		local math_pow_ret = math.pow(10, (math.floor(u2 / 3)));
		local v6 = t_Input2:GetAttribute("Amount") or 0;
		if bool4 then
			v6 = v6 - math_pow_ret * 1;
			if v6 < 10 then
				v6 = 0;
			end
		elseif bool5 then
			v6 = v6 + math_pow_ret * 1;
			if v6 < 10 then
				v6 = 10;
			end
		end
		if (bool5 or bool4) and (v6 > 0 or v6 == 0) then
			t_Input2.PlaceholderText = v6 > 0 and v6 or "None";
			t_Input2.Text = v6;
			t_Input2:SetAttribute("Amount", v6);
		end
	end
end);
  -  Editar
  04:54:13.907    -  Editar
  04:54:13.907  ----- [2744] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.SelectBooth -----  -  Editar
  04:54:13.907  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local _ = {
	"rbxassetid://6907636858",
	"rbxassetid://6907636843"
};
local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_SelectBooth = m_Library.GUI.SelectBooth;
local t_Inventory = m_Library.Assets.UI.Inventory;
local Random_new_ret = Random.new();
local bool1 = false;
local u1 = 0;
local u2 = nil;
local table1 = {};
local bool2 = true;
function isVisible() -- Line: 27
	--[[
		Upvalues:
			[1] = t_SelectBooth
	--]]
	return t_SelectBooth.Gui.Enabled;
end
function UpdateLazy() -- Line: 33
	--[[
		Upvalues:
			[1] = bool2
	--]]
	bool2 = true;
	Update();
end
function Update() -- Line: 38
	--[[
		Upvalues:
			[1] = bool2
			[2] = m_Library
			[3] = u1
			[4] = t_SelectBooth
			[5] = u2
			[6] = t_Inventory
			[7] = table1
			[8] = Random_new_ret
			[9] = bool1
	--]]
	if not bool2 then return end
	if not isVisible() then return end
	local u3 = m_Library.Save.Get();
	if not u3 then return end
	assert(u3);
	local t_Pets = u3.Pets;
	if not t_Pets then
		m_Library.Print("Failed to grab pets", true);
		return;
	end
	bool2 = false;
	debug.profilebegin("SelectBooth.Update");
	u1 = u1 + 1;
	local v9;
	if t_SelectBooth.Query.Text == "" then
		v9 = false;
	else
		v9 = t_SelectBooth.Query.Text ~= nil;
	end
	local v1 = v9 and m_Library.Functions.RegexEscape(string.lower(tostring(t_SelectBooth.Query.Text))) or nil;
	t_SelectBooth.PetAmount.Text = #t_Pets .. (#t_Pets <= 1 and " Pet" or " Pets");
	local table_clone_ret = table.clone(t_Pets);
	local v2 = m_Library.Shared.SortPets(u3, table_clone_ret);
	for key1, val1 in ipairs(v2) do
		local t_uid = val1.uid;
		local t_id = val1.id;
		local _ = val1.idt;
		local u4 = m_Library.Shared.HasPetEquipped(u3, val1);
		local t_s = val1.s;
		local t_g = val1.g;
		local t_r = val1.r;
		local t_dm = val1.dm;
		local t_powers = val1.powers;
		local v10 = m_Library.Directory.Pets[t_id];
		local _ = v10.isGift;
		if not t_g or not v10.goldenThumbnail then
			local _ = v10.thumbnail;
		end
		local t_name = v10.name;
		local t_rarity = v10.rarity;
		local t_l = val1.l;
		local t_sh = val1.sh;
		local v11 = t_SelectBooth.Main.Pets:FindFirstChild(t_uid);
		if u2 and u2.Listings[t_uid] then continue end
		if not v11 then
			v11 = t_Inventory.Pet:Clone();
			m_Library.PetUI.Create(v11, t_uid);
			local function RefreshPetData() -- Line: 99
				--[[
					Upvalues:
						[1] = m_Library
						[2] = t_uid
						[3] = val1
						[4] = u4
						[5] = u3
						[6] = t_s
						[7] = t_g
						[8] = t_r
						[9] = t_l
						[10] = t_dm
				--]]
				debug.profilebegin("SelectBooth.Update.RefreshPetData");
				local v13, v14 = m_Library.PetCmds.Get(t_uid);
				if v13 and v14 == m_Library.LocalPlayer then
					val1 = v13;
					u4 = m_Library.Shared.HasPetEquipped(u3, val1);
					t_s = val1.s;
					t_g = val1.g;
					t_r = val1.r;
					t_l = val1.l;
					t_dm = val1.dm;
				end
				debug.profileend();
			end
			local function Clicked() -- Line: 114
				--[[
					Upvalues:
						[1] = RefreshPetData
						[2] = t_l
						[3] = m_Library
						[4] = table1
						[5] = t_uid
						[6] = Random_new_ret
				--]]
				RefreshPetData();
				if t_l then
					m_Library.Message.New("This pet is locked! Unlock it before you can sell it!");
					return;
				end
				if m_Library.Functions.SearchArray(table1, t_uid) then
					m_Library.Audio.Play("rbxassetid://7139317909", script, Random_new_ret:NextNumber(0.95, 1.05), 0.75);
					m_Library.Functions.RemoveTable(table1, t_uid);
				else
					m_Library.Audio.Play("rbxassetid://7139317934", script, Random_new_ret:NextNumber(0.95, 1.05), 0.75);
					table.insert(table1, t_uid);
				end
				UpdateLazy();
			end
			v11.Activated:Connect(function() -- Line: 134
				--[[
					Upvalues:
						[1] = bool1
						[2] = Clicked
				--]]
				if not bool1 then
					bool1 = true;
					Clicked();
					UpdateLazy();
					bool1 = false;
				end
			end);
			m_Library.GUIFX.ButtonFX(v11);
		end
		v11:SetAttribute("Tick", u1);
		v11.LayoutOrder = key1;
		v11.Level:FindFirstChildOfClass("UIStroke").Thickness = 4;
		v11.HC:FindFirstChildOfClass("UIStroke").Thickness = 4;
		v11.Locked.Visible = val1.l;
		v11.Stars.Visible = not v11.Locked.Visible;
		v11.Equipped.Visible = m_Library.Functions.SearchArray(table1, t_uid);
		if v9 and v1 then
			local bool3 = false;
			if string.find(string.lower(t_name), v1, 1, true) then
				bool3 = true;
			elseif val1.nk and string.find(string.lower(val1.nk), v1, 1, true) then
				bool3 = true;
			elseif string.find(string.lower(t_rarity), v1, 1, true) then
				bool3 = true;
			elseif t_sh and string.find("shiny", v1, 1, true) then
				bool3 = true;
			elseif t_g and (string.find("gold", v1, 1, true) or string.find("golden", v1, 1, true)) then
				bool3 = true;
			elseif t_r and string.find("rainbow", v1, 1, true) then
				bool3 = true;
			elseif t_dm and string.find("dark matter", v1, 1, true) then
				bool3 = true;
			elseif t_l and string.find("lock", v1, 1, true) then
				bool3 = true;
			elseif t_powers and #t_powers > 0 then
				for _, val6 in ipairs(t_powers) do
					local unpack_ret1, unpack_ret2 = unpack(val6);
					local v15, _ = m_Library.Shared.GetPowerDir(unpack_ret1, unpack_ret2);
					if not string.find(string.lower(v15.title), v1, 1, true) then continue end
					bool3 = true;
					break;
				end
			end
			v11.Visible = bool3;
		else
			v11.Visible = true;
		end
		v11.Parent = t_SelectBooth.Main.Pets;
	end
	for _, child2 in ipairs(t_SelectBooth.Main.Pets:GetChildren()) do
		local Attribute = child2:GetAttribute("Tick");
		if not Attribute or Attribute == u1 and u2 and not u2.Listings[child2.Name] then continue end
		child2:Destroy();
	end
	local v3 = 0;
	local v4 = u3.MaxSlots - #v2;
	for _, child3 in ipairs(t_SelectBooth.Main.Pets:GetChildren()) do
		if child3.Name ~= "Empty" then continue end
		v3 = v3 + 1;
	end
	local v5 = v4 - v3;
	if v5 > 0 then
		for index1 = 1, v5 do
			t_Inventory.Empty:Clone().Parent = t_SelectBooth.Main.Pets;
		end
	elseif v5 < 0 then
		for index2 = 1, -v5 do
			local Empty = t_SelectBooth.Main.Pets:FindFirstChild("Empty");
			if not Empty then break end
			Empty:Destroy();
		end
	end
	UpdateSelectButton();
	UpdateScrolling();
	debug.profileend();
end
function UpdateScrolling() -- Line: 246
	--[[
		Upvalues:
			[1] = t_SelectBooth
			[2] = m_Library
	--]]
	debug.profilebegin("SelectBooth.UpdateScrolling");
	local t_Pets2 = t_SelectBooth.Main.Pets;
	local UIGridLayout = t_Pets2:FindFirstChildOfClass("UIGridLayout");
	local UIPadding = t_Pets2:FindFirstChildOfClass("UIPadding");
	local v6 = m_Library.Functions.ResolutionScale();
	local v7 = v6 <= 0.5 and 4 or v6 <= 0.65 and 5 or v6 <= 1 and 6 or v6 <= 1.2 and 7 or 8;
	UIGridLayout.CellPadding = UDim2.new(0, 20, 0, 20);
	local v8 = (t_Pets2.AbsoluteSize.X - t_Pets2.ScrollBarThickness - UIPadding.PaddingLeft.Offset - UIPadding.PaddingRight.Offset) / v7 - UIGridLayout.CellPadding.X.Offset;
	local udim2 = UDim2.new(0, v8, 0, v8);
	UIGridLayout.CellSize = udim2;
	UIGridLayout:ApplyLayout();
	t_Pets2.CanvasSize = UDim2.new(0, UIGridLayout.AbsoluteContentSize.X, 0, UIGridLayout.AbsoluteContentSize.Y + 65);
	debug.profileend();
end
function UpdateSelectButton() -- Line: 279
	--[[
		Upvalues:
			[1] = t_SelectBooth
			[2] = table1
	--]]
	t_SelectBooth.Frame.Bottom.SelectPets.ImageColor3 = #table1 > 0 and Color3.new(1, 1, 1) or Color3.new(0.5, 0.5, 0.5);
	t_SelectBooth.Frame.Bottom.SelectPets.Label.Text = "List Pet" .. (#table1 > 1 and "s" or "");
end
t_SelectBooth.Gui:GetPropertyChangedSignal("Enabled"):Connect(function() -- Line: 298
	Update();
end);
t_SelectBooth.Frame.Bottom.SelectPets.Activated:Connect(function() -- Line: 302
	--[[
		Upvalues:
			[1] = bool1
			[2] = table1
			[3] = m_Library
	--]]
	if not bool1 then
		bool1 = true;
		local table2 = {};
		if #table1 > 0 then
			for _, val4 in ipairs(table1) do
				local v12 = m_Library.PetCmds.Get(val4);
				if not v12 then
					table.insert(table2, val4);
					continue;
				end
				assert(v12);
				if not v12.l then continue end
				m_Library.Message.New("A selected pet is locked! Unlock it before you can sell it!");
				bool1 = false;
				return;
			end
			for _, val5 in ipairs(table2) do
				m_Library.Functions.RemoveTable(table1, val5);
			end
			if #table1 > 0 then
				m_Library.Signal.Invoke("List Pet", table1);
			end
		end
		bool1 = false;
	end
end);
t_SelectBooth.Frame.Bottom.Search.Query:GetPropertyChangedSignal("Text"):Connect(function() -- Line: 336
	--[[
		Upvalues:
			[1] = t_SelectBooth
	--]]
	if t_SelectBooth.Frame.Bottom.Search.Query.Text ~= "" then
		t_SelectBooth.Main.Pets.CanvasPosition = Vector2.new();
	end
	UpdateLazy();
end);
t_SelectBooth.Close.Activated:Connect(function() -- Line: 345
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
			[3] = Random_new_ret
			[4] = t_SelectBooth
	--]]
	if not bool1 then
		debug.profilebegin("SelectBooth.Close.Activated");
		bool1 = true;
		m_Library.Audio.Play("rbxassetid://8951380772", script, Random_new_ret:NextNumber(0.95, 1.05), 0.1);
		t_SelectBooth.Gui.Enabled = false;
		bool1 = false;
		debug.profileend();
	end
end);
m_Library.Signal.Fired("Resolution Changed"):Connect(function() -- Line: 358
	task.defer(function() -- Line: 360
		UpdateScrolling();
	end);
end);
m_Library.GUIFX.ButtonFX(t_SelectBooth.Close);
m_Library.GUIFX.ButtonFX(t_SelectBooth.Frame.Bottom.SelectPets);
Update();
m_Library.Signal.Invoked("Select Booth Pet").OnInvoke = function(p1) -- Line: 381
	--[[
		Upvalues:
			[1] = u2
			[2] = table1
			[3] = t_SelectBooth
	--]]
	u2 = p1;
	table1 = {};
	UpdateLazy();
	t_SelectBooth.Gui.Enabled = true;
end
  -  Editar
  04:54:13.907    -  Editar
  04:54:13.908  ----- [2745] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Customize Booth -----  -  Editar
  04:54:13.908  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_BoothCustomize = m_Library.GUI.BoothCustomize;
local bool1 = false;
function getBoothStyle(p1) -- Line: 21
	return p1 or "Default Booth";
end
function Update() -- Line: 26
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_BoothCustomize
			[3] = bool1
	--]]
	local v1 = m_Library.Save.Get();
	if not v1 then return end
	assert(v1);
	local t_Booths = t_BoothCustomize.Main.Booths;
	local t_Booth = t_Booths.Booth;
	t_Booth.Visible = false;
	local v2 = v1.TradingBoothStyles or {};
	for key1, val1 in pairs(m_Library.Directory.Booths) do
		local v4 = t_Booths:FindFirstChild(key1);
		if not v4 then
			if val1.OffSale and not m_Library.Functions.SearchArray(v2, key1) then continue end
			v4 = t_Booth:Clone();
			v4.Visible = true;
			v4.Name = key1;
			v4.BoothIcon.Image = val1.Icon;
			v4.LayoutOrder = val1.Order;
			v4.Parent = t_Booths;
			local function Clicked() -- Line: 56
				--[[
					Upvalues:
						[1] = m_Library
						[2] = key1
						[3] = val1
				--]]
				local v7 = m_Library.Save.Get();
				if not v7 then return end
				assert(v7);
				local v8 = v7.TradingBoothStyles or {};
				if key1 ~= "Default Booth" and not m_Library.Functions.SearchArray(v8, key1) then
					if val1.ProductId then
						m_Library.Shared.PromptPurchase(val1.ProductId, true);
						return;
					end
					if val1.RequirementMessage then
						m_Library.Message.New(val1.RequirementMessage);
						return;
					end
					if val1.DiamondPrice then
						local v11 = "Buy " .. val1.DisplayName .. " for " .. m_Library.Functions.Commas(val1.DiamondPrice) .. " Diamonds?";
						local v12 = m_Library.Message.New(v11, true);
						if v12 then
							local v13, v14 = m_Library.Network.Invoke("Purchase Booth Style", key1);
							if not v13 then
								m_Library.Message.New(v14 or "Something went wrong!");
								return;
							end
							m_Library.Signal.Fire("Notification", "Success! \226\156\133", {
								color = Color3.fromRGB(105, 255, 168),
								sound = "rbxassetid://11648890466"
							});
						end
					end
				else
					local v9, v10 = m_Library.Network.Invoke("Change Booth Style", key1);
					if not v9 and v10 then
						m_Library.Message.New(v10);
					end
					Update();
				end
			end
			v4.Activated:Connect(function() -- Line: 92
				--[[
					Upvalues:
						[1] = bool1
						[2] = Clicked
				--]]
				if not bool1 then
					bool1 = true;
					Clicked();
					bool1 = false;
				end
			end);
			m_Library.GUIFX.ButtonFX(v4);
		end
		local v5 = v1.TradingBoothStyles or {};
		v4.Equipped.Visible = getBoothStyle(v1.SelectedTradingBooth) == key1;
		if key1 == "Default Booth" then continue end
		v4.Locked.Visible = not m_Library.Functions.SearchArray(v5, key1);
	end
	Scrolling();
end
function Scrolling() -- Line: 115
	--[[
		Upvalues:
			[1] = t_BoothCustomize
			[2] = m_Library
	--]]
	local t_Booths2 = t_BoothCustomize.Main.Booths;
	local UIGridLayout = t_Booths2:FindFirstChildOfClass("UIGridLayout");
	local UIPadding = t_Booths2:FindFirstChildOfClass("UIPadding");
	local _ = m_Library.Functions.ResolutionScale();
	UIGridLayout.CellPadding = UDim2.new(0, 20, 0, 20);
	local v3 = (t_Booths2.AbsoluteSize.X - t_Booths2.ScrollBarThickness - UIPadding.PaddingLeft.Offset - UIPadding.PaddingRight.Offset) / 4 - UIGridLayout.CellPadding.X.Offset;
	local udim2 = UDim2.new(0, v3, 0, v3);
	UIGridLayout.CellSize = udim2;
	UIGridLayout:ApplyLayout();
	t_Booths2.CanvasSize = UDim2.new(0, UIGridLayout.AbsoluteContentSize.X, 0, UIGridLayout.AbsoluteContentSize.Y + 65);
end
m_Library.GUIFX.ButtonFX(t_BoothCustomize.Close);
t_BoothCustomize.Close.Activated:Connect(function() -- Line: 151
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_BoothCustomize
	--]]
	if not bool1 then
		bool1 = true;
		t_BoothCustomize.Gui.Enabled = false;
		bool1 = false;
	end
end);
Update();
Scrolling();
m_Library.Signal.Fired("Stat Changed"):Connect(function(p2) -- Line: 167
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_BoothCustomize
	--]]
	if p2 == "TradingBoothStyles" then
		local v6 = m_Library.Save.Get();
		if v6 then
			local t_Booths3 = t_BoothCustomize.Main.Booths;
			for _, val3 in ipairs(v6.TradingBoothStyles) do
				local FindFirstChild_ret = t_Booths3:FindFirstChild(val3);
				if not FindFirstChild_ret then continue end
				FindFirstChild_ret.Locked.Visible = false;
			end
		end
	end
end);
m_Library.Signal.Fired("Booth Style Updated"):Connect(function(p3) -- Line: 184
	--[[
		Upvalues:
			[1] = t_BoothCustomize
			[2] = m_Library
	--]]
	local t_Booths4 = t_BoothCustomize.Main.Booths;
	local BoothStyle = getBoothStyle(p3);
	for _, child2 in pairs(t_Booths4:GetChildren()) do
		if not child2:IsA("Frame") or not m_Library.Directory.Booths[child2.Name] then continue end
		child2.Equipped.Visible = child2.Name == BoothStyle;
	end
end);
m_Library.Signal.Fired("Customize Booth"):Connect(function() -- Line: 198
	--[[
		Upvalues:
			[1] = t_BoothCustomize
	--]]
	Update();
	t_BoothCustomize.Gui.Enabled = true;
end);
m_Library.Signal.Fired("Resolution Changed"):Connect(function() -- Line: 204
	task.defer(function() -- Line: 205
		Scrolling();
	end);
end);
  -  Editar
  04:54:13.908    -  Editar
  04:54:13.908  ----- [2746] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Trading Plaza Choice -----  -  Editar
  04:54:13.908  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_TradingPlazaChoice = m_Library.GUI.TradingPlazaChoice;
local bool1 = false;
function Setup(p1) -- Line: 20
	--[[
		Upvalues:
			[1] = t_TradingPlazaChoice
			[2] = bool1
			[3] = m_Library
	--]]
	t_TradingPlazaChoice.VoiceButton.Activated:Connect(function() -- Line: 22
		--[[
			Upvalues:
				[1] = bool1
				[2] = p1
				[3] = m_Library
				[4] = t_TradingPlazaChoice
		--]]
		if not bool1 then
			bool1 = true;
			if not p1 then
				bool1 = false;
				return;
			end
			m_Library.Signal.Fire("Trading Plaza Request", "VOICE");
			t_TradingPlazaChoice.Gui.Enabled = false;
			bool1 = false;
		end
	end);
	t_TradingPlazaChoice.VoiceButton.ImageColor3 = p1 and Color3.new(1, 1, 1) or Color3.new(0.5, 0.5, 0.5);
	local u1 = m_Library.Shared.HasProTradingAccess();
	t_TradingPlazaChoice.ProButton.Activated:Connect(function() -- Line: 45
		--[[
			Upvalues:
				[1] = bool1
				[2] = u1
				[3] = m_Library
				[4] = t_TradingPlazaChoice
		--]]
		if not bool1 then
			bool1 = true;
			if not u1 then
				bool1 = false;
				return;
			end
			m_Library.Signal.Fire("Trading Plaza Request", "PRO");
			t_TradingPlazaChoice.Gui.Enabled = false;
			bool1 = false;
		end
	end);
	t_TradingPlazaChoice.ProButton.ImageColor3 = u1 and Color3.new(1, 1, 1) or Color3.new(0.5, 0.5, 0.5);
	t_TradingPlazaChoice.NormalButton.Activated:Connect(function() -- Line: 69
		--[[
			Upvalues:
				[1] = bool1
				[2] = m_Library
				[3] = t_TradingPlazaChoice
		--]]
		if not bool1 then
			bool1 = true;
			m_Library.Signal.Fire("Trading Plaza Request", "DEFAULT");
			t_TradingPlazaChoice.Gui.Enabled = false;
			bool1 = false;
		end
	end);
	t_TradingPlazaChoice.NormalButton.ImageColor3 = Color3.new(1, 1, 1) or Color3.new(0.5, 0.5, 0.5);
	t_TradingPlazaChoice.Gui.Enabled = true;
end
t_TradingPlazaChoice.Close.Activated:Connect(function() -- Line: 91
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_TradingPlazaChoice
	--]]
	if not bool1 then
		bool1 = true;
		t_TradingPlazaChoice.Gui.Enabled = false;
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_TradingPlazaChoice.Close);
m_Library.GUIFX.ButtonFX(t_TradingPlazaChoice.ProButton);
m_Library.GUIFX.ButtonFX(t_TradingPlazaChoice.VoiceButton);
m_Library.GUIFX.ButtonFX(t_TradingPlazaChoice.NormalButton);
m_Library.Signal.Fired("Show Trading Plaza Choice"):Connect(Setup);
  -  Editar
  04:54:13.908    -  Editar
  04:54:13.908  ----- [2747] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Clipboard Popup -----  -  Editar
  04:54:13.908  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_ClipboardPopup = m_Library.GUI.ClipboardPopup;
local bool1 = false;
function UpdateScaling() -- Line: 19
end
m_Library.GUIFX.ButtonFX(t_ClipboardPopup.Close);
t_ClipboardPopup.Close.Activated:Connect(function() -- Line: 31
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_ClipboardPopup
	--]]
	if not bool1 then
		bool1 = true;
		t_ClipboardPopup.Gui.Enabled = false;
		bool1 = false;
	end
end);
m_Library.Signal.Fired("Resolution Changed"):Connect(function() -- Line: 39
	task.defer(function() -- Line: 40
		UpdateScaling();
	end);
end);
m_Library.Network.Fired("Open Clipboard Popup"):Connect(function(p1) -- Line: 49
	--[[
		Upvalues:
			[1] = t_ClipboardPopup
	--]]
	t_ClipboardPopup.Gui.Frame.InputFrame.Input.Text = p1;
	UpdateScaling();
	t_ClipboardPopup.Gui.Enabled = true;
end);
  -  Editar
  04:54:13.908    -  Editar
  04:54:13.908  ----- [2748] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.FFlags__OLD -----  -  Editar
  04:54:13.908  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local ReplicatedStorage = game:GetService("ReplicatedStorage");
local Library = ReplicatedStorage:WaitForChild("Library");
local m_FFlags = require(Library:WaitForChild("Modules").FFlags);
local t_FFlags = m_Library.GUI.FFlags;
local bool1 = false;
local u1 = m_Library.Functions.DeepCopyUnsafe(m_Library.FFlags.currentData);
local u2 = m_Library.Functions.DeepCopyUnsafe(u1);
function getValueTitle(_, p1) -- Line: 29
	if p1 == nil then
		return "nil";
	end
	if typeof(p1) == "number" then
		return tostring(p1);
	end
	if typeof(p1) == "boolean" then
		if p1 then
			return "On";
		end
		return "Off";
	end
	if typeof(p1) == "string" then
		return p1;
	end
	return tostring(p1);
end
function ToggleValue(p2, p3) -- Line: 45
	if not p2.Toggles then
		warn("I don't know how to toggle a " .. p2.Type);
		return p3;
	end
	local v1 = 1;
	for index1 = 1, #p2.Toggles do
		if p2.Toggles[index1] == p3 then
			v1 = index1;
			break;
		end
	end
	p3 = p2.Toggles[v1 % #p2.Toggles + 1];
	return p3;
end
function Commit() -- Line: 62
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
			[3] = u2
	--]]
	if m_Library.Functions.DeepEqualsUnsafe(u1, u2) then
		m_Library.Message.New("\226\157\140 Nothing changed!");
		return;
	end
	local v2 = m_Library.Network.Invoke("FFlags Commit", u1);
	if v2 then
		m_Library.Message.New("\226\156\133 Succesfully commited! Thank you please come again");
		return;
	end
	m_Library.Message.New("\226\157\140 Error commiting! Please try again.");
end
function Get(p4) -- Line: 76
	--[[
		Upvalues:
			[1] = m_FFlags
			[2] = u1
	--]]
	local v3 = m_FFlags.Options[p4];
	assert(v3);
	local v4 = u1[p4];
	if v4 == nil and not v3.Nullable then
		v4 = v3.Default;
	end
	return v4;
end
function ToggleSetting(p5) -- Line: 87
	--[[
		Upvalues:
			[1] = m_Library
			[2] = m_FFlags
			[3] = u1
	--]]
	m_Library.Audio.Play("rbxassetid://7004248320", script, 1, 0.5);
	local v5 = m_FFlags.Options[p5];
	assert(v5);
	local v6 = u1[p5];
	if v6 == nil and not v5.Nullable then
		v6 = v5.Default;
	end
	local v7 = ToggleValue(v5, v6);
	if not v5.Nullable and v7 == v5.Default then
		v7 = nil;
	end
	u1[p5] = v7;
	Update();
end
function Update() -- Line: 107
	--[[
		Upvalues:
			[1] = m_FFlags
			[2] = t_FFlags
			[3] = m_Library
			[4] = bool1
			[5] = u1
	--]]
	for key1, val1 in pairs(m_FFlags.Options) do
		local v9 = t_FFlags.Container:FindFirstChild(key1);
		if not v9 then
			v9 = m_Library.Assets.UI.Settings.Setting:Clone();
			v9.Name = key1;
			v9.LayoutOrder = val1.Order;
			v9.Title.Text = val1.Name;
			v9.Parent = t_FFlags.Container;
			m_Library.GUIFX.ButtonFX(v9.Toggle);
			v9.Toggle.Activated:Connect(function() -- Line: 118
				--[[
					Upvalues:
						[1] = bool1
						[2] = key1
				--]]
				if not bool1 then
					bool1 = true;
					ToggleSetting(key1);
					bool1 = false;
				end
			end);
		end
		local v10 = u1[key1];
		if v10 == nil and not val1.Nullable then
			v10 = val1.Default;
		end
		local ValueTitle = getValueTitle(val1, v10);
		v9.Toggle.Label.Text = ValueTitle;
		if ValueTitle == "Off" or ValueTitle == "No" or ValueTitle == "Disabled" then
			v9.Toggle.Image = "rbxassetid://7045637481";
			v9.Toggle.HoverImage = "rbxassetid://7045637564";
			continue;
		end
		if ValueTitle == "On" or ValueTitle == "Yes" or ValueTitle == "Enabled" then
			v9.Toggle.Image = "rbxassetid://7045637286";
			v9.Toggle.HoverImage = "rbxassetid://7045637411";
			continue;
		end
		v9.Toggle.Image = "rbxassetid://6869680115";
		v9.Toggle.HoverImage = "rbxassetid://6903539993";
	end
	UpdateScaling();
end
function UpdateScaling() -- Line: 149
	--[[
		Upvalues:
			[1] = t_FFlags
	--]]
	local UIListLayout = t_FFlags.Container:FindFirstChildOfClass("UIListLayout");
	local UIPadding = t_FFlags.Container:FindFirstChildOfClass("UIPadding");
	t_FFlags.Container.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + UIPadding.PaddingTop.Offset + UIPadding.PaddingBottom.Offset);
end
m_Library.GUIFX.ButtonFX(t_FFlags.Close);
t_FFlags.Close.Activated:Connect(function() -- Line: 161
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
			[3] = u1
			[4] = u2
			[5] = t_FFlags
	--]]
	if not bool1 then
		bool1 = true;
		if m_Library.Functions.DeepEqualsUnsafe(u1, u2) and true or false or m_Library.Message.New("\226\157\140 Changed were not saved, are you sure you want to close?", true) then
			t_FFlags.Gui.Enabled = false;
			task.delay(0.1, function() -- Line: 174
				--[[
					Upvalues:
						[1] = t_FFlags
				--]]
				t_FFlags.Gui.Enabled = false;
			end);
			u1 = m_Library.Functions.DeepCopyUnsafe(u2);
			Update();
		end
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_FFlags.Commit);
t_FFlags.Commit.Activated:Connect(function() -- Line: 185
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
			[3] = u1
			[4] = u2
	--]]
	if not bool1 then
		bool1 = true;
		if not m_Library.Functions.DeepEqualsUnsafe(u1, u2) then
			local v11 = m_Library.Message.New("\240\159\145\191\240\159\145\191\240\159\145\191 ARE YOU SURE??? \240\159\145\191\240\159\145\191\240\159\145\191", true);
			if v11 then
				Commit();
			end
		else
			m_Library.Message.New("\226\157\140 You have not made any changes!");
		end
		bool1 = false;
	end
end);
m_Library.Signal.Fired("Resolution Changed"):Connect(function() -- Line: 200
	task.defer(function() -- Line: 201
		UpdateScaling();
	end);
end);
m_Library.Signal.Fired("FFlags Changed"):Connect(function(p6) -- Line: 219
	--[[
		Upvalues:
			[1] = u1
			[2] = u2
			[3] = m_Library
	--]]
	local v8 = m_Library.Functions.DeepCopyUnsafe(p6);
	u2 = m_Library.Functions.DeepCopyUnsafe(p6);
	u1 = v8;
	Update();
end);
m_Library.Network.Fired("Open FFlags"):Connect(function() -- Line: 224
	--[[
		Upvalues:
			[1] = t_FFlags
	--]]
	t_FFlags.Gui.Enabled = true;
end);
  -  Editar
  04:54:13.910    -  Editar
  04:54:13.910  ----- [2749] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Mailbox -----  -  Editar
  04:54:13.911  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_Mailbox = m_Library.GUI.Mailbox;
t_Mailbox.Gui.Frame.MainMenu.Visible = true;
t_Mailbox.Gui.Frame.GiftPet.Visible = false;
t_Mailbox.Gui.Frame.GiftInventory.Visible = false;
local bool1 = false;
local t_Inventory = m_Library.Assets.UI.Inventory;
local Random_new_ret = Random.new();
local _ = require(game.ReplicatedStorage.Library.Modules.Pets);
local bool2 = false;
local u1 = false;
local u2 = "Default";
local u3 = 0;
local u4 = "";
local u5 = "";
local u6 = nil;
local u7 = false;
local table1 = {};
local table2 = {};
local table3 = {};
local u8 = nil;
local Mailbox = nil;
local bool3 = false;
local bool4 = false;
local bool5 = false;
function ToggleButton(p1, p2) -- Line: 98
	if p2 then
		p1.Image = "rbxassetid://7045637286";
		p1.HoverImage = "rbxassetid://7045637411";
		p1.PressedImage = "rbxassetid://6903534547";
		return;
	end
	p1.HoverImage = "rbxassetid://7045637564";
	p1.Image = "rbxassetid://7045637481";
	p1.PressedImage = "rbxassetid://6903534547";
end
function ComposeMail() -- Line: 111
	--[[
		Upvalues:
			[1] = u4
			[2] = u5
			[3] = u6
			[4] = u3
	--]]
	local table4 = {
		Recipient = u4,
		Message = u5,
		Pets = {u6},
		Diamonds = u3
	};
	return table4;
end
function CanSend() -- Line: 121
	--[[
		Upvalues:
			[1] = u4
			[2] = u3
			[3] = u6
	--]]
	local v1;
	if u4 == "" then
		v1 = false;
	else
		v1 = u3 == 0 and u6 ~= nil or true;
	end
	return v1;
end
function Update() -- Line: 126
	--[[
		Upvalues:
			[1] = u8
			[2] = m_Library
			[3] = bool3
			[4] = t_Mailbox
			[5] = bool2
	--]]
	if not u8 then
		u8 = m_Library.Network.Invoke("Get Mail");
	end
	local v2 = u8 and #u8.Inbox > 0;
	if v2 then
		UpdateWorldMailbox();
	end
	if not bool3 then
		local t_Button = t_Mailbox.Gui.Frame.MainMenu.Categories.Receive.Frame.Button;
		m_Library.GUIFX.ButtonFX(t_Button);
		t_Button.Activated:Connect(function() -- Line: 138
			--[[
				Upvalues:
					[1] = bool2
					[2] = t_Mailbox
					[3] = m_Library
			--]]
			if not bool2 then
				bool2 = true;
				t_Mailbox.Gui.Frame.MainMenu.Visible = false;
				m_Library.Audio.Play("rbxassetid://11839132640", script, 1, 1);
				InboxMode("Default");
				t_Mailbox.Gui.Frame.GiftInventory.Main.History.Visible = false;
				t_Mailbox.Gui.Frame.GiftInventory.Main.Gifts.Visible = true;
				UpdateInbox();
				t_Mailbox.Gui.Frame.GiftInventory.Visible = true;
				bool2 = false;
			end
		end);
		local t_Button2 = t_Mailbox.Gui.Frame.MainMenu.Categories.Send.Frame.Button;
		m_Library.GUIFX.ButtonFX(t_Button2);
		t_Button2.Activated:Connect(function() -- Line: 156
			--[[
				Upvalues:
					[1] = bool2
					[2] = t_Mailbox
					[3] = m_Library
			--]]
			if not bool2 then
				bool2 = true;
				t_Mailbox.Gui.Frame.MainMenu.Visible = false;
				m_Library.Audio.Play("rbxassetid://11839132336", script, 1, 1);
				UpdateOutboxLazy();
				t_Mailbox.Gui.Frame.GiftPet.Visible = true;
				bool2 = false;
			end
		end);
		bool3 = true;
	end
	local t_Notification = t_Mailbox.Gui.Frame.MainMenu.Categories.Receive.Frame.Button.Notification;
	local t_PetReady = t_Mailbox.Gui.Frame.MainMenu.Categories.Receive.Frame.PetReady;
	t_Notification.Count.Text = v2 and #u8.Inbox or 0;
	t_Notification.Visible = v2;
	t_PetReady.Visible = v2;
end
function Select(p3) -- Line: 180
	--[[
		Upvalues:
			[1] = m_Library
			[2] = Random_new_ret
			[3] = u6
			[4] = u7
	--]]
	local v3 = m_Library.PetCmds.Get(p3);
	if not p3 then return end
	local v4 = m_Library.Signal.Invoke("Is Trading Booth Pet", p3);
	if v4 then
		m_Library.Message.New("This pet is currently in your trading booth! Remove it before you can enchant it!");
		return;
	end
	m_Library.Audio.Play("rbxassetid://7139317934", script, Random_new_ret:NextNumber(0.95, 1.05), 0.75);
	u6 = p3;
	u7 = v3.hc or false;
	UpdatePets();
	UpdateSendButtons();
end
function Deselect(_) -- Line: 203
	--[[
		Upvalues:
			[1] = u6
			[2] = u7
	--]]
	u6 = nil;
	u7 = false;
	UpdatePets();
	UpdateSendButtons();
end
function UpdateDiamondsAmount() -- Line: 213
	--[[
		Upvalues:
			[1] = t_Mailbox
			[2] = m_Library
			[3] = u3
	--]]
	local t_Input = t_Mailbox.Gui.Frame.GiftPet.Container.Inventory.Bottom.BalanceInput.Display.Input;
	local v5 = m_Library.Save.Get();
	if v5 then
		local u10 = 0;
		pcall(function() -- Line: 219
			--[[
				Upvalues:
					[1] = u10
					[2] = m_Library
					[3] = t_Input
			--]]
			u10 = math.round((m_Library.Functions.ParseNumberSmart(t_Input.Text)));
		end);
		if u10 < 0 then
			u10 = 0;
		end
		if v5.Diamonds <= u10 then
			u10 = v5.Diamonds;
		end
		u3 = u10;
		t_Input.Text = m_Library.Functions.Commas(u10);
		m_Library.Audio.Play(4586418198, script, 1, 0.2);
		m_Library.GUIFX.FlashText(t_Input);
		UpdateSendButtons();
		t_Mailbox.Gui.Frame.GiftPet.Container.Inventory.Bottom.BalanceInput.Display.Input:SetAttribute("Amount", u10);
	end
end
function UpdateSendButtons() -- Line: 242
	--[[
		Upvalues:
			[1] = t_Mailbox
	--]]
	local t_SendDiamonds = t_Mailbox.Gui.Frame.GiftPet.Side.BottomInputFrame.SendDiamonds;
	t_SendDiamonds.ImageColor3 = CanSend() and Color3.new(1, 1, 1) or Color3.new(0.5, 0.5, 0.5);
end
function UpdateTargetPlayer() -- Line: 250
	--[[
		Upvalues:
			[1] = t_Mailbox
			[2] = u4
	--]]
	local t_Input2 = t_Mailbox.Gui.Frame.GiftPet.Side.UsernameInputFrame.Input;
	u4 = t_Input2.Text and t_Input2.Text or "";
	UpdateSendButtons();
end
function UpdateMessage() -- Line: 256
	--[[
		Upvalues:
			[1] = t_Mailbox
			[2] = m_Library
			[3] = u5
	--]]
	local t_Input3 = t_Mailbox.Gui.Frame.GiftPet.Side.MessageInputFrame.Input;
	local v6 = t_Input3.Text and t_Input3.Text or "";
	if not m_Library.Functions.IsASCII(v6) then
		m_Library.Message.New("That message isn't valid!");
		return;
	end
	u5 = v6;
	UpdateSendButtons();
end
function PetScrolling() -- Line: 269
	--[[
		Upvalues:
			[1] = t_Mailbox
			[2] = m_Library
			[3] = u1
	--]]
	local t_Pets = t_Mailbox.Gui.Frame.GiftPet.Container.Inventory.Pets;
	local UIGridLayout = t_Pets:FindFirstChildOfClass("UIGridLayout");
	local UIPadding = t_Pets:FindFirstChildOfClass("UIPadding");
	local v7 = m_Library.Functions.ResolutionScale();
	local v8 = v7 <= 0.5 and 3 or v7 <= 1 and 4 or v7 <= 1.3 and 5 or 6;
	if u1 then
		UIGridLayout.CellPadding = UDim2.new(0, 10, 0, 10);
	else
		UIGridLayout.CellPadding = UDim2.new(0, 20, 0, 20);
	end
	if u1 then
		v8 = v8 * 2;
	end
	local v9 = (t_Pets.AbsoluteSize.X - t_Pets.ScrollBarThickness - UIPadding.PaddingLeft.Offset - UIPadding.PaddingRight.Offset) / v8 - UIGridLayout.CellPadding.X.Offset;
	local udim2 = UDim2.new(0, v9, 0, v9);
	UIGridLayout.CellSize = udim2;
	UIGridLayout:ApplyLayout();
	t_Pets.CanvasSize = UDim2.new(1, 0, 0, UIGridLayout.AbsoluteContentSize.Y + (u1 and 55 or 65));
end
function UpdatePets() -- Line: 308
	--[[
		Upvalues:
			[1] = t_Mailbox
			[2] = m_Library
			[3] = u6
	--]]
	for _, child1 in ipairs(t_Mailbox.Gui.Frame.GiftPet.Container.Inventory.Pets:GetChildren()) do
		if child1.ClassName ~= "TextButton" then continue end
		if not m_Library.PetCmds.Get(child1.Name) then
			child1:Destroy();
			return;
		end
		local v20 = child1.Name == u6;
		child1.Equipped.Visible = v20;
		child1.BackgroundColor3 = v20 and Color3.fromRGB(69, 239, 69) or Color3.fromRGB(59, 177, 252);
		local Attribute = child1:GetAttribute("Locked");
		if Attribute then continue end
		child1.BackgroundColor3 = v20 and Color3.fromRGB(69, 239, 69) or Color3.fromRGB(59, 177, 252);
		child1.PetIcon.ImageTransparency = 0;
	end
	PetScrolling();
end
function UpdateOutboxLazy(p4) -- Line: 337
	--[[
		Upvalues:
			[1] = bool1
	--]]
	bool1 = true;
	if p4 then
		clearOutboxFields = true;
	end
end
function isVisible() -- Line: 344
	--[[
		Upvalues:
			[1] = t_Mailbox
	--]]
	return t_Mailbox.Gui.Enabled;
end
function UpdateOutbox() -- Line: 348
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_Mailbox
			[3] = m_Library
			[4] = u3
			[5] = u4
			[6] = u5
			[7] = u6
			[8] = bool2
			[9] = Random_new_ret
			[10] = u1
			[11] = bool5
	--]]
	if not bool1 then return end
	if not isVisible() then return end
	local t_GiftPet = t_Mailbox.Gui.Frame.GiftPet;
	local t_Texts = t_GiftPet.Container.Texts;
	local t_Bottom = t_GiftPet.Container.Inventory.Bottom;
	local t_Top = t_GiftPet.Container.Inventory.Top;
	local t_Input4 = t_GiftPet.Side.MessageInputFrame.Input;
	local t_Input5 = t_GiftPet.Side.UsernameInputFrame.Input;
	local t_BalanceInput = t_GiftPet.Container.Inventory.Bottom.BalanceInput;
	local _ = t_BalanceInput.Display.Input;
	local t_Pets2 = t_GiftPet.Container.Inventory.Pets;
	local v10 = m_Library.Save.Get(m_Library.LocalPlayer);
	if not v10 then return end
	assert(v10);
	bool1 = false;
	if clearOutboxFields then
		clearOutboxFields = false;
		t_Input5.Text = "";
		t_Input4.Text = "";
		u3 = 0;
		u4 = "";
		u5 = "";
		if u6 then
			Deselect(u6);
		end
	end
	t_BalanceInput.Add.Visible = m_Library.Variables.Console;
	t_BalanceInput.Minus.Visible = m_Library.Variables.Console;
	local t_Pets3 = v10.Pets;
	local table5 = {};
	if not m_Library.LocalPlayer:GetAttribute("CustomUserId") then
		local _ = m_Library.LocalPlayer.UserId;
	end
	local t_Search = t_Top.Search;
	local v21;
	if t_Search.Query.Text == "" then
		v21 = false;
	else
		v21 = tostring(t_Search.Query.Text) ~= nil;
	end
	local v11 = v21 and string.lower(tostring(t_Search.Query.Text)) or nil;
	local v12 = 0;
	local table_clone_ret = table.clone(t_Pets3);
	local v13 = m_Library.Shared.SortPets(v10, table_clone_ret);
	for key2, val2 in pairs(v13) do
		local t_uid = val2.uid;
		local v22 = m_Library.Directory.Pets[val2.id];
		local t_name = v22.name;
		local t_rarity = v22.rarity;
		local t_powers = val2.powers;
		local t_g = val2.g;
		local t_r = val2.r;
		local t_dm = val2.dm;
		local t_sh = val2.sh;
		local t_l = val2.l;
		local v23 = t_Pets2:FindFirstChild(t_uid);
		if not v23 then
			v12 = v12 + 1;
			if v12 % 250 == 0 then
				m_Library.Heartbeat();
			end
			v23 = m_Library.Assets.UI.Inventory.Pet:Clone();
			v23.Name = t_uid;
			v23:SetAttribute("PetId", t_uid);
			m_Library.PetUI.Create(v23, t_uid);
			m_Library.GUIFX.ButtonFX(v23);
			v23.Parent = t_Pets2;
			v23.Activated:Connect(function() -- Line: 427
				--[[
					Upvalues:
						[1] = bool2
						[2] = m_Library
						[3] = t_uid
						[4] = u6
						[5] = Random_new_ret
				--]]
				if not bool2 then
					bool2 = true;
					if m_Library.PetCmds.Get(t_uid).l then
						m_Library.Message.New("You cannot select locked pets!");
					elseif not u6 or u6 ~= t_uid then
						Select(t_uid);
					else
						m_Library.Audio.Play("rbxassetid://7139317909", script, Random_new_ret:NextNumber(0.95, 1.05), 0.75);
						Deselect(t_uid);
					end
					bool2 = false;
				end
			end);
		end
		v23.Locked.Visible = val2.l;
		v23.PetIcon.ImageTransparency = 0;
		v23.LayoutOrder = key2;
		v23.Level:FindFirstChildOfClass("UIStroke").Thickness = u1 and 2 or 4;
		v23.HC:FindFirstChildOfClass("UIStroke").Thickness = u1 and 2 or 4;
		if v21 then
			local bool6 = false;
			if string.find(string.lower(t_name), v11, 1, true) then
				bool6 = true;
			elseif val2.nk and string.find(string.lower(val2.nk), v11, 1, true) then
				bool6 = true;
			elseif string.find(string.lower(t_rarity), v11, 1, true) then
				bool6 = true;
			elseif t_sh and string.find("shiny", v11, 1, true) then
				bool6 = true;
			elseif t_g and (string.find("gold", v11, 1, true) or string.find("golden", v11, 1, true)) then
				bool6 = true;
			elseif t_r and string.find("rainbow", v11, 1, true) then
				bool6 = true;
			elseif t_dm and string.find("dark matter", v11, 1, true) then
				bool6 = true;
			elseif t_l and string.find("lock", v11, 1, true) then
				bool6 = true;
			elseif t_powers and #t_powers > 0 then
				for _, val18 in ipairs(t_powers) do
					local unpack_ret1, unpack_ret2 = unpack(val18);
					local v65, _ = m_Library.Shared.GetPowerDir(unpack_ret1, unpack_ret2);
					if not string.find(string.lower(v65.title), v11, 1, true) then continue end
					bool6 = true;
					break;
				end
			end
			v23.Visible = bool6;
		else
			v23.Visible = true;
		end
		table5[t_uid] = true;
	end
	for _, child3 in ipairs(t_Pets2:GetChildren()) do
		local Attribute2 = child3:GetAttribute("PetId");
		if not Attribute2 or table5[Attribute2] then continue end
		child3:Destroy();
	end
	PetScrolling();
	t_Texts.NoPets.Text = "Inventory is empty. Hatch some pets first! \240\159\153\130";
	t_Texts.NoPets.Visible = #v13 <= 0;
	t_Bottom.BalanceInput.Display.Input.Text = m_Library.Functions.NumberShorten(u3, false);
	t_Top.Grid.Image = u1 and "rbxassetid://6958935961" or "rbxassetid://6958936066";
	local t_SendDiamonds2 = t_GiftPet.Side.BottomInputFrame.SendDiamonds;
	UpdateSendButtons();
	if not bool5 then
		m_Library.GUIFX.ButtonFX(t_Mailbox.Gui.Frame.GiftPet.Container.Inventory.Top.Grid);
		m_Library.GUIFX.ButtonFX(t_SendDiamonds2);
		t_SendDiamonds2.Activated:Connect(function() -- Line: 522
			--[[
				Upvalues:
					[1] = bool2
					[2] = m_Library
					[3] = t_Input5
					[4] = u5
			--]]
			if not bool2 then
				bool2 = true;
				if not CanSend() then
					bool2 = false;
					return;
				end
				local v42 = m_Library.Message.New("\226\156\133 Are you sure you want to send this mail to " .. t_Input5.Text .. "?", true);
				if v42 then
					if u5 and string.len(u5) > 100 then
						m_Library.Message.New("Your message is too long!");
						bool2 = false;
						return;
					end
					local ComposeMail_ret = ComposeMail();
					local function send() -- Line: 538
						--[[
							Upvalues:
								[1] = m_Library
								[2] = ComposeMail_ret
						--]]
						local v59, v60 = m_Library.Network.Invoke("Send Mail", ComposeMail_ret);
						if not v59 then
							m_Library.Message.New(v60 or "Failed to send pets! (Unknown error)");
							return;
						end
						m_Library.Audio.Play("rbxassetid://11839132565", script);
					end
					if string.match(string.lower(ComposeMail_ret.Message), "sign") then
						local v51 = m_Library.Message.New("WARNING!! This is a gift and you're not guaranteed to get your pet back!", true);
						if v51 then
							local v61, v62 = m_Library.Network.Invoke("Send Mail", ComposeMail_ret);
							if not v61 then
								m_Library.Message.New(v62 or "Failed to send pets! (Unknown error)");
							else
								m_Library.Audio.Play("rbxassetid://11839132565", script);
							end
						end
					else
						local v52, v53 = m_Library.Network.Invoke("Send Mail", ComposeMail_ret);
						if not v52 then
							m_Library.Message.New(v53 or "Failed to send pets! (Unknown error)");
						else
							m_Library.Audio.Play("rbxassetid://11839132565", script);
						end
					end
				end
				bool2 = false;
			end
		end);
		bool5 = true;
	end
end
function InboxMode(p5) -- Line: 583
	--[[
		Upvalues:
			[1] = t_Mailbox
			[2] = table3
			[3] = u2
	--]]
	local t_GiftInventory = t_Mailbox.Gui.Frame.GiftInventory;
	local _ = t_GiftInventory.Bottom.RejectMode;
	local _ = t_GiftInventory.Bottom.ClaimMode;
	local _ = t_GiftInventory.Bottom.History;
	local t_ClaimAll = t_GiftInventory.Bottom.ClaimAll;
	local _ = t_GiftInventory.Bottom.VerifyReject;
	local _ = t_GiftInventory.Bottom.VerifyClaim;
	local _ = t_GiftInventory.Bottom.Settings;
	if ({
		Delete = function() -- Line: 594
			--[[
				Upvalues:
					[1] = t_GiftInventory
					[2] = t_ClaimAll
			--]]
			for _, child12 in ipairs(t_GiftInventory.Main.Gifts:GetChildren()) do
				if not child12:isA("TextButton") then continue end
				child12.FadeOverlay.Visible = true;
				child12.Container.Claim.Label.Text = "Select";
				child12.Container.Reject.Visible = false;
			end
			t_ClaimAll.Label.Text = "Select All";
			return true;
		end,
		Claim = function() -- Line: 607
			--[[
				Upvalues:
					[1] = t_GiftInventory
					[2] = t_ClaimAll
			--]]
			for _, child13 in ipairs(t_GiftInventory.Main.Gifts:GetChildren()) do
				if not child13:isA("TextButton") then continue end
				child13.FadeOverlay.Visible = true;
				child13.Container.Claim.Label.Text = "Select";
				child13.Container.Reject.Visible = false;
			end
			t_ClaimAll.Label.Text = "Select All";
			return true;
		end,
		Default = function() -- Line: 620
			--[[
				Upvalues:
					[1] = t_GiftInventory
					[2] = t_ClaimAll
					[3] = table3
			--]]
			for _, child14 in ipairs(t_GiftInventory.Main.Gifts:GetChildren()) do
				if not child14:isA("TextButton") then continue end
				child14.FadeOverlay.Visible = false;
				ToggleButton(child14.Container.Claim, true);
				child14.Container.Claim.Label.Text = "Claim";
				child14.Container.Reject.Visible = true;
			end
			t_ClaimAll.Label.Text = "Claim All";
			table3 = {};
			return true;
		end
	})[p5]() then
		u2 = p5;
		UpdateInboxBottom();
	end
end
function UpdateHistory() -- Line: 645
	--[[
		Upvalues:
			[1] = t_Mailbox
			[2] = m_Library
			[3] = table2
	--]]
	local t_History = t_Mailbox.Gui.Frame.GiftInventory.Main.History;
	local v14 = m_Library.Save.Get();
	if not v14 then
		t_History.NoHistory.Visible = true;
		HistoryScrolling();
		return;
	end
	if not v14.MailLog then
		t_History.NoHistory.Visible = true;
		HistoryScrolling();
		return;
	end
	t_History.NoHistory.Visible = false;
	local t_HistoryLogClaimed = t_History.HistoryLogClaimed;
	local table6 = {};
	for index1 = #v14.MailLog, 1, -1 do
		local v24 = v14.MailLog[index1];
		if v24.Sender and not table.find(table6, v24.Sender) and not table2[v24.Sender] then
			table.insert(table6, v24.Sender);
		end
		if v24.Receiver and not table.find(table6, v24.Receiver) and not table2[v24.Receiver] then
			table.insert(table6, v24.Receiver);
		end
	end
	if #table6 > 0 then
		local success, pcall_ret2 = pcall(function() -- Line: 680
			--[[
				Upvalues:
					[1] = m_Library
					[2] = table6
			--]]
			return m_Library.UserService:GetUserInfosByUserIdsAsync(table6);
		end);
		if success then
			for _, val7 in ipairs(pcall_ret2) do
				table2[val7.Id] = val7;
			end
		end
		if not success then
			warn(pcall_ret2);
		end
	end
	local v15 = 1;
	for index2 = math.min(#v14.MailLog, 100), 1, -1 do
		local u11 = v14.MailLog[index2];
		if t_History:FindFirstChild(u11.UUID) then
			t_History:FindFirstChild(u11.UUID).LayoutOrder = v15;
			v15 = v15 + 1;
		else
			local Clone_ret = t_HistoryLogClaimed:Clone();
			Clone_ret:SetAttribute("Template", false);
			local _ = u11.Receiver == nil;
			Clone_ret.Parent = t_History;
			local Description = Clone_ret:WaitForChild("HistoryLogClaimed"):WaitForChild("Description");
			local Timestamp = Clone_ret:WaitForChild("HistoryLogClaimed"):WaitForChild("Timestamp");
			local v29 = m_Library.Functions.NumberShorten(u11.Diamonds);
			local v30 = u11.Timestamp or 0;
			local function resolveName() -- Line: 715
				--[[
					Upvalues:
						[1] = u11
						[2] = table2
				--]]
				local v43 = u11.Sender or u11.Receiver;
				return table2[v43] and table2[v43].Username or "???";
			end
			local v31 = u11.Sender or u11.Receiver;
			local u13 = table2[v31] and table2[v31].Username or "???";
			local v32 = u11.Sender and "Claimed " .. u13 .. "'s" or "Sent " .. u13 .. " a";
			local v33 = nil;
			if #u11.Pets > 0 then
				v33 = m_Library.Directory.Pets[u11.Pets[1].id].name;
				local v39 = u11.Pets[1];
				if v39.dm then
					v33 = "Dark Matter " .. v33;
				elseif v39.r then
					v33 = "Rainbow " .. v33;
				elseif v39.g then
					v33 = "Gold " .. v33;
				end
				if v39.sh then
					v33 = "Shiny " .. v33;
				end
			end
			if #u11.Pets > 0 and u11.Diamonds == 0 then
				Description.Text = string.format("%s gift with %s.", v32, v33);
			elseif #u11.Pets < 1 and u11.Diamonds > 0 then
				Description.Text = string.format("%s gift with %s Diamonds.", v32, v29);
			elseif #u11.Pets > 0 and u11.Diamonds > 0 then
				local _ = m_Library.Directory.Pets[u11.Pets[1].id];
				Description.Text = string.format("%s gift with %s and %s Diamonds.", v32, v33, v29);
			end
			local v34 = workspace:GetServerTimeNow() - v30;
			Timestamp.Text = v34 <= 120 and "Just now" or m_Library.Functions.TimeString(v34) .. " ago";
			Clone_ret.Name = u11.UUID;
			Clone_ret.Visible = true;
			Clone_ret:WaitForChild("HistoryLogClaimed").Activated:Connect(function() -- Line: 762
				--[[
					Upvalues:
						[1] = t_Mailbox
						[2] = u13
						[3] = m_Library
				--]]
				UpdateOutboxLazy();
				t_Mailbox.Gui.Frame.MainMenu.Visible = false;
				t_Mailbox.Gui.Frame.GiftInventory.Visible = false;
				t_Mailbox.Gui.Frame.GiftPet.Visible = false;
				t_Mailbox.Gui.Frame.GiftInventory.Main.Gifts.Visible = true;
				t_Mailbox.Gui.Frame.GiftInventory.Main.History.Visible = false;
				t_Mailbox.Gui.Frame.GiftPet.Visible = true;
				t_Mailbox.Gui.Frame.GiftPet.Side.UsernameInputFrame.Input.Text = u13;
				m_Library.Audio.Play("rbxassetid://11839132336", script, 1, 1);
				UpdateTargetPlayer();
			end);
			m_Library.GUIFX.Tooltip(Clone_ret:WaitForChild("HistoryLogClaimed"), "Reply to " .. u13);
			m_Library.GUIFX.ButtonFX(Clone_ret:WaitForChild("HistoryLogClaimed"));
			v15 = v15 + 1;
		end
	end
	HistoryScrolling();
end
function HistoryScrolling() -- Line: 782
	--[[
		Upvalues:
			[1] = t_Mailbox
	--]]
	local t_History2 = t_Mailbox.Gui.Frame.GiftInventory.Main.History;
	local UIListLayout = t_History2:FindFirstChildOfClass("UIListLayout");
	local UIPadding2 = t_History2:FindFirstChildOfClass("UIPadding");
	t_History2.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + UIPadding2.PaddingTop.Offset + UIPadding2.PaddingBottom.Offset);
end
function UpdateInboxBottom() -- Line: 790
	--[[
		Upvalues:
			[1] = u8
			[2] = t_Mailbox
			[3] = u2
			[4] = table3
			[5] = bool4
			[6] = m_Library
			[7] = bool2
	--]]
	if not u8 then return end
	local t_GiftInventory2 = t_Mailbox.Gui.Frame.GiftInventory;
	local t_RejectMode = t_GiftInventory2.Bottom.RejectMode;
	local t_History3 = t_GiftInventory2.Bottom.History;
	local t_ClaimAll2 = t_GiftInventory2.Bottom.ClaimAll;
	local t_ClaimMode = t_GiftInventory2.Bottom.ClaimMode;
	local t_VerifyReject = t_GiftInventory2.Bottom.VerifyReject;
	local t_VerifyClaim = t_GiftInventory2.Bottom.VerifyClaim;
	local t_Settings = t_GiftInventory2.Bottom.Settings;
	t_GiftInventory2.PetAmount.Visible = not t_GiftInventory2.Main.History.Visible;
	t_ClaimAll2.Visible = not t_GiftInventory2.Main.History.Visible;
	t_RejectMode.ImageColor3 = #u8.Inbox > 0 and Color3.new(1, 1, 1) or Color3.new(0.5, 0.5, 0.5);
	t_ClaimMode.ImageColor3 = #u8.Inbox > 0 and Color3.new(1, 1, 1) or Color3.new(0.5, 0.5, 0.5);
	t_ClaimAll2.ImageColor3 = #u8.Inbox > 0 and Color3.new(1, 1, 1) or Color3.new(0.5, 0.5, 0.5);
	if u2 == "Delete" then
		t_History3.Visible = false;
		t_Settings.Visible = false;
		t_ClaimMode.Visible = false;
		t_RejectMode.Visible = true;
		t_VerifyReject.Visible = true;
		t_VerifyClaim.Visible = false;
		if #table3 > 0 then
			t_VerifyReject.Label.Text = "Confirm";
			ToggleButton(t_VerifyReject, true);
		else
			t_VerifyReject.Label.Text = "Cancel";
			ToggleButton(t_VerifyReject, false);
		end
	elseif u2 == "Claim" then
		t_History3.Visible = false;
		t_Settings.Visible = false;
		t_ClaimMode.Visible = true;
		t_RejectMode.Visible = false;
		t_VerifyReject.Visible = false;
		t_VerifyClaim.Visible = true;
		if #table3 > 0 then
			t_VerifyClaim.Label.Text = "Confirm";
			ToggleButton(t_VerifyClaim, true);
		else
			t_VerifyClaim.Label.Text = "Cancel";
			ToggleButton(t_VerifyClaim, false);
		end
	elseif u2 == "Default" then
		t_History3.Visible = true;
		t_Settings.Visible = true;
		t_ClaimMode.Visible = true;
		t_RejectMode.Visible = true;
		t_VerifyReject.Visible = false;
		t_VerifyClaim.Visible = false;
	end
	if not bool4 then
		m_Library.GUIFX.ButtonFX(t_RejectMode);
		m_Library.GUIFX.ButtonFX(t_ClaimMode);
		m_Library.GUIFX.ButtonFX(t_History3);
		m_Library.GUIFX.ButtonFX(t_ClaimAll2);
		m_Library.GUIFX.ButtonFX(t_Settings);
		m_Library.GUIFX.ButtonFX(t_VerifyClaim);
		m_Library.GUIFX.ButtonFX(t_VerifyReject);
		m_Library.GUIFX.Tooltip(t_RejectMode, "Toggle Reject Mode");
		m_Library.GUIFX.Tooltip(t_ClaimMode, "Toggle Claim Mode");
		m_Library.GUIFX.Tooltip(t_History3, "Show Mail History");
		m_Library.GUIFX.Tooltip(t_ClaimAll2, "Claim All Mail");
		m_Library.GUIFX.Tooltip(t_Settings, "Mail Settings");
		t_VerifyReject.Activated:Connect(function() -- Line: 868
			--[[
				Upvalues:
					[1] = bool2
					[2] = table3
					[3] = m_Library
			--]]
			if not bool2 then
				bool2 = true;
				if #table3 < 1 then
					InboxMode("Default");
					bool2 = false;
					return;
				end
				local v44 = m_Library.Message.New("\226\157\140 Are you SURE you want to REJECT " .. #table3 .. " gift(s)? You cannot undo this.", true);
				if v44 then
					local v46, v47 = m_Library.Network.Invoke("Reject Mail", table3);
					if not v46 then
						m_Library.Message.New(v47 or "Failed to reject pets! (Unknown error)");
					else
						m_Library.Audio.Play("rbxassetid://7047631781", script);
					end
					InboxMode("Default");
				end
				bool2 = false;
			end
		end);
		t_VerifyClaim.Activated:Connect(function() -- Line: 892
			--[[
				Upvalues:
					[1] = bool2
					[2] = table3
					[3] = m_Library
			--]]
			if not bool2 then
				bool2 = true;
				if #table3 < 1 then
					InboxMode("Default");
					bool2 = false;
					return;
				end
				local v45 = m_Library.Message.New("\226\156\133 Claim " .. #table3 .. " gift(s)?", true);
				if v45 then
					local v48, v49 = m_Library.Network.Invoke("Claim Mail", table3);
					if not v48 then
						m_Library.Message.New(v49 or "Failed to delete pets! (Unknown error)");
					else
						m_Library.Audio.Play("rbxassetid://7047631781", script);
					end
					InboxMode("Default");
				end
				bool2 = false;
			end
		end);
		t_RejectMode.Activated:Connect(function() -- Line: 916
			--[[
				Upvalues:
					[1] = bool2
					[2] = u8
					[3] = t_GiftInventory2
					[4] = u2
			--]]
			if not bool2 then
				bool2 = true;
				if #u8.Inbox < 1 then
					bool2 = false;
					return;
				end
				t_GiftInventory2.Main.Gifts.Visible = true;
				t_GiftInventory2.Main.History.Visible = false;
				if u2 ~= "Delete" then
					InboxMode("Delete");
				else
					InboxMode("Default");
				end
				bool2 = false;
			end
		end);
		t_ClaimMode.Activated:Connect(function() -- Line: 938
			--[[
				Upvalues:
					[1] = bool2
					[2] = u8
					[3] = t_GiftInventory2
					[4] = u2
			--]]
			if not bool2 then
				bool2 = true;
				if #u8.Inbox < 1 then
					bool2 = false;
					return;
				end
				t_GiftInventory2.Main.Gifts.Visible = true;
				t_GiftInventory2.Main.History.Visible = false;
				if u2 ~= "Claim" then
					InboxMode("Claim");
				else
					InboxMode("Default");
				end
				bool2 = false;
			end
		end);
		t_ClaimAll2.Activated:Connect(function() -- Line: 960
			--[[
				Upvalues:
					[1] = bool2
					[2] = u2
					[3] = u8
					[4] = m_Library
			--]]
			if not bool2 then
				bool2 = true;
				if u2 == "Default" then
					if #u8.Inbox < 1 then
						bool2 = false;
						return;
					end
					local v50 = m_Library.Message.New("Are you sure you want to claim ALL mail?", true);
					if v50 then
						local v54, v55 = m_Library.Network.Invoke("Claim All Mail");
						if not v54 then
							m_Library.Message.New(v55);
						end
					end
				else
					for _, val17 in ipairs(u8.Inbox) do
						MultiSelect(val17.uuid);
					end
				end
				bool2 = false;
			end
		end);
		t_Settings.Activated:Connect(function() -- Line: 986
			--[[
				Upvalues:
					[1] = bool2
					[2] = m_Library
			--]]
			if not bool2 then
				bool2 = true;
				m_Library.Signal.Fire("Open Mail Settings");
				bool2 = false;
			end
		end);
		t_History3.Activated:Connect(function() -- Line: 996
			--[[
				Upvalues:
					[1] = bool2
					[2] = t_GiftInventory2
			--]]
			if not bool2 then
				bool2 = true;
				if not t_GiftInventory2.Main.History.Visible then
					UpdateHistory();
					t_GiftInventory2.Main.Gifts.Visible = false;
					t_GiftInventory2.Main.History.Visible = true;
				else
					t_GiftInventory2.Main.Gifts.Visible = true;
					t_GiftInventory2.Main.History.Visible = false;
				end
				UpdateInboxBottom();
				bool2 = false;
			end
		end);
		bool4 = true;
	end
end
function MultiSelect(p6) -- Line: 1018
	--[[
		Upvalues:
			[1] = table3
			[2] = t_Mailbox
	--]]
	local table_find_ret = table.find(table3, p6);
	local FindFirstChild_ret = t_Mailbox.Gui.Frame.GiftInventory.Main.Gifts:FindFirstChild(p6);
	if not FindFirstChild_ret then
		warn("Couldn't find the gift!");
		return;
	end
	if FindFirstChild_ret.Visible == false then return end
	local Container = FindFirstChild_ret:FindFirstChild("Container");
	if not Container then
		warn("No container!");
		return;
	end
	if not table_find_ret then
		ToggleButton(Container.Claim, false);
		Container.Claim.Label.Text = "Remove";
		Container.Parent.FadeOverlay.Visible = false;
		table.insert(table3, p6);
	else
		ToggleButton(Container.Claim, true);
		Container.Claim.Label.Text = "Select";
		Container.Parent.FadeOverlay.Visible = true;
		table.remove(table3, table_find_ret);
	end
	UpdateInboxBottom();
end
function createDefaultMailbox(p7) -- Line: 1051
	local v16 = p7 or {
		Enabled = true,
		FriendsOnly = false,
		HugesOnly = false,
		RequiredPet = false,
		Rarities = {
			Basic = false,
			Epic = false,
			Exclusive = false,
			Legendary = false,
			Mythical = false,
			Rare = false
		}
	};
	local table7 = {
		Inbox = {},
		Settings = v16
	};
	return table7;
end
function UpdateInbox(p8) -- Line: 1073
	--[[
		Upvalues:
			[1] = t_Mailbox
			[2] = m_Library
			[3] = u8
			[4] = table2
			[5] = t_Inventory
			[6] = bool2
			[7] = u2
			[8] = table1
	--]]
	local t_GiftInventory3 = t_Mailbox.Gui.Frame.GiftInventory;
	if not p8 then
		local v25 = m_Library.Network.Invoke("Get Mail");
		p8 = v25 ~= nil and v25 or u8;
		if not p8 then
			p8 = createDefaultMailbox();
		end
	end
	local v17 = u8 ~= nil and not m_Library.Functions.DeepEqualsUnsafe(u8.Inbox, p8.Inbox) or u8 == nil;
	u8 = p8;
	if v17 then
		UpdateWorldMailbox();
	end
	local Children = t_GiftInventory3.Main.Gifts:GetChildren();
	for _, val4 in ipairs(Children) do
		if val4:isA("UIPadding") or val4:isA("UIListLayout") or val4.Name == "Template" then continue end
		local bool8 = false;
		for _, val6 in ipairs(u8.Inbox) do
			if val6.uuid ~= val4.Name then continue end
			bool8 = true;
			break;
		end
		if bool8 then continue end
		val4:Destroy();
	end
	local t_Template = t_GiftInventory3.Main.Gifts.Template;
	t_GiftInventory3.PetAmount.Text = string.format("%d/%d Gifts", #u8.Inbox, 100);
	local t_Query = t_GiftInventory3.Bottom.Search.Query;
	local v26;
	if t_Query.Text == "" then
		v26 = false;
	else
		v26 = t_Query.Text ~= nil;
	end
	local v18 = v26 and m_Library.Functions.RegexEscape(string.lower(tostring(t_Mailbox.Query.Text))) or nil;
	local table8 = {};
	for _, val5 in ipairs(u8.Inbox) do
		if table.find(table8, val5.Sender) or table2[val5.Sender] then continue end
		table.insert(table8, val5.Sender);
	end
	if #table8 > 0 then
		local success2, pcall_ret2_2 = pcall(function() -- Line: 1126
			--[[
				Upvalues:
					[1] = m_Library
					[2] = table8
			--]]
			return m_Library.UserService:GetUserInfosByUserIdsAsync(table8);
		end);
		if success2 then
			for _, val8 in ipairs(pcall_ret2_2) do
				table2[val8.Id] = val8;
			end
		end
		if not success2 then
			warn(pcall_ret2_2);
		end
	end
	local v19 = 0;
	for index3 = #u8.Inbox, 1, -1 do
		v19 = v19 + 1;
		local u12 = u8.Inbox[index3];
		local v27 = u12.Pets[1] and u12.Pets[1] or nil;
		local t_g2 = nil;
		local t_r2 = nil;
		local t_dm2 = nil;
		local t_powers2 = nil;
		local t_name2 = nil;
		local t_rarity2 = nil;
		local t_sh2 = nil;
		local t_l2 = nil;
		if v27 then
			local _ = v27.uid;
			local t_id = v27.id;
			local _ = v27.idt;
			local _ = v27.s;
			t_g2 = v27.g;
			t_r2 = v27.r;
			t_dm2 = v27.dm;
			t_powers2 = v27.powers;
			local v35 = m_Library.Directory.Pets[t_id];
			local _ = v35.isGift;
			local _ = t_g2 and v35.goldenThumbnail or v35.thumbnail;
			t_name2 = v35.name;
			t_rarity2 = v35.rarity;
			t_sh2 = v27.sh;
			t_l2 = v27.l;
		end
		if not t_GiftInventory3.Main.Gifts:FindFirstChild(u12.uuid) then
			local Clone_ret2 = t_Template:Clone();
			Clone_ret2.Name = u12.uuid;
			Clone_ret2.Parent = t_GiftInventory3.Main.Gifts;
			Clone_ret2:SetAttribute("Template", false);
			local t_Container = Clone_ret2.Container;
			t_Container.BothDiamonds.Visible = false;
			t_Container.BothPet.Visible = false;
			t_Container.OnlyDiamonds.Visible = false;
			t_Container.OnlyPet.Visible = false;
			local v36 = u12.Diamonds > 0;
			local v37 = #u12.Pets > 0;
			if v36 and v37 then
				t_Container.BothDiamonds.Visible = true;
				t_Container.BothDiamonds.Cost.Text = m_Library.Functions.NumberShorten(u12.Diamonds);
				t_Container.BothPet.Visible = true;
				local Clone_ret4 = t_Inventory.Pet:Clone();
				Clone_ret4.Visible = true;
				m_Library.PetUI.Create(Clone_ret4, u12.Pets[1].uid, u12.Pets[1]);
				local UIAspectRatioConstraint2 = Instance.new("UIAspectRatioConstraint");
				UIAspectRatioConstraint2.Parent = Clone_ret4;
				Clone_ret4.Position = UDim2.new(0.5, 0, 0.5, 0);
				Clone_ret4.AnchorPoint = Vector2.new(0.5, 0.5);
				Clone_ret4.RarityGradient.ZIndex = 5;
				Clone_ret4.ZIndex = 6;
				if Clone_ret4:FindFirstChild("ShinePulse") then
					Clone_ret4.ShinePulse.ShineImage.ZIndex = 7;
				end
				Clone_ret4.PetIcon.ZIndex = 7;
				Clone_ret4.Size = UDim2.new(1, 0, 1, 0);
				Clone_ret4.Parent = t_Container.BothPet;
			elseif v36 and not v37 then
				t_Container.OnlyDiamonds.Visible = true;
				t_Container.OnlyDiamonds.Cost.Text = m_Library.Functions.NumberShorten(u12.Diamonds);
			elseif not v36 and v37 then
				t_Container.OnlyPet.Visible = true;
				local Clone_ret3 = t_Inventory.Pet:Clone();
				Clone_ret3.Visible = true;
				m_Library.PetUI.Create(Clone_ret3, u12.Pets[1].uid, u12.Pets[1]);
				Clone_ret3.RarityGradient.ZIndex = 5;
				Clone_ret3.ZIndex = 6;
				if Clone_ret3:FindFirstChild("ShinePulse") then
					Clone_ret3.ShinePulse.ShineImage.ZIndex = 7;
				end
				Clone_ret3.PetIcon.ZIndex = 7;
				Clone_ret3.Size = UDim2.new(1, 0, 1, 0);
				local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint");
				UIAspectRatioConstraint.Parent = Clone_ret3;
				Clone_ret3.Position = UDim2.new(0.5, 0, 0.5, 0);
				Clone_ret3.AnchorPoint = Vector2.new(0.5, 0.5);
				Clone_ret3.Parent = t_Container.OnlyPet;
			end
			m_Library.GUIFX.ButtonFX(t_Container.Claim);
			t_Container.Claim.Activated:Connect(function() -- Line: 1225
				--[[
					Upvalues:
						[1] = bool2
						[2] = u2
						[3] = m_Library
						[4] = u12
				--]]
				if not bool2 then
					bool2 = true;
					if u2 == "Default" then
						local v56, v57 = m_Library.Network.Invoke("Claim Mail", {u12.uuid});
						if not v56 then
							m_Library.Message.New(v57);
						end
					elseif u2 == "Delete" then
						MultiSelect(u12.uuid);
						UpdateInboxBottom();
					elseif u2 == "Claim" then
						MultiSelect(u12.uuid);
						UpdateInboxBottom();
					end
					bool2 = false;
				end
			end);
			m_Library.GUIFX.ButtonFX(t_Container.Reject);
			t_Container.Reject.Activated:Connect(function() -- Line: 1248
				--[[
					Upvalues:
						[1] = bool2
						[2] = u2
						[3] = m_Library
						[4] = u12
				--]]
				if not bool2 then
					bool2 = true;
					if u2 == "Default" then
						local v58 = m_Library.Message.New("Are you sure you want to REJECT this mail? THIS CANNOT BE UNDONE!", true);
						if v58 then
							local v63, v64 = m_Library.Network.Invoke("Reject Mail", {u12.uuid});
							if not v63 then
								m_Library.Message.New(v64);
							else
								m_Library.Audio.Play("rbxassetid://11839132565", script);
							end
						end
					end
					bool2 = false;
				end
			end);
			if table2[u12.Sender] then
				local v40 = table2[u12.Sender];
				t_Container.Username.Text = "@" .. v40.Username;
				t_Container.DisplayName.Text = v40.DisplayName;
			else
				t_Container.Username.Text = "@???";
				t_Container.DisplayName.Text = "???";
			end
			local u14 = table1[u12.Sender] or nil;
			if not u14 then
				task.spawn(function() -- Line: 1279
					--[[
						Upvalues:
							[1] = u14
							[2] = u12
							[3] = table1
							[4] = t_Container
					--]]
					u14 = game.Players:GetUserThumbnailAsync(u12.Sender, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size180x180);
					table1[u12.Sender] = u14;
					t_Container.PlayerImage.Image = u14;
				end);
			end
			t_Container.PlayerImage.Image = u14 ~= nil and u14 or "rbxassetid://7249691240";
			if t_Container.Message and u12.Message then
				t_Container.Message.Text = u12.Message;
			end
		end
		local FindFirstChild_ret2 = t_GiftInventory3.Main.Gifts:FindFirstChild(u12.uuid);
		if FindFirstChild_ret2 then
			FindFirstChild_ret2.LayoutOrder = v19;
			local t_Container2 = FindFirstChild_ret2.Container;
			if t_Container2.Time then
				local v41 = workspace:GetServerTimeNow() - u12.Timestamp;
				t_Container2.Time.Text = v41 <= 120 and "Just now" or m_Library.Functions.TimeString(v41) .. " ago";
			end
			if v26 then
				local bool7 = false;
				if u12.Message and string.find(string.lower(t_Container2.Message.Text), v18, 1, true) then
					bool7 = true;
				elseif t_Container2.Username and string.find(string.lower(t_Container2.Username.Text), v18, 1, true) then
					bool7 = true;
				elseif t_Container2.DisplayName and string.find(string.lower(t_Container2.DisplayName.Text), v18, 1, true) then
					bool7 = true;
				elseif string.find(string.lower(u12.Diamonds), v18, 1, true) then
					bool7 = true;
				elseif v27 then
					if string.find(string.lower(t_name2), v18, 1, true) then
						bool7 = true;
					elseif v27.nk and string.find(string.lower(v27.nk), v18, 1, true) then
						bool7 = true;
					elseif string.find(string.lower(t_rarity2), v18, 1, true) then
						bool7 = true;
					elseif t_sh2 and string.find("shiny", v18, 1, true) then
						bool7 = true;
					elseif t_g2 and (string.find("gold", v18, 1, true) or string.find("golden", v18, 1, true)) then
						bool7 = true;
					elseif t_r2 and string.find("rainbow", v18, 1, true) then
						bool7 = true;
					elseif t_dm2 and string.find("dark matter", v18, 1, true) then
						bool7 = true;
					elseif t_l2 and string.find("lock", v18, 1, true) then
						bool7 = true;
					elseif t_powers2 and #t_powers2 > 0 then
						for _, val19 in ipairs(t_powers2) do
							local unpack_ret1_2, unpack_ret2_2 = unpack(val19);
							local v66, _ = m_Library.Shared.GetPowerDir(unpack_ret1_2, unpack_ret2_2);
							if not string.find(string.lower(v66.title), v18, 1, true) then continue end
							bool7 = true;
							break;
						end
					end
				end
				FindFirstChild_ret2.Visible = bool7;
			else
				FindFirstChild_ret2.Visible = true;
			end
		end
	end
	UpdateInboxBottom();
	local t_Gifts = t_GiftInventory3.Main.Gifts;
	local UIListLayout2 = t_Gifts:FindFirstChildOfClass("UIListLayout");
	local UIPadding3 = t_Gifts:FindFirstChildOfClass("UIPadding");
	t_Gifts.CanvasSize = UDim2.new(0, 0, 0, UIListLayout2.AbsoluteContentSize.Y + UIPadding3.PaddingTop.Offset + UIPadding3.PaddingBottom.Offset);
end
function UpdateWorldMailbox() -- Line: 1364
	--[[
		Upvalues:
			[1] = m_Library
			[2] = Mailbox
			[3] = u8
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		Mailbox = Map.Interactive:FindFirstChild("Mailbox");
		if Mailbox then
			local v38 = u8 and u8.Inbox and #u8.Inbox or 0;
			for _, descendant9 in ipairs(Mailbox:GetDescendants()) do
				if not descendant9:isA("PointLight") and not descendant9:isA("ParticleEmitter") then continue end
				descendant9.Enabled = false;
			end
			for index4 = 2, 4 do
				local FindFirstChild_ret4 = Mailbox:FindFirstChild("Gifts" .. index4);
				if FindFirstChild_ret4 then
					for _, descendant15 in ipairs(FindFirstChild_ret4:GetDescendants()) do
						if descendant15:isA("MeshPart") then
							descendant15.Transparency = 1;
							descendant15.CanCollide = false;
						end
						if not descendant15:isA("PointLight") and not descendant15:isA("ParticleEmitter") then continue end
						descendant15.Enabled = false;
					end
				end
			end
			if v38 == 0 then
				local Opened2 = Mailbox:FindFirstChild("Opened");
				local Closed2 = Mailbox:FindFirstChild("Closed");
				Opened2.Transparency = 1;
				Closed2.Transparency = 0;
				return;
			end
			if v38 > 0 then
				local Pad = Mailbox:FindFirstChild("Pad");
				local Opened = Mailbox:FindFirstChild("Opened");
				local Closed = Mailbox:FindFirstChild("Closed");
				Opened.Transparency = 0;
				Closed.Transparency = 1;
				for _, descendant10 in ipairs(Opened:GetDescendants()) do
					if not descendant10:isA("PointLight") and not descendant10:isA("ParticleEmitter") then continue end
					descendant10.Enabled = true;
				end
				for _, descendant11 in ipairs(Pad:GetDescendants()) do
					if not descendant11:isA("PointLight") and not descendant11:isA("ParticleEmitter") then continue end
					descendant11.Enabled = true;
				end
			end
			for index5 = 2, math.clamp(v38, 2, 4) do
				local FindFirstChild_ret3 = Mailbox:FindFirstChild("Gifts" .. index5);
				if FindFirstChild_ret3 then
					for _, descendant16 in ipairs(FindFirstChild_ret3:GetDescendants()) do
						if descendant16:isA("MeshPart") then
							descendant16.Transparency = 0;
							descendant16.CanCollide = true;
						end
						if not descendant16:isA("PointLight") and not descendant16:isA("ParticleEmitter") then continue end
						descendant16.Enabled = true;
					end
				end
			end
		end
	end
end
function Close() -- Line: 1439
	--[[
		Upvalues:
			[1] = t_Mailbox
	--]]
	t_Mailbox.Gui.Enabled = false;
	t_Mailbox.Gui.Frame.MainMenu.Visible = true;
	t_Mailbox.Gui.Frame.GiftInventory.Visible = false;
	t_Mailbox.Gui.Frame.GiftPet.Visible = false;
	t_Mailbox.Gui.Frame.GiftInventory.Main.Gifts.Visible = true;
	t_Mailbox.Gui.Frame.GiftInventory.Main.History.Visible = false;
end
m_Library.GUIFX.ButtonFX(t_Mailbox.Gui.Frame.GiftPet.Close);
m_Library.GUIFX.ButtonFX(t_Mailbox.Gui.Frame.GiftInventory.Close);
m_Library.GUIFX.ButtonFX(t_Mailbox.Gui.Frame.MainMenu.Close);
t_Mailbox.Gui.Frame.GiftPet.Container.Inventory.Bottom.BalanceInput.Display.Input.FocusLost:Connect(UpdateDiamondsAmount);
t_Mailbox.Gui.Frame.GiftPet.Side.UsernameInputFrame.Input.FocusLost:Connect(UpdateTargetPlayer);
t_Mailbox.Gui.Frame.GiftPet.Side.MessageInputFrame.Input.FocusLost:Connect(UpdateMessage);
t_Mailbox.Gui.Frame.GiftInventory.Close.Activated:Connect(function() -- Line: 1458
	--[[
		Upvalues:
			[1] = bool2
	--]]
	if not bool2 then
		bool2 = true;
		Close();
		bool2 = false;
	end
end);
t_Mailbox.Gui.Frame.MainMenu.Close.Activated:Connect(function() -- Line: 1466
	--[[
		Upvalues:
			[1] = bool2
	--]]
	if not bool2 then
		bool2 = true;
		Close();
		bool2 = false;
	end
end);
t_Mailbox.Gui.Frame.GiftPet.Close.Activated:Connect(function() -- Line: 1474
	--[[
		Upvalues:
			[1] = bool2
	--]]
	if not bool2 then
		bool2 = true;
		Close();
		bool2 = false;
	end
end);
t_Mailbox.Gui.Frame.GiftPet.Container.Inventory.Top.Grid.Activated:Connect(function() -- Line: 1482
	--[[
		Upvalues:
			[1] = bool2
			[2] = u1
			[3] = m_Library
			[4] = t_Mailbox
	--]]
	if not bool2 then
		bool2 = true;
		u1 = not u1;
		m_Library.Audio.Play("rbxassetid://7004248320", script, 1, 0.5);
		t_Mailbox.Gui.Frame.GiftPet.Container.Inventory.Top.Grid.Image = u1 and "rbxassetid://6958935961" or "rbxassetid://6958936066";
		UpdatePets();
		bool2 = false;
	end
end);
t_Mailbox.Gui.Frame.GiftPet.Container.Inventory.Top.Search.Query:GetPropertyChangedSignal("Text"):Connect(function() -- Line: 1493
	--[[
		Upvalues:
			[1] = t_Mailbox
			[2] = bool1
	--]]
	if t_Mailbox.Frame.GiftInventory.Bottom.Search.Query.Text ~= "" then
		t_Mailbox.Frame.GiftInventory.Main.Gifts.CanvasPosition = Vector2.new();
	end
	bool1 = true;
	UpdateOutbox();
end);
t_Mailbox.Frame.GiftInventory.Bottom.Search.Query:GetPropertyChangedSignal("Text"):Connect(function() -- Line: 1501
	--[[
		Upvalues:
			[1] = t_Mailbox
	--]]
	if t_Mailbox.Frame.GiftInventory.Bottom.Search.Query.Text ~= "" then
		t_Mailbox.Frame.GiftInventory.Main.Gifts.CanvasPosition = Vector2.new();
	end
	UpdateInbox();
end);
local bool9 = false;
local bool10 = false;
local u9 = 0;
m_Library.Signal.Fired("Xbox Start Subtract"):Connect(function() -- Line: 1511
	--[[
		Upvalues:
			[1] = bool9
			[2] = u9
	--]]
	bool9 = true;
	u9 = 0;
end);
m_Library.Signal.Fired("Xbox Stop Subtract"):Connect(function() -- Line: 1516
	--[[
		Upvalues:
			[1] = bool9
			[2] = u9
	--]]
	bool9 = false;
	u9 = 0;
	UpdateDiamondsAmount();
end);
m_Library.Signal.Fired("Xbox Start Add"):Connect(function() -- Line: 1522
	--[[
		Upvalues:
			[1] = bool10
			[2] = u9
	--]]
	bool10 = true;
	u9 = 0;
end);
m_Library.Signal.Fired("Xbox Stop Add"):Connect(function() -- Line: 1527
	--[[
		Upvalues:
			[1] = bool10
			[2] = u9
	--]]
	bool10 = false;
	u9 = 0;
	UpdateDiamondsAmount();
end);
m_Library.Signal.Fired("Nickname Changed"):Connect(function(_, _) -- Line: 1533
	UpdateOutboxLazy();
end);
m_Library.Signal.Fired("Lock Changed"):Connect(function(_, _) -- Line: 1538
	UpdateOutboxLazy();
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p9) -- Line: 1543
	if p9 == "Pets" then
		UpdateOutboxLazy();
	end
end);
m_Library.Signal.Fired("Window Opened"):Connect(function(p10) -- Line: 1549
	--[[
		Upvalues:
			[1] = t_Mailbox
			[2] = m_Library
	--]]
	if p10 == t_Mailbox.Gui then
		Update();
		if t_Mailbox.Gui.Frame.MainMenu.Visible then
			m_Library.Audio.Play("rbxassetid://11839132446", script, 1, 0.5);
		end
	end
end);
m_Library.Signal.Invoked("Get Mailbox Settings").OnInvoke = function() -- Line: 1558
	--[[
		Upvalues:
			[1] = u8
	--]]
	if not u8 then
		return nil;
	end
	return u8.Settings;
end
m_Library.Signal.Fired("Set Mailbox Settings"):Connect(function(p11) -- Line: 1566
	--[[
		Upvalues:
			[1] = u8
	--]]
	u8.Settings = p11;
end);
m_Library.Signal.Invoked("Get Mail Settings").OnInvoke = function() -- Line: 1570
	--[[
		Upvalues:
			[1] = u8
	--]]
	return u8.Settings;
end
m_Library.Signal.Fired("Open Mailbox"):Connect(function(_) -- Line: 1574
	--[[
		Upvalues:
			[1] = t_Mailbox
	--]]
	t_Mailbox.Gui.Enabled = true;
end);
m_Library.Signal.Fired("Close Mailbox"):Connect(function() -- Line: 1578
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	Close();
	if m_Library.Variables.Console then
		m_Library.GuiService.SelectedObject = nil;
	end
end);
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 1585
	--[[
		Upvalues:
			[1] = u8
	--]]
	if u8 ~= nil then
		UpdateWorldMailbox();
	end
end);
m_Library.Network.Fired("Inbox Updated"):Connect(function(p12) -- Line: 1592
	UpdateInbox(p12);
	Update();
	UpdateWorldMailbox();
end);
m_Library.Network.Fired("Outbox Updated"):Connect(function() -- Line: 1598
	UpdateOutboxLazy(true);
	UpdatePets();
	Update();
	Close();
end);
m_Library.RunService.Heartbeat:Connect(function() -- Line: 1605
	UpdateOutbox();
end);
local t_Input6 = t_Mailbox.Gui.Frame.GiftPet.Container.Inventory.Bottom.BalanceInput.Display.Input;
m_Library.RunService.Heartbeat:Connect(function(p13) -- Line: 1610
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_Mailbox
			[3] = bool9
			[4] = bool10
			[5] = u9
			[6] = t_Input6
	--]]
	if not m_Library.Variables.Console then return end
	if t_Mailbox.Gui.Frame.GiftPet.Visible and (bool9 or bool10) then
		u9 = u9 + p13;
		local math_pow_ret = math.pow(10, (math.floor(u9 / 3)));
		local v28 = t_Input6:GetAttribute("Amount") or 0;
		if bool9 then
			v28 = v28 - math_pow_ret * 1;
			if v28 < 10 then
				v28 = 0;
			end
		elseif bool10 then
			v28 = v28 + math_pow_ret * 1;
			if v28 < 10 then
				v28 = 10;
			end
		end
		if (bool10 or bool9) and (v28 > 0 or v28 == 0) then
			t_Input6.PlaceholderText = v28 > 0 and v28 or "None";
			t_Input6.Text = m_Library.Functions.Commas(v28);
			t_Input6:SetAttribute("Amount", v28);
		end
	end
end);
Update();
UpdateInbox();
UpdateOutboxLazy();
UpdateWorldMailbox();
  -  Editar
  04:54:13.911    -  Editar
  04:54:13.911  ----- [2750] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Mail Settings -----  -  Editar
  04:54:13.911  --[[

	Re-scripted 7/8/2023 By: OneX
		
--]]

--------|     Library     |--------
local _L = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
while (not _L.Loaded) do  game:GetService("RunService").Heartbeat:Wait()  end

local mailsettingsGUI = _L.GUI.MailSettings
local MailboxSettings = nil
local Old_MailboxSettings = nil
local debouce = nil

function UpdateScrolling()
	local Container = mailsettingsGUI.Gui.Frame.Container
	local UIPadding = Container:FindFirstChildOfClass("UIPadding")
	Container.CanvasSize = UDim2.new(0, 0, 0, Container:FindFirstChildOfClass("UIListLayout").AbsoluteContentSize.Y + UIPadding.PaddingTop.Offset + UIPadding.PaddingBottom.Offset)
end

function Update()
	MailboxSettings = _L.Signal.Invoke("Get Mailbox Settings")
	Old_MailboxSettings = _L.Functions.DeepCopyUnsafe(MailboxSettings)
	
	if not MailboxSettings then
		warn("No settings!")
		return
	end
	
	UpdateRaritys()
	UpdateOptions()
	UpdateScrolling()
end

function ToggleRarity(child)
	if not MailboxSettings then
		warn("No Settings!")
		return
	end
	
	_L.Audio.Play("rbxassetid://7004248320", script, 1, 0.5)
	
	if not _L.Shared.PetRarityNumbers[child.Name] then
		warn("No rarity!")
		return
	end
	
	if MailboxSettings.Rarities[child.Name] == nil then
		MailboxSettings.Rarities[child.Name] = true
	else
		MailboxSettings.Rarities[child.Name] = not MailboxSettings.Rarities[child.Name]
	end
	
	_L.Signal.Fire("Set Mailbox Settings", MailboxSettings)
	
	UpdateRaritys()
end

function ToggleSetting(set)
	if not MailboxSettings then
		return
	end

	if set ~= "HugesOnly" or set ~= "Enabled" or set ~= "RequiredPet" or set ~= "FriendsOnly" then
		return
	end
	
	_L.Audio.Play("rbxassetid://7004248320", script, 1, 0.5)

	if not MailboxSettings[set] then
		MailboxSettings[set] = false
	end
	
	MailboxSettings[set] = not MailboxSettings[set]
	
	_L.Signal.Fire("Set Mailbox Settings", MailboxSettings)
	
	UpdateOptions()
end

function UpdateRaritys()
	if not MailboxSettings then
		return
	end
	
	for _, child in ipairs(mailsettingsGUI.Frame.Container:GetChildren()) do
		if child.Name == "Rarity" then
			local ImageButton = child:FindFirstChildOfClass("ImageButton")
			local enabled = MailboxSettings.Rarities[ImageButton.Name]

			ImageButton.Label.Text = enabled and "On" or "Off"
			ImageButton.Image = enabled and "rbxassetid://7045637286" or "rbxassetid://7045637481"
			ImageButton.HoverImage = enabled and "rbxassetid://7045637411" or "rbxassetid://7045637564"
		end	
	end
end

function UpdateOptions()
	if not MailboxSettings then
		return
	end
	
	local hugesOnlyEnabled = MailboxSettings.HugesOnly
	local enabled = MailboxSettings.Enabled
	local requiredPetEnabled = MailboxSettings.RequiredPet
	local friendsOnlyEnabled = MailboxSettings.FriendsOnly

	mailsettingsGUI.HugesSetting.Label.Text = hugesOnlyEnabled and "On" or "Off"
	mailsettingsGUI.HugesSetting.Image = hugesOnlyEnabled and "rbxassetid://7045637286" or "rbxassetid://7045637481"
	mailsettingsGUI.HugesSetting.HoverImage = hugesOnlyEnabled and "rbxassetid://7045637411" or "rbxassetid://7045637564"
	mailsettingsGUI.EnabledSetting.Label.Text = enabled and "On" or "Off"
	mailsettingsGUI.EnabledSetting.Image = enabled and "rbxassetid://7045637286" or "rbxassetid://7045637481"
	mailsettingsGUI.EnabledSetting.HoverImage = enabled and "rbxassetid://7045637411" or "rbxassetid://7045637564"
	mailsettingsGUI.RequiredPetSetting.Label.Text = requiredPetEnabled and "On" or "Off"
	mailsettingsGUI.RequiredPetSetting.Image = requiredPetEnabled and "rbxassetid://7045637286" or "rbxassetid://7045637481"
	mailsettingsGUI.RequiredPetSetting.HoverImage = requiredPetEnabled and "rbxassetid://7045637411" or "rbxassetid://7045637564"
	mailsettingsGUI.FriendsOnlySetting.Label.Text = friendsOnlyEnabled and "On" or "Off"
	mailsettingsGUI.FriendsOnlySetting.Image = friendsOnlyEnabled and "rbxassetid://7045637286" or "rbxassetid://7045637481"
	mailsettingsGUI.FriendsOnlySetting.HoverImage = friendsOnlyEnabled and "rbxassetid://7045637411" or "rbxassetid://7045637564"
end

for _, child in ipairs(mailsettingsGUI.Frame.Container:GetChildren()) do
	if child.Name == "Rarity" then
		local ImageButton = child:FindFirstChildOfClass("ImageButton")
		_L.GUIFX.ButtonFX(ImageButton)

		ImageButton.Activated:Connect(function()
			if not debouce then
				debouce = true
				ToggleRarity(ImageButton)
				debouce = false
			end
		end)
	end
end

task.spawn(function()
	for index = 1, 4 do
		local Button = mailsettingsGUI[index == 1 and "HugesSetting" or index == 2 and "EnabledSetting" or index == 3 and "RequiredPetSetting" or index == 4 and "FriendsOnlySetting" or nil]
		local Setting = index == 1 and "HugesOnly" or index == 2 and "Enabled" or index == 3 and "RequiredPet" or index == 4 and "FriendsOnly" or nil
		if not (Button and Setting) then
			warn("???")
			return
		end

		_L.GUIFX.ButtonFX(Button)

		Button.Activated:Connect(function()
			if not debouce then
				debouce = true
				ToggleSetting(Setting)
				debouce = false
			end
		end)
	end
end)

mailsettingsGUI.Close.Activated:Connect(function()  
	if not debouce then
		debouce = true
		mailsettingsGUI.Gui.Enabled = false
		
		local mailSettings = _L.Signal.Invoke("Get Mail Settings")
		if not mailSettings then
			_L.Signal.Fire("Open Mailbox")
			debouce = false
			return
		end
		
		if not _L.Functions.DeepEqualsUnsafe(mailSettings, Old_MailboxSettings) then
			local success, response = _L.Network.Invoke("Update Mail Settings", mailSettings)

			if success then
				mailSettings = _L.Functions.DeepCopyUnsafe(mailSettings)
			else	
				if mailSettings ~= nil then
					local newData = _L.Functions.DeepCopyUnsafe(mailSettings)
					_L.Signal.Fire("Set Mailbox Settings", newData)
				end
				
				_L.Message.New(response)
				debouce = false
				return
			end
		end
		
		_L.Signal.Fire("Open Mailbox")
		debouce = false
	end
end)

_L.GUIFX.ButtonFX(mailsettingsGUI.Close)

_L.Signal.Fired("Open Mail Settings"):Connect(function()
	Update()
	mailsettingsGUI.Gui.Enabled = true
end)  -  Editar
  04:54:13.912    -  Editar
  04:54:13.912  ----- [2751] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Booth Inventory -----  -  Editar
  04:54:13.912  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local _ = {
	"rbxassetid://6907636858",
	"rbxassetid://6907636843"
};
local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_BoothInventory = m_Library.GUI.BoothInventory;
local t_Inventory = m_Library.Assets.UI.Inventory;
local Random_new_ret = Random.new();
local bool1 = false;
local u1 = 0;
local u2 = nil;
local u3 = false;
function Update(p1, p2) -- Line: 26
	--[[
		Upvalues:
			[1] = u2
			[2] = t_BoothInventory
			[3] = m_Library
			[4] = u3
			[5] = u1
			[6] = t_Inventory
			[7] = bool1
			[8] = Random_new_ret
	--]]
	if not p1 then
		p1 = u2;
		if not p1 then
			t_BoothInventory.Gui.Enabled = false;
			return;
		end
	end
	local v1 = m_Library.Save.Get();
	local u5;
	local u4;
	if p2 then
		u4 = p1;
		u5 = p2;
	else
        u4, u5 = m_Library.Network.Invoke("Get Booth Data By Id", p1);
        if not u4 then
			m_Library.Print("Failed to grab booth", true);
			return;
		end
	end
	if not u5 then
		t_BoothInventory.Gui.Enabled = false;
		return;
	end
	u3 = u5.Owner == m_Library.LocalPlayer.UserId;
	local table1 = {};
	for key1, _ in pairs(u5.Listings) do
		local v13 = m_Library.PetCmds.Get(key1);
		table.insert(table1, v13);
	end
	u2 = u4;
	local _ = u1 == 0;
	u1 = u1 + 1;
	local v14;
	if t_BoothInventory.Query.Text == "" then
		v14 = false;
	else
		v14 = tostring(t_BoothInventory.Query.Text) ~= nil;
	end
	local v2 = v14 and m_Library.Functions.RegexEscape(string.lower(tostring(t_BoothInventory.Query.Text))) or nil;
	t_BoothInventory.PetAmount.Text = #table1 .. (#table1 <= 1 and " Pet" or " Pets");
	local v3 = u3 and t_BoothInventory.Main.YourPets or t_BoothInventory.Main.PlayerPets;
	if u3 then
		t_BoothInventory.Main.YourPets.Visible = true;
		t_BoothInventory.Main.PlayerPets.Visible = false;
		t_BoothInventory.Gui.Frame.Title.Text = "My Booth!";
	else
		t_BoothInventory.Main.PlayerPets.Visible = true;
		t_BoothInventory.Main.YourPets.Visible = false;
		t_BoothInventory.Gui.Frame.Title.Text = "Their Booth!";
	end
	local t_PetHolderTemplate = v3.PetHolderTemplate;
	t_PetHolderTemplate.Visible = false;
	for _, child2 in ipairs(v3:GetChildren()) do
		if not child2:GetAttribute("PetId") or u5.Listings[child2:GetAttribute("PetId")] then continue end
		child2:Destroy();
	end
	local v4 = 0;
	local v5 = m_Library.Shared.SortPets(v1, table1);
	for key3, val3 in ipairs(v5) do
		local t_uid = val3.uid;
		local t_id = val3.id;
		local _ = val3.idt;
		local _ = m_Library.Shared.HasPetEquipped(v1, val3);
		local _ = val3.s;
		local t_g = val3.g;
		local t_r = val3.r;
		local t_dm = val3.dm;
		local t_powers = val3.powers;
		local v15 = m_Library.Directory.Pets[t_id];
		local _ = v15.isGift;
		if not t_g or not v15.goldenThumbnail then
			local _ = v15.thumbnail;
		end
		local t_name = v15.name;
		local t_rarity = v15.rarity;
		local t_sh = val3.sh;
		local t_l = val3.l;
		local v16 = v3:FindFirstChild(t_uid);
		local t_Price = u5.Listings[t_uid].Price;
		if not v16 then
			v16 = t_PetHolderTemplate:Clone();
			v16.Pet:Destroy();
			v16:SetAttribute("PetId", t_uid);
			v16.Name = t_uid;
			v16.LayoutOrder = v4;
			v4 = v4 + 1;
			local Clone_ret2 = t_Inventory.Pet:Clone();
			Clone_ret2.Visible = true;
			m_Library.PetUI.Create(Clone_ret2, t_uid);
			Clone_ret2.Parent = v16;
			if u3 then
				local Remove = v16:FindFirstChild("Remove");
				Remove.Activated:Connect(function() -- Line: 161
					--[[
						Upvalues:
							[1] = bool1
							[2] = m_Library
							[3] = t_uid
							[4] = Random_new_ret
							[5] = u4
					--]]
					if not bool1 then
						bool1 = true;
						local v22 = m_Library.Message.New("Are you sure you want to remove this pet from sale?", true);
						if v22 then
							local v23, v24 = m_Library.Network.Invoke("Remove Trading Booth Pet", t_uid);
							if not v23 then
								m_Library.Message.New(v24);
							else
								m_Library.Audio.Play("rbxassetid://7139317909", script, Random_new_ret:NextNumber(0.95, 1.05), 0.75);
							end
							Update(u4);
						end
						bool1 = false;
					end
				end);
				local Buy2 = v16:FindFirstChild("Buy");
				Buy2.Cost.Text = m_Library.Functions.NumberShorten(t_Price);
				Buy2.HoverImage = "";
				Buy2.PressedImage = "";
				m_Library.GUIFX.ButtonFX(Remove);
			else
				local Buy = v16:FindFirstChild("Buy");
				Buy.Cost.Text = m_Library.Functions.NumberShorten(t_Price);
				Buy.Activated:Connect(function() -- Line: 191
					--[[
						Upvalues:
							[1] = bool1
							[2] = u4
							[3] = t_uid
							[4] = val3
							[5] = t_Price
					--]]
					if not bool1 then
						bool1 = true;
						AttemptBuy(u4, t_uid, val3, t_Price);
						bool1 = false;
					end
				end);
				m_Library.GUIFX.ButtonFX(Buy);
			end
			m_Library.GUIFX.ButtonFX(Clone_ret2);
		else
			v16.LayoutOrder = v4;
			v4 = v4 + 1;
		end
		local WaitForChild_ret = v16:WaitForChild(t_uid);
		WaitForChild_ret.Equipped.Visible = false;
		WaitForChild_ret:SetAttribute("Tick", u1);
		WaitForChild_ret.LayoutOrder = key3;
		WaitForChild_ret.Level:FindFirstChildOfClass("UIStroke").Thickness = 4;
		WaitForChild_ret.HC:FindFirstChildOfClass("UIStroke").Thickness = 4;
		WaitForChild_ret.DeleteOverlay.Visible = false;
		WaitForChild_ret.PetIcon.ImageTransparency = 0;
		WaitForChild_ret.Locked.Visible = false;
		WaitForChild_ret.Stars.Visible = true;
		if v14 then
			local bool2 = false;
			if string.find(string.lower(t_name), v2, 1, true) then
				bool2 = true;
			elseif val3.nk and string.find(string.lower(val3.nk), v2, 1, true) then
				bool2 = true;
			elseif string.find(string.lower(t_rarity), v2, 1, true) then
				bool2 = true;
			elseif t_sh and string.find("shiny", v2, 1, true) then
				bool2 = true;
			elseif t_g and (string.find("gold", v2, 1, true) or string.find("golden", v2, 1, true)) then
				bool2 = true;
			elseif t_r and string.find("rainbow", v2, 1, true) then
				bool2 = true;
			elseif t_dm and string.find("dark matter", v2, 1, true) then
				bool2 = true;
			elseif t_l and string.find("lock", v2, 1, true) then
				bool2 = true;
			elseif t_powers and #t_powers > 0 then
				for _, val5 in ipairs(t_powers) do
					local unpack_ret1, unpack_ret2 = unpack(val5);
					local v25, _ = m_Library.Shared.GetPowerDir(unpack_ret1, unpack_ret2);
					if not string.find(string.lower(v25.title), v2, 1, true) then continue end
					bool2 = true;
					break;
				end
			end
			v16.Visible = bool2;
		else
			v16.Visible = true;
		end
		v16.Parent = v3;
	end
	if u3 then
		local t_PetAddTemplate = v3.PetAddTemplate;
		t_PetAddTemplate.Visible = false;
		if v3:FindFirstChild("PetAddButton") then
			v3:FindFirstChild("PetAddButton"):Destroy();
		end
		local Clone_ret = t_PetAddTemplate:Clone();
		Clone_ret.Name = "PetAddButton";
		Clone_ret.Visible = true;
		Clone_ret.Add.Activated:Connect(function() -- Line: 276
			--[[
				Upvalues:
					[1] = m_Library
					[2] = u5
			--]]
			m_Library.Signal.Invoke("Select Booth Pet", u5);
		end);
		Clone_ret.Parent = v3;
		m_Library.GUIFX.ButtonFX(Clone_ret.Add);
	end
	t_BoothInventory.Bottom.Customize.Visible = u3;
	t_BoothInventory.Bottom.Exit.Visible = u3;
	t_BoothInventory.Bottom.Search.Size = UDim2.new(u3 and 0.7 or 0.95, 0, 0.7, 0);
	UpdateScrolling();
end
function UpdateScrolling() -- Line: 298
	--[[
		Upvalues:
			[1] = u3
			[2] = t_BoothInventory
			[3] = m_Library
	--]]
	local v6 = u3 and t_BoothInventory.Main.YourPets or t_BoothInventory.Main.PlayerPets;
	local UIGridLayout = v6:FindFirstChildOfClass("UIGridLayout");
	local UIPadding = v6:FindFirstChildOfClass("UIPadding");
	local v7 = m_Library.Functions.ResolutionScale();
	local v8 = v7 <= 0.5 and 4 or v7 <= 0.65 and 5 or v7 <= 1 and 6 or v7 <= 1.2 and 7 or 8;
	if m_Library.Variables.Mobile then
		v8 = v8 + 1;
	end
	UIGridLayout.CellPadding = UDim2.new(0, 20, 0, 20);
	local v9 = (v6.AbsoluteSize.X - v6.ScrollBarThickness - UIPadding.PaddingLeft.Offset - UIPadding.PaddingRight.Offset) / v8 - UIGridLayout.CellPadding.X.Offset;
	local _ = UDim2.new(0, v9, 0, v9);
	UIGridLayout:ApplyLayout();
	v6.CanvasSize = UDim2.new(0, UIGridLayout.AbsoluteContentSize.X, 0, UIGridLayout.AbsoluteContentSize.Y + 65);
end
function GetFullName(p3) -- Line: 332
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local str1 = "";
	local t_name2 = m_Library.Directory.Pets[p3.id].name;
	local t_g2 = p3.g;
	local t_r2 = p3.r;
	local t_dm2 = p3.dm;
	if t_g2 then
		str1 = "Golden ";
	elseif t_r2 then
		str1 = "Rainbow ";
	elseif t_dm2 then
		str1 = "Dark Matter ";
	end
	return str1 .. t_name2;
end
local table2 = {};
function ThrottleRequest(p4, p5) -- Line: 357
	--[[
		Upvalues:
			[1] = table2
	--]]
	if table2[p4] then
		return true;
	end
	table2[p4] = true;
	task.delay(p5 or 1, function() -- Line: 364
		--[[
			Upvalues:
				[1] = table2
				[2] = p4
		--]]
		table2[p4] = nil;
	end);
	return false;
end
function AttemptBuy(p6, p7, p8, p9) -- Line: 371
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v10 = m_Library.Save.Get();
	if not v10 then return end
	if v10.Diamonds < p9 then
		m_Library.Message.New("You don't have enough Diamonds to buy this!");
		return;
	end
	if ThrottleRequest("AttemptBuy", 7) then
		m_Library.Message.New("You are doing this too fast!");
		return;
	end
	local v11 = m_Library.Directory.Pets[p8.id];
	local math_ceil_ret = math.ceil(m_Library.Signal.Invoke("Get Booth By Id", p6).Listings[p7].Timestamp + 3 - workspace:GetServerTimeNow());
	if math_ceil_ret > 0 and (v11.isGift and m_Library.Message.New("Would you like to buy this " .. GetFullName(p8) .. " for " .. m_Library.Functions.Commas(p9) .. " Diamonds?", true, math_ceil_ret) or m_Library.Message.New("Would you like to buy this " .. GetFullName(p8) .. " pet for " .. m_Library.Functions.Commas(p9) .. " Diamonds?", true, math_ceil_ret)) or v11.isGift and m_Library.Message.New("Would you like to buy this " .. GetFullName(p8) .. " for " .. m_Library.Functions.Commas(p9) .. " Diamonds?", true) or m_Library.Message.New("Would you like to buy this " .. GetFullName(p8) .. " pet for " .. m_Library.Functions.Commas(p9) .. " Diamonds?", true) then
		local v17, v18 = m_Library.Network.Invoke("Purchase Trading Booth Pet", p6, p7);
		if not v17 then
			m_Library.Message.New(v18);
			return;
		end
		m_Library.Signal.Fire("Notification", "Success! \226\156\133", {
			color = Color3.fromRGB(105, 255, 168),
			sound = "rbxassetid://11648890466"
		});
	end
	Update(p6);
end
t_BoothInventory.Frame.Bottom.Search.Query:GetPropertyChangedSignal("Text"):Connect(function() -- Line: 427
	--[[
		Upvalues:
			[1] = u3
			[2] = t_BoothInventory
			[3] = u2
	--]]
	local v12 = u3 and t_BoothInventory.Main.YourPets or t_BoothInventory.Main.PlayerPets;
	if t_BoothInventory.Frame.Bottom.Search.Query.Text ~= "" then
		v12.CanvasPosition = Vector2.new();
	end
	Update(u2);
end);
t_BoothInventory.Close.Activated:Connect(function() -- Line: 436
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
			[3] = Random_new_ret
			[4] = t_BoothInventory
	--]]
	if not bool1 then
		bool1 = true;
		m_Library.Audio.Play("rbxassetid://8951380772", script, Random_new_ret:NextNumber(0.95, 1.05), 0.1);
		t_BoothInventory.Gui.Enabled = false;
		bool1 = false;
	end
end);
t_BoothInventory.Bottom.Customize.Activated:Connect(function() -- Line: 446
	--[[
		Upvalues:
			[1] = bool1
			[2] = u3
			[3] = m_Library
	--]]
	if not bool1 and u3 then
		bool1 = true;
		m_Library.Signal.Fire("Customize Booth");
		bool1 = false;
	end
end);
t_BoothInventory.Bottom.Exit.Activated:Connect(function() -- Line: 455
	--[[
		Upvalues:
			[1] = bool1
			[2] = u3
			[3] = t_BoothInventory
			[4] = m_Library
	--]]
	if not bool1 and u3 then
		bool1 = true;
		t_BoothInventory.Gui.Enabled = false;
		local v19 = m_Library.Message.New("Are you sure you want to leave your booth?", true);
		if v19 then
			local v20, v21 = m_Library.Network.Invoke("Unclaim Trading Booth");
			if not v20 then
				m_Library.Message.New(v21);
			end
		end
		bool1 = false;
	end
end);
m_Library.Signal.Fired("Resolution Changed"):Connect(function() -- Line: 472
	task.defer(function() -- Line: 473
		UpdateScrolling();
	end);
end);
m_Library.Signal.Fired("Window Opened"):Connect(function(p10) -- Line: 479
	--[[
		Upvalues:
			[1] = t_BoothInventory
	--]]
	if p10 == t_BoothInventory.Gui then
		Update();
	end
end);
m_Library.Signal.Fired("Window Closed"):Connect(function(p11) -- Line: 485
	--[[
		Upvalues:
			[1] = t_BoothInventory
			[2] = u2
			[3] = u3
	--]]
	if p11 == t_BoothInventory.Gui then
		u2 = nil;
		u3 = false;
	end
end);
m_Library.Signal.Fired("Show Booth"):Connect(function(p12) -- Line: 492
	--[[
		Upvalues:
			[1] = t_BoothInventory
	--]]
	Update(p12);
	t_BoothInventory.Gui.Enabled = true;
end);
m_Library.GUIFX.ButtonFX(t_BoothInventory.Close);
m_Library.GUIFX.ButtonFX(t_BoothInventory.Bottom.Customize);
m_Library.GUIFX.ButtonFX(t_BoothInventory.Bottom.Exit);
m_Library.GUIFX.ButtonFX(t_BoothInventory.Add);
m_Library.GUIFX.Tooltip(t_BoothInventory.Bottom.Customize, "Customize Booth");
m_Library.GUIFX.Tooltip(t_BoothInventory.Bottom.Exit, "Exit Booth");
m_Library.Network.Fired("Trade Booth Updated"):Connect(function(p13, p14) -- Line: 514
	--[[
		Upvalues:
			[1] = u2
			[2] = m_Library
	--]]
	if u2 and u2 == p13 then
		local function waitForPets(p16, p17) -- Line: 516
			--[[
				Upvalues:
					[1] = m_Library
					[2] = waitForPets
			--]]
			if p17 and p17 > 4 then return end
			for key4, _ in pairs(p16.Listings) do
				if m_Library.PetCmds.Get(key4) then continue end
				if not p17 then
					p17 = 0;
				end
				p17 = p17 + 1;
				task.delay(0.1, waitForPets, p16, p17);
				return;
			end
		end
		waitForPets(p14);
		Update(u2, p14);
	end
end);
m_Library.Network.Fired("Trading Booth Unclaimed"):Connect(function(p15) -- Line: 538
	--[[
		Upvalues:
			[1] = u2
			[2] = t_BoothInventory
	--]]
	if u2 == p15 then
		t_BoothInventory.Gui.Enabled = false;
	end
end);
  -  Editar
  04:54:13.912    -  Editar
  04:54:13.912  ----- [2752] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Achievements -----  -  Editar
  04:54:13.912  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_Achievements = m_Library.GUI.Achievements;
local bool1 = false;
local bool2 = true;
function UpdateAchievement(p1) -- Line: 22
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_Achievements
	--]]
	local v1 = m_Library.Save.Get();
	if not v1 then return end
	assert(v1);
	local v2 = m_Library.Directory.Achievements[p1];
	local v3 = v1.Achievements[p1];
	local v4 = v3 and v3.stage or 1;
	local v5 = v3 and v3.progress or 0;
	local v6 = v2[v4];
	local v7 = v2[v4 + 1];
	local v8;
	if v6 == nil then
		v8 = false;
	else
		v8 = v6.secret;
	end
	if v8 then return end
	local v9 = t_Achievements.Container.Holder:FindFirstChild(p1);
	if not v9 then
		v9 = m_Library.Assets.UI.Achievements.Achievement:Clone();
		v9.Name = p1;
		v9.Parent = t_Achievements.Container.Holder;
	end
	local v10 = v7 == nil;
	local v11 = v6 == nil;
	v9.Top.Title.New.Visible = not v11 and not v10;
	v9.Top.Title.arrow.Visible = not v11 and not v10;
	v9.Top.Progress.Visible = not v11;
	v9.Top.Percent.Visible = not v11;
	local v12 = v9.Top.Title.New.Visible and v9.Top.Title.AbsoluteSize.X / 2 - v9.Top.Title.arrow.AbsoluteSize.X / 2 or math.huge;
	v9.Top.Title.Old:FindFirstChildOfClass("UISizeConstraint").MaxSize = Vector2.new(v12, math.huge);
	v9.Top.Title.New:FindFirstChildOfClass("UISizeConstraint").MaxSize = Vector2.new(v12, math.huge);
	if v11 then
		v6 = v2[v4 - 1];
	end
	local v13 = 100;
	if v6 then
		local math_round_ret = math.round(v5 / v6.amount * 100);
		v13 = math.clamp(math_round_ret, 0, 100);
	end
	v9.Top.Title.Old.Text = v6.title;
	v9.Top.Title.New.Text = v7 and v7.title or "";
	v9.Bottom.Frame.Desc.Text = v6.desc;
	local v14 = m_Library.Shared.AchievementDifficulty[v6.difficulty];
	v9.Top.Difficulty.Text = v11 and "Completed" or v14.Name;
	v9.Top.BackgroundColor3 = v11 and Color3.fromRGB(80, 255, 86) or v14.Color;
	v9.LayoutOrder = v6.difficulty * 1000 + (v11 and 10000 or -v13) + (v8 and 100000 or 0);
	if v8 and not v11 then
		v9.Top.BackgroundColor3 = Color3.fromRGB(115, 115, 115);
	end
	v9.Top.Percent.Text = v13 == 100 and "Done" or v13 .. "%";
	v9.Top.Progress.Bar.Size = UDim2.new(v13 / 100, 0, 1, 0);
	if v6 then
		local t_rewardType = v6.rewardType;
		local t_reward = v6.reward;
		v9.Bottom.Frame.CurrencyReward.Visible = t_rewardType == "Diamonds" and true or string.find(t_rewardType, "Coins") ~= nil;
		v9.Bottom.Frame.PetReward.Visible = t_rewardType == "Pet" and true or t_rewardType == "GoldenPet" and true or t_rewardType == "RainbowPet" and true or t_rewardType == "DarkMatterPet";
		v9.Bottom.Frame.SlotReward.Visible = t_rewardType == "Slots";
		if v9.Bottom.Frame.CurrencyReward.Visible then
			local t_Reward = v9.Bottom.Frame.CurrencyReward.Reward;
			local t_CurrencyIcon = v9.Bottom.Frame.CurrencyReward.CurrencyIcon;
			t_Reward.Text = m_Library.Functions.Commas(t_reward);
			local v16 = m_Library.Directory.Currency[t_rewardType];
			if t_CurrencyIcon.Image ~= v16.Image then
				t_CurrencyIcon.Image = v16.Image;
				t_Reward:FindFirstChildOfClass("UIGradient"):Destroy();
				v16.Gradient:Clone().Parent = t_Reward;
			end
		else
			if v9.Bottom.Frame.PetReward.Visible then
				local v17 = m_Library.Directory.Pets[t_reward];
				v9.Bottom.Frame.PetReward.PetIcon.Image = t_rewardType == "DarkMatterPet" and v17.darkMatterThumbnail or t_rewardType == "GoldenPet" and v17.goldenThumbnail or v17.thumbnail;
				return;
			end
			if v9.Bottom.Frame.SlotReward.Visible then
				v9.Bottom.Frame.SlotReward.Amount.Text = m_Library.Functions.Commas(t_reward);
			end
		end
	end
end
function UpdateAll() -- Line: 116
	--[[
		Upvalues:
			[1] = bool2
			[2] = t_Achievements
			[3] = m_Library
	--]]
	if not bool2 then return end
	if not t_Achievements.Gui.Enabled then return end
	local v15 = m_Library.Save.Get();
	if not v15 then return end
	bool2 = false;
	for key1, _ in pairs(m_Library.Directory.Achievements) do
		UpdateAchievement(key1);
	end
	Scrolling();
end
function UpdateLazy() -- Line: 134
	--[[
		Upvalues:
			[1] = bool2
	--]]
	bool2 = true;
end
function Scrolling() -- Line: 139
	--[[
		Upvalues:
			[1] = t_Achievements
	--]]
	local t_Holder = t_Achievements.Container.Holder;
	local UIListLayout = t_Holder:FindFirstChildOfClass("UIListLayout");
	local UIPadding = t_Holder:FindFirstChildOfClass("UIPadding");
	t_Holder.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + UIPadding.PaddingTop.Offset + UIPadding.PaddingBottom.Offset);
end
m_Library.GUIFX.ButtonFX(t_Achievements.Close);
t_Achievements.Close.Activated:Connect(function() -- Line: 151
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_Achievements
	--]]
	if not bool1 then
		bool1 = true;
		t_Achievements.Gui.Enabled = false;
		bool1 = false;
	end
end);
UpdateLazy();
m_Library.Signal.Fired("Stat Changed"):Connect(function(p2) -- Line: 164
	if p2 == "Achievements" then
		UpdateLazy();
	end
end);
m_Library.Signal.Fired("Resolution Changed"):Connect(function() -- Line: 170
	task.defer(function() -- Line: 171
		Scrolling();
	end);
end);
m_Library.RunService.RenderStepped:Connect(function() -- Line: 176
	UpdateAll();
end);
local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 180
	--[[
		Upvalues:
			[1] = t_Achievements
			[2] = m_Library
	--]]
	while true do
		if t_Achievements.Gui.Enabled then
			Scrolling();
		end
		m_Library.Heartbeat(30);
	end
end);
coroutine_wrap_ret();
  -  Editar
  04:54:13.913    -  Editar
  04:54:13.913  ----- [2753] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Golden Snowman Egg Timer -----  -  Editar
  04:54:13.913  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
function SetTime(p1) -- Line: 7
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Eggs") then
		local Eggs = Map:FindFirstChild("Eggs");
		if Eggs then
			local FindFirstChild_ret = Eggs:FindFirstChild("Gold Snowman Egg");
			if FindFirstChild_ret then
				local Eggs2 = FindFirstChild_ret:FindFirstChild("Eggs");
				if Eggs2 then
					local FindFirstChild_ret2 = Eggs2:FindFirstChild("Egg Capsule");
					if FindFirstChild_ret2 then
						local Center = FindFirstChild_ret2:FindFirstChild("Center");
						if Center then
							local BillboardGui = Center:FindFirstChild("BillboardGui");
							if BillboardGui then
								BillboardGui.Timer.Text = p1;
							end
						end
					end
				end
			end
		end
	end
end
local u1 = 0;
m_Library.RunService.Heartbeat:Connect(function(p2) -- Line: 35
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
	--]]
	u1 = u1 + p2;
	if u1 > 1 then
		u1 = u1 - 1;
		local v1 = 1672074000 - workspace:GetServerTimeNow();
		if v1 > 0 then
			SetTime(m_Library.Functions.FormatTime(v1 >= 0 and v1 or 0, true, true) .. " Remaining!");
			return;
		end
		SetTime("Leaving any second! \240\159\142\137");
	end
end);
  -  Editar
  04:54:13.913    -  Editar
  04:54:13.913  ----- [2754] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Trading History -----  -  Editar
  04:54:13.913  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_TradingHistory = m_Library.GUI.TradingHistory;
local Random_new_ret = Random.new();
local bool1 = false;
local str1 = "";
local table1 = {};
function UpdateHistory() -- Line: 21
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_TradingHistory
			[3] = table1
			[4] = bool1
	--]]
	local v1 = m_Library.Save.Get();
	if not v1 then return end
	local v2 = m_Library.Functions.RegexEscape(string.lower(tostring(t_TradingHistory.Bottom.Search.Query.Text)));
	local v13;
	if v2 == nil then
		v13 = false;
	else
		v13 = v2 ~= "";
	end
	local t_History = t_TradingHistory.History;
	local u1 = v1.TradeHistory2 or {};
	local HistoryLog = t_History:FindFirstChild("HistoryLog");
	for _, child1 in pairs(t_History:GetChildren()) do
		if child1:GetAttribute("Template") then
			child1.Visible = false;
			continue;
		end
		if not child1:IsA("Frame") or GetTrade(child1.Name, u1) then continue end
		child1:Destroy();
	end
	local t_NoHistory = t_TradingHistory.History.NoHistory;
	if #u1 == 0 then
		t_NoHistory.Visible = true;
		local _, GetTradeRating_ret2_2 = GetTradeRating(m_Library.LocalPlayer);
		t_TradingHistory.TradingHistory.Rating.Text = GetTradeRating_ret2_2;
		UpdateScrolling();
		return;
	end
	t_NoHistory.Visible = false;
	for key2, val2 in ipairs(u1) do
		local FindFirstChild_ret = t_History:FindFirstChild(val2.ts);
		if FindFirstChild_ret then
			UpdateRating(val2, FindFirstChild_ret);
			FindFirstChild_ret.LayoutOrder = 99999 - key2;
			if v13 then
				local v20 = table1[val2.u];
				FindFirstChild_ret.Visible = v20 and string.find(string.lower(v20.Name), v2) ~= nil;
			else
				FindFirstChild_ret.Visible = true;
			end
			continue;
		end
		local Clone_ret = HistoryLog:Clone();
		Clone_ret.LogMessage.Log.Player.Image = "";
		UpdateTradeDescription(val2, Clone_ret.LogMessage.Log.Description.Description, Clone_ret.LogMessage.Log.Player);
		Clone_ret.LogMessage.Log.Timestamp.Text = GetStringTime(val2.ts);
		UpdateRating(val2, Clone_ret);
		m_Library.GUIFX.ButtonFX(Clone_ret.Positive.Button);
		m_Library.GUIFX.ButtonFX(Clone_ret.Negative.Button);
		if val2.r == nil then
			Clone_ret.Positive.Button.Activated:Connect(function() -- Line: 90
				--[[
					Upvalues:
						[1] = bool1
						[2] = m_Library
						[3] = val2
						[4] = Clone_ret
				--]]
				if not bool1 then
					bool1 = true;
					local v21, v22 = m_Library.Network.Invoke("Rate Trade", val2.u, val2.ts, val2.t, true);
					if not v21 then
						m_Library.Message.New(v22);
					else
						val2.r = true;
						UpdateRating(val2, Clone_ret);
						AnimateThumb(Clone_ret.Positive);
					end
					bool1 = false;
				end
			end);
			Clone_ret.Negative.Button.Activated:Connect(function() -- Line: 107
				--[[
					Upvalues:
						[1] = bool1
						[2] = m_Library
						[3] = val2
						[4] = Clone_ret
				--]]
				if not bool1 then
					bool1 = true;
					local v23, v24 = m_Library.Network.Invoke("Rate Trade", val2.u, val2.ts, val2.t, false);
					if not v23 then
						m_Library.Message.New(v24);
					else
						val2.r = false;
						UpdateRating(val2, Clone_ret);
						AnimateThumb(Clone_ret.Negative);
					end
					bool1 = false;
				end
			end);
		end
		m_Library.GUIFX.ButtonFX(Clone_ret.LogMessage.Log);
		Clone_ret.LogMessage.Log.Activated:Connect(function() -- Line: 125
			--[[
				Upvalues:
					[1] = val2
					[2] = u1
					[3] = m_Library
			--]]
			local Trade = GetTrade(val2.ts, u1);
			if not Trade or not Trade.p or not Trade.op then
				m_Library.Message.New("You can no longer view this trade!");
				return;
			end
			UpdateView(Trade);
			ShowView();
		end);
		Clone_ret:SetAttribute("Template", false);
		Clone_ret.LayoutOrder = 99999 - key2;
		Clone_ret.Parent = t_History;
		if v13 then
			local v18 = table1[val2.u];
			Clone_ret.Visible = v18 and string.find(string.lower(v18.Name), v2) ~= nil;
		else
			Clone_ret.Visible = true;
		end
	end
	local _, GetTradeRating_ret2 = GetTradeRating(m_Library.LocalPlayer);
	t_TradingHistory.TradingHistory.Rating.Text = GetTradeRating_ret2;
	UpdateScrolling();
end
function UpdateView(p1) -- Line: 157
	--[[
		Upvalues:
			[1] = t_TradingHistory
			[2] = m_Library
			[3] = table1
	--]]
	if not p1.p or not p1.op then return end
	for _, child3 in pairs(t_TradingHistory.Client.Pets:GetChildren()) do
		if not child3:IsA("TextButton") then continue end
		child3:Destroy();
	end
	for _, child4 in pairs(t_TradingHistory.Player.Pets:GetChildren()) do
		if not child4:IsA("TextButton") then continue end
		child4:Destroy();
	end
	for _, val5 in ipairs(p1.p) do
		local Clone_ret3 = m_Library.Assets.UI.Inventory.Pet:Clone();
		m_Library.PetUI.Create(Clone_ret3, "6969", val5);
		Clone_ret3.Parent = t_TradingHistory.Client.Pets;
	end
	for _, val6 in ipairs(p1.op) do
		local Clone_ret2 = m_Library.Assets.UI.Inventory.Pet:Clone();
		m_Library.PetUI.Create(Clone_ret2, "6969", val6);
		Clone_ret2.Parent = t_TradingHistory.Player.Pets;
	end
	t_TradingHistory.Client.Diamonds.Amount.Text = m_Library.Functions.Commas(p1.d);
	t_TradingHistory.Player.Diamonds.Amount.Text = m_Library.Functions.Commas(p1.od);
	t_TradingHistory.Player.Title.Text = table1[p1.u] and table1[p1.u].Name .. "'s Pets" or "Their Pets";
	UpdatePetsScaling();
end
function ShowView() -- Line: 197
	--[[
		Upvalues:
			[1] = t_TradingHistory
	--]]
	t_TradingHistory.TradingHistory.Visible = false;
	t_TradingHistory.TradeView.Visible = true;
	t_TradingHistory.Gui.Enabled = true;
end
function UpdateTradeDescription(p2, p3, p4) -- Line: 207
	--[[
		Upvalues:
			[1] = table1
			[2] = m_Library
	--]]
	local t_u = p2.u;
	if not table1[t_u] then
		p3.Text = GetTradeDescription(p2, "Loading...");
		task.spawn(function() -- Line: 212
			--[[
				Upvalues:
					[1] = m_Library
					[2] = t_u
					[3] = table1
					[4] = p3
					[5] = p2
					[6] = p4
			--]]
			local success, pcall_ret2 = pcall(function() -- Line: 213
				--[[
					Upvalues:
						[1] = m_Library
						[2] = t_u
						[3] = table1
				--]]
				local v25 = m_Library.Functions.UserIdToUsername(t_u);
				local UserThumbnailAsync = game.Players:GetUserThumbnailAsync(t_u, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size180x180);
				local table2 = {
					Name = v25,
					Avatar = UserThumbnailAsync
				};
				table1[t_u] = table2;
				return table2;
			end);
			if not success then return end
			p3.Text = GetTradeDescription(p2, pcall_ret2.Name);
			p4.Image = pcall_ret2.Avatar;
		end);
		return;
	end
	p3.Text = GetTradeDescription(p2, table1[t_u].Name);
	p4.Image = table1[t_u].Avatar;
end
function UpdateRating(p5, p6) -- Line: 240
	if p5.r == true then
		p6.Positive.Button.Image = "rbxassetid://12047990832";
		p6.Negative.Button.HoverImage = "";
		return;
	end
	if p5.r == false then
		p6.Negative.Button.Image = "rbxassetid://12065403063";
		p6.Positive.Button.HoverImage = "";
	end
end
function GetTradeDescription(p7, p8) -- Line: 252
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local str2 = "Traded ";
	local v3 = p7.p and #p7.p or p7.pn;
	local t_d = p7.d;
	local v4 = p7.op and #p7.op or p7.opn;
	local t_od = p7.od;
	local v5 = "";
	if v3 == 0 and t_d == 0 then
		v5 = "nothing";
	elseif v3 == 0 and t_d > 0 then
		v5 = m_Library.Functions.NumberShorten(t_d) .. " Diamonds";
	elseif v3 > 0 and t_d == 0 then
		v5 = m_Library.Functions.NumberShorten(v3) .. " Pets";
	elseif v3 > 0 and t_d > 0 then
		v5 = m_Library.Functions.NumberShorten(v3) .. " Pets & " .. m_Library.Functions.NumberShorten(t_d) .. " Diamonds";
	end
	local v6 = "";
	if v4 == 0 and t_od == 0 then
		v6 = nil;
	elseif v4 == 0 and t_od > 0 then
		v6 = m_Library.Functions.NumberShorten(t_od) .. " Diamonds";
	elseif v4 > 0 and t_od == 0 then
		v6 = m_Library.Functions.NumberShorten(v4) .. " Pets";
	elseif v4 > 0 and t_od > 0 then
		v6 = m_Library.Functions.NumberShorten(v4) .. " Pets & " .. m_Library.Functions.NumberShorten(t_od) .. " Diamonds";
	end
	local v7 = str2 .. v5;
	if not v6 then
		return v7 .. " to " .. p8;
	end
	return v7 .. " for " .. p8 .. "'s " .. v6;
end
function GetStringTime(p9) -- Line: 293
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v8 = workspace:GetServerTimeNow() - p9;
	return v8 <= 120 and "Just now" or m_Library.Functions.TimeString(v8) .. " ago";
end
function GetTrade(p10, p11) -- Line: 304
	for _, val7 in ipairs(p11) do
		if val7.ts ~= p10 then continue end
		return val7;
	end
	return nil;
end
function UpdateScrolling() -- Line: 315
	--[[
		Upvalues:
			[1] = t_TradingHistory
	--]]
	local t_History2 = t_TradingHistory.Gui.Frame.TradingHistory.Main.History;
	local UIListLayout = t_History2:FindFirstChildOfClass("UIListLayout");
	local UIPadding = t_History2:FindFirstChildOfClass("UIPadding");
	t_History2.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + UIPadding.PaddingTop.Offset + UIPadding.PaddingBottom.Offset);
end
function UpdatePetsScaling() -- Line: 323
	--[[
		Upvalues:
			[1] = t_TradingHistory
			[2] = m_Library
	--]]
	for index1 = 1, 2 do
		local v14 = index1 == 1 and t_TradingHistory.Client.Pets or t_TradingHistory.Player.Pets;
		local UIGridLayout = v14:FindFirstChildOfClass("UIGridLayout");
		local UIPadding2 = v14:FindFirstChildOfClass("UIPadding");
		local v15 = m_Library.Functions.ResolutionScale();
		local v16 = v15 <= 0.5 and 2 or v15 <= 1.1 and 3 or 4;
		UIGridLayout.CellPadding = UDim2.new(0, 20, 0, 20);
		local v17 = (v14.AbsoluteSize.X - v14.ScrollBarThickness - UIPadding2.PaddingLeft.Offset - UIPadding2.PaddingRight.Offset) / v16 - UIGridLayout.CellPadding.X.Offset;
		local udim2 = UDim2.new(0, v17, 0, v17);
		UIGridLayout.CellSize = udim2;
		UIGridLayout:ApplyLayout();
		v14.CanvasSize = UDim2.new(0, UIGridLayout.AbsoluteContentSize.X, 0, UIGridLayout.AbsoluteContentSize.Y + 30);
	end
end
function GetTradeRating(p12) -- Line: 351
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v9 = m_Library.Save.Get(p12);
	if not v9 then
		return -1, "(Unrated)";
	end
	assert(v9);
	local v10 = 0;
	local v11 = 0;
	if v9.TradeHistory2 then
		local table3 = {};
		for index2 = #v9.TradeHistory2, 1, -1 do
			local v19 = v9.TradeHistory2[index2];
			if v19.or_ ~= nil and not table3[v19.u] then
				table3[v19.u] = true;
				if v19.or_ then
					v10 = v10 + 1;
				else
					v11 = v11 + 1;
				end
			end
		end
	end
	if v10 + v11 < m_Library.Shared.TradeRatingRequirement then
		return 0, "(Unrated)";
	end
	local v12 = math.round(v10 * 9 / (v10 + v11) * 10) / 10 + 1;
	return v12, string.format("%0.1f", v12) .. "/10 Rating";
end
function AnimateThumb(p13) -- Line: 395
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local TweenInfo_new_ret = TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out, 0);
	local Create_ret = m_Library.TweenService:Create(p13.Button, TweenInfo_new_ret, {Rotation = 360});
	Create_ret:Play();
	local TweenInfo_new_ret2 = TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, 0);
	local Create_ret2 = m_Library.TweenService:Create(p13.TextLabel, TweenInfo_new_ret2, {TextTransparency = 0});
	Create_ret2:Play();
	local TweenInfo_new_ret3 = TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, 0);
	local Create_ret3 = m_Library.TweenService:Create(p13.TextLabel.UIStroke, TweenInfo_new_ret3, {Transparency = 0});
	Create_ret3:Play();
	Create_ret2.Completed:Connect(function() -- Line: 408
		--[[
			Upvalues:
				[1] = m_Library
				[2] = p13
		--]]
		local TweenInfo_new_ret4 = TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out, 0);
		local Create_ret4 = m_Library.TweenService:Create(p13.TextLabel, TweenInfo_new_ret4, {TextTransparency = 1});
		Create_ret4:Play();
	end);
	Create_ret3.Completed:Connect(function() -- Line: 414
		--[[
			Upvalues:
				[1] = m_Library
				[2] = p13
		--]]
		local TweenInfo_new_ret5 = TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out, 0);
		local Create_ret5 = m_Library.TweenService:Create(p13.TextLabel.UIStroke, TweenInfo_new_ret5, {Transparency = 1});
		Create_ret5:Play();
	end);
end
t_TradingHistory.Bottom.Search.Query:GetPropertyChangedSignal("Text"):Connect(function() -- Line: 425
	UpdateHistory();
end);
t_TradingHistory.Close.Activated:Connect(function() -- Line: 430
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
			[3] = Random_new_ret
			[4] = t_TradingHistory
	--]]
	if not bool1 then
		bool1 = true;
		m_Library.Audio.Play("rbxassetid://8951380772", script, Random_new_ret:NextNumber(0.95, 1.05), 0.1);
		t_TradingHistory.Gui.Enabled = false;
		bool1 = false;
	end
end);
t_TradingHistory.Bottom.Back.Activated:Connect(function() -- Line: 440
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
	--]]
	if not bool1 then
		bool1 = true;
		m_Library.Signal.Fire("Open Trade List");
		bool1 = false;
	end
end);
t_TradingHistory.ViewBottom.Back.Activated:Connect(function() -- Line: 449
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
	--]]
	if not bool1 then
		bool1 = true;
		m_Library.Signal.Fire("Open Trading History");
		bool1 = false;
	end
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p14) -- Line: 461
	if p14 == "TradingHistory2" then
		UpdateHistory();
	end
end);
m_Library.Signal.Fired("Open Trading History"):Connect(function() -- Line: 468
	--[[
		Upvalues:
			[1] = str1
			[2] = t_TradingHistory
	--]]
	UpdateHistory();
	str1 = "";
	t_TradingHistory.TradingHistory.Bottom.Search.Query.Text = "";
	t_TradingHistory.TradingHistory.Visible = true;
	t_TradingHistory.TradeView.Visible = false;
	t_TradingHistory.Gui.Enabled = true;
end);
m_Library.GUIFX.ButtonFX(t_TradingHistory.Close);
m_Library.GUIFX.ButtonFX(t_TradingHistory.Bottom.Back);
m_Library.GUIFX.ButtonFX(t_TradingHistory.ViewBottom.Back);
m_Library.GUIFX.Tooltip(t_TradingHistory.TradingHistory.Rating, "Requires " .. m_Library.Shared.TradeRatingRequirement .. " ratings to be rated");
  -  Editar
  04:54:13.913    -  Editar
  04:54:13.913  ----- [2755] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Huge Pegasus Notification -----  -  Editar
  04:54:13.913  local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
m_Library.Network.Invoked("Huge Pegasus Notification").OnInvoke = function() -- Line: 5
	local WaitForChild_ret = game.Players.LocalPlayer.PlayerGui:WaitForChild("Huge Pegasus Notification", 9999);
	WaitForChild_ret.Enabled = true;
	WaitForChild_ret.Frame.Ok.Activated:Connect(function() -- Line: 8
		--[[
			Upvalues:
				[1] = WaitForChild_ret
		--]]
		WaitForChild_ret:Destroy();
	end);
end
  -  Editar
  04:54:13.913    -  Editar
  04:54:13.913  ----- [2756] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Huge Machine TESTING -----  -  Editar
  04:54:13.913  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
function Test() -- Line: 13
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v1 = m_Library.Save.Get();
	if not v1 then return end
	assert(v1);
	local t_Pets = v1.Pets;
	if not t_Pets then
		m_Library.Print("Failed to grab pets", true);
		return;
	end
	local v2 = 0;
	local table1 = {};
	local v3 = 0;
	for _, val1 in ipairs(t_Pets) do
		local t_uid = val1.uid;
		local v7 = m_Library.Directory.Pets[val1.id];
		local v8 = m_Library.Shared.ComputeHugeMachinePoints(val1, v7);
		if not v8 then continue end
		table.insert(table1, t_uid);
		v3 = v3 + v8;
		v2 = v2 + 1;
		if v2 == 50 then break end
	end
	print(v3);
	local v4, v5, v6 = m_Library.Network.Invoke("Attempt Use Huge Machine", table1);
	print(v4, v5, v6);
	if not v4 then
		m_Library.Message.New(v5 or "Unknown failure!");
		return;
	end
	if not v6 then
		m_Library.Message.New(v5 or "VERY Unknown failure!");
		return;
	end
	PromptHugeUse(v6);
end
function PromptHugeUse(p1) -- Line: 63
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.Shared.PromptPurchase(p1, true);
end
m_Library.Player.Player().Chatted:Connect(function(msg) -- Line: 68
	if msg and msg == "huge" then
		Test();
	end
end);
  -  Editar
  04:54:13.913    -  Editar
  04:54:13.914  ----- [2757] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Huge Machine -----  -  Editar
  04:54:13.914  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local ReplicatedStorage = game:GetService("ReplicatedStorage");
local MarketplaceService = game:GetService("MarketplaceService");
local Library = ReplicatedStorage:WaitForChild("Library");
local _ = require(Library:WaitForChild("Modules").Pets);
local t_HugeMachine = m_Library.GUI.HugeMachine;
local Random_new_ret = Random.new();
local u1 = m_Library.Shared.HugeMachineUseProducts[1];
local u2 = m_Library.Shared.HugeMachineUseProducts[2];
local u3 = m_Library.Shared.HugeMachineUseProducts[3];
local bool1 = false;
local table1 = {};
local u4 = 0;
local bool2 = false;
local u5 = {};
function UpdatePoints() -- Line: 37
	--[[
		Upvalues:
			[1] = u4
			[2] = table1
			[3] = m_Library
	--]]
	u4 = 0;
	for _, val1 in ipairs(table1) do
		local v16 = m_Library.PetCmds.Get(val1);
		if not val1 then continue end
		assert(v16);
		local v17 = m_Library.Directory.Pets[v16.id];
		if not v17 then continue end
		local v18 = m_Library.Shared.ComputeHugeMachinePoints(v16, v17);
		if not v18 then continue end
		assert(v18);
		u4 = u4 + v18;
	end
end
function Convert() -- Line: 69
	--[[
		Upvalues:
			[1] = u5
			[2] = m_Library
			[3] = t_HugeMachine
			[4] = bool2
	--]]
	if #u5 > 0 then
		m_Library.Variables.UsingMachine = true;
		t_HugeMachine.Gui.Enabled = false;
		bool2 = true;
		local v19, v20, v21 = m_Library.Network.Invoke("Attempt Use Huge Machine", u5);
		if not v19 then
			m_Library.Message.New(v20);
			bool2 = false;
		elseif v21 then
			m_Library.Shared.PromptPurchase(v21, true);
		else
			task.delay(3, function() -- Line: 85
				--[[
					Upvalues:
						[1] = bool2
				--]]
				bool2 = false;
			end);
		end
		m_Library.Variables.UsingMachine = false;
	end
end
function Select(p1) -- Line: 95
	--[[
		Upvalues:
			[1] = table1
			[2] = m_Library
			[3] = u4
			[4] = Random_new_ret
	--]]
	if table.find(table1, p1) then
		return false;
	end
	local v1 = m_Library.PetCmds.Get(p1);
	if not p1 then
		return false;
	end
	assert(v1);
	local v2 = m_Library.Directory.Pets[v1.id];
	if not v2 then
		return false;
	end
	assert(v2);
	local v3 = m_Library.Shared.ComputeHugeMachinePoints(v1, v2);
	if not v3 then
		return false;
	end
	assert(v3);
	local v4 = u4;
	local v5 = v4 + v3;
	local HugeMachineProduct = m_Library.Shared.GetHugeMachineProduct(v4);
	local HugeMachineProduct2 = m_Library.Shared.GetHugeMachineProduct(v5);
	if HugeMachineProduct then
		if not HugeMachineProduct2 then
			return false;
		end
		if HugeMachineProduct == HugeMachineProduct2 and not m_Library.Shared.GetHugeMachineProduct(v5, 0) then
			return false;
		end
	end
	table.insert(table1, p1);
	u4 = v5;
	m_Library.Audio.Play("rbxassetid://7139317934", script, Random_new_ret:NextNumber(0.95, 1.05), 0.75);
	Update();
	return true;
end
function Deselect(p2) -- Line: 154
	--[[
		Upvalues:
			[1] = table1
	--]]
	local table_find_ret = table.find(table1, p2);
	if table_find_ret then
		table.remove(table1, table_find_ret);
		Update();
		return true;
	end
	return false;
end
function GetInfo() -- Line: 167
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u4
	--]]
	return m_Library.Shared.GetHugeMachineProduct(u4);
end
function Update() -- Line: 172
	--[[
		Upvalues:
			[1] = t_HugeMachine
			[2] = m_Library
			[3] = table1
			[4] = u4
			[5] = u1
			[6] = u2
			[7] = u3
	--]]
	UpdatePoints();
	local function UpdatePets() -- Line: 176
		--[[
			Upvalues:
				[1] = t_HugeMachine
				[2] = m_Library
				[3] = table1
		--]]
		for _, child8 in ipairs(t_HugeMachine.Holder:GetChildren()) do
			if child8.ClassName ~= "TextButton" or child8.Name == "Template" then continue end
			local t_Name = child8.Name;
			local Attribute = child8:GetAttribute("DirId");
			local Attribute2 = child8:GetAttribute("Locked");
			if not Attribute then continue end
			local v32 = m_Library.Functions.SearchArray(table1, t_Name);
			child8.Equipped.Visible = v32;
			child8.BackgroundColor3 = v32 and Color3.fromRGB(69, 239, 69) or Color3.fromRGB(59, 177, 252);
			if Attribute2 then continue end
			child8.BackgroundColor3 = v32 and Color3.fromRGB(69, 239, 69) or Color3.fromRGB(59, 177, 252);
			child8.PetIcon.ImageTransparency = 0;
		end
	end
	local function UpdateSide() -- Line: 202
		--[[
			Upvalues:
				[1] = table1
				[2] = t_HugeMachine
				[3] = m_Library
				[4] = u4
				[5] = u1
				[6] = u2
				[7] = u3
		--]]
		local v31 = #table1 > 0;
		t_HugeMachine.Side.Notice.Visible = not v31;
		t_HugeMachine.Side.PriceFrame.Visible = not v31;
		t_HugeMachine.Side.FinalPriceFrame.Visible = v31;
		t_HugeMachine.Side.PointsFrame.Visible = v31;
		if not v31 then
			t_HugeMachine.Side.AddMoreNotice.Visible = false;
		end
		if m_Library.Variables.Console then
			t_HugeMachine.Side.Convert.ButtonKeybind.Visible = true;
		else
			t_HugeMachine.Side.Convert.ButtonKeybind.Visible = false;
		end
		if v31 then
			local Info = GetInfo();
			if Info then
				local t_price = Info.price;
				if t_price then
					t_HugeMachine.Side.FinalPriceFrame.Cost.Text = m_Library.Functions.Commas(t_price);
					t_HugeMachine.Side.FinalPriceFrame.Icon.Visible = true;
				else
					t_HugeMachine.Side.FinalPriceFrame.Cost.Text = "FREE";
					t_HugeMachine.Side.FinalPriceFrame.Icon.Visible = false;
				end
				t_HugeMachine.Side.FinalPriceFrame.Cost.Visible = true;
				t_HugeMachine.Side.AddMoreNotice.Visible = false;
			else
				t_HugeMachine.Side.FinalPriceFrame.Cost.Visible = false;
				t_HugeMachine.Side.FinalPriceFrame.Icon.Visible = false;
				t_HugeMachine.Side.AddMoreNotice.Visible = true;
			end
			t_HugeMachine.Side.PointsFrame.Tier1.Text = math.min(u4, u1.pointsMin) .. "/" .. u1.pointsMin .. " points";
			t_HugeMachine.Side.PointsFrame.Tier2.Text = math.min(u4, u2.pointsMin) .. "/" .. u2.pointsMin .. " points";
			t_HugeMachine.Side.PointsFrame.Tier3.Text = math.min(u4, u3.pointsMin) .. "/" .. u3.pointsMin .. " points";
			local v33 = u4 >= u1.pointsMin;
			local v34 = u4 >= u2.pointsMin;
			local v35 = u4 >= u3.pointsMin;
			local function UpdateText(p13, p14) -- Line: 252
				p13.TextColor3 = p14 and Color3.fromRGB(92, 255, 65) or Color3.fromRGB(28, 69, 82);
				p13.TextStrokeColor3 = p14 and Color3.fromRGB(22, 60, 15) or Color3.fromRGB(0, 0, 0);
				p13.TextStrokeTransparency = p14 and 0 or 1;
			end
			UpdateText(t_HugeMachine.Side.PointsFrame.Tier1, v33);
			UpdateText(t_HugeMachine.Side.PointsFrame.Tier2, v34);
			UpdateText(t_HugeMachine.Side.PointsFrame.Tier3, v35);
		end
	end
	t_HugeMachine.Side.Convert.ImageColor3 = u4 >= u1.pointsMin and Color3.new(1, 1, 1) or Color3.new(0.5, 0.5, 0.5);
	UpdatePets();
	UpdateSide();
	Scaling();
end
function PetOrder(p3, p4) -- Line: 274
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local t_id = p3.id;
	local t_id2 = p4.id;
	local v8 = m_Library.Directory.Pets[t_id];
	local v9 = m_Library.Directory.Pets[t_id2];
	local v10 = m_Library.Shared.ComputeHugeMachinePoints(p3, v8) or 0;
	local v11 = m_Library.Shared.ComputeHugeMachinePoints(p4, v9) or 0;
	if v11 < v10 then
		return -1;
	end
	if v10 < v11 then
		return 1;
	end
	return m_Library.Shared.PetOrderBest(p3, p4);
end
function Setup() -- Line: 291
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_HugeMachine
			[3] = bool1
			[4] = table1
	--]]
	local v12 = m_Library.Save.Get();
	if not v12 then return end
	assert(v12);
	local table2 = {};
	for _, val2 in ipairs(v12.Pets) do
		local v22 = m_Library.Directory.Pets[val2.id];
		if not v22 then continue end
		assert(v22);
		local v23 = m_Library.Shared.ComputeHugeMachinePoints(val2, v22);
		if not v23 then continue end
		table.insert(table2, val2);
	end
	table.sort(table2, function(p11, p12) -- Line: 320
		return PetOrder(p11, p12) < 0;
	end);
	for key3, val3 in ipairs(table2) do
		local t_uid = val3.uid;
		local Clone_ret = t_HugeMachine.Pets.Holder.Template:Clone();
		m_Library.PetUI.Create(Clone_ret, t_uid);
		local v24 = m_Library.Directory.Pets[val3.id];
		local v25 = m_Library.Shared.ComputeHugeMachinePoints(val3, v24);
		Clone_ret.Stars.Visible = false;
		Clone_ret.Points.Text = tostring(v25) .. "pt";
		Clone_ret.Visible = true;
		Clone_ret.LayoutOrder = key3;
		Clone_ret:SetAttribute("DirId", val3.id);
		Clone_ret.Parent = t_HugeMachine.Holder;
		Clone_ret.Activated:Connect(function() -- Line: 345
			--[[
				Upvalues:
					[1] = bool1
					[2] = m_Library
					[3] = t_uid
					[4] = val3
					[5] = table1
			--]]
			if not bool1 then
				bool1 = true;
				local v38 = m_Library.Signal.Invoke("Is Trading Booth Pet", t_uid);
				if val3.l then
					m_Library.Message.New("This pet is locked! Unlock it before you can use it in the Huge Machine!");
				elseif v38 then
					m_Library.Message.New("This pet is currently in your trading booth! Remove it before you can use it in the Huge Machine!");
				elseif not m_Library.Functions.SearchArray(table1, t_uid) then
					Select(t_uid);
				else
					Deselect(t_uid);
				end
				bool1 = false;
			end
		end);
		m_Library.GUIFX.ButtonFX(Clone_ret);
	end
	Update();
	Scaling();
end
function Scaling() -- Line: 374
	--[[
		Upvalues:
			[1] = t_HugeMachine
			[2] = m_Library
	--]]
	local t_Holder = t_HugeMachine.Pets.Holder;
	local UIGridLayout = t_Holder:FindFirstChildOfClass("UIGridLayout");
	local UIPadding = t_Holder:FindFirstChildOfClass("UIPadding");
	local v13 = m_Library.Functions.ResolutionScale();
	local v14 = (t_Holder.AbsoluteSize.X - t_Holder.ScrollBarThickness - UIPadding.PaddingLeft.Offset - UIPadding.PaddingRight.Offset) / (v13 <= 0.5 and 4 or v13 <= 1.1 and 5 or 6) - UIGridLayout.CellPadding.X.Offset;
	local udim2 = UDim2.new(0, v14, 0, v14);
	UIGridLayout.CellSize = udim2;
	UIGridLayout:ApplyLayout();
	t_Holder.CanvasSize = UDim2.new(0, UIGridLayout.AbsoluteContentSize.X, 0, UIGridLayout.AbsoluteContentSize.Y + 30);
end
function Clear() -- Line: 398
	--[[
		Upvalues:
			[1] = table1
			[2] = u4
			[3] = t_HugeMachine
	--]]
	table1 = {};
	u4 = 0;
	for _, child4 in ipairs(t_HugeMachine.Holder:GetChildren()) do
		if child4.ClassName ~= "TextButton" or child4.Name == "Template" then continue end
		child4:Destroy();
	end
end
local bool3 = false;
local table3 = {};
local u6 = nil;
local u7 = nil;
local u8 = nil;
function updateInventoryDrag(p5, p6, p7, p8) -- Line: 413
	--[[
		Upvalues:
			[1] = t_HugeMachine
			[2] = m_Library
			[3] = bool3
			[4] = table3
			[5] = table1
	--]]
	if not t_HugeMachine.Gui.Enabled then return end
	if m_Library.Variables.MessageOpen then return end
	if not m_Library.FFlags.Get(m_Library.FFlags.Keys.DragDelete) then return end
	if bool3 then return end
	bool3 = true;
	local t_Holder2 = t_HugeMachine.Pets.Holder;
	local v15 = t_Holder2.AbsolutePosition.Y + t_Holder2.AbsoluteSize.Y;
	local t_Y = t_Holder2.AbsolutePosition.Y;
	if p6 == p8 then
		p8 = p8 + 1;
	end
	local vec2 = Vector2.new(p5, p6);
	local vec2_2 = Vector2.new(p7, p8);
	if (vec2 - vec2_2).magnitude < 20 then
		bool3 = false;
		return;
	end
	local table4 = {};
	for _, child5 in ipairs(t_Holder2:GetChildren()) do
		if not child5:isA("TextButton") then continue end
		table.insert(table4, child5);
	end
	local num1 = nil;
	for _, val6 in ipairs(table3) do
		local t_Name3 = val6.Name;
		local _ = m_Library.PetCmds.Get(t_Name3);
		local t_AbsolutePosition = val6.AbsolutePosition;
		local v26 = t_AbsolutePosition.X or 0;
		local v27 = t_AbsolutePosition.Y or 0;
		if v15 < v27 or v27 < t_Y then continue end
		local t_AbsoluteSize = val6.AbsoluteSize;
		local vec2_5 = Vector2.new(v26, v27);
		local vec2_6 = Vector2.new(v26 + t_AbsoluteSize.X, v27 + t_AbsoluteSize.Y);
		if m_Library.Functions.CheckRectangleIntersection(vec2, vec2_2, vec2_5, vec2_6) then continue end
		if num1 == nil then
			num1 = 1;
		end
		if num1 == 1 then
			for _, val9 in ipairs(table1) do
				if val9 ~= t_Name3 then continue end
				Deselect(t_Name3);
				break;
			end
		end
		table.remove(table3, table.find(table3, val6));
	end
	for _, val7 in ipairs(table4) do
		if table.find(table3, val7) or not val7:GetAttribute("isVisible") or not val7.Visible then continue end
		local t_X = val7.AbsolutePosition.X;
		local t_Y2 = val7.AbsolutePosition.Y;
		local vec2_3 = Vector2.new(t_X, t_Y2);
		local vec2_4 = Vector2.new(t_X + val7.AbsoluteSize.X, t_Y2 + val7.AbsoluteSize.Y);
		local bool4 = false;
		if not m_Library.Functions.CheckRectangleIntersection(vec2, vec2_2, vec2_3, vec2_4) or v15 < t_Y2 + val7.AbsoluteSize.Y / 2 or t_Y2 + val7.AbsoluteSize.Y / 2 < t_Y then continue end
		local t_Name2 = val7.Name;
		local v28, _ = m_Library.PetCmds.Get(t_Name2);
		if not v28 then
			warn("Couldn't lookup petdata!");
			continue;
		end
		assert(v28);
		if not m_Library.Functions.SearchArray(table1, t_Name2) then
			if num1 == nil then
				num1 = 0;
			end
			if num1 == 0 then
				local v37 = m_Library.Signal.Invoke("Is Trading Booth Pet", t_Name2);
				if v28.l or v37 or m_Library.Functions.SearchArray(table1, t_Name2) then continue end
				Select(t_Name2);
				bool4 = true;
			end
		end
		if not bool4 then continue end
		table.insert(table3, val7);
	end
	bool3 = false;
end
function newDrag() -- Line: 559
	--[[
		Upvalues:
			[1] = u7
			[2] = u8
			[3] = u6
			[4] = m_Library
	--]]
	assert(u7 and u8);
	local Mouse = game.Players.LocalPlayer:GetMouse();
	local t_X2 = Mouse.X;
	local t_Y3 = Mouse.Y;
	u6 = Instance.new("ScreenGui");
	assert(u6);
	u6.DisplayOrder = 9999;
	u6.Name = "DragUI";
	local Frame = Instance.new("Frame");
	Frame.BackgroundColor3 = Color3.fromRGB(59, 177, 252);
	Frame.Parent = u6;
	u6.Parent = m_Library.LocalPlayer.PlayerGui;
	Frame.Position = UDim2.new(0, u7, 0, u8);
	Frame.Size = UDim2.new(0, t_X2 - u7, 0, t_Y3 - u8);
	Frame.ZIndex = 9999;
	Frame.BackgroundTransparency = 0.5;
end
function updateDrag() -- Line: 579
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u7
			[3] = u8
	--]]
	local DragUI = m_Library.LocalPlayer.PlayerGui:FindFirstChild("DragUI");
	if not DragUI then return end
	local Frame2 = DragUI:FindFirstChild("Frame");
	if not Frame2 then return end
	assert(u7 and u8);
	local Mouse2 = game.Players.LocalPlayer:GetMouse();
	local t_X3 = Mouse2.X;
	local t_Y4 = Mouse2.Y;
	Frame2.Position = UDim2.new(0, u7, 0, u8);
	Frame2.Size = UDim2.new(0, t_X3 - u7, 0, t_Y4 - u8);
end
m_Library.Signal.Fired("Click Drag Complete"):Connect(function() -- Line: 599
	--[[
		Upvalues:
			[1] = table3
	--]]
	table3 = {};
end);
m_Library.Signal.Fired("Click Drag Update"):Connect(updateInventoryDrag);
m_Library.UserInputService.InputBegan:Connect(function(input, gameProcessedEvent) -- Line: 605
	--[[
		Upvalues:
			[1] = t_HugeMachine
			[2] = m_Library
			[3] = u7
			[4] = u8
	--]]
	if not t_HugeMachine.Gui.Enabled then return end
	if m_Library.Variables.MessageOpen then return end
	if not m_Library.FFlags.Get(m_Library.FFlags.Keys.DragDelete) then return end
	if not m_Library.FFlags.Get(m_Library.FFlags.Keys.BankDragDelete) then return end
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		local Mouse3 = game.Players.LocalPlayer:GetMouse();
		u7 = Mouse3.X;
		u8 = Mouse3.Y;
		m_Library.Signal.Fire("Click Drag Start", u7, u8);
	end
end);
m_Library.UserInputService.InputEnded:Connect(function(input2, gameProcessedEvent2) -- Line: 632
	--[[
		Upvalues:
			[1] = u7
			[2] = u8
			[3] = m_Library
			[4] = u6
	--]]
	if input2.UserInputType == Enum.UserInputType.MouseButton1 then
		local Mouse4 = game.Players.LocalPlayer:GetMouse();
		local t_X4 = Mouse4.X;
		local t_Y5 = Mouse4.Y;
		if u7 and u8 then
			m_Library.Signal.Fire("Click Drag Complete", u7, u8, t_X4, t_Y5);
			if u6 then
				u6:Destroy();
				u6 = nil;
			end
			u7 = nil;
			u8 = nil;
		end
	end
end);
m_Library.UserInputService.InputChanged:Connect(function(input3, gameProcessedEvent3) -- Line: 650
	--[[
		Upvalues:
			[1] = u7
			[2] = u8
			[3] = u6
			[4] = m_Library
	--]]
	if input3.UserInputType == Enum.UserInputType.MouseMovement and u7 and u8 then
		if not u6 then
			newDrag();
			return;
		end
		updateDrag();
		local Mouse5 = game.Players.LocalPlayer:GetMouse();
		local t_X5 = Mouse5.X;
		local t_Y6 = Mouse5.Y;
		m_Library.Signal.Fire("Click Drag Update", u7, u8, t_X5, t_Y6);
	end
end);
MarketplaceService.PromptProductPurchaseFinished:Connect(function() -- Line: 673
	--[[
		Upvalues:
			[1] = bool2
	--]]
	bool2 = false;
end);
t_HugeMachine.Side.Convert.Activated:Connect(function() -- Line: 678
	--[[
		Upvalues:
			[1] = u4
			[2] = u1
			[3] = bool1
			[4] = u5
			[5] = m_Library
			[6] = table1
	--]]
	if u4 < u1.pointsMin then return end
	if not bool1 then
		bool1 = true;
		u5 = m_Library.Functions.DeepCopyUnsafe(table1);
		local v29 = m_Library.Message.New("Are you sure you want to use " .. #u5 .. " exclusive pets to get a Huge Machine Egg?", true);
		if v29 then
			Convert();
		end
		bool1 = false;
	end
end);
t_HugeMachine.Close.Activated:Connect(function() -- Line: 702
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_HugeMachine
	--]]
	if not bool1 then
		bool1 = true;
		t_HugeMachine.Gui.Enabled = false;
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_HugeMachine.Close);
m_Library.GUIFX.ButtonFX(t_HugeMachine.Side.Convert);
m_Library.Signal.Fired("Window Closed"):Connect(function(p9) -- Line: 718
	--[[
		Upvalues:
			[1] = bool2
			[2] = t_HugeMachine
	--]]
	if bool2 then return end
	if p9 == t_HugeMachine.Gui then
		Clear();
	end
end);
m_Library.Signal.Fired("Window Opened"):Connect(function(p10) -- Line: 729
	--[[
		Upvalues:
			[1] = t_HugeMachine
			[2] = bool2
			[3] = m_Library
	--]]
	if p10 == t_HugeMachine.Gui then
		if bool2 then
			t_HugeMachine.Gui.Enabled = false;
			return;
		end
		local v30 = m_Library.Save.Get();
		if not v30 then return end
		assert(v30);
		if not v30.OwnsHugeMachine then
			m_Library.Message.New("You don't own this machine! Buy it in the Town area!");
			return;
		end
		Clear();
		Setup();
		if t_HugeMachine.Gui.Enabled and m_Library.Variables.Console then
			m_Library.GuiService.SelectedObject = m_Library.LocalPlayer.PlayerGui:FindFirstChild("HugeMachine"):FindFirstChild("Frame"):FindFirstChild("Pets"):FindFirstChild("Holder");
		end
	end
end);
m_Library.Signal.Fired("Resolution Changed"):Connect(function() -- Line: 757
	--[[
		Upvalues:
			[1] = t_HugeMachine
	--]]
	if t_HugeMachine.Gui.Enabled then
		task.defer(function() -- Line: 759
			Scaling();
		end);
	end
end);
  -  Editar
  04:54:13.915    -  Editar
  04:54:13.915  ----- [2758] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Dark Matter Machine -----  -  Editar
  04:54:13.916  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_DarkMatter = m_Library.GUI.DarkMatter;
local t_DarkMatterMachineSettings = m_Library.Shared.DarkMatterMachineSettings;
local u1 = nil;
local os_clock_ret = nil;
local Random_new_ret = Random.new();
local bool1 = false;
local table1 = {};
local bool2 = false;
local bool3 = false;
local u2 = {};
local u3 = false;
local table2 = nil;
function PetsConvert() -- Line: 27
	--[[
		Upvalues:
			[1] = u2
			[2] = m_Library
			[3] = table2
	--]]
	if #u2 > 0 then
		if #u2 > 0 then
			local v24 = m_Library.PetCmds.Get(u2[1]);
			if not v24 then
				table2 = nil;
			else
				table2 = {
					PetId = v24.id,
					Hardcore = v24.hc,
					Amount = #u2
				};
			end
		end
		local v15, v16 = m_Library.Network.Invoke("Convert To Dark Matter", u2);
		if v15 then
			m_Library.Audio.Play("rbxassetid://7009851850", script);
			OpenTab("Queue");
			return;
		end
		m_Library.Message.New(v16 or "Something went wrong. Try again!");
	end
end
function PetsSelect(p1) -- Line: 59
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u3
			[3] = t_DarkMatterMachineSettings
			[4] = table1
			[5] = Random_new_ret
	--]]
	local v1 = m_Library.PetCmds.Get(p1);
	if not p1 then return end
	if #table1 >= #(u3 and t_DarkMatterMachineSettings.Hardcore or t_DarkMatterMachineSettings.Normal) then return end
	for _, val1 in ipairs(table1) do
		if m_Library.PetCmds.Get(val1).id == v1.id then continue end
		return;
	end
	m_Library.Audio.Play("rbxassetid://7139317934", script, Random_new_ret:NextNumber(0.95, 1.05), 0.75);
	table.insert(table1, p1);
	u3 = v1.hc or nil;
	PetsUpdate();
end
function PetsDeselect(p2) -- Line: 91
	--[[
		Upvalues:
			[1] = table1
			[2] = m_Library
			[3] = Random_new_ret
			[4] = u3
	--]]
	for key2, val2 in ipairs(table1) do
		if val2 ~= p2 then continue end
		m_Library.Audio.Play("rbxassetid://7139317909", script, Random_new_ret:NextNumber(0.95, 1.05), 0.75);
		table.remove(table1, key2);
		break;
	end
	if #table1 <= 0 then
		u3 = false;
	end
	PetsUpdate();
end
function PetsUpdate() -- Line: 110
	--[[
		Upvalues:
			[1] = table1
			[2] = m_Library
			[3] = t_DarkMatter
			[4] = u3
			[5] = t_DarkMatterMachineSettings
	--]]
	local function UpdatePets() -- Line: 112
		--[[
			Upvalues:
				[1] = table1
				[2] = m_Library
				[3] = t_DarkMatter
		--]]
		local v22 = table1[1] and m_Library.PetCmds.Get(table1[1]) or nil;
		for _, child8 in ipairs(t_DarkMatter.Pets.Holder:GetChildren()) do
			if child8.ClassName ~= "TextButton" then continue end
			local t_Name = child8.Name;
			local Attribute = child8:GetAttribute("DirId");
			local Attribute2 = child8:GetAttribute("Locked");
			local Attribute3 = child8:GetAttribute("Hardcore");
			if not Attribute then continue end
			local v25 = not v22 or Attribute == v22.id and Attribute3 == v22.hc or false;
			child8.Visible = v25;
			local v26 = m_Library.Functions.SearchArray(table1, t_Name);
			child8.Equipped.Visible = v26;
			child8.BackgroundColor3 = v26 and Color3.fromRGB(69, 239, 69) or Color3.fromRGB(59, 177, 252);
			if not v25 or Attribute2 then continue end
			child8.BackgroundColor3 = v26 and Color3.fromRGB(69, 239, 69) or Color3.fromRGB(59, 177, 252);
			child8.PetIcon.ImageTransparency = 0;
		end
	end
	local function UpdateSide() -- Line: 144
		--[[
			Upvalues:
				[1] = t_DarkMatter
				[2] = table1
				[3] = m_Library
				[4] = u3
				[5] = t_DarkMatterMachineSettings
		--]]
		local t_Side = t_DarkMatter.Pets.Side;
		local v23 = #table1 > 0;
		local CanRepeat_ret = CanRepeat();
		t_Side.Ready.ImageColor3 = v23 and Color3.new(1, 1, 1) or Color3.new(0.5, 0.5, 0.5);
		t_Side.TimerFrame.Visible = v23;
		t_Side.TimerTitle.Visible = v23;
		t_Side.Notice.Visible = not v23;
		if m_Library.Variables.Console then
			t_Side.Ready.ButtonKeybind.Visible = true;
		else
			t_Side.Ready.ButtonKeybind.Visible = false;
		end
		if v23 then
			local v27 = u3 and t_DarkMatterMachineSettings.Hardcore or t_DarkMatterMachineSettings.Normal;
			local v28 = v27[math.min(#table1, #v27)];
			local t_waitTime = v28.waitTime;
			local t_cost = v28.cost;
			t_Side.CostFrame.Cost.Text = m_Library.Functions.Commas(t_cost);
			t_Side.TimerFrame.Time.Text = m_Library.Functions.TimeString(t_waitTime);
		else
			t_Side.CostFrame.Cost.Text = "0";
		end
		if v23 then
			t_DarkMatter.Side.Ready.Visible = true;
			t_DarkMatter.Side.Repeat.Visible = false;
			return;
		end
		if CanRepeat_ret then
			t_DarkMatter.Side.Ready.Visible = false;
			t_DarkMatter.Side.Repeat.Visible = true;
			return;
		end
		t_DarkMatter.Side.Ready.Visible = true;
		t_DarkMatter.Side.Repeat.Visible = false;
	end
	UpdatePets();
	UpdateSide();
	PetsScaling();
end
function PetsSetup() -- Line: 191
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_DarkMatter
			[3] = bool1
			[4] = table1
	--]]
	local v4 = m_Library.Save.Get();
	if not v4 then return end
	local v5 = 0;
	local v6 = m_Library.Shared.SortPets(v4, table.clone(v4.Pets));
	for key3, val3 in ipairs(v6) do
		local t_uid = val3.uid;
		local _ = val3.s;
		local t_g = val3.g;
		local t_r = val3.r;
		local t_dm = val3.dm;
		local v17 = m_Library.Directory.Pets[val3.id];
		local _ = v17.rarity;
		if t_g or not t_r or t_dm or v17.isPremium or v17.rarity == "Event" or v17.rarity == "Exclusive" or v17.isGift then continue end
		local Clone_ret = m_Library.Assets.UI.Inventory.Pet:Clone();
		m_Library.PetUI.Create(Clone_ret, t_uid);
		Clone_ret.LayoutOrder = key3;
		Clone_ret:SetAttribute("DirId", val3.id);
		Clone_ret:SetAttribute("Hardcore", val3.hc);
		Clone_ret.Parent = t_DarkMatter.Pets.Holder;
		Clone_ret.Activated:Connect(function() -- Line: 223
			--[[
				Upvalues:
					[1] = bool1
					[2] = m_Library
					[3] = t_uid
					[4] = val3
					[5] = table1
			--]]
			if not bool1 then
				bool1 = true;
				local v31 = m_Library.Signal.Invoke("Is Trading Booth Pet", t_uid);
				if val3.l then
					m_Library.Message.New("This pet is locked! Unlock it before you can convert it to Dark Matter!");
				elseif v31 then
					m_Library.Message.New("This pet is currently in your trading booth! Remove it before you can convert it to Dark Matter!");
				elseif not m_Library.Functions.SearchArray(table1, t_uid) then
					PetsSelect(t_uid);
				else
					PetsDeselect(t_uid);
				end
				bool1 = false;
			end
		end);
		m_Library.GUIFX.ButtonFX(Clone_ret);
		v5 = v5 + 1;
	end
	t_DarkMatter.Pets.NoPets.Visible = v5 <= 0;
	PetsUpdate();
	PetsScaling();
end
function PetsScaling() -- Line: 255
	--[[
		Upvalues:
			[1] = t_DarkMatter
			[2] = m_Library
	--]]
	local t_Holder = t_DarkMatter.Pets.Holder;
	local UIGridLayout = t_Holder:FindFirstChildOfClass("UIGridLayout");
	local UIPadding = t_Holder:FindFirstChildOfClass("UIPadding");
	local v7 = m_Library.Functions.ResolutionScale();
	local v8 = (t_Holder.AbsoluteSize.X - t_Holder.ScrollBarThickness - UIPadding.PaddingLeft.Offset - UIPadding.PaddingRight.Offset) / (v7 <= 0.5 and 4 or v7 <= 1.1 and 5 or 6) - UIGridLayout.CellPadding.X.Offset;
	local udim2 = UDim2.new(0, v8, 0, v8);
	UIGridLayout.CellSize = udim2;
	UIGridLayout:ApplyLayout();
	t_Holder.CanvasSize = UDim2.new(0, UIGridLayout.AbsoluteContentSize.X, 0, UIGridLayout.AbsoluteContentSize.Y + 30);
end
function PetsClear() -- Line: 279
	--[[
		Upvalues:
			[1] = table1
			[2] = u3
			[3] = t_DarkMatter
	--]]
	table1 = {};
	u3 = false;
	for _, child4 in ipairs(t_DarkMatter.Pets.Holder:GetChildren()) do
		if child4.ClassName ~= "TextButton" then continue end
		child4:Destroy();
	end
end
function CanRepeat() -- Line: 291
	--[[
		Upvalues:
			[1] = table2
			[2] = m_Library
	--]]
	if not table2 then
		return false;
	end
	local v9 = m_Library.Save.Get();
	if not v9 then
		return false;
	end
	local v10 = m_Library.Shared.SortPets(v9, table.clone(v9.Pets));
	local table3 = {};
	for _, val5 in ipairs(v10) do
		local t_id = val5.id;
		local v18 = m_Library.Directory.Pets[val5.id];
		local t_r2 = val5.r;
		local t_dm2 = val5.dm;
		local t_hc = val5.hc;
		local t_rarity = v18.rarity;
		if v18.isPremium or not t_r2 or t_dm2 or t_rarity == "Event" or t_rarity == "Exclusive" or v18.isGift or val5.l or t_id ~= table2.PetId or t_hc ~= table2.Hardcore then continue end
		table.insert(table3, val5.uid);
		if #table3 ~= table2.Amount then continue end
		table2.RetryPets = table3;
		return true;
	end
	return false;
end
function RedeemQueuePet(p3) -- Line: 337
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v11, v12 = m_Library.Network.Invoke("Redeem Dark Matter Pet", p3);
	if v11 then return end
	m_Library.Message.New(v12 or "Something went wrong. Try again!");
end
function PromptDarkMatterSkip(p4) -- Line: 347
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v13, v14 = m_Library.Network.Invoke("Prompt Dark Matter Skip", p4);
	if v13 and v14 then
		m_Library.Shared.PromptPurchase(v14, true);
		return;
	end
	m_Library.Message.New("Something went wrong. Try again later!");
end
function UpdateQueue() -- Line: 357
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_DarkMatter
			[3] = u1
			[4] = os_clock_ret
			[5] = bool3
			[6] = bool1
	--]]
	local u4 = m_Library.Save.Get();
	if not u4 then return end
	local t_Holder2 = t_DarkMatter.Queue.Holder;
	for key6, val6 in pairs(u4.DarkMatterQueue) do
		local u5 = t_Holder2:FindFirstChild(key6);
		if u5 then continue end
		local t_petId = val6.petId;
		local t_readyTime = val6.readyTime;
		local v19 = m_Library.Directory.Pets[t_petId];
		local function UpdateTimer() -- Line: 375
			--[[
				Upvalues:
					[1] = val6
					[2] = u4
					[3] = key6
					[4] = u1
					[5] = os_clock_ret
					[6] = m_Library
					[7] = t_readyTime
					[8] = u5
					[9] = bool3
			--]]
			val6 = u4.DarkMatterQueue[key6];
			if not val6 then return end
			if not u1 or not os_clock_ret then
				local v32 = m_Library.Network.Invoke("Get OSTime");
				os_clock_ret = os.clock();
				u1 = v32;
			end
			t_readyTime = val6.readyTime;
			local v29 = t_readyTime - (u1 + (os.clock() - os_clock_ret));
			local v30 = v29 <= 1;
			u5.TimeLeft.Visible = not v30;
			u5.Claim.Visible = v30;
			u5.Skip.Visible = not v30;
			u5.TimeDesc.Visible = not v30;
			u5.SkipDesc.Visible = not v30;
			u5.ClaimDesc.Visible = v30;
			u5.PetIcon.UIGradient.Enabled = not v30;
			if val6.hardcore then
				u5.PetIcon.ImageColor3 = Color3.fromRGB(42, 252, 255);
			end
			if not v30 then
				u5.TimeLeft.Text = m_Library.Functions.TimeString(v29);
			else
				bool3 = true;
			end
			local DMSkipProduct = m_Library.Shared.GetDMSkipProduct(v29);
			u5.Skip.Robux.Text = m_Library.Functions.Commas(m_Library.Functions.GetPrice(DMSkipProduct, true));
		end
		u5 = m_Library.Assets.UI.DarkMatter.QueuePet:Clone();
		u5.Name = key6;
		u5.PetIcon.Image = v19.darkMatterThumbnail;
		u5:SetAttribute("SlotId", key6);
		u5.Parent = t_Holder2;
		UpdateTimer();
		if not u5:FindFirstChild("Claim") then return end
		m_Library.GUIFX.ButtonFX(u5.Claim);
		u5.Claim.Activated:Connect(function() -- Line: 425
			--[[
				Upvalues:
					[1] = bool1
					[2] = key6
			--]]
			if not bool1 then
				bool1 = true;
				RedeemQueuePet(key6);
				bool1 = false;
			end
		end);
		if not u5:FindFirstChild("Skip") then return end
		m_Library.GUIFX.ButtonFX(u5.Skip);
		u5.Skip.Activated:Connect(function() -- Line: 437
			--[[
				Upvalues:
					[1] = bool1
					[2] = key6
			--]]
			if not bool1 then
				bool1 = true;
				PromptDarkMatterSkip(key6);
				bool1 = false;
			end
		end);
		local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 446
			--[[
				Upvalues:
					[1] = u5
					[2] = t_DarkMatter
					[3] = UpdateTimer
					[4] = m_Library
			--]]
			while u5 and u5.Parent do
				if t_DarkMatter.Gui.Enabled then
					UpdateTimer();
				end
				m_Library.Heartbeat(5);
			end
		end);
		coroutine_wrap_ret();
	end
	for _, child7 in ipairs(t_Holder2:GetChildren()) do
		local Attribute4 = child7:GetAttribute("SlotId");
		if not Attribute4 or u4.DarkMatterQueue[Attribute4] then continue end
		child7:Destroy();
	end
	t_Holder2.Parent.NoPets.Visible = m_Library.Functions.DictionaryLength(u4.DarkMatterQueue) <= 0;
	QueueScrolling();
end
function QueueScrolling() -- Line: 474
	--[[
		Upvalues:
			[1] = t_DarkMatter
	--]]
	local t_Holder3 = t_DarkMatter.Queue.Holder;
	local UIPadding2 = t_Holder3:FindFirstChildOfClass("UIPadding");
	local UIListLayout = t_Holder3:FindFirstChildOfClass("UIListLayout");
	UIListLayout:ApplyLayout();
	t_Holder3.CanvasSize = UDim2.new(0, UIListLayout.AbsoluteContentSize.X + UIPadding2.PaddingLeft.Offset + UIPadding2.PaddingRight.Offset, 0, 0);
end
function UpdateCategories() -- Line: 482
	--[[
		Upvalues:
			[1] = t_DarkMatter
			[2] = bool3
	--]]
	t_DarkMatter.Categories.ViewPets.Frame.PetReady.Visible = bool3;
	bool3 = false;
end
function OpenTab(p5) -- Line: 491
	--[[
		Upvalues:
			[1] = t_DarkMatter
	--]]
	t_DarkMatter.Categories.Visible = false;
	if p5 == "Pets" then
		t_DarkMatter.Pets.Visible = true;
		t_DarkMatter.Queue.Visible = false;
		PetsSetup();
		return;
	end
	t_DarkMatter.Pets.Visible = false;
	t_DarkMatter.Queue.Visible = true;
	PetsClear();
	UpdateQueue();
end
m_Library.GUIFX.ButtonFX(t_DarkMatter.Side.Repeat);
t_DarkMatter.Side.Repeat.Activated:Connect(function() -- Line: 508
	--[[
		Upvalues:
			[1] = bool1
			[2] = bool2
			[3] = table2
	--]]
	if not bool1 then
		bool1 = true;
		bool2 = true;
		if table2 and table2.RetryPets then
			for _, val9 in ipairs(table2.RetryPets) do
				PetsSelect(val9);
			end
		end
		bool2 = false;
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_DarkMatter.Close);
t_DarkMatter.Close.Activated:Connect(function() -- Line: 526
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_DarkMatter
	--]]
	if not bool1 then
		bool1 = true;
		t_DarkMatter.Gui.Enabled = false;
		bool1 = false;
	end
end);
local t_Button = t_DarkMatter.Categories.MakePets.Frame.Button;
m_Library.GUIFX.ButtonFX(t_Button);
t_Button.Activated:Connect(function() -- Line: 537
	--[[
		Upvalues:
			[1] = bool1
	--]]
	if not bool1 then
		bool1 = true;
		OpenTab("Pets");
		bool1 = false;
	end
end);
local t_Button2 = t_DarkMatter.Categories.ViewPets.Frame.Button;
m_Library.GUIFX.ButtonFX(t_Button2);
t_Button2.Activated:Connect(function() -- Line: 548
	--[[
		Upvalues:
			[1] = bool1
	--]]
	if not bool1 then
		bool1 = true;
		OpenTab("Queue");
		bool1 = false;
	end
end);
m_Library.GUIFX.ButtonFX(t_DarkMatter.Pets.Side.Ready);
t_DarkMatter.Pets.Side.Ready.Activated:Connect(function() -- Line: 558
	--[[
		Upvalues:
			[1] = bool1
			[2] = bool2
			[3] = u2
			[4] = m_Library
			[5] = table1
	--]]
	if not bool1 then
		bool1 = true;
		bool2 = true;
		u2 = m_Library.Functions.DeepCopyUnsafe(table1);
		local v20 = m_Library.Message.New("Are you sure?", true);
		if v20 then
			PetsConvert();
		end
		bool2 = false;
		bool1 = false;
	end
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p6) -- Line: 581
	if p6 == "DarkMatterQueue" or p6 == "DarkMatterSlots" then
		UpdateQueue();
	end
end);
m_Library.Signal.Fired("Window Opened"):Connect(function(p7) -- Line: 588
	--[[
		Upvalues:
			[1] = t_DarkMatter
			[2] = m_Library
	--]]
	if p7 == t_DarkMatter.Gui then
		PetsClear();
		t_DarkMatter.Categories.Visible = true;
		t_DarkMatter.Pets.Visible = false;
		t_DarkMatter.Queue.Visible = false;
		if t_DarkMatter.Gui.Enabled and m_Library.Variables.Console then
			print("Set selected obj");
			m_Library.GuiService.SelectedObject = m_Library.LocalPlayer.PlayerGui:FindFirstChild("DarkMatter"):FindFirstChild("Frame"):FindFirstChild("Categories"):FindFirstChild("MakePets"):FindFirstChild("Frame"):FindFirstChild("Button");
		end
		m_Library.Audio.Play("rbxassetid://7495293012", script, 1, 0.4);
	end
end);
m_Library.Signal.Fired("Window Closed"):Connect(function(p8) -- Line: 606
	--[[
		Upvalues:
			[1] = bool2
			[2] = t_DarkMatter
	--]]
	if bool2 then return end
	if p8 == t_DarkMatter.Gui then
		PetsClear();
	end
end);
m_Library.Signal.Fired("Resolution Changed"):Connect(function() -- Line: 617
	--[[
		Upvalues:
			[1] = t_DarkMatter
	--]]
	if t_DarkMatter.Gui.Enabled and t_DarkMatter.Pets.Visible then
		task.defer(function() -- Line: 619
			PetsScaling();
			QueueScrolling();
		end);
	end
end);
m_Library.Network.Fired("Dark Matter Timer Skipped"):Connect(function(_) -- Line: 627
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.Audio.Play("rbxassetid://7495293069", script, 1, 0.5);
end);
local coroutine_wrap_ret2 = coroutine.wrap(function() -- Line: 632
	while true do
		UpdateCategories();
		wait(1);
	end
end);
coroutine_wrap_ret2();
m_Library.Signal.Fired("Attempt Dark Matter"):Connect(function() -- Line: 640
	--[[
		Upvalues:
			[1] = t_DarkMatter
			[2] = table1
			[3] = bool1
			[4] = bool2
			[5] = u2
			[6] = m_Library
	--]]
	if not t_DarkMatter.Pets.Visible then return end
	if #table1 <= 0 then return end
	if not bool1 then
		bool1 = true;
		bool2 = true;
		u2 = m_Library.Functions.DeepCopyUnsafe(table1);
		local v21 = m_Library.Message.New("Are you sure?", true);
		if v21 then
			PetsConvert();
		end
		bool2 = false;
		bool1 = false;
	end
end);
  -  Editar
  04:54:13.917    -  Editar
  04:54:13.917  ----- [2759] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Auction Select -----  -  Editar
  04:54:13.917  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local _ = {
	"rbxassetid://6907636858",
	"rbxassetid://6907636843"
};
local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_AuctionSelect = m_Library.GUI.AuctionSelect;
local t_Inventory = m_Library.Assets.UI.Inventory;
local Random_new_ret = Random.new();
local bool1 = false;
local u1 = 0;
local bool2 = true;
function isVisible() -- Line: 26
	--[[
		Upvalues:
			[1] = t_AuctionSelect
	--]]
	return t_AuctionSelect.Gui.Enabled;
end
function UpdateLazy() -- Line: 32
	--[[
		Upvalues:
			[1] = bool2
	--]]
	bool2 = true;
	Update();
end
function Update() -- Line: 37
	--[[
		Upvalues:
			[1] = bool2
			[2] = m_Library
			[3] = u1
			[4] = t_AuctionSelect
			[5] = t_Inventory
			[6] = bool1
	--]]
	if not bool2 then return end
	if not isVisible() then return end
	local u2 = m_Library.Save.Get();
	if not u2 then return end
	assert(u2);
	local t_Pets = u2.Pets;
	if not t_Pets then
		m_Library.Print("Failed to grab pets", true);
		return;
	end
	bool2 = false;
	debug.profilebegin("AuctionSelect.Update");
	u1 = u1 + 1;
	local v9;
	if t_AuctionSelect.Query.Text == "" then
		v9 = false;
	else
		v9 = t_AuctionSelect.Query.Text ~= nil;
	end
	local v1 = v9 and m_Library.Functions.RegexEscape(string.lower(tostring(t_AuctionSelect.Query.Text))) or nil;
	t_AuctionSelect.PetAmount.Text = #t_Pets .. (#t_Pets <= 1 and " Pet" or " Pets");
	local table_clone_ret = table.clone(t_Pets);
	local v2 = m_Library.Shared.SortPets(u2, table_clone_ret);
	for key1, val1 in ipairs(v2) do
		local t_uid = val1.uid;
		local t_id = val1.id;
		local _ = val1.idt;
		local u3 = m_Library.Shared.HasPetEquipped(u2, val1);
		local t_s = val1.s;
		local t_g = val1.g;
		local t_r = val1.r;
		local t_dm = val1.dm;
		local t_powers = val1.powers;
		local v10 = m_Library.Directory.Pets[t_id];
		local _ = v10.isGift;
		if not t_g or not v10.goldenThumbnail then
			local _ = v10.thumbnail;
		end
		local t_name = v10.name;
		local t_rarity = v10.rarity;
		local t_l = val1.l;
		local t_sh = val1.sh;
		local v11 = t_AuctionSelect.Main.Pets:FindFirstChild(t_uid);
		if not v11 then
			v11 = t_Inventory.Pet:Clone();
			m_Library.PetUI.Create(v11, t_uid);
			local function RefreshPetData() -- Line: 94
				--[[
					Upvalues:
						[1] = m_Library
						[2] = t_uid
						[3] = val1
						[4] = u3
						[5] = u2
						[6] = t_s
						[7] = t_g
						[8] = t_r
						[9] = t_l
						[10] = t_dm
				--]]
				debug.profilebegin("AuctionSelect.Update.RefreshPetData");
				local v12, v13 = m_Library.PetCmds.Get(t_uid);
				if v12 and v13 == m_Library.LocalPlayer then
					val1 = v12;
					u3 = m_Library.Shared.HasPetEquipped(u2, val1);
					t_s = val1.s;
					t_g = val1.g;
					t_r = val1.r;
					t_l = val1.l;
					t_dm = val1.dm;
				end
				debug.profileend();
			end
			local function Clicked() -- Line: 109
				--[[
					Upvalues:
						[1] = RefreshPetData
						[2] = t_l
						[3] = m_Library
						[4] = t_uid
				--]]
				RefreshPetData();
				if t_l then
					m_Library.Message.New("This pet is locked! Unlock it before you can auction it!");
					return;
				end
				m_Library.Signal.Invoke("Auction Pet", t_uid);
			end
			v11.Activated:Connect(function() -- Line: 121
				--[[
					Upvalues:
						[1] = bool1
						[2] = RefreshPetData
						[3] = t_l
						[4] = m_Library
						[5] = t_uid
				--]]
				if not bool1 then
					bool1 = true;
					RefreshPetData();
					if t_l then
						m_Library.Message.New("This pet is locked! Unlock it before you can auction it!");
					else
						m_Library.Signal.Invoke("Auction Pet", t_uid);
					end
					UpdateLazy();
					bool1 = false;
				end
			end);
			m_Library.GUIFX.ButtonFX(v11);
		end
		v11:SetAttribute("Tick", u1);
		v11.LayoutOrder = key1;
		v11.Level:FindFirstChildOfClass("UIStroke").Thickness = 4;
		v11.HC:FindFirstChildOfClass("UIStroke").Thickness = 4;
		v11.Locked.Visible = val1.l;
		v11.Stars.Visible = not v11.Locked.Visible;
		v11.Equipped.Visible = t_uid == nil;
		if v9 and v1 then
			local bool3 = false;
			if string.find(string.lower(t_name), v1, 1, true) then
				bool3 = true;
			elseif val1.nk and string.find(string.lower(val1.nk), v1, 1, true) then
				bool3 = true;
			elseif string.find(string.lower(t_rarity), v1, 1, true) then
				bool3 = true;
			elseif t_sh and string.find("shiny", v1, 1, true) then
				bool3 = true;
			elseif t_g and (string.find("gold", v1, 1, true) or string.find("golden", v1, 1, true)) then
				bool3 = true;
			elseif t_r and string.find("rainbow", v1, 1, true) then
				bool3 = true;
			elseif t_dm and string.find("dark matter", v1, 1, true) then
				bool3 = true;
			elseif t_l and string.find("lock", v1, 1, true) then
				bool3 = true;
			elseif t_powers and #t_powers > 0 then
				for _, val4 in ipairs(t_powers) do
					local unpack_ret1, unpack_ret2 = unpack(val4);
					local v14, _ = m_Library.Shared.GetPowerDir(unpack_ret1, unpack_ret2);
					if not string.find(string.lower(v14.title), v1, 1, true) then continue end
					bool3 = true;
					break;
				end
			end
			v11.Visible = bool3;
		else
			v11.Visible = true;
		end
		v11.Parent = t_AuctionSelect.Main.Pets;
	end
	for _, child2 in ipairs(t_AuctionSelect.Main.Pets:GetChildren()) do
		local Attribute = child2:GetAttribute("Tick");
		if not Attribute or Attribute == u1 then continue end
		child2:Destroy();
	end
	local v3 = 0;
	local v4 = u2.MaxSlots - #v2;
	for _, child3 in ipairs(t_AuctionSelect.Main.Pets:GetChildren()) do
		if child3.Name ~= "Empty" then continue end
		v3 = v3 + 1;
	end
	local v5 = v4 - v3;
	if v5 > 0 then
		for index1 = 1, v5 do
			t_Inventory.Empty:Clone().Parent = t_AuctionSelect.Main.Pets;
		end
	elseif v5 < 0 then
		for index2 = 1, -v5 do
			local Empty = t_AuctionSelect.Main.Pets:FindFirstChild("Empty");
			if not Empty then break end
			Empty:Destroy();
		end
	end
	UpdateScrolling();
	debug.profileend();
end
function UpdateScrolling() -- Line: 231
	--[[
		Upvalues:
			[1] = t_AuctionSelect
			[2] = m_Library
	--]]
	debug.profilebegin("AuctionSelect.UpdateScrolling");
	local t_Pets2 = t_AuctionSelect.Main.Pets;
	local UIGridLayout = t_Pets2:FindFirstChildOfClass("UIGridLayout");
	local UIPadding = t_Pets2:FindFirstChildOfClass("UIPadding");
	local v6 = m_Library.Functions.ResolutionScale();
	local v7 = v6 <= 0.5 and 4 or v6 <= 0.65 and 5 or v6 <= 1 and 6 or v6 <= 1.2 and 7 or 8;
	UIGridLayout.CellPadding = UDim2.new(0, 20, 0, 20);
	local v8 = (t_Pets2.AbsoluteSize.X - t_Pets2.ScrollBarThickness - UIPadding.PaddingLeft.Offset - UIPadding.PaddingRight.Offset) / v7 - UIGridLayout.CellPadding.X.Offset;
	local udim2 = UDim2.new(0, v8, 0, v8);
	UIGridLayout.CellSize = udim2;
	UIGridLayout:ApplyLayout();
	t_Pets2.CanvasSize = UDim2.new(0, UIGridLayout.AbsoluteContentSize.X, 0, UIGridLayout.AbsoluteContentSize.Y + 65);
	debug.profileend();
end
t_AuctionSelect.Gui:GetPropertyChangedSignal("Enabled"):Connect(function() -- Line: 277
	--[[
		Upvalues:
			[1] = t_AuctionSelect
	--]]
	if not t_AuctionSelect.Gui.Enabled then return end
	UpdateLazy();
end);
t_AuctionSelect.Frame.Bottom.Search.Query:GetPropertyChangedSignal("Text"):Connect(function() -- Line: 286
	--[[
		Upvalues:
			[1] = t_AuctionSelect
	--]]
	if t_AuctionSelect.Frame.Bottom.Search.Query.Text ~= "" then
		t_AuctionSelect.Main.Pets.CanvasPosition = Vector2.new();
	end
	UpdateLazy();
end);
t_AuctionSelect.Close.Activated:Connect(function() -- Line: 295
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
			[3] = Random_new_ret
			[4] = t_AuctionSelect
	--]]
	if not bool1 then
		debug.profilebegin("AuctionSelect.Close.Activated");
		bool1 = true;
		m_Library.Audio.Play("rbxassetid://8951380772", script, Random_new_ret:NextNumber(0.95, 1.05), 0.1);
		t_AuctionSelect.Gui.Enabled = false;
		bool1 = false;
		debug.profileend();
	end
end);
m_Library.Signal.Fired("Resolution Changed"):Connect(function() -- Line: 308
	task.defer(function() -- Line: 310
		UpdateScrolling();
	end);
end);
m_Library.GUIFX.ButtonFX(t_AuctionSelect.Close);
Update();
  -  Editar
  04:54:13.917    -  Editar
  04:54:13.917  ----- [2760] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Auction Pet -----  -  Editar
  04:54:13.917  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_AuctionPet = m_Library.GUI.AuctionPet;
local t_Input = t_AuctionPet.InputFrame.Input;
local u1 = nil;
local bool1 = false;
function AuctionPet(p1, p2) -- Line: 20
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v1, v2 = m_Library.Network.Invoke("Auction: Create", p1, p2);
	if not v1 then
		m_Library.Message.New(v2);
	end
	return v1;
end
function Prompt(p3) -- Line: 31
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
			[3] = t_Input
			[4] = t_AuctionPet
			[5] = bool1
	--]]
	local u3, v3 = m_Library.PetCmds.Get(p3);
	if not u3 or v3 ~= m_Library.LocalPlayer then return end
	if not m_Library.Directory.Pets[u3.id] then return end
	if m_Library.Variables.AuctioningPet then return end
	m_Library.Variables.AuctioningPet = true;
	if u1 then
		u1:Disconnect();
		u1 = nil;
	end
	t_Input.Text = "";
	u1 = t_AuctionPet.Auction.Activated:Connect(function() -- Line: 55
		--[[
			Upvalues:
				[1] = bool1
				[2] = m_Library
				[3] = t_Input
				[4] = u3
				[5] = p3
				[6] = t_AuctionPet
		--]]
		if not bool1 then
			bool1 = true;
			local v6 = m_Library.Functions.ParseNumberSmart(t_Input.Text);
			if typeof(v6) ~= "number" or not m_Library.Functions.IsFinite(v6) then
				m_Library.Message.New("Please enter a valid number!");
				bool1 = false;
				return;
			end
			local math_round_ret = math.round(v6);
			if math_round_ret <= 0 or not m_Library.Functions.IsFinite(math_round_ret) then
				m_Library.Message.New("Please enter a price greater than zero!");
				bool1 = false;
				return;
			end
			if m_Library.Directory.Currency.Diamonds.Limit < math_round_ret then
				m_Library.Message.New("You cannot auction a pet for this much!");
				bool1 = false;
				return;
			end
			if not m_Library.Shared.CanAuctionPet(u3) then
				m_Library.Message.New("You can only auction huge and titanic pets!");
				bool1 = false;
				return;
			end
			local v7 = m_Library.Message.New("Are you sure you want to auction this pet starting at " .. m_Library.Functions.Commas(math_round_ret) .. " Diamonds? You will lose 5% of the earnings due to tax!", true);
			if v7 then
				local v8 = m_Library.Message.New("Auction will proceed even if you leave or server restarts, you will get your rewards when you rejoin! Are you still sure?", true);
				if v8 then
					local AuctionPet_ret = AuctionPet(p3, math_round_ret);
					if AuctionPet_ret then
						t_AuctionPet.Gui.Enabled = false;
						m_Library.Signal.Fire("Notification", "Submitted " .. m_Library.Shared.PetNameShort(u3) .. " for auction starting at " .. m_Library.Functions.NumberShorten(math_round_ret) .. " Diamonds!", {
							color = Color3.fromRGB(78, 244, 252),
							force = true
						});
					end
				end
			end
			bool1 = false;
		end
	end);
	t_AuctionPet.Gui.Enabled = true;
	if m_Library.Variables.Console then
		m_Library.GuiService.SelectedObject = m_Library.LocalPlayer.PlayerGui:FindFirstChild("ListPet"):FindFirstChild("Frame"):FindFirstChild("Auction");
	end
	while t_AuctionPet.Gui.Enabled do
		m_Library.Heartbeat();
	end
	m_Library.Variables.AuctioningPet = false;
	if m_Library.Variables.Console then
		m_Library.GuiService.SelectedObject = nil;
	end
	return true;
end
t_AuctionPet.Close.Activated:Connect(function() -- Line: 123
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_AuctionPet
	--]]
	if not bool1 then
		bool1 = true;
		t_AuctionPet.Gui.Enabled = false;
		bool1 = false;
	end
end);
t_AuctionPet.InputFrame.Input:GetPropertyChangedSignal("Text"):Connect(function() -- Line: 132
	--[[
		Upvalues:
			[1] = t_AuctionPet
			[2] = m_Library
	--]]
	local t_Text = t_AuctionPet.InputFrame.Input.Text;
	local v4 = m_Library.Functions.ParseNumberSmart(t_Text);
	if not v4 then
		t_AuctionPet.DiamondsDisplay.Frame.Amount.Text = "0";
		return;
	end
	t_AuctionPet.DiamondsDisplay.Frame.Amount.Text = m_Library.Functions.Commas((math.round(v4)));
end);
m_Library.GUIFX.ButtonFX(t_AuctionPet.Close);
m_Library.GUIFX.ButtonFX(t_AuctionPet.Auction);
m_Library.Signal.Invoked("Auction Pet").OnInvoke = function(p4) -- Line: 155
	--[[
		Upvalues:
			[1] = t_AuctionPet
			[2] = m_Library
	--]]
	t_AuctionPet.Gui.Frame.XboxAdd.Visible = m_Library.Variables.Console;
	return Prompt(p4);
end
local bool2 = false;
local bool3 = false;
local u2 = 0;
m_Library.Signal.Fired("Xbox Start Subtract"):Connect(function() -- Line: 164
	--[[
		Upvalues:
			[1] = bool2
			[2] = u2
	--]]
	bool2 = true;
	u2 = 0;
end);
m_Library.Signal.Fired("Xbox Stop Subtract"):Connect(function() -- Line: 170
	--[[
		Upvalues:
			[1] = bool2
			[2] = u2
	--]]
	bool2 = false;
	u2 = 0;
end);
m_Library.Signal.Fired("Xbox Start Add"):Connect(function() -- Line: 176
	--[[
		Upvalues:
			[1] = bool3
			[2] = u2
	--]]
	bool3 = true;
	u2 = 0;
end);
m_Library.Signal.Fired("Xbox Stop Add"):Connect(function() -- Line: 181
	--[[
		Upvalues:
			[1] = bool3
			[2] = u2
	--]]
	bool3 = false;
	u2 = 0;
end);
local t_Input2 = t_AuctionPet.Gui.Frame.InputFrame.Input;
m_Library.RunService.Heartbeat:Connect(function(p5) -- Line: 187
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_AuctionPet
			[3] = bool2
			[4] = bool3
			[5] = u2
			[6] = t_Input2
	--]]
	if not m_Library.Variables.Console then return end
	if t_AuctionPet.Gui.Enabled and (bool2 or bool3) then
		u2 = u2 + p5;
		local math_pow_ret = math.pow(10, (math.floor(u2 / 3)));
		local v5 = t_Input2:GetAttribute("Amount") or 0;
		if bool2 then
			v5 = v5 - math_pow_ret * 1;
			if v5 < 10 then
				v5 = 0;
			end
		elseif bool3 then
			v5 = v5 + math_pow_ret * 1;
			if v5 < 10 then
				v5 = 10;
			end
		end
		if (bool3 or bool2) and (v5 > 0 or v5 == 0) then
			t_Input2.PlaceholderText = v5 > 0 and v5 or "None";
			t_Input2.Text = v5;
			t_Input2:SetAttribute("Amount", v5);
		end
	end
end);
  -  Editar
  04:54:13.917    -  Editar
  04:54:13.917  ----- [2761] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Bid Pet -----  -  Editar
  04:54:13.917  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_BidPet = m_Library.GUI.BidPet;
local t_Input = t_BidPet.InputFrame.Input;
local t_Amount = t_BidPet.DiamondsDisplayMin.Frame.Amount;
local t_InputButton = t_BidPet.InputFrame.InputButton;
local u1 = nil;
local u2 = nil;
local u3 = nil;
local u4 = 0;
local bool1 = false;
function Bid(p1) -- Line: 25
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u3
	--]]
	local v1 = m_Library.Signal.Invoke("Get Current Auction");
	if not v1 or not u3 or v1.Id ~= u3.Id then
		m_Library.Message.New("That auction has ended!");
		return;
	end
	local v2, v3 = m_Library.Network.Invoke("Auction: Bid", u3.Id, p1);
	if not v2 then
		m_Library.Message.New(v3);
	end
	return v2;
end
function Prompt() -- Line: 42
	--[[
		Upvalues:
			[1] = u1
			[2] = u2
			[3] = t_Input
			[4] = t_Amount
			[5] = m_Library
			[6] = u4
			[7] = t_InputButton
			[8] = bool1
			[9] = t_BidPet
	--]]
	if u1 then
		u1:Disconnect();
		u1 = nil;
		u2:Disconnect();
		u2 = nil;
	end
	t_Input.Text = "";
	t_Amount.Text = m_Library.Functions.Commas(u4);
	m_Library.GUIFX.ButtonFX(t_InputButton);
	u2 = t_InputButton.Activated:Connect(function() -- Line: 55
		--[[
			Upvalues:
				[1] = bool1
				[2] = t_Input
				[3] = u4
		--]]
		bool1 = true;
		t_Input.Text = u4;
		bool1 = false;
	end);
	u1 = t_BidPet.Bid.Activated:Connect(function() -- Line: 63
		--[[
			Upvalues:
				[1] = bool1
				[2] = m_Library
				[3] = t_Input
				[4] = t_BidPet
		--]]
		if not bool1 then
			bool1 = true;
			local v6 = m_Library.Functions.ParseNumberSmart(t_Input.Text);
			if typeof(v6) ~= "number" or not m_Library.Functions.IsFinite(v6) then
				m_Library.Message.New("Please enter a valid number!");
				bool1 = false;
				return;
			end
			local math_round_ret = math.round(v6);
			if math_round_ret <= 0 then
				m_Library.Message.New("Please enter a price greater than zero!");
				bool1 = false;
				return;
			end
			local v7 = m_Library.Message.New("Are you sure you want to bid " .. m_Library.Functions.Commas(math_round_ret) .. " Diamonds for this pet?", true);
			if v7 then
				local Bid_ret = Bid(math_round_ret);
				if Bid_ret then
					t_BidPet.Gui.Enabled = false;
				end
			end
			bool1 = false;
		end
	end);
	t_BidPet.Gui.Enabled = true;
	if m_Library.Variables.Console then
		m_Library.GuiService.SelectedObject = m_Library.LocalPlayer.PlayerGui:FindFirstChild("ListPet"):FindFirstChild("Frame"):FindFirstChild("Sell");
	end
	while t_BidPet.Gui.Enabled do
		m_Library.Heartbeat();
	end
	if m_Library.Variables.Console then
		m_Library.GuiService.SelectedObject = nil;
	end
	return true;
end
t_BidPet.Close.Activated:Connect(function() -- Line: 112
	--[[
		Upvalues:
			[1] = bool1
			[2] = t_BidPet
	--]]
	if not bool1 then
		bool1 = true;
		t_BidPet.Gui.Enabled = false;
		bool1 = false;
	end
end);
t_BidPet.InputFrame.Input:GetPropertyChangedSignal("Text"):Connect(function() -- Line: 121
	--[[
		Upvalues:
			[1] = t_BidPet
			[2] = m_Library
	--]]
	local t_Text = t_BidPet.InputFrame.Input.Text;
	local v4 = m_Library.Functions.ParseNumberSmart(t_Text);
	if not v4 then
		t_BidPet.DiamondsDisplayPrice.Frame.Amount.Text = "0";
		return;
	end
	t_BidPet.DiamondsDisplayPrice.Frame.Amount.Text = m_Library.Functions.Commas((math.round(v4)));
end);
m_Library.GUIFX.ButtonFX(t_BidPet.Close);
m_Library.GUIFX.ButtonFX(t_BidPet.Bid);
m_Library.Signal.Fired("Auction Bid"):Connect(function(p2, p3) -- Line: 144
	--[[
		Upvalues:
			[1] = t_BidPet
			[2] = m_Library
			[3] = u3
			[4] = u4
	--]]
	if not p2 then return end
	t_BidPet.Gui.Frame.XboxAdd.Visible = m_Library.Variables.Console;
	u3 = p2;
	u4 = p3;
	Prompt();
end);
m_Library.Signal.Fired("Minimum Bid Update"):Connect(function(p4) -- Line: 157
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u4
			[3] = t_Amount
	--]]
	if not m_Library.GUI.BidPet.Gui.Enabled then return end
	u4 = p4;
	t_Amount.Text = m_Library.Functions.Commas((math.round(p4)));
end);
m_Library.Signal.Fired("Auction Ended"):Connect(function(p5) -- Line: 167
	--[[
		Upvalues:
			[1] = u3
			[2] = m_Library
	--]]
	if not u3 or u3.Id ~= p5.Id or not m_Library.GUI.BidPet.Gui.Enabled then return end
	m_Library.GUI.BidPet.Gui.Enabled = false;
	m_Library.Message.New("The auction has ended! You can no longer bid on this pet!");
end);
local bool2 = false;
local bool3 = false;
local u5 = 0;
m_Library.Signal.Fired("Xbox Start Subtract"):Connect(function() -- Line: 180
	--[[
		Upvalues:
			[1] = bool2
			[2] = u5
	--]]
	bool2 = true;
	u5 = 0;
end);
m_Library.Signal.Fired("Xbox Stop Subtract"):Connect(function() -- Line: 186
	--[[
		Upvalues:
			[1] = bool2
			[2] = u5
	--]]
	bool2 = false;
	u5 = 0;
end);
m_Library.Signal.Fired("Xbox Start Add"):Connect(function() -- Line: 192
	--[[
		Upvalues:
			[1] = bool3
			[2] = u5
	--]]
	bool3 = true;
	u5 = 0;
end);
m_Library.Signal.Fired("Xbox Stop Add"):Connect(function() -- Line: 198
	--[[
		Upvalues:
			[1] = bool3
			[2] = u5
	--]]
	bool3 = false;
	u5 = 0;
end);
local t_Input2 = t_BidPet.Gui.Frame.InputFrame.Input;
m_Library.RunService.Heartbeat:Connect(function(p6) -- Line: 205
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_BidPet
			[3] = bool2
			[4] = bool3
			[5] = u5
			[6] = t_Input2
	--]]
	if not m_Library.Variables.Console then return end
	if t_BidPet.Gui.Enabled and (bool2 or bool3) then
		u5 = u5 + p6;
		local math_pow_ret = math.pow(10, (math.floor(u5 / 3)));
		local v5 = t_Input2:GetAttribute("Amount") or 0;
		if bool2 then
			v5 = v5 - math_pow_ret * 1;
			if v5 < 10 then
				v5 = 0;
			end
		elseif bool3 then
			v5 = v5 + math_pow_ret * 1;
			if v5 < 10 then
				v5 = 10;
			end
		end
		if (bool3 or bool2) and (v5 > 0 or v5 == 0) then
			t_Input2.PlaceholderText = v5 > 0 and v5 or "None";
			t_Input2.Text = v5;
			t_Input2:SetAttribute("Amount", v5);
		end
	end
end);
  -  Editar
  04:54:13.917    -  Editar
  04:54:13.917  ----- [2762] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.FFlags -----  -  Editar
  04:54:13.918  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local _ = {
	Player = "#2cff79",
	Number = "#2ffcff",
	Boolean = "#b339ff",
	String = "#ffe02b",
	Any = "#ececec"
};
local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local Library = game.ReplicatedStorage:WaitForChild("Library");
local m_FFlags = require(Library:WaitForChild("Modules").FFlags);
local t_FFlags = m_Library.GUI.FFlags;
local t_Flags = t_FFlags.Frame.Flags;
local t_Input = t_FFlags.Frame.Search.Input;
local t_Commit = t_FFlags.Frame.Commit;
local t_Cancel = t_FFlags.Frame.Cancel;
local u1 = m_Library.Functions.DeepCopyUnsafe(m_Library.FFlags.currentData);
local u2 = m_Library.Functions.DeepCopyUnsafe(u1);
local bool1 = false;
local u3 = false;
local u4 = "";
local u5 = m_Library.Functions.Debounce();
function RunLoadingUI() -- Line: 40
	--[[
		Upvalues:
			[1] = t_Cancel
			[2] = t_Commit
			[3] = t_FFlags
			[4] = bool1
	--]]
	t_Cancel.Visible = false;
	t_Commit.Visible = false;
	t_FFlags.Frame.Close.Visible = false;
	task.spawn(function() -- Line: 44
		--[[
			Upvalues:
				[1] = t_FFlags
				[2] = bool1
		--]]
		local v20 = 0;
		local tick_ret = tick();
		local v21 = tick_ret;
		local t_Loading = t_FFlags.Frame.Loading;
		local t_Disclaimer = t_Loading.Disclaimer;
		t_Loading.Visible = true;
		t_Disclaimer.Visible = false;
		while bool1 do
			local tick_ret2 = tick();
			t_Loading.Text = ("Processing%*"):format((string.rep(".", v20)));
			if tick_ret2 - v21 > 0.2 then
				v20 = v20 < 3 and v20 + 1 or 1;
				v21 = tick_ret2;
			end
			t_Disclaimer.Visible = tick_ret2 - tick_ret > 1.5;
			task.wait();
		end
		t_Loading.Visible = false;
		t_FFlags.Frame.Close.Visible = true;
	end);
end
function Get(p1, p2) -- Line: 67
	--[[
		Upvalues:
			[1] = u1
			[2] = m_FFlags
	--]]
	local v1 = p2 or u1;
	local v2 = m_FFlags.Options[p1];
	local v3 = v1[p1];
	if v3 == nil and not v2.Nullable then
		v3 = v2.Default;
	end
	return v3;
end
local function CommitChanges() -- Line: 77
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
			[3] = u2
			[4] = bool1
	--]]
	if m_Library.Functions.DeepEqualsUnsafe(u1, u2) then
		m_Library.Message.New("\226\157\140 Nothing changed!");
		return;
	end
	bool1 = true;
	RunLoadingUI();
	local v4 = m_Library.Network.Invoke("FFlags Commit", u1);
	bool1 = false;
	if v4 then
		m_Library.Message.New("\226\156\133 Succesfully commited!");
	else
		m_Library.Message.New("\226\157\140 Error commiting! Please try again.");
	end
	task.delay(1, function() -- Line: 91
		Update();
	end);
end
function getCommitChanges() -- Line: 96
	--[[
		Upvalues:
			[1] = m_FFlags
			[2] = u1
			[3] = u2
	--]]
	local v5 = 0;
	local bool2 = false;
	for v6, v7 in m_FFlags.Options do
		if Get(v6, u1) == Get(v6, u2) then continue end
		v5 = v5 + 1;
		if not v7.Important then continue end
		bool2 = true;
	end
	return v5, bool2;
end
function isInSearch(p3) -- Line: 110
	--[[
		Upvalues:
			[1] = u4
			[2] = m_Library
	--]]
	local lower_ret = p3:lower();
	local lower_ret2 = u4:lower();
	if lower_ret:find(lower_ret2) then
		return true;
	end
	for _, v8 in lower_ret:split(" ") do
		if m_Library.Functions.LevDist(lower_ret2, v8) >= 3 or #v8 < 4 then continue end
		return true;
	end
	local sub_ret = lower_ret:sub(1, #lower_ret2);
	local v9 = m_Library.Functions.LevDist(lower_ret2, sub_ret);
	if #lower_ret2 >= 4 and v9 / #sub_ret <= 0.35 then
		return true;
	end
	return false;
end
function updateOption(p4) -- Line: 129
	--[[
		Upvalues:
			[1] = u1
			[2] = t_Flags
			[3] = u3
			[4] = m_Library
			[5] = u5
	--]]
	local t_Name = p4.Name;
	local t_Type = p4.Type;
	local t_Important = p4.Important;
	local t_Key = p4.Key;
	local t_HasToggles = p4.HasToggles;
	local u8 = t_Type == "boolean";
	local u9 = t_Type == "string";
	local u10 = t_Type == "number";
	local bool3 = false;
	local t_Boolean = nil;
	local t_NumberInput = nil;
	local t_StringInput = nil;
	local t_Toggle = nil;
	if u1[t_Key] == nil and not p4.Nullable then
		local _ = p4.Default;
	end
	local u11 = t_Flags:FindFirstChild(p4.Key);
	if u3 and not isInSearch(p4.Name) then
		if u11 then
			u11:Destroy();
		end
		return;
	end
	local function UpdateValue() -- Line: 157
		--[[
			Upvalues:
				[1] = bool3
				[2] = u8
				[3] = t_Key
				[4] = m_Library
				[5] = t_Boolean
				[6] = u10
				[7] = t_NumberInput
				[8] = u9
				[9] = t_StringInput
				[10] = t_HasToggles
				[11] = t_Toggle
		--]]
		local v22 = bool3 and 0 or 0.3;
		if u8 then
			if Get(t_Key) then
				m_Library.Functions.Tween(t_Boolean.Slider, {
					Position = UDim2.new(0.5, 0, 0, 0),
					BackgroundColor3 = Color3.fromRGB(44, 255, 33)
				}, {
					v22,
					"Sine",
					"Out"
				});
				m_Library.Functions.Tween(t_Boolean, {
					BackgroundColor3 = Color3.fromRGB(255, 255, 255),
					BackgroundTransparency = 0
				}, {
					v22,
					"Sine",
					"Out"
				});
			else
				m_Library.Functions.Tween(t_Boolean.Slider, {
					Position = UDim2.new(0, 0, 0, 0),
					BackgroundColor3 = Color3.fromRGB(255, 30, 97)
				}, {
					v22,
					"Sine",
					"Out"
				});
				m_Library.Functions.Tween(t_Boolean, {
					BackgroundColor3 = Color3.fromRGB(0, 0, 0),
					BackgroundTransparency = 0.5
				}, {
					v22,
					"Sine",
					"Out"
				});
			end
		end
		if u10 then
			t_NumberInput.Text = Get(t_Key);
		end
		if u9 then
			t_StringInput.Text = '"' .. Get(t_Key) .. '"';
		end
		if t_HasToggles then
			t_Toggle.Text = Get(t_Key);
		end
	end
	local t_Inputs;
	if not u11 then
		u11 = m_Library.Assets.UI.FRAMEWORK.FFlags.Cmd:Clone();
		u11.Name = t_Key;
		u11.LayoutOrder = p4.Order;
		u11.Parent = t_Flags;
		t_Inputs = u11.Header.Inputs;
		local t_Title = u11.Header.Title;
		bool3 = true;
		t_Inputs.Toggle.Activated:Connect(function() -- Line: 189
			--[[
				Upvalues:
					[1] = u5
					[2] = t_Key
					[3] = p4
					[4] = u1
			--]]
			u5(0.15, function() -- Line: 190
				--[[
					Upvalues:
						[1] = t_Key
						[2] = p4
						[3] = u1
				--]]
				local Get_ret = Get(t_Key);
				local table_find_ret = table.find(p4.Toggles, Get_ret);
				u1[p4.Key] = p4.Toggles[table_find_ret < #p4.Toggles and table_find_ret + 1 or 1];
				Update();
			end);
		end);
		t_Inputs.Boolean.Activated:Connect(function() -- Line: 200
			--[[
				Upvalues:
					[1] = u5
					[2] = t_Key
					[3] = u1
					[4] = p4
			--]]
			u5(0.35, function() -- Line: 201
				--[[
					Upvalues:
						[1] = t_Key
						[2] = u1
						[3] = p4
				--]]
				local v28 = not Get(t_Key);
				u1[p4.Key] = v28;
				Update();
			end);
		end);
		t_Inputs.NumberInput.FocusLost:Connect(function() -- Line: 210
			--[[
				Upvalues:
					[1] = t_Inputs
					[2] = t_Key
					[3] = u5
					[4] = p4
					[5] = m_Library
					[6] = t_Name
					[7] = u10
					[8] = u1
			--]]
			local function fail() -- Line: 211
				--[[
					Upvalues:
						[1] = t_Inputs
						[2] = t_Key
				--]]
				t_Inputs.NumberInput.Text = tostring(Get(t_Key));
			end
			u5(0.35, function() -- Line: 214
				--[[
					Upvalues:
						[1] = t_Inputs
						[2] = fail
						[3] = p4
						[4] = m_Library
						[5] = t_Name
						[6] = u10
						[7] = u1
				--]]
				local tonumber_ret = tonumber(t_Inputs.NumberInput.Text);
				if not tonumber_ret then
					return fail();
				end
				if p4.Min and tonumber_ret < p4.Min then
					m_Library.Message.New((("Value of flag %* cannot be lower than %*"):format(t_Name, p4.Min)));
					return fail();
				end
				if p4.Max and p4.Max < tonumber_ret then
					m_Library.Message.New((("Value of flag %* cannot be greater than %*"):format(t_Name, p4.Max)));
					return fail();
				end
				if not u10 then
					return fail();
				end
				u1[p4.Key] = tonumber_ret;
				Update();
			end);
		end);
		t_Inputs.StringInput.FocusLost:Connect(function(p8) -- Line: 236
			--[[
				Upvalues:
					[1] = m_Library
					[2] = t_Inputs
					[3] = t_Title
					[4] = t_Key
					[5] = u5
					[6] = u9
					[7] = u1
			--]]
			m_Library.Functions.Tween(t_Inputs, {Size = UDim2.new(0.15, 0, 1, 0)}, {
				0.25,
				"Sine",
				"Out"
			});
			m_Library.Functions.Tween(t_Title, {
				Size = UDim2.new(0.832, 0, 1, 0),
				Position = UDim2.new(0.155, 0, 0, 0),
				AnchorPoint = Vector2.zero
			}, {
				0.25,
				"Sine",
				"Out"
			});
			local function fail() -- Line: 247
				--[[
					Upvalues:
						[1] = t_Inputs
						[2] = t_Key
				--]]
				t_Inputs.StringInput.Text = ('"%*"'):format((Get(t_Key)));
			end
			if not p8 then
				return fail();
			end
			u5(0.35, function() -- Line: 253
				--[[
					Upvalues:
						[1] = t_Inputs
						[2] = u9
						[3] = u1
						[4] = t_Key
				--]]
				local t_Text = t_Inputs.StringInput.Text;
				if not u9 then return end
				u1[t_Key] = t_Text;
				Update();
			end);
		end);
		t_Inputs.StringInput.Focused:Connect(function() -- Line: 262
			--[[
				Upvalues:
					[1] = m_Library
					[2] = t_Inputs
					[3] = t_Title
			--]]
			m_Library.Functions.Tween(t_Inputs, {Size = UDim2.new(1, 0, 1, 0)}, {
				0.25,
				"Sine",
				"Out"
			});
			m_Library.Functions.Tween(t_Title, {
				Size = UDim2.new(0, 0, 1, 0),
				Position = UDim2.new(1, 0, 0, 0),
				AnchorPoint = Vector2.new(1, 0)
			}, {
				0.25,
				"Sine",
				"Out"
			});
		end);
	else
		t_Inputs = u11.Header.Inputs;
		local _ = u11.Header.Title;
	end
	t_Boolean = t_Inputs.Boolean;
	t_StringInput = t_Inputs.StringInput;
	t_NumberInput = t_Inputs.NumberInput;
	t_Toggle = t_Inputs.Toggle;
	local t_Inputs2 = u11.Header.Inputs;
	local v11 = t_HasToggles and t_Toggle or u8 and t_Boolean or u9 and t_StringInput or u10 and t_NumberInput or nil;
	assert(v11);
	for _, child1 in t_Inputs2:GetChildren() do
		if not child1:IsA("GuiBase") then continue end
		child1.Visible = v11 == child1;
	end
	local function Title() -- Line: 300
		--[[
			Upvalues:
				[1] = t_Name
				[2] = t_Important
				[3] = u11
		--]]
		local v23 = t_Name;
		if t_Important then
			v23 = ('%* <font color="rgb(255,170,0)"><b>[Important]</b></font>'):format(v23);
		end
		u11.Header.Title.Text = v23;
	end
	local v12 = t_Name;
	if t_Important then
		v12 = ('%* <font color="rgb(255,170,0)"><b>[Important]</b></font>'):format(v12);
	end
	u11.Header.Title.Text = v12;
	UpdateValue();
end
function CancelChanges() -- Line: 312
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
			[3] = u2
	--]]
	u1 = m_Library.Functions.DeepCopy(u2);
	Update();
end
function Update() -- Line: 318
	--[[
		Upvalues:
			[1] = m_FFlags
			[2] = t_Commit
			[3] = t_Cancel
			[4] = t_Flags
	--]]
	for _, v13 in m_FFlags.Options do
		updateOption(v13);
	end
	local getCommitChanges_ret1, _ = getCommitChanges();
	t_Commit.Visible = getCommitChanges_ret1 > 0;
	t_Cancel.Visible = getCommitChanges_ret1 > 0;
	local table1 = {};
	for _, v14 in m_FFlags.Options do
		local FindFirstChild_ret = t_Flags:FindFirstChild(v14.Key);
		if not FindFirstChild_ret then continue end
		table.insert(table1, {
			FindFirstChild_ret,
			v14
		});
	end
	table.sort(table1, function(p6, p7) -- Line: 338
		local v24 = p6[2];
		local v25 = p7[2];
		if v24.Important and not v25.Important then
			return true;
		end
		if not v24.Importand and v25.Important then
			return false;
		end
		return v24.Key < v25.Key;
	end);
	local v15 = nil;
	local v16 = nil;
	for v17, v18 in table1, v15, v16 do
		v18[1].LayoutOrder = v17;
	end
end
function Scaling() -- Line: 354
	--[[
		Upvalues:
			[1] = t_FFlags
	--]]
	local t_Flags2 = t_FFlags.Frame.Flags;
	local UIListLayout = t_Flags2:FindFirstChildOfClass("UIListLayout");
	t_Flags2.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y);
	UIListLayout:ApplyLayout();
end
function Toggle() -- Line: 361
	--[[
		Upvalues:
			[1] = t_FFlags
	--]]
	t_FFlags.Gui.Enabled = not t_FFlags.Gui.Enabled;
	if not t_FFlags.Gui.Enabled then
		CancelChanges();
		Update();
	end
end
t_FFlags.Frame.Close.Activated:Connect(function() -- Line: 369
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_FFlags
	--]]
	if getCommitChanges() > 0 and not m_Library.Message.New("You have uncommitted changes.  Are you sure you'd like to exit?", true) then return end
	CancelChanges();
	task.spawn(function() -- Line: 375
		--[[
			Upvalues:
				[1] = t_FFlags
		--]]
		for index1 = 1, 60 do
			t_FFlags.Gui.Enabled = false;
			task.wait();
		end
	end);
end);
m_Library.UserInputService.InputBegan:connect(function(input, gameProcessedEvent) -- Line: 383
	--[[
		Upvalues:
			[1] = m_FFlags
			[2] = m_Library
	--]]
	if input.KeyCode == Enum.KeyCode.F3 and m_FFlags.Admins[m_Library.LocalPlayer.UserId] then
		Toggle();
	end
end);
task.defer(function() -- Line: 389
	Update();
end);
m_Library.Signal.Fired("FFlags Changed"):Connect(function(p5) -- Line: 393
	--[[
		Upvalues:
			[1] = u1
			[2] = u2
			[3] = m_Library
	--]]
	local v19 = m_Library.Functions.DeepCopyUnsafe(p5);
	u2 = m_Library.Functions.DeepCopyUnsafe(p5);
	u1 = v19;
	Update();
end);
m_Library.Network.Fired("Open FFlags"):Connect(function() -- Line: 398
	--[[
		Upvalues:
			[1] = t_FFlags
	--]]
	t_FFlags.Gui.Enabled = true;
end);
local u7 = m_Library.Functions.Debounce();
t_Commit.Activated:Connect(function() -- Line: 403
	--[[
		Upvalues:
			[1] = u7
			[2] = bool1
			[3] = m_Library
			[4] = CommitChanges
	--]]
	u7(1, function() -- Line: 404
		--[[
			Upvalues:
				[1] = bool1
				[2] = m_Library
				[3] = CommitChanges
		--]]
		local getCommitChanges_ret1_2, getCommitChanges_ret2 = getCommitChanges();
		if bool1 then
			m_Library.Message.New("Already processing request... try again in a few seconds.");
			return;
		end
		if not m_Library.Message.New(("Are you sure you'd like to change %* flag%*?  This will instantly take effect on all live servers."):format(getCommitChanges_ret1_2, getCommitChanges_ret1_2 > 1 and "s" or ""), true) then return end
		if getCommitChanges_ret2 and not m_Library.Message.New("At least one flag you've changed is flagged as [Important].  Are you ABSOLUTELY SURE you'd like to commit these changes?", true) then return end
		CommitChanges();
	end);
end);
t_Cancel.Activated:Connect(function() -- Line: 422
	CancelChanges();
	Update();
end);
local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 427
	--[[
		Upvalues:
			[1] = t_FFlags
			[2] = u3
			[3] = t_Input
			[4] = u4
			[5] = m_Library
	--]]
	while true do
		if t_FFlags.Gui.Enabled and t_FFlags.Frame.Visible then
			Scaling();
			u3 = #t_Input.Text > 0 and t_Input.Text ~= t_Input.PlaceholderText or false;
			local v27 = u4;
			if u3 then
				u4 = t_Input.Text;
			else
				u4 = "";
			end
			if u4 ~= v27 then
				Update();
			end
		end
		m_Library.RenderStepped();
	end
end);
coroutine_wrap_ret();
m_Library.GUIFX.ButtonFX(t_Cancel);
m_Library.GUIFX.ButtonFX(t_Commit);
  -  Editar
  04:54:13.918    -  Editar
  04:54:13.918  ----- [2763] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.April Fools Console -----  -  Editar
  04:54:13.918  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
task.spawn(function() -- Line: 16
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	wait(5);
	if m_Library.Variables.Console then
		m_Library.Network.Fire("Console Player");
	end
end);
  -  Editar
  04:54:13.918    -  Editar
  04:54:13.918  ----- [2764] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Release Pet -----  -  Editar
  04:54:13.918  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local _ = {
	"rbxassetid://6907636858",
	"rbxassetid://6907636843"
};
local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_ReleasePet = m_Library.GUI.ReleasePet;
local t_Inventory = m_Library.Assets.UI.Inventory;
local Random_new_ret = Random.new();
local bool1 = false;
local u1 = 0;
local u2 = nil;
local u3 = nil;
local bool2 = true;
function isVisible() -- Line: 28
	--[[
		Upvalues:
			[1] = t_ReleasePet
	--]]
	return t_ReleasePet.Gui.Enabled;
end
function UpdateLazy() -- Line: 34
	--[[
		Upvalues:
			[1] = bool2
	--]]
	bool2 = true;
	Update();
end
function Update() -- Line: 39
	--[[
		Upvalues:
			[1] = bool2
			[2] = m_Library
			[3] = u1
			[4] = t_ReleasePet
			[5] = t_Inventory
			[6] = u2
			[7] = u3
			[8] = bool1
	--]]
	if not bool2 then return end
	if not isVisible() then return end
	local u4 = m_Library.Save.Get();
	if not u4 then return end
	assert(u4);
	local t_Pets = u4.Pets;
	if not t_Pets then
		m_Library.Print("Failed to grab pets", true);
		return;
	end
	bool2 = false;
	debug.profilebegin("ReleasePet.Update");
	u1 = u1 + 1;
	local v9;
	if t_ReleasePet.Query.Text == "" then
		v9 = false;
	else
		v9 = t_ReleasePet.Query.Text ~= nil;
	end
	local v1 = v9 and m_Library.Functions.RegexEscape(string.lower(tostring(t_ReleasePet.Query.Text))) or nil;
	t_ReleasePet.PetAmount.Text = #t_Pets .. (#t_Pets <= 1 and " Pet" or " Pets");
	local table_clone_ret = table.clone(t_Pets);
	local v2 = m_Library.Shared.SortPets(u4, table_clone_ret);
	for key1, val1 in ipairs(v2) do
		local t_uid = val1.uid;
		local t_id = val1.id;
		local _ = val1.idt;
		local u5 = m_Library.Shared.HasPetEquipped(u4, val1);
		local t_s = val1.s;
		local t_g = val1.g;
		local t_r = val1.r;
		local t_dm = val1.dm;
		local t_powers = val1.powers;
		local u6 = m_Library.Directory.Pets[t_id];
		local _ = u6.isGift;
		if not t_g or not u6.goldenThumbnail then
			local _ = u6.thumbnail;
		end
		local t_name = u6.name;
		local t_rarity = u6.rarity;
		local t_l = val1.l;
		local t_sh = val1.sh;
		local v10 = t_ReleasePet.Main.Pets:FindFirstChild(t_uid);
		if not u6.huge then continue end
		if not v10 then
			v10 = t_Inventory.Pet:Clone();
			m_Library.PetUI.Create(v10, t_uid);
			local function RefreshPetData() -- Line: 100
				--[[
					Upvalues:
						[1] = m_Library
						[2] = t_uid
						[3] = val1
						[4] = u5
						[5] = u4
						[6] = t_s
						[7] = t_g
						[8] = t_r
						[9] = t_l
						[10] = t_dm
				--]]
				debug.profilebegin("ReleasePet.Update.RefreshPetData");
				local v11, v12 = m_Library.PetCmds.Get(t_uid);
				if v11 and v12 == m_Library.LocalPlayer then
					val1 = v11;
					u5 = m_Library.Shared.HasPetEquipped(u4, val1);
					t_s = val1.s;
					t_g = val1.g;
					t_r = val1.r;
					t_l = val1.l;
					t_dm = val1.dm;
				end
				debug.profileend();
			end
			local function Clicked() -- Line: 115
				--[[
					Upvalues:
						[1] = RefreshPetData
						[2] = t_l
						[3] = m_Library
						[4] = val1
						[5] = u6
						[6] = t_ReleasePet
						[7] = u2
						[8] = t_uid
						[9] = u3
				--]]
				RefreshPetData();
				if t_l then
					m_Library.Message.New("This pet is locked! Unlock it before you can release it!");
					return;
				end
				if val1.ugcData or not u6.tradeable then
					m_Library.Message.New("You cannot release this pet!");
					return;
				end
				t_ReleasePet.Gui.Enabled = false;
				local v13 = m_Library.Message.New("Are you sure you want to release your " .. m_Library.Shared.PetNameShort(val1) .. " to open the gate? You will LOSE it FOREVER!", true);
				if v13 then
					local v14 = m_Library.Message.New("ARE YOU SURE? You will DELETE your pet FOREVER!!", true);
					if v14 then
						local v15 = m_Library.Message.New("ARE YOU REALLY SURE? THIS CANNOT BE UNDONE EVER!", true);
						if v15 then
							local v16, v17 = m_Library.Network.Invoke("Diamond Mine: Release Pet", u2, t_uid);
							if not v16 then
								m_Library.Message.New(v17);
								return;
							end
							if u3 then
								local BasePart = u3:FindFirstChildWhichIsA("BasePart");
								local t_Size = BasePart.Size;
								Animation(t_Size, BasePart.CFrame);
							end
						end
					end
				end
			end
			v10.Activated:Connect(function() -- Line: 160
				--[[
					Upvalues:
						[1] = bool1
						[2] = Clicked
				--]]
				if not bool1 then
					bool1 = true;
					Clicked();
					UpdateLazy();
					bool1 = false;
				end
			end);
			m_Library.GUIFX.ButtonFX(v10);
		end
		v10:SetAttribute("Tick", u1);
		v10.LayoutOrder = key1;
		v10.Level:FindFirstChildOfClass("UIStroke").Thickness = 4;
		v10.HC:FindFirstChildOfClass("UIStroke").Thickness = 4;
		v10.Locked.Visible = val1.l;
		v10.Stars.Visible = not v10.Locked.Visible;
		v10.Equipped.Visible = t_uid == nil;
		if v9 and v1 then
			local bool3 = false;
			if string.find(string.lower(t_name), v1, 1, true) then
				bool3 = true;
			elseif val1.nk and string.find(string.lower(val1.nk), v1, 1, true) then
				bool3 = true;
			elseif string.find(string.lower(t_rarity), v1, 1, true) then
				bool3 = true;
			elseif t_sh and string.find("shiny", v1, 1, true) then
				bool3 = true;
			elseif t_g and (string.find("gold", v1, 1, true) or string.find("golden", v1, 1, true)) then
				bool3 = true;
			elseif t_r and string.find("rainbow", v1, 1, true) then
				bool3 = true;
			elseif t_dm and string.find("dark matter", v1, 1, true) then
				bool3 = true;
			elseif t_l and string.find("lock", v1, 1, true) then
				bool3 = true;
			elseif t_powers and #t_powers > 0 then
				for _, val4 in ipairs(t_powers) do
					local unpack_ret1, unpack_ret2 = unpack(val4);
					local v18, _ = m_Library.Shared.GetPowerDir(unpack_ret1, unpack_ret2);
					if not string.find(string.lower(v18.title), v1, 1, true) then continue end
					bool3 = true;
					break;
				end
			end
			v10.Visible = bool3;
		else
			v10.Visible = true;
		end
		v10.Parent = t_ReleasePet.Main.Pets;
	end
	for _, child2 in ipairs(t_ReleasePet.Main.Pets:GetChildren()) do
		local Attribute = child2:GetAttribute("Tick");
		if not Attribute or Attribute == u1 then continue end
		child2:Destroy();
	end
	local v3 = 0;
	local v4 = u4.MaxSlots - #v2;
	for _, child3 in ipairs(t_ReleasePet.Main.Pets:GetChildren()) do
		if child3.Name ~= "Empty" then continue end
		v3 = v3 + 1;
	end
	local v5 = v4 - v3;
	if v5 > 0 then
		for index1 = 1, v5 do
			t_Inventory.Empty:Clone().Parent = t_ReleasePet.Main.Pets;
		end
	elseif v5 < 0 then
		for index2 = 1, -v5 do
			local Empty = t_ReleasePet.Main.Pets:FindFirstChild("Empty");
			if not Empty then break end
			Empty:Destroy();
		end
	end
	UpdateScrolling();
	debug.profileend();
end
function UpdateScrolling() -- Line: 270
	--[[
		Upvalues:
			[1] = t_ReleasePet
			[2] = m_Library
	--]]
	debug.profilebegin("ReleasePet.UpdateScrolling");
	local t_Pets2 = t_ReleasePet.Main.Pets;
	local UIGridLayout = t_Pets2:FindFirstChildOfClass("UIGridLayout");
	local UIPadding = t_Pets2:FindFirstChildOfClass("UIPadding");
	local v6 = m_Library.Functions.ResolutionScale();
	local v7 = v6 <= 0.5 and 4 or v6 <= 0.65 and 5 or v6 <= 1 and 6 or v6 <= 1.2 and 7 or 8;
	UIGridLayout.CellPadding = UDim2.new(0, 20, 0, 20);
	local v8 = (t_Pets2.AbsoluteSize.X - t_Pets2.ScrollBarThickness - UIPadding.PaddingLeft.Offset - UIPadding.PaddingRight.Offset) / v7 - UIGridLayout.CellPadding.X.Offset;
	local udim2 = UDim2.new(0, v8, 0, v8);
	UIGridLayout.CellSize = udim2;
	UIGridLayout:ApplyLayout();
	t_Pets2.CanvasSize = UDim2.new(0, UIGridLayout.AbsoluteContentSize.X, 0, UIGridLayout.AbsoluteContentSize.Y + 65);
	debug.profileend();
end
function Animation(p1, p2) -- Line: 303
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local Part = Instance.new("Part");
	Part.Anchored = true;
	Part.CanCollide = false;
	Part.Transparency = 1;
	Part.Size = p1;
	Part.CFrame = p2;
	Part.Parent = m_Library.Debris;
	m_Library.Audio.Play("rbxassetid://6980742890", Part, 1, 1.25, 500);
	local Clone_ret = m_Library.Assets.Particles:FindFirstChild("Gate Unlock"):Clone();
	Clone_ret.Parent = Part;
	Clone_ret:Emit(100);
	m_Library.Functions.AddDebris(Part, 10);
end
t_ReleasePet.Gui:GetPropertyChangedSignal("Enabled"):Connect(function() -- Line: 335
	--[[
		Upvalues:
			[1] = t_ReleasePet
	--]]
	if not t_ReleasePet.Gui.Enabled then return end
	UpdateLazy();
end);
t_ReleasePet.Frame.Bottom.Search.Query:GetPropertyChangedSignal("Text"):Connect(function() -- Line: 344
	--[[
		Upvalues:
			[1] = t_ReleasePet
	--]]
	if t_ReleasePet.Frame.Bottom.Search.Query.Text ~= "" then
		t_ReleasePet.Main.Pets.CanvasPosition = Vector2.new();
	end
	UpdateLazy();
end);
t_ReleasePet.Close.Activated:Connect(function() -- Line: 353
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
			[3] = Random_new_ret
			[4] = t_ReleasePet
	--]]
	if not bool1 then
		debug.profilebegin("ReleasePet.Close.Activated");
		bool1 = true;
		m_Library.Audio.Play("rbxassetid://8951380772", script, Random_new_ret:NextNumber(0.95, 1.05), 0.1);
		t_ReleasePet.Gui.Enabled = false;
		bool1 = false;
		debug.profileend();
	end
end);
m_Library.Signal.Fired("Open Release Pet"):Connect(function(p3, p4) -- Line: 366
	--[[
		Upvalues:
			[1] = u2
			[2] = u3
			[3] = t_ReleasePet
	--]]
	u2 = p3;
	u3 = p4;
	t_ReleasePet.Gui.Enabled = true;
end);
m_Library.Signal.Fired("Resolution Changed"):Connect(function() -- Line: 374
	task.defer(function() -- Line: 376
		UpdateScrolling();
	end);
end);
m_Library.GUIFX.ButtonFX(t_ReleasePet.Close);
Update();
  -  Editar
  04:54:13.918    -  Editar
  04:54:13.918  ----- [2765] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.World GUIs.Local Leaderboard[OLD] -----  -  Editar
  04:54:13.918  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = nil;
local u2 = nil;
function Update() -- Line: 18
	--[[
		Upvalues:
			[1] = u1
			[2] = u2
			[3] = m_Library
	--]]
	if not u1 or not u2 or not u1:FindFirstChild("Main") then return end
	local SurfaceGui = u1.Main:FindFirstChildOfClass("SurfaceGui");
	for key1, val1 in ipairs(u2) do
		local t_player = val1.player;
		local _ = val1.level;
		local v2 = SurfaceGui.Frame:FindFirstChild(t_player.Name);
		if not v2 then
			v2 = m_Library.Assets.UI.Leaderboard.Spot:Clone();
			v2.Name = t_player.Name;
			v2.Size = UDim2.new(1, 0, 0, 46);
			v2.Rank.Visible = false;
			v2.Parent = SurfaceGui.Frame;
		end
		v2.Score.Text = m_Library.Functions.NumberShorten(val1.level, false);
		v2.Username.Text = t_player.DisplayName .. " (@" .. t_player.Name .. ")";
		v2.LayoutOrder = key1;
		if t_player == m_Library.LocalPlayer then
			v2.Username.TextColor3 = Color3.fromRGB(28, 134, 173);
			continue;
		end
		v2.Username.TextColor3 = Color3.fromRGB(121, 121, 121);
	end
	for _, child2 in ipairs(SurfaceGui.Frame:GetChildren()) do
		if child2.ClassName ~= "Frame" or game.Players:FindFirstChild(child2.Name) then continue end
		child2:Destroy();
	end
end
function Grab() -- Line: 56
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u2
	--]]
	local v1 = m_Library.Network.Invoke("Get Local Leaderboard");
	if v1 then
		u2 = v1;
		Update();
	end
end
function Check() -- Line: 65
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		u1 = Map.Interactive:FindFirstChild("Local Leaderboard");
		if u1 then
			Update();
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 81
	--[[
		Upvalues:
			[1] = u1
	--]]
	u1 = nil;
	Check();
end);
local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 87
	--[[
		Upvalues:
			[1] = u1
	--]]
	while true do
		if u1 then
			Grab();
		end
		wait(2);
	end
end);
coroutine_wrap_ret();
  -  Editar
  04:54:13.918    -  Editar
  04:54:13.918  ----- [2766] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.World GUIs.Global Leaderboard -----  -  Editar
  04:54:13.918  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local Color3_fromRGB_ret = Color3.fromRGB(255, 214, 112);
local Color3_fromRGB_ret2 = Color3.fromRGB(0, 187, 255);
local u1 = nil;
local u2 = nil;
local u3 = nil;
local u4 = true;
local bool1 = false;
local u5 = 0;
local Connect_ret = nil;
function Update() -- Line: 26
	--[[
		Upvalues:
			[1] = u4
			[2] = u2
			[3] = u3
			[4] = u1
			[5] = u4
			[6] = m_Library
			[7] = bool1
			[8] = Connect_ret
			[9] = u5
			[10] = Color3_fromRGB_ret2
			[11] = Color3_fromRGB_ret
	--]]
	local v1 = u4 and u2 or u3;
	if not u1 or not v1 or not u1:FindFirstChild("Main") then return end
	local SurfaceGui = u1.Main:FindFirstChildOfClass("SurfaceGui");
	local PowerTitle = SurfaceGui:FindFirstChild("PowerTitle");
	PowerTitle.Visible = not u4;
	local RAPTitle = SurfaceGui:FindFirstChild("RAPTitle");
	RAPTitle.Visible = u4;
	if u4 ~= u4 then
		local v4 = m_Library.Functions.DictionaryLength(u2);
		local v5 = m_Library.Functions.DictionaryLength(u3);
		if u4 == true and v4 < v5 then
			local _ = v5 - v4;
			for index1 = v4 + 1, v5 do
				local FindFirstChild_ret2 = SurfaceGui.Frame:FindFirstChild("Spot" .. index1);
				if FindFirstChild_ret2 then
					FindFirstChild_ret2:Destroy();
				end
			end
		elseif u4 == false and v5 < v4 then
			local _ = v4 - v5;
			for index2 = v5 + 1, v4 do
				local FindFirstChild_ret = SurfaceGui.Frame:FindFirstChild("Spot" .. index2);
				if FindFirstChild_ret then
					FindFirstChild_ret:Destroy();
				end
			end
		end
	end
	u4 = u4;
	for key1, val1 in ipairs(v1) do
		local v6 = SurfaceGui.Frame:FindFirstChild("Spot" .. key1);
		if not v6 then
			local v7 = key1 <= 3;
			v6 = m_Library.Assets.UI.Leaderboard.Spot:Clone();
			v6.LayoutOrder = key1;
			v6.Rank.Text = "#" .. key1;
			v6.Name = "Spot" .. key1;
			v6.Size = UDim2.new(1, 0, 0, v7 and 50 or 45);
			v6.Rank.TextColor3 = v7 and Color3.fromRGB(180, 170, 31) or Color3.fromRGB(102, 102, 102);
			v6.Parent = SurfaceGui.Frame;
		end
		v6.Icon.Visible = u4 == true;
		v6.PetIcon.Visible = u4 == false;
		v6.Score.Text = m_Library.Functions.NumberShorten(val1.level, false);
		v6.Username.Text = "@" .. val1.username;
		if val1.username == m_Library.LocalPlayer.Name then
			v6.Username.TextColor3 = Color3.fromRGB(28, 134, 173);
			continue;
		end
		v6.Username.TextColor3 = Color3.fromRGB(121, 121, 121);
	end
	local Buttons = SurfaceGui:FindFirstChild("Buttons");
	local Power = Buttons:FindFirstChild("Power"):FindFirstChild("Power");
	local RAP = Buttons:FindFirstChild("RAP"):FindFirstChild("RAP");
	if not bool1 then
		Power.Visible = true;
		RAP.Visible = true;
		Power.Activated:Connect(function() -- Line: 95
			--[[
				Upvalues:
					[1] = Connect_ret
					[2] = u5
					[3] = u4
					[4] = Power
					[5] = RAP
					[6] = Color3_fromRGB_ret2
					[7] = Color3_fromRGB_ret
					[8] = m_Library
			--]]
			if Connect_ret then
				Connect_ret:Disconnect();
			end
			u5 = 0;
			u4 = false;
			Power.Image = u4 and "rbxassetid://11632629004" or "rbxassetid://11632629074";
			RAP.Image = u4 and "rbxassetid://11632629074" or "rbxassetid://11632629004";
			Power.ImageColor3 = u4 and Color3_fromRGB_ret2 or Color3_fromRGB_ret;
			RAP.ImageColor3 = u4 and Color3_fromRGB_ret or Color3_fromRGB_ret2;
			Update();
			m_Library.Signal.Fire("Local Leaderboard: Update");
		end);
		RAP.Activated:Connect(function() -- Line: 108
			--[[
				Upvalues:
					[1] = Connect_ret
					[2] = u5
					[3] = u4
					[4] = Power
					[5] = RAP
					[6] = Color3_fromRGB_ret2
					[7] = Color3_fromRGB_ret
					[8] = m_Library
			--]]
			if Connect_ret then
				Connect_ret:Disconnect();
			end
			u5 = 0;
			u4 = true;
			Power.Image = u4 and "rbxassetid://11632629004" or "rbxassetid://11632629074";
			RAP.Image = u4 and "rbxassetid://11632629074" or "rbxassetid://11632629004";
			Power.ImageColor3 = u4 and Color3_fromRGB_ret2 or Color3_fromRGB_ret;
			RAP.ImageColor3 = u4 and Color3_fromRGB_ret or Color3_fromRGB_ret2;
			Update();
			m_Library.Signal.Fire("Local Leaderboard: Update");
		end);
		m_Library.GUIFX.ButtonFX(Power);
		m_Library.GUIFX.ButtonFX(RAP);
		bool1 = true;
	end
	Power.Image = u4 and "rbxassetid://11632629004" or "rbxassetid://11632629074";
	RAP.Image = u4 and "rbxassetid://11632629074" or "rbxassetid://11632629004";
	SurfaceGui.Frame.CanvasSize = UDim2.new(0, 0, 0, SurfaceGui.Frame:FindFirstChildOfClass("UIListLayout").AbsoluteContentSize.Y);
end
function Grab() -- Line: 135
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u2
			[3] = u3
	--]]
	local v2 = m_Library.Network.Invoke("Get Global Leaderboard");
	if v2 then
		u2 = v2;
		Update();
	end
	local v3 = m_Library.Network.Invoke("Get Global Power Leaderboard");
	if v3 then
		u3 = v3;
		Update();
	end
end
function Check() -- Line: 150
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		u1 = Map.Interactive:FindFirstChild("Leaderboard");
		if u1 then
			Update();
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 166
	--[[
		Upvalues:
			[1] = u1
			[2] = bool1
	--]]
	u1 = nil;
	bool1 = false;
	Check();
end);
m_Library.Signal.Invoked("Leaderboard: Is Displaying RAP").OnInvoke = function() -- Line: 172
	--[[
		Upvalues:
			[1] = u4
	--]]
	return u4;
end
task.delay(10, function() -- Line: 176
	--[[
		Upvalues:
			[1] = Connect_ret
			[2] = m_Library
			[3] = u1
			[4] = u5
			[5] = u4
			[6] = Color3_fromRGB_ret2
			[7] = Color3_fromRGB_ret
	--]]
	Connect_ret = m_Library.RunService.Heartbeat:Connect(function(p1) -- Line: 177
		--[[
			Upvalues:
				[1] = u1
				[2] = u5
				[3] = u4
				[4] = Color3_fromRGB_ret2
				[5] = Color3_fromRGB_ret
				[6] = m_Library
		--]]
		if not u1 then return end
		u5 = u5 + p1;
		if u5 >= 60 then
			u5 = 0;
			u4 = not u4;
			local SurfaceGui2 = u1.Main:FindFirstChildOfClass("SurfaceGui");
			local Buttons2 = SurfaceGui2:FindFirstChild("Buttons");
			local Power2 = Buttons2:FindFirstChild("Power"):FindFirstChild("Power");
			local RAP2 = Buttons2:FindFirstChild("RAP"):FindFirstChild("RAP");
			Power2.Image = u4 and "rbxassetid://11632629004" or "rbxassetid://11632629074";
			RAP2.Image = u4 and "rbxassetid://11632629074" or "rbxassetid://11632629004";
			Power2.ImageColor3 = u4 and Color3_fromRGB_ret2 or Color3_fromRGB_ret;
			RAP2.ImageColor3 = u4 and Color3_fromRGB_ret or Color3_fromRGB_ret2;
			Update();
			m_Library.Signal.Fire("Local Leaderboard: Update");
		end
	end);
end);
local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 204
	--[[
		Upvalues:
			[1] = u1
	--]]
	while true do
		if u1 then
			Grab();
		end
		wait(10);
	end
end);
coroutine_wrap_ret();
  -  Editar
  04:54:13.918    -  Editar
  04:54:13.919  ----- [2767] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.World GUIs.Fanart Wall -----  -  Editar
  04:54:13.919  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local Random_new_ret = Random.new();
local t_FanArt = m_Library.Shared.FanArt;
local u1 = nil;
local u2 = 0;
function Update() -- Line: 20
	--[[
		Upvalues:
			[1] = u1
			[2] = u2
			[3] = t_FanArt
			[4] = Random_new_ret
	--]]
	if not u1 then return end
	u2 = u2 + 1;
	local v1 = u2;
	local SurfaceGui = u1.Main:FindFirstChildOfClass("SurfaceGui");
	while v1 == u2 and u1 and SurfaceGui and SurfaceGui:FindFirstChild("ImageLabel") and SurfaceGui:FindFirstChild("TextLabel") do
		local v2 = t_FanArt[Random_new_ret:NextInteger(1, #t_FanArt)];
		SurfaceGui.ImageLabel.Image = v2[1];
		SurfaceGui.TextLabel.Text = "\240\159\150\140\239\184\143 @" .. v2[2];
		wait(15);
	end
end
function Check() -- Line: 43
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		u1 = Map.Interactive:FindFirstChild("Fanart");
		if u1 then
			Update();
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 59
	--[[
		Upvalues:
			[1] = u1
	--]]
	u1 = nil;
	--setup = false;
	Check();
end);
  -  Editar
  04:54:13.919    -  Editar
  04:54:13.919  ----- [2768] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.World GUIs.Advert Signs -----  -  Editar
  04:54:13.919  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = m_Library.Player.PlayerGui();
local bool1 = false;
local table1 = {};
function LoadSign(p1) -- Line: 19
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
			[3] = table1
			[4] = bool1
	--]]
	local u2 = p1:GetAttribute("ProductID") ~= nil;
	local u3 = u2 and m_Library.Directory.Products[p1:GetAttribute("ProductID")].ID or m_Library.Directory.Gamepasses[p1:GetAttribute("GamepassID")].ID;
	local t_PrimaryPart = p1.PrimaryPart;
	if not t_PrimaryPart then return end
	local SurfaceGui = t_PrimaryPart:FindFirstChildOfClass("SurfaceGui");
	if not SurfaceGui or not SurfaceGui:FindFirstChild("Buy") or not SurfaceGui:FindFirstChild("Buy"):FindFirstChild("Cost") then return end
	SurfaceGui.Parent = u1;
	SurfaceGui.Adornee = t_PrimaryPart;
	table.insert(table1, SurfaceGui);
	local v1, v2 = m_Library.Functions.GetPrice(u3, u2);
	if not SurfaceGui or not SurfaceGui:FindFirstChild("Buy") or not SurfaceGui:FindFirstChild("Buy"):FindFirstChild("Cost") then return end
	SurfaceGui.Buy.Cost.Text = v2 and m_Library.Functions.Commas(v1) or "Offsale";
	m_Library.GUIFX.ButtonFX(SurfaceGui.Buy);
	SurfaceGui.Buy.Activated:Connect(function() -- Line: 43
		--[[
			Upvalues:
				[1] = bool1
				[2] = m_Library
				[3] = u3
				[4] = u2
		--]]
		if not bool1 then
			bool1 = true;
			m_Library.Shared.PromptPurchase(u3, u2);
			bool1 = false;
		end
	end);
end
function LoadWorld() -- Line: 53
	--[[
		Upvalues:
			[1] = table1
			[2] = m_Library
	--]]
	for _, val1 in ipairs(table1) do
		val1:Destroy();
	end
	table1 = {};
	local Map = m_Library.WorldCmds.GetMap();
	local Interactive = Map:FindFirstChild("Interactive");
	if Interactive then
		for _, child2 in ipairs(Interactive:GetChildren()) do
			if not child2:GetAttribute("GamepassID") and not child2:GetAttribute("ProductID") or child2.Name ~= "Sign" then continue end
			LoadSign(child2);
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 71
	LoadWorld();
end);
  -  Editar
  04:54:13.919    -  Editar
  04:54:13.919  ----- [2769] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.World GUIs.Twitter Sign -----  -  Editar
  04:54:13.919  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = m_Library.Player.PlayerGui();
local bool1 = false;
local table1 = {};
function UpdateSign(p1) -- Line: 19
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v1 = m_Library.Save.Get();
	if not v1 then return end
	local t_IsFollowingOnTwitter = v1.IsFollowingOnTwitter;
	p1.Verified.Visible = t_IsFollowingOnTwitter;
	p1.Verify.Visible = not t_IsFollowingOnTwitter;
end
function LoadSign(p2) -- Line: 31
	--[[
		Upvalues:
			[1] = u1
			[2] = table1
			[3] = m_Library
			[4] = bool1
	--]]
	local t_PrimaryPart = p2.PrimaryPart;
	if not t_PrimaryPart then return end
	local SurfaceGui = t_PrimaryPart:FindFirstChildOfClass("SurfaceGui");
	if not SurfaceGui then return end
	SurfaceGui.Parent = u1;
	SurfaceGui.Adornee = t_PrimaryPart;
	table.insert(table1, SurfaceGui);
	UpdateSign(SurfaceGui);
	m_Library.GUIFX.ButtonFX(SurfaceGui.Verify);
	SurfaceGui.Verify.Activated:Connect(function() -- Line: 48
		--[[
			Upvalues:
				[1] = bool1
				[2] = m_Library
		--]]
		if not bool1 then
			bool1 = true;
			m_Library.GUI.VerifyTwitter.Gui.Enabled = true;
			bool1 = false;
		end
	end);
end
function LoadWorld() -- Line: 58
	--[[
		Upvalues:
			[1] = table1
			[2] = m_Library
	--]]
	for _, val1 in ipairs(table1) do
		val1:Destroy();
	end
	table1 = {};
	local Map = m_Library.WorldCmds.GetMap();
	local Interactive = Map:FindFirstChild("Interactive");
	if Interactive then
		for _, child2 in ipairs(Interactive:GetChildren()) do
			if child2.Name ~= "Twitter Sign" then continue end
			LoadSign(child2);
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 79
	LoadWorld();
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p3) -- Line: 84
	--[[
		Upvalues:
			[1] = table1
	--]]
	if p3 == "IsFollowingOnTwitter" then
		for _, val3 in ipairs(table1) do
			UpdateSign(val3);
		end
	end
end);
  -  Editar
  04:54:13.919    -  Editar
  04:54:13.919  ----- [2770] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.World GUIs.Update Countdown -----  -  Editar
  04:54:13.919  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = nil;
local u2 = nil;
local u3 = nil;
local u4 = nil;
local u5 = nil;
local ServerTimeNow = workspace:GetServerTimeNow();
local u6 = nil;
local t_NotificationsTop = nil;
function UpdateScreen() -- Line: 20
	--[[
		Upvalues:
			[1] = t_NotificationsTop
			[2] = m_Library
			[3] = u4
			[4] = ServerTimeNow
			[5] = u1
			[6] = u2
			[7] = u3
			[8] = u5
	--]]
	if not t_NotificationsTop or not t_NotificationsTop.ImageNotification.Notification then return end
	if not m_Library.FFlags.Get(m_Library.FFlags.Keys.UpdateGift) then
		if t_NotificationsTop.Gui.Enabled then
			t_NotificationsTop.Gui.Enabled = false;
		end
		t_NotificationsTop.Gui.Enabled = false;
		return;
	end
	local t_Notification = t_NotificationsTop.ImageNotification.Notification;
	if not u4 or not ServerTimeNow then
		u1, u2, u3, u4, u5 = m_Library.Network.Invoke("Get Update Countdown Details");
	end
	local math_clamp_ret = math.clamp(u5 - (u4 + (workspace:GetServerTimeNow() - ServerTimeNow)), -1200, u5);
	if u2 < math_clamp_ret then
		t_NotificationsTop.Gui.Enabled = false;
		return;
	end
	t_NotificationsTop.Frame.Position = m_Library.Variables.Mobile and UDim2.new(0.5, 0, 0.25, -40) or UDim2.new(0.5, 0, 0.2, -40);
	if math_clamp_ret > 0 then
		if not t_NotificationsTop.Gui.Enabled and u3 < math_clamp_ret then
			task.spawn(function() -- Line: 53
				--[[
					Upvalues:
						[1] = m_Library
				--]]
				m_Library.Message.New("Updating soon! Be online 1 minute before to receive a FREE gift!");
			end);
		end
		t_NotificationsTop.Gui.Enabled = true;
	end
	local v1 = "Update in " .. os.date("!%X", math_clamp_ret) .. "!";
	if math_clamp_ret > 0 then
		t_Notification.Text = v1;
		return;
	end
	if math_clamp_ret > -120 then
		t_Notification.Text = "Updating now...";
		return;
	end
	t_NotificationsTop.Gui.Enabled = false;
end
function UpdateBillboard() -- Line: 75
	--[[
		Upvalues:
			[1] = u6
			[2] = u4
			[3] = ServerTimeNow
			[4] = u1
			[5] = u2
			[6] = u3
			[7] = u5
			[8] = m_Library
	--]]
	if not u6 then return end
	if not u4 or not ServerTimeNow then
		u1, u2, u3, u4, u5 = m_Library.Network.Invoke("Get Update Countdown Details");
	end
	local Countdown = u6:FindFirstChild("Countdown");
	if not Countdown or not Countdown:FindFirstChild("Timer") then return end
	if not m_Library.FFlags.Get(m_Library.FFlags.Keys.UpdateGift) then
		if Countdown.Enabled then
			Countdown.Enabled = false;
		end
		Countdown.Enabled = false;
		return;
	end
	local math_clamp_ret2 = math.clamp(u5 - (u4 + (workspace:GetServerTimeNow() - ServerTimeNow)), -1200, u5);
	if u1 < math_clamp_ret2 then
		Countdown.Enabled = false;
		return;
	end
	if math_clamp_ret2 > 0 then
		Countdown.Enabled = true;
	end
	local math_round_ret = math.round(math_clamp_ret2 / 60 / 60 / 24 - 0.5);
	local v2 = os.date("!%X", math_clamp_ret2);
	if math_round_ret and math_round_ret > 0 then
		v2 = math_round_ret .. ":" .. v2;
	end
	if math_clamp_ret2 > 0 then
		Countdown.Timer.Text = v2;
		return;
	end
	if math_clamp_ret2 > -120 then
		Countdown.Timer.Text = "Updating now...";
		return;
	end
	Countdown.Enabled = false;
end
function Check() -- Line: 129
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u6
			[3] = t_NotificationsTop
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		u6 = Map.Interactive:FindFirstChild("Update Countdown");
		if u6 then
			UpdateBillboard();
		end
	end
	t_NotificationsTop = m_Library.GUI.NotificationsTop;
	if t_NotificationsTop and t_NotificationsTop.ImageNotification then
		UpdateScreen();
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 149
	--[[
		Upvalues:
			[1] = u6
	--]]
	u6 = nil;
	Check();
end);
local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 155
	while true do
		UpdateBillboard();
		UpdateScreen();
		wait(0.5);
	end
end);
coroutine_wrap_ret();
  -  Editar
  04:54:13.919    -  Editar
  04:54:13.920  ----- [2771] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.World GUIs.Like Goal -----  -  Editar
  04:54:13.920  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = nil;
function Update() -- Line: 17
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
	--]]
	if not u1 then return end
	local Goal = u1:FindFirstChild("Goal");
	local v1, _, v2 = m_Library.Network.Invoke("Get Like Goal");
	if v1 then
		Goal.live.Visible = true;
		if v2 then
			Goal.live.Text = "Reached!";
			return;
		end
		Goal.live.Text = "Live: " .. m_Library.Functions.Commas(v1);
		return;
	end
	print("Failed to get like goal data");
	Goal.live.Visible = false;
end
function Check() -- Line: 40
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		u1 = Map.Interactive:FindFirstChild("Update Like Goal");
		if u1 then
			Update();
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 56
	--[[
		Upvalues:
			[1] = u1
	--]]
	u1 = nil;
	Check();
end);
local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 62
	while true do
		Update();
		wait(10);
	end
end);
coroutine_wrap_ret();
  -  Editar
  04:54:13.920    -  Editar
  04:54:13.920  ----- [2772] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.World GUIs.Event Countdown -----  -  Editar
  04:54:13.920  local _L = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
while (not _L.Loaded) do  game:GetService("RunService").Heartbeat:Wait()  end

local eventNotification = _L.GUI.EventNotification
local countdown = eventNotification.Gui.Frame.Countdown
local connect = nil
local enabled = false

function Clear()  
	eventNotification.Gui.Enabled = false
	enabled = false
	if connect then
		connect:Disconnect()
	end
end

function UpdateText(...)  
	Clear()
	Update(...)
end

function Update(text, countdownText, finishedText, endTime, showFinishedTime)  
	showFinishedTime = showFinishedTime or -10
	
	local time = endTime - workspace:GetServerTimeNow()
	
	if eventNotification.Gui.Enabled then 
		return 
	end
	 
	eventNotification.Gui.Frame.Title.Text = text
	connect = _L.RunService.Heartbeat:Connect(function(step)  
		if not eventNotification.Gui.Enabled then
			connect:Disconnect()
			return
		end
		
		if time > 0 then
			enabled = true
			countdown.Text = countdownText .. _L.Functions.FormatTime(time >= 0 and time or 0, true, true) .. "!"
			return
		end
		
		if showFinishedTime < time then
			countdown.Text = finishedText
			return
		end
		
		enabled = false
		eventNotification.Gui.Enabled = false
		connect:Disconnect()
	end)
	
	eventNotification.Frame.Position = _L.Variables.Mobile and UDim2.new(0.5, 0, 0.25, -40) or UDim2.new(0.5, 0, 0.2, -40)
	eventNotification.Gui.Enabled = true
end

_L.Network.Fired("Start Event Countdown"):Connect(Update)
_L.Network.Fired("Stop Event Countdown"):Connect(Clear)
_L.Network.Fired("Update Event Countdown"):Connect(UpdateText)
  -  Editar
  04:54:13.920    -  Editar
  04:54:13.920  ----- [2773] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.World GUIs.Local Leaderboard -----  -  Editar
  04:54:13.920  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = nil;
local u2 = nil;
local u3 = nil;
local u4 = nil;
function Update() -- Line: 19
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u4
			[3] = u2
			[4] = u3
			[5] = u1
	--]]
	local v1 = m_Library.Signal.Invoke("Leaderboard: Is Displaying RAP");
	if u4 == nil then
		u4 = v1;
	end
	local v2 = v1 and u2 or u3;
	if not u1 or not v2 or not u1:FindFirstChild("Main") then return end
	local SurfaceGui = u1.Main:FindFirstChildOfClass("SurfaceGui");
	if u4 ~= v1 then
		local v5 = m_Library.Functions.DictionaryLength(u2);
		local v6 = m_Library.Functions.DictionaryLength(u3);
		if v1 == true and v5 < v6 then
			local _ = v6 - v5;
			for index1 = v5 + 1, v6 do
				local FindFirstChild_ret2 = SurfaceGui.Frame:FindFirstChild("Spot" .. index1);
				if FindFirstChild_ret2 then
					FindFirstChild_ret2:Destroy();
				end
			end
		elseif v1 == false and v6 < v5 then
			local _ = v5 - v6;
			for index3 = v6 + 1, v5 do
				local FindFirstChild_ret = SurfaceGui.Frame:FindFirstChild("Spot" .. index3);
				if FindFirstChild_ret then
					FindFirstChild_ret:Destroy();
				end
			end
		end
	end
	u4 = v1;
	if u4 ~= v1 then
		local v7 = m_Library.Functions.DictionaryLength(u2);
		local v8 = m_Library.Functions.DictionaryLength(u3);
		if v1 == true and v7 < v8 then
			local _ = v8 - v7;
			for index2 = v7 + 1, v8 do
				local FindFirstChild_ret4 = SurfaceGui.Frame:FindFirstChild("Spot" .. index2);
				if FindFirstChild_ret4 then
					FindFirstChild_ret4:Destroy();
				end
			end
		elseif v1 == false and v8 < v7 then
			local _ = v7 - v8;
			for index4 = v8 + 1, v7 do
				local FindFirstChild_ret3 = SurfaceGui.Frame:FindFirstChild("Spot" .. index4);
				if FindFirstChild_ret3 then
					FindFirstChild_ret3:Destroy();
				end
			end
		end
	end
	u4 = v1;
	for key1, val1 in ipairs(v2) do
		local t_player = val1.player;
		local _ = val1.level;
		local v9 = SurfaceGui.Frame:FindFirstChild(t_player.Name);
		if not v9 then
			v9 = m_Library.Assets.UI.Leaderboard.Spot:Clone();
			v9.Name = t_player.Name;
			v9.Size = UDim2.new(1, 0, 0, 46);
			v9.Rank.Visible = false;
			v9.Parent = SurfaceGui.Frame;
		end
		v9.Icon.Visible = v1 == true;
		v9.PetIcon.Visible = v1 == false;
		v9.Score.Text = m_Library.Functions.NumberShorten(val1.level, false);
		v9.Username.Text = t_player.DisplayName .. " (@" .. t_player.Name .. ")";
		v9.LayoutOrder = key1;
		if t_player == m_Library.LocalPlayer then
			v9.Username.TextColor3 = Color3.fromRGB(28, 134, 173);
			continue;
		end
		v9.Username.TextColor3 = Color3.fromRGB(121, 121, 121);
	end
	for _, child2 in ipairs(SurfaceGui.Frame:GetChildren()) do
		if child2.ClassName ~= "Frame" or game.Players:FindFirstChild(child2.Name) then continue end
		child2:Destroy();
	end
	SurfaceGui.Frame.CanvasSize = UDim2.new(0, 0, 0, SurfaceGui.Frame:FindFirstChildOfClass("UIListLayout").AbsoluteContentSize.Y);
end
function Grab() -- Line: 118
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u2
			[3] = u3
	--]]
	local v3 = m_Library.Network.Invoke("Get Local Leaderboard");
	if v3 then
		u2 = v3;
	end
	local v4 = m_Library.Network.Invoke("Get Local Power Leaderboard");
	if v4 then
		u3 = v4;
	end
	Update();
end
function Check() -- Line: 133
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		u1 = Map.Interactive:FindFirstChild("Local Leaderboard");
		if u1 then
			Update();
		end
	end
end
m_Library.Signal.Fired("Local Leaderboard: Update"):Connect(Update);
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 150
	--[[
		Upvalues:
			[1] = u1
	--]]
	u1 = nil;
	Check();
end);
local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 156
	--[[
		Upvalues:
			[1] = u1
	--]]
	while true do
		if u1 then
			Grab();
		end
		wait(2);
	end
end);
coroutine_wrap_ret();

  -  Editar
  04:54:13.920    -  Editar
  04:54:13.920  ----- [2774] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.World GUIs.Voting Boards -----  -  Editar
  04:54:13.920  -- Decompiled with the Synapse X Luau decompiler.

local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not v1.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end;
local v2 = v1.Player.PlayerGui();
local v3 = {};
local u1 = nil;
local u2 = {
	pressedImage = "rbxassetid://13244996429", 
	image = "rbxassetid://13244996333"
};
local u3 = {
	pressedimage = "rbxassetid://13245061179", 
	image = "rbxassetid://13245051488"
};
function UpdateSign(p1)
	if not v1.Save.Get() then
		return;
	end;
	if not u1 then
		return;
	end;
		
	p1.Title.Text = u1.Vote;
	p1.Positive.PositiveButton.Image = u2.image;
	p1.Negative.NegativeButton.Image = u3.image;
	if u1.PlayerVote ~= nil then
		if u1.PlayerVote == true then
			p1.Positive.PositiveButton.Image = "rbxassetid://13244996429" --u2.pressedImage;
			p1.Negative.NegativeButton.Image = "rbxassetid://13245051488" --u3.image;
		elseif u1.PlayerVote == false then
			p1.Negative.NegativeButton.Image = "rbxassetid://13245061179" --u3.pressedImage;
			p1.Positive.PositiveButton.Image = "rbxassetid://13244996333" --u2.image;
		end;
	end;
end;
local u4 = false;
function LoadSign(p2)
	local l__PrimaryPart__4 = p2.PrimaryPart;
	if not l__PrimaryPart__4 then
		return;
	end;
	local v5 = l__PrimaryPart__4:FindFirstChildOfClass("SurfaceGui");
	if not v5 then
		return;
	end;
	UpdateSign(v5);
	local l__NegativeButton__6 = v5.Negative.NegativeButton;
	v1.GUIFX.ButtonFX(l__NegativeButton__6);
	l__NegativeButton__6.Activated:Connect(function()
		if not u4 then
			u4 = true;
			v1.Network.Fire("Submit Vote", false);
			u4 = false;
		end;
	end);
	local l__PositiveButton__7 = v5.Positive.PositiveButton;
	v1.GUIFX.ButtonFX(l__PositiveButton__7);
	l__PositiveButton__7.Activated:Connect(function()
		if not u4 then
			u4 = true;
			v1.Network.Fire("Submit Vote", true);
			u4 = false;
		end;
	end);
end;
function LoadWorld()
	local l__Interactive__8 = v1.WorldCmds.GetMap():FindFirstChild("Interactive");
	if l__Interactive__8 then
		for v9, v10 in ipairs(l__Interactive__8:GetChildren()) do
			if v10.Name == "Vote Sign" then
				LoadSign(v10);
			end;		
		end;
	end;
end;
function UpdateSigns()
	local l__Interactive__12 = v1.WorldCmds.GetMap():FindFirstChild("Interactive");
	if l__Interactive__12 then
		for v13, v14 in ipairs(l__Interactive__12:GetChildren()) do
			if v14.Name == "Vote Sign" then
				local l__PrimaryPart__16 = v14.PrimaryPart;
				if not l__PrimaryPart__16 then
					warn("No primary");
				else
					local v17 = l__PrimaryPart__16:FindFirstChildOfClass("SurfaceGui");
					if not v17 then
						warn("No surface gui", l__PrimaryPart__16);
					else
						UpdateSign(v17);
					end;
				end;
			end;		
		end;
	end;
end;
v1.Signal.Fired("World Changed"):Connect(function()
	LoadWorld();
end);
v1.Network.Fired("Update Vote Signs"):Connect(function(p3)
	u1 = p3;
	UpdateSigns();
end);
  -  Editar
  04:54:13.920    -  Editar
  04:54:13.921  ----- [2775] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.World GUIs.Quest Signs -----  -  Editar
  04:54:13.921  -- Decompiled with the Synapse X Luau decompiler.

local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not v1.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end;
local v2 = v1.Player.PlayerGui();
local v3 = {};
local u1 = {};
local l__QuestShop__2 = v1.GUI.QuestShop;
local u3 = false;
function UpdateWorld()
	for v4, v5, v6 in ipairs(u1) do
		v5:Disconnect();	
	end;
	u1 = {};
	local l__Interactive__7 = v1.WorldCmds.GetMap():FindFirstChild("Interactive");
	if l__Interactive__7 then
		local l__Quest_Signs__8 = l__Interactive__7:FindFirstChild("Quest Signs");
		if l__Quest_Signs__8 then
			for v9, v10, v11 in ipairs(l__Quest_Signs__8:GetChildren()) do
				if v1.Shared.IsHardcore then
					v10:Destroy();
				end;
				local l__SurfaceGui__12 = v10:FindFirstChild("Main"):FindFirstChild("SurfaceGui");
				local l__List__13 = l__SurfaceGui__12:FindFirstChild("List");
				for v17, v18 in pairs(v1.Directory.Quests[v10.Name])  do
					local v19 = v1.QuestCmds.Get(v18.AreaId, v17);
					local v20 = v18.Amount - v19.v;
					if v19.c then
						v20 = v18.Amount;
					end;
					local v21 = v1.Types.Quests.ComputeDescription(v18, v1.Directory.Areas[v18.AreaId], v20);
					local v22 = l__List__13:FindFirstChild(v18.Tier);
					if v22 then
						local l__Title__23 = v22:FindFirstChild("Title");
						if l__Title__23 then
							l__Title__23.Text = v21;
							if v19.c then
								l__Title__23.TextColor3 = Color3.fromHex("#6b6b6b");
							end;
						end;
						if v19.c then
							local v24 = nil;
							for v25, v26, v27 in ipairs(v22.Rating:GetChildren()) do
								if v26.Name == "ImageLabel" then
									v24 = v26:Clone();
									v26:Destroy();
								end;							
							end;
							v24.Image = "rbxassetid://6516386809";
							v24.Parent = v22.Rating;
						end;
					end;				
				end;
				local l__Button__28 = l__SurfaceGui__12:FindFirstChild("Button");
				table.insert(u1, (l__Button__28.Activated:Connect(function()
					--l__QuestShop__2.Gui.Enabled = not l__QuestShop__2.Gui.Enabled;
					v1.Message.New("disabled lol, if u want to use it use dex or smth idrc")
				end)));
				if not u3 then
					v1.GUIFX.ButtonFX(l__Button__28);
				end;			
			end;
		end;
	end;
end;
v1.Signal.Fired("Stat Changed"):Connect(function(p1)
	if p1 == "Quests" then
		UpdateWorld();
	end;
end);
v1.Signal.Fired("World Changed"):Connect(function()
	u3 = false;
	UpdateWorld();
	u3 = true;
end);
  -  Editar
  04:54:13.921    -  Editar
  04:54:13.921  ----- [2776] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.World GUIs.Pinata Event -----  -  Editar
  04:54:13.921  -- Decompiled with the Synapse X Luau decompiler.

local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not v1.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end;
local u1 = v1.Network.Invoke("Pinata: Get First Time");
local u2 = v1.Network.Invoke("Pinata: Get Interval");
function GetNextTime()
	while true do
		if u1 < workspace:GetServerTimeNow() then

		else
			break;
		end;
		u1 = u1 + u2;	
	end;
	return u1 - workspace:GetServerTimeNow();
end;
local u3 = nil;
function LoadWorld()
	local l__Interactive__2 = v1.WorldCmds.GetMap():FindFirstChild("Interactive");
	if l__Interactive__2 then
		local v3, v4, v5 = ipairs(l__Interactive__2:GetChildren());
		while true do
			v3(v4, v5);
			if v3 then

			else
				break;
			end;
			v5 = v3;
			if v4.Name == "Giant Pinata Countdown" then
				u3 = v4;
			end;		
		end;
	end;
end;
v1.Network.Fired("Pinata Particles"):Connect(function()
	local l__Interactive__6 = v1.WorldCmds.GetMap():FindFirstChild("Interactive");
	if l__Interactive__6 then
		local v7, v8, v9 = ipairs(l__Interactive__6:GetChildren());
		while true do
			v7(v8, v9);
			if not v7 then
				break;
			end;
			v9 = v7;
			if v8.Name == "Giant Pinata Particle" then
				local v10, v11, v12 = ipairs(v8:GetChildren());
				while true do
					v10(v11, v12);
					if not v10 then
						break;
					end;
					v12 = v10;
					if v11:IsA("ParticleEmitter") then
						v11:Emit(50);
					end;				
				end;
			end;		
		end;
	end;
end);
v1.Signal.Fired("World Changed"):Connect(LoadWorld);
task.spawn(function()
	while true do
		if not u3 then
			task.wait(1);
		else
			local l__Countdown__13 = u3:FindFirstChild("Countdown");
			if not l__Countdown__13 or not l__Countdown__13:FindFirstChild("Timer") then
				task.wait(1);
			else
				local v14 = v1.Network.Invoke("Pinata: Event Active");
				l__Countdown__13.Enabled = v14 == false;
				if v14 == true then
					task.wait(1);
				else
					if u3 and u3.Parent then
						l__Countdown__13.Timer.Text = v1.Functions.FormatTime(GetNextTime());
					end;
					task.wait(1);
				end;
			end;
		end;	
	end;
end);
LoadWorld();
  -  Editar
  04:54:13.921    -  Editar
  04:54:13.921  ----- [2777] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.World GUIs.Anniversary Event Countdown -----  -  Editar
  04:54:13.921  -- Decompiled using Krnl
local v7 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
while not v7.Loaded do
	game:GetService("RunService").Heartbeat:Wait()
end
local v11
v10 = 1690045200
function GetNextTime()
    while workspace:GetServerTimeNow() >= v10 do
        v10 = v10 + 3600
    end
	return v10 - workspace:GetServerTimeNow()
end
local function LoadWorld(p1)
    if p1 ~= "Spawn" then
        return 
    end
    local v27 = v7.WorldCmds.GetMap():FindFirstChild("Interactive")
    if v27 then
        v11 = v27:FindFirstChild("2YearSign"):FindFirstChild("Sign"):FindFirstChild("Main")
    end
end
v7.Signal.Fired("World Changed"):Connect(LoadWorld)
task.spawn(function()
    while true do
		task.wait(1)
        local v45 = v11:FindFirstChild("Countdown")
        local v48 = v45:FindFirstChild("Timer")
        if not v48 then
            v48 = task.wait
            v48(1)
        else
            if v7.Network.Invoke("Black LB Active") then
                v45.Timer.Text = "Available Now!"
                task.wait(1)
            else
				if v11 then
					if v11.Parent then
                        if v45 then
                            local v58 = v45:FindFirstChild("Timer")
                            if v58 then
								v45.Timer.Text = v7.Functions.FormatTime(GetNextTime())
                            end
                        end
                    end
                end 
				task.wait(1)
            end
        end
    end
    if not v41 then
        --return 
		if v45 then
			return
        end
    end
end)
v7.Signal.Fired("World Changed"):Connect(LoadWorld)
  -  Editar
  04:54:13.921    -  Editar
  04:54:13.921  ----- [2778] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.World GUIs.DISABLED | Bloomberg Screens -----  -  Editar
  04:54:13.921  -- Decompiled using Krnl
local v2 = game
local v7 = require((v2.ReplicatedStorage:WaitForChild("Framework")):WaitForChild("Library"))
while true do
    local v8 = v7.Loaded
    if not v8 then
        break
    end
    v2 = game
    v8 = v2:GetService("RunService").Heartbeat
    v8:Wait()
end
v10 = v7.Shared
local v11 = v10.IsTradingPlaza
if not v11 then
    v11 = v7.RunService
    if not v11:IsStudio() then
        return 
    end
end
v10 = v7.Player
v12 = v10.PlayerGui
local v13 = v12()
v10 = Random.new
local v14 = v10()
local v15 = {}
local v16
local v17
local v18
local v19
local v20
local v21
local v22 = {}
Load = function(p1)
    local v27 = p1:FindFirstChild("OGMonitors")
    if not v27 then
        return 
    end
    v16 = v27:FindFirstChild("Left")
    v17 = v27:FindFirstChild("Right")
    v18 = v27:FindFirstChild("Middle")
    local v48 = v19
    if not v48 then
        v48 = v7.Network.Invoke
        v19 = v48("Bloomberg Screens: Request Local")
    end
    v37 = v19
    if v37 then
        v37 = Update
        v35 = v19
        v37(v16, v35)
    end
    local v39 = v21
    if not v39 then
        v39 = v7.Network.Invoke
        v21 = v39("Bloomberg Screens: Request Top")
    end
    v42 = v21
    if v42 then
        v42 = Update
        v40 = v21
        v42(v18, v40)
    end
    local v44 = v20
    if not v44 then
        v44 = v7.Network.Invoke
        v22 = v44("Bloomberg Screens: Request Live")
    end
end
LoadWorld = function(p2)
    if p2 ~= "Trading Plaza" then
        return 
    end
    v16 = nil
    v17 = nil
    v18 = nil
    local v67 = v7
    local v58 = (v67.WorldCmds.GetMap()):FindFirstChild("Interactive")
    if v58 then
        v67 = ipairs
        local v60, v61, v62 = v67(v58:GetChildren())
        for v66, v64 in v60, v61, v62 do
            if v64.Name == "GrandTradingTerminal" then
                Load(v64)
            end
        end
    end
end
local function Update_1(p3, p4)
    if not p3 then
        return 
    end
    local v74 = p3:FindFirstChild("Folder")
    if not v74 then
        return 
    end
    local v77 = v74:FindFirstChild("Monitor")
    if not v77 then
        return 
    end
    local v80 = v77:FindFirstChild("SurfaceGui")
    if not v80 then
        return 
    end
    local v85 = (v80:FindFirstChild("Frame")):FindFirstChild("ScrollingFrame")
    if not v85 then
        return 
    end
    local v88 = v85:FindFirstChild("Template")
    if not v88 then
        return 
    end
    local v89 = false
    v88.Visible = v89
    local v92, v93, v94 = ipairs(p4)
    for v104, v96 in v92, v93, v94 do
        local v95 = v96.Pet
        local v98 = v96.Key
        if v85:FindFirstChild(v98) then
            v85:FindFirstChild(v98).LayoutOrder = v104
        else
            v89 = true
            local v105 = v88:Clone()
            v105.Name = v98
            v105.LayoutOrder = v104
            local v110 = (v105:FindFirstChild("PreviousBid")):FindFirstChild("AvatarHolder")
            (v110:FindFirstChild("Pet")):Destroy()
            local v114 = v95.id
            local v122 = v7.Directory.Pets[v114]
            local v171 = v122.name
            local v172 = v122.rarity
            local v127 = v7.Assets.UI.Inventory.Pet:Clone()
            v7.PetUI.Create(v127, v114, {
                g = v95.g, r = v95.r, dm = v95.dm, sh = v95.sh
            })
            v127.Size = UDim2.new(1, 0, 1, 0)
            v127.PetIcon.ImageColor3 = Color3.new(1, 1, 1)
            v127.PetIcon.Locked.Visible = false
            local v140 = v127:FindFirstChild("Level")
            if v140 then
                v140 = v127:FindFirstChild("Level").UIStroke
                v140.Thickness = 3
            end
            v127:SetAttribute("SurfaceElement", true)
            v127.Parent = v110
            ((v105:FindFirstChild("PreviousBid")):FindFirstChild("CurrentBid")):FindFirstChild("Cost").Text = v96.Amount
            v105:SetAttribute("Template", nil)
            v105.Visible = true
            v105.Parent = v85
        end
    end
    if false then
        v94 = v7
        v93 = v94.FFlags
        v92 = v93.Get
        v96 = v7
        v104 = v96.FFlags
        v94 = v104.Keys
        v93 = v94.BloombergScreenSound
        local v155 = v92(v93)
        if v155 then
            v94 = v7
            v155 = v94.Audio.Play
            v104 = v18
            v94 = v104.PrimaryPart
            v104 = v14
            v95 = 1.1
            v97 = 1.4
            v96 = 0.025
            v155("rbxassetid://7349614764", v94, v104:NextNumber(v95, v97), v96, 40)
        end
    end
    if #v85:GetChildren() >= 4 then
        v85.CanvasSize = UDim2.new(0, 0, 0, v85:FindFirstChildOfClass("UIListLayout").AbsoluteContentSize.Y)
    end
end
Update = Update_1
Update_1 = v7.Signal.Fired
(Update_1("World Changed")):Connect(LoadWorld)
(v7.Network.Fired("Bloomberg Screens: Init Client")):Connect(function(p5)
    local v195 = p5.Live
    if v195 ~= nil then
        if not v20 then
            v20 = {}
            return 
        end
        local v220 = 0
        local v198, v199, v200 = ipairs(p5.Live)
        for v212, v208 in v198, v199, v200 do
            local v201 = false
            if #v20 >= 0 then
                local v204, v205, v206 = ipairs(v20)
                for v211, v210 in v204, v205, v206 do
                    if v208.Key == v210.Key then
                        v201 = true
                    end
                end
            end
            if v201 == true then
                local v223 = v195 + 1
                v205 = v22
                v206 = v208
                v204 = table.insert
                v204(v205, v206)
            end
        end
    end
    if p5.Top ~= nil then
        v21 = p5.Top
        v198 = v18
        v199 = p5.Top
        Update(v198, v199)
    end
    if p5.Local ~= nil then
        v19 = p5.Local
        Update(v16, p5.Local)
    end
end)
(v7.Network.Fired("Bloomberg Screens: Broadcast Live")):Connect(function(p6)
    local v232 = v20
    if not v232 then
        v232 = {}
        v20 = v232
    end
    local v249 = v22
    if not v249 then
        v249 = {}
        v22 = v249
    end
    local v234, v235, v236 = ipairs(p6)
    for v248, v244 in v234, v235, v236 do
        local v237 = false
        if #v20 >= 0 then
            local v240, v241, v242 = ipairs(v20)
            for v247, v246 in v240, v241, v242 do
                if v244.Key == v246.Key then
                    v237 = true
                end
            end
        end
        if v237 == true then
            v241 = v22
            v242 = v244
            v240 = table.insert
            v240(v241, v242)
        end
    end
end)
task.spawn(function()
    while true do
        task.wait(v14:NextNumber(1, 3))
        local v260 = v16
        if v260 then
            v260 = v17
            if v260 then
                v260 = v18
                if v260 then
                    v260 = v22
                    if v260 then
                        v260 = #v22
                        if v260 >= 0 then
                            v260 = table.remove
                            local v264 = v20
                            if not v264 then
                                v264 = {}
                                v20 = v264
                            end
                            local v265 = v20
                            if #v265 == 100 then
                                v265 = v20
                                table.remove(v265, #v20)
                            end
                            v266 = v260(v22, 1)
                            table.insert(v20, 1, v266)
                            Update(v17, v20)
                        end
                    end
                end
            end
        end
    end
end)
(v7.Network.Fired("Bloomberg Screens: Broadcast Top")):Connect(function(p7)
    Update(v18, p7)
end)
(v7.Network.Fired("Bloomberg Screens: Broadcast Local")):Connect(function(p8)
    Update(v16, p8)
end)
  -  Editar
  04:54:13.921    -  Editar
  04:54:13.921  ----- [2779] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Evolve Machine -----  -  Editar
  04:54:13.921  --[[

	Re-scripted 7/9/2023 By: OneX
		
--]]

--------|     Library     |--------
local _L = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
while (not _L.Loaded) do  game:GetService("RunService").Heartbeat:Wait()  end 

local SelectedPets = {}
local EvolveGUI = _L.GUI.EvolvePets
local DeepSelectedPets = {}
local EvolveInSession = false
local debounce = false
local RNG = Random.new()

function PetsSelect(uid)
	local pet = _L.PetCmds.Get(uid)
	if not uid then
		return
	end
	
	local save = _L.Save.Get()
	if not save then
		return
	end
	assert(save)
	
	if 5 <= #SelectedPets then
		return
	end
	
	if table.find(SelectedPets, uid) then
		return
	end
	
	_L.Audio.Play("rbxassetid://7139317934", script, RNG:NextNumber(0.95, 1.05), 0.75)
	table.insert(SelectedPets, uid)
	Update()
end

function PetsDeselect(uid)
	_L.Audio.Play("rbxassetid://7139317909", script, RNG:NextNumber(0.95, 1.05), 0.75)
	table.remove(SelectedPets, table.find(SelectedPets, uid))
	Update()
end

function Update()
	PetsUpdate()
	LootUpdate()
	EvolveGUI.Side.Evolve.ImageColor3 = #SelectedPets == 5 and Color3.new(1, 1, 1) or Color3.new(0.5, 0.5, 0.5);
	
	(function()
		local hasSelected = 0 < #SelectedPets
		EvolveGUI.Side.LeftNotice1.Visible = not hasSelected
		EvolveGUI.Side.RightNotice1.Visible = #SelectedPets == 0
		EvolveGUI.Side.LeftNotice2.Visible = hasSelected
		
		local doesntQualify = false
		if 0 < #SelectedPets then
			doesntQualify = #SelectedPets < 5
		end
		
		EvolveGUI.Side.RightNotice2.Visible = doesntQualify
		EvolveGUI.Side.ChanceFrame.Visible = 5 <= #SelectedPets
		EvolveGUI.Side.ChanceFrame.RainbowChance.Text = "Rainbow: " .. GetRainbowChance() .. "%"
		EvolveGUI.Side.ChanceFrame.ShinyChance.Text = "Shiny: " .. GetShinyChance() .. "%"
		
		if _L.Variables.Console then
			EvolveGUI.Side.Evolve.ButtonKeybind.Visible = true
		else
			EvolveGUI.Side.Evolve.ButtonKeybind.Visible = false
		end
		
		if hasSelected then
			EvolveGUI.Side.LeftNotice2.Text = "Selected " .. #SelectedPets .. "/" .. 5 .. " Pets"
		end
	end)()
end

function PetsUpdate()
	(function()
		for _, child in ipairs(EvolveGUI.LeftHolder:GetChildren()) do
			if child.ClassName == "TextButton" then
				local locked = child:GetAttribute("Locked")
				
				if child:GetAttribute("DirId") then
					local search = _L.Functions.SearchArray(SelectedPets, child.Name)
					
					child.Equipped.Visible = search
					child.BackgroundColor3 = search and Color3.fromRGB(69, 239, 69) or Color3.fromRGB(59, 177, 252)
					
					if not locked then
						child.BackgroundColor3 = search and Color3.fromRGB(69, 239, 69) or Color3.fromRGB(59, 177, 252)
						child.PetIcon.ImageTransparency = 0
					end
				end
			end		
		end
	end)()
	
	ScalePets()
end

function LootUpdate()
	local data = GetData()
	if not data then
		Clear()
		return
	end
	
	local computed = _L.Shared.ComputeEvolveMachinePets(data)
	if not computed then
		Clear()
		return
	end
	
	local function GetLayoutOrder(name)
		local order = 1
		local pet = computed[name]
		
		for i, v in pairs(computed) do
			if i ~= name then
				if pet < v then
					order = order + 1
				end
			end		
		end
		
		return order
	end
	
	(function()
		for _, child in ipairs(EvolveGUI.RightHolder:GetChildren()) do
			if child.ClassName == "Frame" then
				local childName = child.Name
				
				if not (#SelectedPets < 5) then
					if not computed[childName] then
						if not child:GetAttribute("Template") then
							child:Destroy()
						end
					else
						child.LootRange.Subtitle.Text = computed[childName] .. "% Chance"
						child.LayoutOrder = GetLayoutOrder(childName)
					end
				elseif not child:GetAttribute("Template") then
					child:Destroy()
				end
			end		
		end
		
		if #SelectedPets == 5 then
			for i, v in pairs(computed) do
				local dir = _L.Directory.Pets[i]
				
				if not EvolveGUI.RightHolder:FindFirstChild(i) then
					local loot = EvolveGUI.RightHolder:FindFirstChild("Loot"):Clone()
					loot.NonPet.Icon.Image = dir.thumbnail
					loot.LootRange.Title.Text = dir.name
					loot.LootRange.Subtitle.Text = computed[i] .. "% Chance"
					loot.LayoutOrder = GetLayoutOrder(i)
					loot.Name = i
					loot:SetAttribute("Template", false)
					loot.Visible = true
					loot.Parent = EvolveGUI.RightHolder
				end			
			end
		end
	end)()
	
	ScaleLoot()
end

function Evolve()
	if 0 < #DeepSelectedPets then
		_L.Variables.UsingMachine = true
		EvolveGUI.Gui.Enabled = false
		EvolveInSession = true
		
		local success, response = _L.Network.Invoke("Attempt Use Evolve Machine", DeepSelectedPets)
		if not success then
			_L.Message.New(response or "error")
			EvolveInSession = false
		else
			task.delay(15, function()
				EvolveInSession = false
			end)
		end
		
		_L.Variables.UsingMachine = false
	end
end

function GetRainbowChance()
	local chance = 0
	local data = GetData()
	if not data then
		return chance
	end
	
	for _, pet in ipairs(data) do
		if pet.r then
			chance = chance + 20
		end	
	end
	
	if chance ~= 0 then
		return chance
	end
	
	return 2
end

function GetShinyChance()
	local chance = 0
	local data = GetData()
	if not data then
		return chance
	end
	
	for _, pet in ipairs(data) do
		if pet.sh then
			chance = chance + 20
		end	
	end
	
	if chance ~= 0 then
		return chance
	end
	return 2
end

function GetData()
	local pets = {}
	
	for _, uid in ipairs(SelectedPets) do
		local pet = _L.PetCmds.Get(uid)
		if not pet then
			return nil
		end
		
		table.insert(pets, pet)	
	end
	
	return pets
end

function Setup()
	local save = _L.Save.Get()
	if not save then
		return
	end
	assert(save)
	
	local qualifyingPets = {}
	for _, pet in ipairs(save.Pets) do
		local dir = _L.Directory.Pets[pet.id]
		if dir then
			assert(dir)
			if dir.evolve then
				table.insert(qualifyingPets, pet)
			end
		end	
	end
	
	table.sort(qualifyingPets, function(i, v)
		return _L.Shared.PetOrderBest(i, v) < 0
	end)
	
	EvolveGUI.Divider.Visible = 0 < #qualifyingPets
	EvolveGUI.LeftHolder.Visible = 0 < #qualifyingPets
	EvolveGUI.RightHolder.Visible = 0 < #qualifyingPets
	EvolveGUI.NoPets.Visible = #qualifyingPets == 0
	
	for index, pet in ipairs(qualifyingPets) do
		local uid = pet.uid
		local petFrame = _L.Assets.UI.Inventory.Pet:Clone()
		_L.PetUI.Create(petFrame, uid)
		local dir = _L.Directory.Pets[pet.id]
		
		petFrame.Stars.Visible = false
		petFrame.LayoutOrder = index
		petFrame:SetAttribute("DirId", pet.id)
		petFrame.Parent = EvolveGUI.LeftHolder
		petFrame.Activated:Connect(function()
			if not debounce then
				debounce = true
				local locked = _L.Signal.Invoke("Is Trading Booth Pet", uid)
				
				if pet.l then
					_L.Message.New("This pet is locked! Unlock it before you can use it in the Evolve Machine!")
				elseif locked then
					_L.Message.New("This pet is currently in your trading booth! Remove it before you can use it in the Evolve Machine!")
				elseif not _L.Functions.SearchArray(SelectedPets, uid) then
					PetsSelect(uid)
				else
					PetsDeselect(uid)
				end
				
				debounce = false
			end
		end)
		
		_L.GUIFX.ButtonFX(petFrame)	
	end
	Update()
end

function ScalePets()
	local LeftHolder = EvolveGUI.Pets.LeftHolder
	local UIGridLayout = LeftHolder:FindFirstChildOfClass("UIGridLayout")
	local UIPadding = LeftHolder:FindFirstChildOfClass("UIPadding")
	local ResolutionScale = _L.Functions.ResolutionScale()
	local com = (LeftHolder.AbsoluteSize.X - LeftHolder.ScrollBarThickness - UIPadding.PaddingLeft.Offset - UIPadding.PaddingRight.Offset) / 3 - UIGridLayout.CellPadding.X.Offset
	
	UIGridLayout.CellSize = UDim2.new(0, com, 0, com)
	UIGridLayout:ApplyLayout()
	LeftHolder.CanvasSize = UDim2.new(0, UIGridLayout.AbsoluteContentSize.X, 0, UIGridLayout.AbsoluteContentSize.Y + 30)
end

function ScaleLoot()
	local RightHolder = EvolveGUI.RightHolder
	local UIListLayout = RightHolder:FindFirstChildOfClass("UIListLayout")
	local UIPadding = RightHolder:FindFirstChildOfClass("UIPadding")
	
	UIListLayout:ApplyLayout()
	RightHolder.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + UIPadding.PaddingBottom.Offset + UIPadding.PaddingTop.Offset)
end

function Clear()
	SelectedPets = {}
	
	for _, child in ipairs(EvolveGUI.LeftHolder:GetChildren()) do
		if child.ClassName == "TextButton" then
			if child.Name ~= "Template" then
				child:Destroy()
			end
		end	
	end
	
	for _, child in ipairs(EvolveGUI.RightHolder:GetChildren()) do
		if child.ClassName == "Frame" then
			if not child:GetAttribute("Template") then
				child:Destroy()
			end
		end	
	end
end

EvolveGUI.Side.Evolve.Activated:Connect(function()
	if not (#SelectedPets >= 5) then
		return
	end
	
	if not debounce then
		debounce = true
		
		DeepSelectedPets = _L.Functions.DeepCopyUnsafe(SelectedPets)
		if _L.Message.New("Are you sure you want to evolve these pets? You will lose the selected pets!", true) then
			Evolve()
		end
		
		debounce = false
	end
end)

EvolveGUI.Close.Activated:Connect(function()
	if not debounce then
		debounce = true
		
		EvolveGUI.Gui.Enabled = false
		
		debounce = false
	end
end)

_L.GUIFX.ButtonFX(EvolveGUI.Close)
_L.GUIFX.ButtonFX(EvolveGUI.Side.Evolve)

_L.Signal.Fired("Window Closed"):Connect(function(GUI)
	if EvolveInSession then
		return
	end
	
	if GUI == EvolveGUI.Gui then
		Clear()
	end
end)

_L.Signal.Fired("Window Opened"):Connect(function(GUI)
	if GUI == EvolveGUI.Gui then
		if EvolveInSession then
			EvolveGUI.Gui.Enabled = false
			return
		end
		
		local save = _L.Save.Get()
		if not save then
			return
		end
		assert(save)
		
		if not save.OwnsHugeMachine then
			_L.Message.New("You don't own this machine! Buy it in the Town area!")
			return
		end
		
		Clear()
		Setup() 
		
		if EvolveGUI.Gui.Enabled and _L.Variables.Console then
			_L.GuiService.SelectedObject = _L.LocalPlayer.PlayerGui:FindFirstChild("EvolvePets"):FindFirstChild("Frame"):FindFirstChild("Pets"):FindFirstChild("LeftHolder")
		end
	end
end)

_L.Signal.Fired("Resolution Changed"):Connect(function()
	if EvolveGUI.Gui.Enabled then
		task.defer(function()
			ScalePets()
			ScaleLoot()
		end)
	end
end)
  -  Editar
  04:54:13.921    -  Editar
  04:54:13.922  ----- [2780] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Quest Shop -----  -  Editar
  04:54:13.922  -- Decompiled with the Synapse X Luau decompiler.

local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not v1.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end;
local v2 = v1.Network.Invoke("Get OSTime");
local v3 = workspace:GetServerTimeNow();
local v4 = {};
function PromptPurchase(p1)
	local v5 = v1.QuestCmds.GetStock(p1.Name);
	if v5 then
		if v5 <= 0 then
			v1.Message.New("This item is out of stock!");
			return;
		end;
	end;
	if v1.Message.New("Are you sure you want to purchase this for " .. v1.Functions.Commas(p1.Cost) .. " Quest Points?", true) then
		local v6, v7 = v1.QuestCmds.RedeemReward(p1.Name);
		if v6 then
			v1.Message.New("✅ Success!");
			return;
		end;
		v1.Message.New(v7 or "Failed to purchase!");
	end;
end;
local u1 = {};
local u2 = false;
local l__QuestShop__3 = v1.GUI.QuestShop;
function UpdateDiamonds()
	local function v8(p2)
		if u1[p2] then
			return;
		end;
		u1[p2] = true;
		local v9 = v1.Directory.QuestRewards[p2:GetAttribute("Reward")];
		UpdatePriceFrame(p2:FindFirstChild("Price"), v9);
		v1.GUIFX.ButtonFX(p2);
		p2.Activated:Connect(function()
			if not u2 then
				u2 = true;
				PromptPurchase(v9);
				u2 = false;
			end;
		end);
	end;
	for v10, v11, v12 in ipairs(l__QuestShop__3.Container.Diamonds.CurrencyGroup:GetChildren())do
		if v11.ClassName == "TextButton" then
			v8(v11);
		end;	
	end;
end;
local u4 = {};
function UpdateRewards()
	local function v13(p3)
		v1.GUIFX.ButtonFX(p3);
		local u5 = v1.Directory.QuestRewards[p3:GetAttribute("Reward")];
		p3.Activated:Connect(function()
			if not u2 then
				u2 = true;
				PromptPurchase(u5);
				u2 = false;
			end;
		end);
	end;
	for v14, v15 in ipairs(l__QuestShop__3.Rewards:GetChildren())do
		for v17, v18 in ipairs(v15:GetChildren())do
			if v18:GetAttribute("Reward") then
				if not u4[v18] then
					u4[v18] = true;
					v13(v18);
				end;
				UpdatePriceFrame(v18:FindFirstChild("Price"), v1.Directory.QuestRewards[v18:GetAttribute("Reward")]);
			end;		
		end;	
	end;
end;
function UpdatePoints()
	l__QuestShop__3.Points.Text = v1.Functions.Commas(v1.QuestCmds.GetPoints()) .. " Points";
end;
function UpdatePriceFrame(p4, p5)
	local l__Cost__20 = p5.Cost;
	local v21 = v1.QuestCmds.GetStock(p5.Name);
	local l__Points__22 = p4:FindFirstChild("Points");
	if v21 then
		if v21 <= 0 then
			l__Points__22.Text = "Sold Out!";
			return l__Cost__20;
		end;
	end;
	l__Points__22.Text = v1.Functions.Commas(l__Cost__20);
	return l__Cost__20;
end;
function Scrollbar()
	local v23 = l__QuestShop__3.Container:FindFirstChildOfClass("UIPadding");
	l__QuestShop__3.Container.CanvasSize = UDim2.new(0, 0, 0, l__QuestShop__3.Container:FindFirstChildOfClass("UIListLayout").AbsoluteContentSize.Y + v23.PaddingTop.Offset + v23.PaddingBottom.Offset);
end;
function SizeFrame(p4)  
	local v17 = v1.Functions.ResolutionScale();
	local v18 = 1;
	for _, child8 in ipairs(p4:GetChildren()) do
		if child8.ClassName == "UIPadding" then
			local v28 = v1.GUIFX.CacheProperty(child8, "PaddingTop");
			local v29 = v1.GUIFX.CacheProperty(child8, "PaddingBottom");
			child8.PaddingTop = UDim.new(v28.Scale, v28.Offset * v17);
			child8.PaddingBottom = UDim.new(v29.Scale, v29.Offset * v17);
			v18 = v18 + (child8.PaddingTop.Offset + child8.PaddingBottom.Offset);
			continue;
		end
		if child8.ClassName ~= "UIListLayout" and child8.ClassName ~= "UIGridLayout" then continue end
		v18 = v18 + child8.AbsoluteContentSize.Y;
		if child8.ClassName == "UIListLayout" then
			local v30 = v1.GUIFX.CacheProperty(child8, "Padding");
			child8.Padding = UDim.new(v30.Scale, v30.Offset * v17);
		elseif child8.ClassName == "UIGridLayout" then
			local v40 = v1.GUIFX.CacheProperty(child8, "CellPadding");
			child8.CellPadding = UDim2.new(v40.X.Scale, v40.X.Offset * v17, v40.Y.Scale, v40.Y.Offset * v17);
		end
		if child8.ClassName ~= "UIGridLayout" or not child8:FindFirstChildOfClass("UIAspectRatioConstraint") then continue end
		child8.CellSize = UDim2.new(child8.CellSize.X.Scale, child8.CellSize.X.Offset, 0, child8.AbsoluteCellSize.Y + 2);
	end
	p4.Size = UDim2.new(p4.Size.X.Scale, p4.Size.X.Offset, 0, v18);
end
function Scaling()
	if not l__QuestShop__3.Gui.Enabled then
		return;
	end;
	local v34 = game.Workspace.CurrentCamera.ViewportSize.Y <= 1000;
	local v35 
	if v34 then
		v35 = 1.6;
	else
		v35 = 1.2;
	end;
	l__QuestShop__3.Frame:FindFirstChildOfClass("UIAspectRatioConstraint").AspectRatio = v35;
	l__QuestShop__3.Tabs.Size = v34 and UDim2.new(0.365, 0, 0.1, 0) or UDim2.new(0.365, 0, 0.065, 0);
	for v36, v37, v38 in ipairs(l__QuestShop__3.Container:GetChildren())do
		if v37:IsA("GuiObject") then
			for v39, v40, v41 in ipairs(v37:GetChildren())do
				if not v40:FindFirstChildOfClass("UIListLayout") then
					if v40:FindFirstChildOfClass("UIGridLayout") then
						SizeFrame(v40);
					end;
				else
					SizeFrame(v40);
				end;			
			end;
			SizeFrame(v37);
		end;	
	end;
	Scrollbar();
end;
coroutine.wrap(function()
	while true do
		v1.Heartbeat();
		Scaling();	
	end;
end)();
v1.GUIFX.ButtonFX(l__QuestShop__3.Close);
l__QuestShop__3.Close.Activated:Connect(function()
	if not u2 then
		u2 = true;
		l__QuestShop__3.Gui.Enabled = false;
		u2 = false;
	end;
end);
UpdateRewards();
UpdateDiamonds();
UpdatePoints();
v1.Signal.Fired("Stat Changed"):Connect(function(p7)
	if p7 == "Quest Points" then
		UpdateRewards();
		UpdateDiamonds();
		UpdatePoints();
	end;
end);
  -  Editar
  04:54:13.922    -  Editar
  04:54:13.922  ----- [2781] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Spinny Wheel -----  -  Editar
  04:54:13.922  --------|     Library     |--------
local _L = require(game.ReplicatedStorage:WaitForChild("Library")) _L.Load()

local rng = Random.new()
local SpinnyWheel = _L.Things.SpinnyWheel
local spinner = SpinnyWheel:FindFirstChild("Main")
local originalCFrame = spinner.CFrame
local isSpinning = false
local canSpin = false
local SpinnyWheelGUI = _L.GUI.SpinnyWheel
local camera = game.Workspace.CurrentCamera

function Math(int: number): number
	return int / 8 - 0.0625 + (math.random() - 0.5) * 1 / 8
end

function Animate(int: number)
	spinner.CFrame = originalCFrame * CFrame.Angles(-int * math.pi * 2, 0, 0)
end

local guis = {}
function disableGUI()
	for _, gui in ipairs(_L.LocalPlayer.PlayerGui:GetChildren()) do
		if gui.Enabled then
			table.insert(guis, gui.Name)
		end
		gui.Enabled = false
	end 
end

function enableGUI()
	for _, gui in ipairs(_L.LocalPlayer.PlayerGui:GetChildren()) do
		if table.find(guis, gui.Name) then
			gui.Enabled = true
		end
	end 
end

function setCamera(start: boolean)
	if start then
		disableGUI()
		_L.LocalPlayer.CameraMode = Enum.CameraMode.LockFirstPerson
		camera.CameraSubject = _L.Things.SpinWheelCamera
		camera.CFrame = _L.Things.SpinWheelCameraCFramePos.CFrame
		task.wait(0.1)
		camera.CameraType = Enum.CameraType.Fixed
	elseif not start then
		task.wait(0.5)
		enableGUI()
		_L.LocalPlayer.CameraMode = Enum.CameraMode.Classic
		camera.CameraType = Enum.CameraType.Custom
		camera.CameraSubject = _L.LocalPlayer.Character.Humanoid
	end
end

function Spin(int: number)
	warn(int)
	setCamera(true)
	SpinnyWheelGUI.Gui.Enabled = false
	local mathint = Math(int) - 0.2666666666666675
	local n, m = 0, 0
	_L.Audio.Play(12227403373, script, 1, 0.6)
	while n < 5.333333333333334 do
		n = math.min(n + _L.RunService.Heartbeat:Wait(), 5.333333333333334)
	    local _m = mathint + (1.6 * n - 0.15 * n ^ 2)
		if math.floor(m % 1 * 8) ~= math.floor(_m % 1 * 8) then
			_L.Audio.Play(11309481090, script, 1, 0.85)
		end
		m = _m
		Animate(_m)
	end
	_L.Audio.Play(5368504446, script, 1, 0.75)
	isSpinning = false
	setCamera(false)
end

function Update()
	local rewards = _L.Network.Invoke("Get Spin Rewards", game.JobId)
	warn(rewards)
	for k, v in pairs(rewards) do
		local img = spinner.ScreenGui:FindFirstChild(k)
		if img then
			local rewardType = v.RewardType
			if rewardType then
				if rewardType == "Pets" then
					img.Image = _L.Directory.Pets[v.Reward].thumbnail
				elseif rewardType == "Currency" then
					img.Image = _L.Directory.Currency[v.Currency].ImageOutline
				end
				img:WaitForChild("Percent").Text = v.Chance
				if v.Hide then
					img.ImageColor3 = Color3.new(0,0,0)
					img:WaitForChild("Unknown").Visible = true
				else
					img.ImageColor3 = Color3.new(255,255,255)
					img:WaitForChild("Unknown").Visible = false
				end
			end
		end
	end
end

_L.Network.Fired("Spin Wheel"):Connect(function(int: number)
	isSpinning = true
	Spin(int)
end)

_L.Signal.Fired("World Changed"):Connect(function(world: string)
	if world == "Spawn" then
		canSpin = true
		return
	end
	canSpin = false
end)

Update()  -  Editar
  04:54:13.922    -  Editar
  04:54:13.922  ----- [2782] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.DISABLED | Bloomberg -----  -  Editar
  04:54:13.923  -- Decompiled using Krnl
local v2 = game
local v7 = require((v2.ReplicatedStorage:WaitForChild("Framework")):WaitForChild("Library"))
while true do
    local v8 = v7.Loaded
    if not v8 then
        break
    end
    v2 = game
    v8 = v2:GetService("RunService").Heartbeat
    v8:Wait()
end
v10 = v7.Shared
local v11 = v10.IsTradingPlaza
if not v11 then
    v11 = v7.RunService
    if not v11:IsStudio() then
        return 
    end
end
v10 = v7.GUI
v12 = v10.Bloomberg
v10 = false
local v13 = false
local v14 = false
local v15 = false
local v16 = ""
local v17 = {}
local v18 = false
local v19
local v20 = false
local v21
task.spawn(function()
    v18 = v7.VoiceChatService:IsVoiceEnabledForUserIdAsync(v7.LocalPlayer.UserId)
end)
function Update()
    local v33 = v7.Save
    local v35 = v33.Get()
    local v111 = false
    local v36 = v12
    local v37 = v36.Query
    if v37.Text ~= "" then
        v36 = v12
        v37 = v36.Query
        if v37.Text == nil then
            v111 = false
        end
        v111 = true
    end
    if v111 then
        v36 = v7
        v37 = v36.Functions
        v37 = string.lower
        local v38 = v12
        v36 = tostring
        local v42 = v37.RegexEscape(v37(v36(v38.Query.Text)))
        if not v42 then
            v42 = nil
        end
        local v44 = v12.Container
        local v46, v47, v44 = ipairs(v44.Holder:GetChildren())
        for v39, v38 in v46, v47, v44 do
            local v50 = v38:GetAttribute("petId")
            if v50 then
                v50 = v38:GetAttribute("petId")
                local v56 = v38:GetAttribute("name")
                local v59 = v38:GetAttribute("rarity")
                local v62 = v38:GetAttribute("isGolden")
                local v65 = v38:GetAttribute("isRainbow")
                local v68 = v38:GetAttribute("isDarkMatter")
                local v114 = v38:GetAttribute("petId")
                local v115
                if v38:GetAttribute("isGolden") then
                    v115 = "Golden"
                else
                    if v38:GetAttribute("isRainbow") then
                        v115 = "Rainbow"
                    else
                        if v38:GetAttribute("isDarkMatter") then
                            v115 = "Dark Matter"
                        end
                    end
                end
                local v87 = true
                if v33 then
                    local v88 = false
                    local v96 = string.find(string.lower(v38:GetAttribute("name")), v42, 1, true)
                    if v96 then
                        v88 = true
                    else
                        v96 = string.find
                        local v103 = v96(string.lower(v38:GetAttribute("rarity")), v42, 1, true)
                        if v103 then
                            v88 = true
                        else
                            if v115 then
                                v103 = string.find
                                if v103(string.lower(v115), v42, 1, true) then
                                    v88 = true
                                end
                            end
                        end
                    end
                    v87 = v88
                end
                v38.Visible = v87
            end
        end
        v46 = UpdateBottom
        v46()
        return 
    end
end
local function UpdateBottom_1()
    local v120 = v12.BottomBar
    if v14 then
        v120 = "rbxassetid://6958935961"
    else
        v120 = "rbxassetid://6958936066"
    end
    v120.Grid.Image = v120
end
UpdateBottom = UpdateBottom_1
UpdateBottom_1 = nil
local function Show_1(p1)
    v21 = p1
    local v127 = v12.Container.Holder
    UpdateBottom_1 = v127.CanvasPosition
    local v128, v129, v130 = ipairs(v127:GetChildren())
    for v135, v133 in v128, v129, v130 do
        local v134 = v133:isA("TextButton")
        if v134 then
            v134 = false
            v133.Visible = v134
        end
    end
    v135 = v7
    v130 = v135.Directory
    v129 = v130.Pets
    v128 = v129[p1]
    v129 = {}
    v133 = 1
    v134 = v128.isGift
    if v134 then
        v130 = 1
    else
        v130 = 8
    end
    v135 = 1
    for v133 = v133, v130, v135 do
        v134 = {}
        v134.petId = p1
        local v136 = false
        if v133 == 7 then
            v136 = false
            if v128.goldenThumbnail ~= "" then
                v136 = false
                if v128.titanic == nil then
                    if v128.evolved ~= nil then
                        v136 = false
                    end
                    v136 = true
                end
            end
        end
        v134.isGolden = v136
        local v340 = false
        if v133 == 6 then
            v137 = v128.colorVariants
            if v137 ~= nil then
                v340 = false
            end
            v340 = true
        end
        v134.isRainbow = v340
        local v341 = false
        if v133 == 8 then
            v341 = false
            v137 = v128.rarity
            if v137 ~= "Exclusive" then
                v137 = v128.rarity
                if v137 == "Event" then
                    v341 = false
                end
                v341 = true
            end
        end
        v134.isDarkMatter = v341
        v137 = 4
        if v137 < v133 then
            v341 = false
        end
        v134.isShiny = true
        v137 = ipairs
        local v139, v140, v141 = v137(v127:GetChildren())
        for v147, v145 in v139, v140, v141 do
            local v146 = v7.Functions.DeepEquals(v145, v134)
            v136 = true
        end
        if v146 then
        end
        if not false then
            v140 = v129
            v141 = v134
            v139 = table.insert
            v139(v140, v141)
        end
    end
    v130 = v128.rarity
    if v133 ~= 2 then
        if v130 ~= "Exclusive" then
            v130 = v128.rarity
            if v130 ~= "Event" then
                v133 = v7
                v135 = v133.Functions
                v130 = v135.DeepCopy
                v135 = v129
                v133 = v130(v135)
                local v150, v151, v134 = ipairs(v133)
                for v136, v153 in v150, v151, v134 do
                    v153.isHardcore = true
                    v147 = v153
                    table.insert(v129, v147)
                end
            end
        end
        v148 = ipairs
        v150 = v129
        if v133 ~= 3 then
            local v155, v156, v151 = v148(v150)
            for v134, v136 in v155, v156, v151 do
                v153 = v136.petId
                local v157 = v136.isGolden
                local v158 = v136.isRainbow
                local v159 = v136.isDarkMatter
                v145 = v136.isShiny
                v146 = v136.isHardcore
                local v163 = v7.Directory.Pets[v153]
                local v347 = v163.name
                local v348 = v163.rarity
                local v168 = v7.Assets.UI.Inventory.Pet:Clone()
                v7.PetUI.Create(v168, v153, {
                    g = v157, r = v158, dm = v159, sh = v145, hc = v146
                })
                (v168:FindFirstChild("Level")):Destroy()
                local v172 = v163.titanic
                if v172 then
                    v168.LayoutOrder = v134
                else
                    v172 = v163.huge
                    if v172 then
                        v172 = 99999
                        v168.LayoutOrder = v172
                    else
                        v172 = 9999999
                        v168.LayoutOrder = v172
                    end
                end
                v168:SetAttribute("petId", v153)
                v168:SetAttribute("name", v347)
                v168:SetAttribute("rarity", v348)
                v168:SetAttribute("isGolden", v157)
                v168:SetAttribute("isRainbow", v158)
                v168:SetAttribute("isDarkMatter", v159)
                v168:SetAttribute("isShiny", v145)
                v168:SetAttribute("isHardcore", v146)
                v168.ZIndex = 5
                local v356 = v168:GetAttribute("petId")
                local v202 = v168:GetAttribute("isGolden")
                local v205 = v168:GetAttribute("isRainbow")
                local v208 = v168:GetAttribute("isDarkMatter")
                local v210 = v168:GetAttribute("isShiny")
                local v211 = v210
                if v202 then
                    v210 = 2
                else
                    if v205 then
                        v210 = 3
                    else
                        if v208 then
                            v210 = 4
                        else
                            if v211 then
                                v210 = 5
                            else
                                if v168:GetAttribute("isHardcore") then
                                    v210 = 6
                                else
                                    v210 = 1
                                end
                            end
                        end
                    end
                end
                local v220 = Color3.new(1, 1, 1)
                if not v220 then
                    v220 = Color3.new
                    local v224 = v220(0, 0, 0)
                end
                v168.PetIcon.ImageColor3 = v224
                v224 = v168.PetIcon
                v224 = false
                v224.Locked.Visible = v224
                local v358 = false
                local v225 = v12
                local v226 = v225.Query
                v224 = v226.Text
                if v224 ~= "" then
                    v225 = v12
                    v226 = v225.Query
                    v224 = v226.Text
                    if v224 == nil then
                        v358 = false
                    end
                    v358 = true
                end
                v224 = v7.Functions.RegexEscape
                local v231 = v224(string.lower(tostring(v12.Query.Text)))
                if not v231 then
                    v231 = nil
                end
                local v232
                if v202 then
                    v232 = "Golden"
                else
                    if v205 then
                        v232 = "Rainbow"
                    else
                        if v208 then
                            v232 = "Dark Matter"
                        end
                    end
                end
                local v233 = true
                local v234 = false
                local v240 = string.find(string.lower(v347), v231, 1, true)
                v234 = true
                v240 = string.find
                local v247 = v240(string.lower(v348), v231, 1, true)
                v234 = true
                v247 = string.find
                local v254 = v247(string.lower(v232), v231, 1, true)
                v234 = true
                v254 = string.find
                local v261 = v254(string.lower("hardcore"), v231, 1, true)
                if v261 then
                    v234 = true
                else
                    if v211 then
                        v261 = string.find
                        if v261(string.lower("shiny"), v231, 1, true) then
                            v234 = true
                        end
                    end
                end
                v233 = v234
                if missingOnly then
                    v168.Visible = false
                else
                    v168.Visible = v233
                end
                v268 = v168.Activated
                v268:Connect(function()
                    local v331 = v10
                    if not v331 then
                        v331 = true
                        v10 = v331
                        v331 = function()
                            local function extract_1(p2)
                                return p2.petId, p2.isGolden, p2.isRainbow, p2.isDarkMatter, p2.isShiny, p2.isHardcore or false
                            end
                            local v279 = v136
                            Processing(true, false)
                            local v299, v300 = v7.Network.Invoke("Bloomberg: Validate Pet Search", v18, tostring(v279.petId), v279.isGolden, v279.isRainbow, v279.isDarkMatter, v279.isShiny, v279.isHardcore or false)
                            Processing(false)
                            local v303 = true
                            v20 = v303
                            if v299 == true then
                                v303 = v7.Message.New
                                local v306 = v303("\226\156\133\240\159\148\142 Searching is complete! Teleport to server?", true)
                                if not v306 then
                                    v20 = false
                                    return 
                                end
                                v307 = v7.Variables
                                v307.LoadingWorld = true
                                local v309 = v7
                                v307 = v309.Network.Invoke
                                local v310, v311 = v307("Bloomberg: Finish Teleport")
                                if v310 == true then
                                    v309 = v7.GUIFX.Loading
                                    v19 = v309("Trading Plaza")
                                else
                                    v314 = v7.Variables
                                    v314.LoadingWorld = false
                                    v312 = v7
                                    v314 = v312.Message.New
                                    v314(v311 or "Something went wrong. Try again later!")
                                    v311 = v7
                                    v310 = v311.Message
                                    v306 = v310.New
                                    v310 = v300 or "Something went wrong. Try again later!"
                                    v306(v310)
                                end
                                v20 = false
                                return 
                            end
                        end
                        v331()
                        v10 = false
                    end
                end)
                v168.Parent = v12.Container.Holder
                table.insert(v17, v168)
            end
            v155 = ToggleExpanded
            if v133 ~= 4 then
                v156 = true
                v155(v156)
                v12.Back.Visible = true
                return 
                if v214 then
                end
                if v254 then
                end
                if v232 then
                end
                if v247 then
                end
                if v240 then
                end
                if v215 then
                end
                if v215 then
                end
            end
        end
    end
end
Show = Show_1
Show_1 = nil
local v373
local v374
local v375 = v7.GUI
local v376 = v375.BloombergLoading
v375 = false
function Processing(p3, p4)
    v375 = p3
    local v406 = v375
    v7.Variables.UsingMachine = v406
    if v375 then
        if not Show_1 then
            v406 = v7.GIF
            v406 = v12.Processing.GIF
            local v411 = {}
            v411[1] = 5
            v411[2] = 6
            Show_1 = v406.Create(v406, {
                [1] = 100, [2] = 100
            }, v411, 28, 0.65, true)
            local v420 = {}
            v420[1] = 5
            v420[2] = 6
            local v393 = v7.GIF.Create(v376.Loading.GIF, {
                [1] = 100, [2] = 100
            }, v420, 28, 0.65, true)
            v374 = v393
            if p4 then
                v393 = v7.Audio.Play
                v373 = v393("rbxassetid://8167470315", script, 1, 1, nil, nil, true)
                local v426 = v375
                if not v426 then
                    v426 = Show_1
                    if v426 then
                        v426 = Show_1
                        v426()
                        v374()
                        Show_1 = nil
                        v374 = nil
                        if v373 then
                            v373:Stop()
                            v373 = nil
                        end
                    end
                end
            end
            v404 = v376.Gui
            v404.Enabled = v375
            v404 = v12.Processing
            v404.Visible = v375
            return 
        end
    end
end
function Render(p5)
    local v436 = v7
    local v437 = v436.Save
    local v439 = v437.Get()
    if v439 then
        v437 = v439.Collection
        if not v437 then
            return 
        end
        v437 = v13
        if v437 then
            return 
        end
        v437 = true
        v13 = v437
        v436 = v7.Shared
        v437 = v436.GetAllBloombergPets
        local v441 = v437()
        v436 = table.sort
        v436(v441, function(p6, p7)
            return 0 > v7.Shared.PetOrderInv(nil, p6, p7, true, true, true, false, false)
        end)
        task.spawn(function()
            local v461, v462, v463 = ipairs(v441)
            for v482, v465 in v461, v462, v463 do
                local v464 = v13
                if not v464 then
                    return 
                end
                v464 = v465.petId
                local v466 = v465.isGolden
                local v467 = v465.isRainbow
                local v468 = v465.isDarkMatter
                local v472 = v7.Directory.Pets[v464]
                local v566 = v472.name
                local v567 = v472.rarity
                local v477 = v7.Assets.UI.Inventory.Pet:Clone()
                v7.PetUI.Create(v477, v464, {
                    g = v466, r = v467, dm = v468
                })
                (v477:FindFirstChild("Level")):Destroy()
                local v481 = v472.titanic
                if v481 then
                    v477.LayoutOrder = v482
                else
                    v481 = v472.huge
                    if v481 then
                        v481 = 99999
                        v477.LayoutOrder = v481
                    else
                        v481 = 9999999
                        v477.LayoutOrder = v481
                    end
                end
                v477:SetAttribute("petId", v464)
                v477:SetAttribute("name", v566)
                v477:SetAttribute("rarity", v567)
                v477:SetAttribute("isGolden", v466)
                v477:SetAttribute("isRainbow", v467)
                v477:SetAttribute("isDarkMatter", v468)
                v477:SetAttribute("Original", true)
                local v503 = 5
                v477.ZIndex = v503
                v503 = v477:GetAttribute("petId")
                local v509 = v477:GetAttribute("isGolden")
                local v511 = v477:GetAttribute("isRainbow")
                local v512 = v511
                local v515 = v477:GetAttribute("isDarkMatter")
                if v509 then
                    v511 = 2
                else
                    if v512 then
                        v511 = 3
                    else
                        if v515 then
                            v511 = 4
                        else
                            v511 = 1
                        end
                    end
                end
                local v521 = Color3.new(1, 1, 1)
                if not v521 then
                    v521 = Color3.new
                    local v525 = v521(0, 0, 0)
                end
                v477.PetIcon.ImageColor3 = v525
                v525 = v477.PetIcon
                v525 = false
                v525.Locked.Visible = v525
                local v576 = false
                local v526 = v12
                local v527 = v526.Query
                v525 = v527.Text
                if v525 ~= "" then
                    v526 = v12
                    v527 = v526.Query
                    v525 = v527.Text
                    if v525 == nil then
                        v576 = false
                    end
                    v576 = true
                end
                v525 = v7.Functions.RegexEscape
                local v528 = v12
                local v529 = v528.Query
                local v532 = v525(string.lower(tostring(v529.Text)))
                if not v532 then
                    v532 = nil
                end
                local v533
                if v509 then
                    v533 = "Golden"
                else
                    if v512 then
                        v533 = "Rainbow"
                    else
                        if v515 then
                            v533 = "Dark Matter"
                        end
                    end
                end
                local v534 = true
                if v576 then
                    local v535 = false
                    v529 = string.find
                    v528 = string.lower
                    local v541 = v529(v528(v566), v532, 1, true)
                    if v541 then
                        v535 = true
                    else
                        v541 = string.find
                        local v548 = v541(string.lower(v567), v532, 1, true)
                        if v548 then
                            v535 = true
                        else
                            if v533 then
                                v548 = string.find
                                if v548(string.lower(v533), v532, 1, true) then
                                    v535 = true
                                end
                            end
                        end
                    end
                    v534 = v535
                end
                v477.Visible = v534
                local function Clicked_2()
                    Show(v503)
                end
                v555 = v477.Activated
                v555:Connect(function()
                    local v560 = v10
                    if not v560 then
                        v560 = true
                        v10 = v560
                        v560 = Show
                        v560(v503)
                        v10 = false
                    end
                end)
                v477.Parent = v12.Container.Holder
            end
            v461 = p5
            if v461 then
                v461 = p5
                v461()
            end
            return 
            if v516 then
            end
        end)
        v12.Back.Visible = false
        return 
    end
end
function Scaling()
    local v588 = v12.Container.Holder
    local v590 = v588:FindFirstChildOfClass("UIGridLayout")
    local v592 = v588:FindFirstChildOfClass("UIPadding")
    local v596 = v7.Functions.ResolutionScale()
    local v629
    local v630 = 0.5
    if v630 > v596 then
        v629 = 6
    else
        if 1.1 > v596 then
            v629 = 7
        else
            v629 = 8
        end
    end
    local v597 = v15
    if v597 then
        local v645 = 2
    else
        local v646 = 1
    end
    v597 = v14
    if v597 then
        v597 = v21
        if not v597 then
            v597 = UDim2.new
            v590.CellPadding = v597(0, 10, 0, 10)
        else
            v602 = UDim2.new
            v590.CellPadding = v602(0, (20) * v630, 0, (20) * v630)
        end
        v606 = v588.AbsoluteSize.X
        local v633 = v592.PaddingLeft
        v606 = v633.Offset
        v606 = v592.PaddingRight
        v608 = (v606 - v588.ScrollBarThickness - v606 - v606.Offset) / v629 - v590.CellPadding.X.Offset
        v606 = (v608) * v630
        local v614 = UDim2.new(0, (v608) * v630, 0, v606)
        local v615 = v14
        if v615 then
            v615 = v21
            if not v615 then
                v615 = UDim2.new
                v633 = v614.X
                v633 = (v614.Y.Offset) / 2
                v614 = v615(0, (v633.Offset) / 2, 0, v633)
            end
        end
        v590.CellSize = v614
        v590:ApplyLayout()
        v619 = v590.AbsoluteContentSize
        v620 = v619.Y
        if v14 then
            v619 = 25.38
        else
            v619 = 30
        end
        v588.CanvasSize = UDim2.new(0, v590.AbsoluteContentSize.X, 0, v620 + v619)
        return 
    end
end
function ToggleGrid()
    debug.profilebegin("Collection.ToggleGrid")
    v14 = not v14
    v7.Audio.Play("rbxassetid://7004248320", script, 1, 0.5)
    Scaling()
    UpdateBottom()
    debug.profileend()
end
function ToggleExpanded(p8)
    debug.profilebegin("Collection.ToggleExpanded")
    v15 = p8
    Scaling()
    debug.profileend()
end
function ToggleMissing()
    debug.profilebegin("Collection.ToggleGrid")
    missingOnly = not missingOnly
    Update()
    Scaling()
    debug.profileend()
end
function Clear()
    local v678 = v12.Container
    local v680, v681, v678 = ipairs(v678.Holder:GetChildren())
    for v677, v684 in v680, v681, v678 do
        if v684:GetAttribute("petId") then
            v684:Destroy()
        end
    end
    v680 = false
    v14 = v680
    v680 = ""
    v16 = v680
    v680 = false
    v13 = v680
end
local function ResetView_1(p9)
    v12.Back.Visible = false
    v21 = nil
    local v689, v690, v691 = ipairs(v17)
    for v694, v693 in v689, v690, v691 do
        v693:Destroy()
    end
    v689 = ipairs
    v694 = v12
    v691 = v694.Container
    v690 = v691.Holder
    local v695, v696, v691 = v689(v690:GetChildren())
    for v694, v693 in v695, v696, v691 do
        local v699 = v693:isA("TextButton")
        v699 = false
        local v700 = v12
        local v701 = v700.Query
        if v701.Text ~= "" then
            v700 = v12
            v701 = v700.Query
            if v701.Text == nil then
                v699 = false
            end
            v699 = true
        end
        local v707 = v7.Functions.RegexEscape(string.lower(tostring(v12.Query.Text)))
        if not v707 then
            v707 = nil
        end
        local v711 = v693:GetAttribute("petId")
        local v761
        if v693:GetAttribute("isGolden") then
            v761 = "Golden"
        else
            if v693:GetAttribute("isRainbow") then
                v761 = "Rainbow"
            else
                if v693:GetAttribute("isDarkMatter") then
                    v761 = "Dark Matter"
                end
            end
        end
        local v725 = true
        if v699 then
            local v726 = false
            local v734 = string.find(string.lower(v693:GetAttribute("name")), v707, 1, true)
            if v734 then
                v726 = true
            else
                v734 = string.find
                local v741 = v734(string.lower(v693:GetAttribute("rarity")), v707, 1, true)
                if v741 then
                    v726 = true
                else
                    if v761 then
                        v741 = string.find
                        if v741(string.lower(v761), v707, 1, true) then
                            v726 = true
                        end
                    end
                end
            end
            v725 = v726
        end
        v693.Visible = v725
    end
    v695 = ToggleExpanded
    if v699 then
        v696 = false
        v695(v696)
        if p9 == nil then
            local v749 = UpdateBottom_1
            if v749 then
                v691 = v12
                v749 = v691.Container.Holder
                v749.CanvasPosition = UpdateBottom_1
                v749 = nil
                UpdateBottom_1 = v749
            end
        end
        return 
        if v699 then
        end
    end
end
ResetView = ResetView_1
ResetView_1 = v7.GUIFX.ButtonFX
ResetView_1(v12.BottomBar.Grid)
v7.GUIFX.Tooltip(v12.BottomBar.Grid, "Toggle Grid View")
v12.BottomBar.Grid.Activated:Connect(function()
    local v772 = v10
    if not v772 then
        v772 = true
        v10 = v772
        v772 = ToggleGrid
        v772()
        v10 = false
    end
end)
v7.GUIFX.ButtonFX(v12.Back)
v12.Back.Activated:Connect(function()
    local v778 = v10
    if not v778 then
        v778 = true
        v10 = v778
        v778 = ResetView
        v778()
        v10 = false
    end
end)
v7.GUIFX.ButtonFX(v12.Close)
v12.Close.Activated:Connect(function()
    local v784 = v10
    if not v784 then
        v784 = true
        v10 = v784
        v784 = v12.Gui
        v784.Enabled = false
        v784 = false
        v10 = v784
    end
end)
(v12.BottomBar.Search.Query:GetPropertyChangedSignal("Text")):Connect(function()
    local v793 = v12.BottomBar.Search
    local v794 = v793.Query
    if v794.Text ~= "" then
        v793 = v12
        v794 = v793.Container
        v794 = Vector2.new
        v794.Holder.CanvasPosition = v794()
    end
    if v21 then
        v796 = true
        ResetView(v796)
    end
    Update()
    Scaling()
end)
(v7.Signal.Fired("Window Opened")):Connect(function(p10)
    local v805 = v12
    if p10 == v805.Gui then
        if not v13 then
            if v21 then
                v805 = true
                ResetView(v805)
            end
            Render(function()
                Update()
                Scaling()
            end)
            local v811 = v12
            local v812 = v811.Gui
            local v813 = v812.Enabled
            if v813 then
                v811 = v7
                v812 = v811.Variables
                v813 = v812.Console
                if v813 then
                    v812 = v7
                    v813 = v812.GuiService
                    v811 = v7.LocalPlayer
                    v812 = v811.PlayerGui
                    v813.SelectedObject = (((v812:FindFirstChild("Bloomberg")):FindFirstChild("Frame")):FindFirstChild("Container")):FindFirstChild("Holder")
                end
            end
        end
    end
end)
(v7.Signal.Fired("Window Closed")):Connect(function(p11)
    if p11 == v12.Gui then
        if v20 == true then
            Clear()
        end
    end
end)
(v7.Signal.Fired("Resolution Changed")):Connect(function()
    task.defer(function()
        Scaling()
    end)
end)
v7.TeleportService.TeleportInitFailed:Connect(function(p12, p13, p14, p15, p16)
    task.delay(1, function()
        local v847 = v19
        if v847 then
            v847 = v7.Variables
            v847.LoadingWorld = false
            v847 = v19
            v847()
        end
    end)
end)
  -  Editar
  04:54:13.923    -  Editar
  04:54:13.923  ----- [2783] StarterPlayer.StarterPlayerScripts.Scripts.GUIs.Exclusive Shop -----  -  Editar
  04:54:13.923  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local _L = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
while (not _L.Loaded) do  game:GetService("RunService").Heartbeat:Wait()  end
local t_ExclusiveShop = _L.GUI.ExclusiveShop
local u1 = _L.Network.Invoke("Get OSTime")
local ServerTimeNow = workspace:GetServerTimeNow()
local bool1 = false
local table1 = {}
local table2 = {}
local table3 = {}
local rng = Random.new()
function UpdateBoosts()  
	local function UpdateBoost(p11) 
		local v23 = _L.Save.Get()
		local Attribute = p11:GetAttribute("Boost")
		local v24 = v23.Boosts[Attribute]
		p11.TimeLeft.Visible = v24 ~= nil
		if v24 then
			if v24 < 86400 then
				p11.TimeLeft.Text = _L.Functions.TimerString(v24)
			else
				p11.TimeLeft.Text = _L.Functions.TimeString(v24) .. " Left"
			end
		end
		local v25 = v23.BoostsInventory[Attribute]
		local Use = p11.Buttons:FindFirstChild("Use")
		Use.Visible = v25 ~= nil
		if v25 then
			Use:FindFirstChild("Label").Text = "Use (" .. _L.Functions.Commas(v25) .. ")"
		end
		if Attribute == "Triple Diamonds" then
			p11.Visible = v25 and v25 > 0 and true or v24 and v24 > 0
		end
	end
	local function SetupBoost(p12)  
		local t_ID2 = _L.Directory.Products[p12:GetAttribute("Product")].ID
		local Attribute2 = p12:GetAttribute("Boost")
		local Buttons = p12:FindFirstChild("Buttons")
		local Price2 = Buttons:FindFirstChild("Price")
		local Frame = Price2:FindFirstChild("Frame")
		UpdatePriceFrame(Price2:FindFirstChild("Frame"), Attribute2)
		_L.GUIFX.ButtonFX(Price2)
		Price2.Activated:Connect(function() 
			if not bool1 then
				bool1 = true
				if Attribute2 == "Triple Diamonds" then
					_L.Message.New("This is temporarily disabled!")
					bool1 = false
					return
				end
				Purchase(Attribute2)
				bool1 = false
			end
		end)
		local Use2 = Buttons:FindFirstChild("Use")
		_L.GUIFX.ButtonFX(Use2)
		Use2.Activated:Connect(function()  
			if not bool1 then
				bool1 = true
				_L.Network.Fire("Activate Boost", Attribute2)
				bool1 = false
			end
		end)
	end
	for _, child3 in ipairs(t_ExclusiveShop.Container.Boosts:GetChildren()) do
		if not child3:GetAttribute("Boost") then continue end
		UpdateBoost(child3)
		if table3[child3] then continue end
		table3[child3] = true
		SetupBoost(child3)
	end
end
function UpdateDiamonds()  
	local t_BestCurrency = t_ExclusiveShop.Container.Diamonds.BestCurrency
	for key4, val4 in ipairs(_L.Directory.Eggs["Diamond Egg"].drops) do
		local FindFirstChild_ret = t_BestCurrency:FindFirstChild(tostring(key4))
		_L.PetUI.CreateStaticHover(FindFirstChild_ret, val4[1])
	end
	local function SetupDiamonds(p13)  
		if table2[p13] then return end
		table2[p13] = true
		local t_ID3 = _L.Directory.Products[p13:GetAttribute("Product")].ID
		UpdateRobuxPriceFrame(p13:FindFirstChild("Price"), t_ID3, false)
		_L.GUIFX.ButtonFX(p13)
		p13.Activated:Connect(function()  
			if not bool1 then
				bool1 = true
				_L.Shared.PromptPurchase(t_ID3, true)
				bool1 = false
			end
		end)
	end
	SetupDiamonds(t_ExclusiveShop.Container.Diamonds.BestCurrency)
	for _, child5 in ipairs(t_ExclusiveShop.Container.Diamonds.CurrencyGroup:GetChildren()) do
		if child5.ClassName ~= "TextButton" then continue end
		SetupDiamonds(child5)
	end
end
function UpdateGamepasses()  
	local function UpdateGamepass(p14)  
		local gamepass = p14:GetAttribute("Gamepass")
		local t_ID4 = _L.Directory.Gamepasses[gamepass].ID
		local v26 = _L.Gamepasses.Owns(t_ID4)
		if v26 then
			p14:FindFirstChild("Price").Robux.Text = "Owns"
			p14:FindFirstChild("Price").RobuxIcon.Image = "rbxassetid://6516386809"
			return
		end
		UpdatePriceFrame(p14:FindFirstChild("Price"), gamepass)
	end
	local function SetupGamepass(p15)  
		_L.GUIFX.ButtonFX(p15)
		local gamepass = p15:GetAttribute("Gamepass")
		local t_ID5 = _L.Directory.Gamepasses[gamepass].ID
		p15.Activated:Connect(function() 
			if not bool1 then
				bool1 = true
				Purchase(gamepass)
				bool1 = false
			end
		end)
	end
	for _, child6 in ipairs(t_ExclusiveShop.Gamepasses:GetChildren()) do
		for _, child10 in ipairs(child6:GetChildren()) do
			if not child10:GetAttribute("Gamepass") then continue end
			if not table1[child10] then
				table1[child10] = true
				SetupGamepass(child10)
			end
			UpdateGamepass(child10)
		end
	end
end
function Update15PetsEquipped()
	local t_Deal = t_ExclusiveShop.Container["15Pets"].Deal
	if not t_Deal.Visible then return end
	local v7 = _L.Save.Get()
	if not v7 then return end
	local v8 = v7.MaxEquipped >= 15
	t_Deal.Title.Text = math.max(v8 and v7.MaxEquipped or v7.MaxEquipped + 7, 15) .. " Pets Equipped!"
	local Price3 = t_Deal.Buttons:FindFirstChild("Price")
	if v8 then
		Price3.Robux.Text = "Owned"
		Price3.RobuxIcon.Visible = false
	else
        UpdatePriceFrame(Price3, "15 Pets Equipped")
	end
	if not t_Deal:GetAttribute("Setup") then
		t_Deal:SetAttribute("Setup", true)
		_L.GUIFX.ButtonFX(Price3)
		Price3.Activated:Connect(function() 
			if not bool1 then
				bool1 = true
				local v41, v42 = _L.Network.Invoke("Can Purchase 15 Pets Equipped")
				if v41 then
					Purchase("15 Pets Equipped")
				elseif v42 == "You need to buy the 8 Pets Equipped pass first. Would you like to buy it now?" then
					local v47 = _L.Message.New(v42, true)
					if v47 then
						Purchase("8 Pets Equipped")
					end
				else
					_L.Message.New(v42 or "Error")
				end
				bool1 = false
			end
		end)
		coroutine.wrap(function()
			local Splash = t_Deal:FindFirstChild("Splash")
			local t_Position = Splash.Position
			while true do
				_L.Functions.Tween(Splash, {Position = t_Position - UDim2.new(0, 0, 0.05, 0)}, {
					1.5,
					"Sine",
					"InOut"
				}).Completed:Wait()
				_L.Functions.Tween(Splash, {Position = t_Position}, {
					1.25,
					"Sine",
					"InOut"
				}).Completed:Wait()
			end
		end)()
	end
end
function UpdateLazarGun() 
	if not ({[1436154219] = true})[_L.LocalPlayer.UserId] then return end
	t_ExclusiveShop.Container.LazarGun.Visible = true
	local t_Deal2 = t_ExclusiveShop.Container.LazarGun.Deal
	if not t_Deal2.Visible then return end
	local v9 = _L.Save.Get()
	if not v9 then return end
	local Price4 = t_Deal2.Buttons:FindFirstChild("Price")
	UpdateRobuxPriceFrame(Price4, _L.Directory.Products["Lazar Gun"].ID, false)
	if not t_Deal2:GetAttribute("Setup") then
		t_Deal2:SetAttribute("Setup", true)
		_L.GUIFX.ButtonFX(Price4)
		Price4.Activated:Connect(function()  
			if not bool1 then
				bool1 = true
                _L.Shared.PromptPurchase(_L.Directory.Products["Lazar Gun"].ID, true)
				bool1 = false
			end
		end)
	end
end
function UpdateOctupleEgg()   
	local t_Deal3 = t_ExclusiveShop.Container.FeaturedOctuple.Deal
	if not t_Deal3.Visible then return end
	local v10 = _L.Save.Get()
	if not v10 then return end
	local t_OwnsOctupleEggs = v10.OwnsOctupleEggs
	local Price5 = t_Deal3.Buttons:FindFirstChild("Price")
	if t_OwnsOctupleEggs then
		Price5.Robux.Text = "Owned"
		Price5.RobuxIcon.Visible = false
	else
        UpdatePriceFrame(Price5, "Octuple Egg Open")
	end
	if not t_Deal3:GetAttribute("Setup") then
		t_Deal3:SetAttribute("Setup", true)
		_L.GUIFX.ButtonFX(Price5)
		Price5.Activated:Connect(function()  
			if not bool1 then
				bool1 = true
				local v43, v44 = _L.Network.Invoke("Can Purchase Octuple Eggs")
				if v43 then
					Purchase("Octuple Egg Open")
				elseif v44 == "You need to buy the triple egg pass first. Would you like to buy it now?" then
					local v48 = _L.Message.New(v44, true)
					if v48 then
						Purchase("Triple Egg Open")
					end
				else
					_L.Message.New(v44 or "Error")
				end
				bool1 = false
			end
		end)
		local coroutine_wrap_ret2 = coroutine.wrap(function() 
			local Splash2 = t_Deal3:FindFirstChild("Splash")
			local t_Position2 = Splash2.Position
			while true do
				_L.Functions.Tween(Splash2, {Position = t_Position2 - UDim2.new(0, 0, 0.05, 0)}, {
					1.25,
					"Sine",
					"InOut"
				}).Completed:Wait()
				_L.Functions.Tween(Splash2, {Position = t_Position2}, {
					1.15,
					"Sine",
					"InOut"
				}).Completed:Wait()
			end
		end)
		coroutine_wrap_ret2()
	end
end
function UpdateSecretHunter()  
	local t_Deal4 = t_ExclusiveShop.Container.Featured.Deal
	if not t_Deal4.Visible then return end
	local v11 = _L.Save.Get()
	if not v11 then return end
	local t_ID6 = _L.Directory.Gamepasses["Secret Hunter"].ID
	local v12 = _L.Gamepasses.Owns(t_ID6)
	local Price6 = t_Deal4.Buttons:FindFirstChild("Price")
	if v12 then
		Price6.Robux.Text = "Owned"
		Price6.RobuxIcon.Visible = false
	else
		UpdatePriceFrame(Price6, "Secret Hunter")
	end
	if not t_Deal4:GetAttribute("Setup") then
		t_Deal4:SetAttribute("Setup", true)
		_L.GUIFX.ButtonFX(Price6)
		Price6.Activated:Connect(function()  
			if not bool1 then
				bool1 = true
				Purchase("Secret Hunter")
				bool1 = false
			end
		end)
		local coroutine_wrap_ret3 = coroutine.wrap(function() 
			local Splash3 = t_Deal4:FindFirstChild("Splash")
			local t_Position3 = Splash3.Position
			while true do
				_L.Functions.Tween(Splash3, {Position = t_Position3 - UDim2.new(0, 0, 0.05, 0)}, {
					1.15,
					"Sine",
					"InOut"
				}).Completed:Wait()
				_L.Functions.Tween(Splash3, {Position = t_Position3}, {
					1,
					"Sine",
					"InOut"
				}).Completed:Wait()
			end
		end)
		coroutine_wrap_ret3()
	end
end
function MerchAnimation()  
	local Deal = t_ExclusiveShop.Container:FindFirstChild("Merch"):FindFirstChild("Deal")
	local One = Deal.Illustrations:FindFirstChild("One")
	local Two = Deal.Illustrations:FindFirstChild("Two")
	local t_Position4 = One.Position
	local t_Position5 = Two.Position
	local coroutine_wrap_ret4 = coroutine.wrap(function()  
		while true do
			_L.Functions.Tween(One, {Position = t_Position4 - UDim2.new(0, 0, 0.05, 0)}, {
				0.25,
				"Expo",
				"InOut"
			}).Completed:Wait()
			_L.Functions.Tween(One, {Position = t_Position4}, {
				0.35,
				"Quad",
				"InOut"
			}).Completed:Wait()
			_L.Functions.Wait(math.random(0, 2))
		end
	end)
	coroutine_wrap_ret4()
	local coroutine_wrap_ret5 = coroutine.wrap(function()  
		while true do
			_L.Functions.Tween(Two, {Position = t_Position5 - UDim2.new(0, 0, 0.05, 0)}, {
				0.25,
				"Expo",
				"InOut"
			}).Completed:Wait()
			_L.Functions.Tween(Two, {Position = t_Position5}, {
				0.35,
				"Quad",
				"InOut"
			}).Completed:Wait()
			_L.Functions.Wait(math.random(0, 2))
		end
	end)
	coroutine_wrap_ret5()
end
local triangleWave = function(p7)
    p7 = p7 % 2
    if p7 >= 1 then
        p7 = 2 - p7
    end
    return (p7 + 1) / 2
end
function UpdateExclusiveEggs() 
	local t_ID7 = _L.Directory.Products["Exclusive Egg"].ID
	local t_ID8 = _L.Directory.Products["3 Exclusive Eggs"].ID
	local t_ID9 = _L.Directory.Products["10 Exclusive Eggs"].ID
	local hunId = _L.Directory.Products["100 Exclusive Eggs"].ID
	local t_Pets = t_ExclusiveShop.Container.PetsCosmic
	local t_Price = t_Pets.Deal.Buttons.Price
	local t_PriceTriple = t_Pets.Deal.Buttons.PriceTriple
	local t_PriceTen = t_Pets.Deal.Buttons.PriceTen
	local t_PriceHundred = t_Pets.Deal.Buttons.PriceHundred
	for key7, val7 in ipairs(_L.Directory.Eggs["Exclusive Egg 16"].drops) do
		local FindFirstChild_ret2 = t_Pets.Deal.Pets:FindFirstChild(tostring(key7))
		local dir = _L.Directory.Pets[val7[1]]
		local replacements = dir.replacements
		local rep = {}
		if replacements then
			for i, v in pairs(replacements) do
				table.insert(rep, i)
			end
		end
		--FindFirstChild_ret2.PetIcon = _L.Directory.Pets[val7[1]].thumbnail 
		_L.PetUI.CreateStaticHover(FindFirstChild_ret2, val7[1], {rep = rep})
	end
	
	_L.GUIFX.ButtonFX(t_Price)
	_L.GUIFX.ButtonFX(t_PriceTriple)
	_L.GUIFX.ButtonFX(t_PriceTen)
	_L.GUIFX.ButtonFX(t_PriceHundred)
	t_PriceHundred.Visible = _L.Network.Invoke("Can Buy 100 Eggs") or false 
	local prices = _L.Shared.ExclusiveEggCosts
	local frameThings = {t_Price,t_PriceTriple,t_PriceTen,t_PriceHundred}
	UpdatePriceFrame(t_Price.Frame, "Exclusive1")
	UpdatePriceFrame(t_PriceTriple.Frame, "Exclusive3")
	UpdatePriceFrame(t_PriceTen.Frame, "Exclusive10")
	UpdatePriceFrame(t_PriceHundred.Frame, "Exclusive100")
	t_PriceTen.Frame.Robux.OGPrice.Text = _L.Functions.Commas(_L.Shared.Purchasables["Exclusive10"].Cost*0.8)
	t_PriceHundred.Frame.Robux.OGPrice.Text = _L.Functions.Commas(_L.Shared.Purchasables["Exclusive100"].Cost*0.8)
	t_Price.Activated:Connect(function()
		if not bool1 then
			bool1 = true
			local v31 = _L.Save.Get()
			if #v31.Pets + 1 <= v31.MaxSlots then
				Purchase("Exclusive1")
			else
				_L.Message.New("Your inventory is full! Clear some pets first.")
			end
			bool1 = false
		end
	end)
	t_PriceTriple.Activated:Connect(function()
		if not bool1 then
			bool1 = true
			local v32 = _L.Save.Get()
			if #v32.Pets + 3 <= v32.MaxSlots then
				Purchase("Exclusive3")
			else
				_L.Message.New("You need more inventory space first!")
			end
			bool1 = false
		end
	end)
	t_PriceTen.Activated:Connect(function()
		if not bool1 then
			bool1 = true
			local v33 = _L.Save.Get()
			if #v33.Pets + 10 <= v33.MaxSlots then
				Purchase("Exclusive10")
			else
				_L.Message.New("You need more inventory space first!")
			end
			bool1 = false
		end
	end)
	t_PriceHundred.Activated:Connect(function()
		if not bool1 then
			bool1 = true
			local v33 = _L.Save.Get()
			if #v33.Pets + 100 <= v33.MaxSlots then
				Purchase("Exclusive100")
			else
				_L.Message.New("You need more inventory space first!")
			end
			bool1 = false
		end
	end)
	coroutine.wrap(function() 
		local t_Egg = t_Pets.Deal.Egg
		local t_Position6 = t_Egg.Position
		while true do
			_L.Functions.Tween(t_Egg, {Position = t_Position6 - UDim2.new(0, 0, 0.05, 0)}, {0.4,"Sine","InOut"}).Completed:Wait()
			_L.Functions.Tween(t_Egg, {Position = t_Position6}, {0.4,"Sine","InOut"}).Completed:Wait()
		end
	end)()
	
	local v743 = {}
	local v936 = {"688", "689", "690", "2182", "2183", "3028"}
	for v744, v740 in ipairs(t_Pets.Deal.Pets:GetChildren()) do
		table.insert(v743, v740:FindFirstChild("PetIcon"))
		local v1036 = _L.Directory.Pets[v936[tonumber(v740.Name)]].titanic
		if not v1036 then
			v740.Stars.Visible = false
		end
	end
	
	local function animatePets()
		local v897 = t_Pets.Deal.bg
		local v896 = t_Pets.Deal.bg2
		local v902 = Vector2.new(-0.5, 0.5)
		local p1 = UDim2.new(0.5,0,0.5,0) --v897.Position
		local p2 = UDim2.new(0.5,0,0.5,0) --v896.Position
		_L.Functions.RenderStepped(function(p8, p9)
			local v908 = triangleWave(p9 * 0.05)
			local v913 = _L.Functions.Lerp(v902.X, v902.Y, v908)
			v897.Position = p1 + UDim2.fromScale(v913, 0) --v897.Position + UDim2.fromScale(v913, 0)
			v896.Position = p2 + UDim2.fromScale(-v913, 0) --v896.Position + UDim2.fromScale(-v913, 0)
			v897.ImageTransparency = v908
			v896.ImageTransparency = 1 - v908
		end)

		for index, v940 in ipairs(v936) do
			task.spawn(function()
				local v951 = t_Pets.Deal.Pets:WaitForChild(index)
				local v949 = {
					v951:WaitForChild("PetIcon"),
					v951:WaitForChild("PetIcon2"),
					v951:WaitForChild("PetIcon3")
				}

				local v988 = 1
				while true do
					local v957 = 1 + v988 % #v949
						
					local render = _L.Functions.RenderStepped(function(_, p11)
						v949[v957].ImageTransparency = p11
						v949[v957 % #v949 + 1].ImageTransparency = 1 - p11
					end, rng:NextNumber(1, 3), true)	
						
					local renderThen = render:Then(function()
						v949[v957].ImageTransparency = 1
						v949[v957 % #v949 + 1].ImageTransparency = 0
					end)
					
					v988 = v957
					renderThen:Wait()
				end
			end)
		end
	end

	task.spawn(animatePets)
	
	-- nightmare
	--[[coroutine.wrap(function()
		local GUI = t_Pets.Deal.Pets
		
		task.spawn(function()
			while true do
				_L.Functions.Tween(GUI["1"].PetIconGlowing, {ImageTransparency = 0}, { 2, "Sine", "InOut" }).Completed:Wait()
				_L.Functions.Tween(GUI["1"].PetIconGlowing, {ImageTransparency = 1}, { 2, "Sine", "InOut" }).Completed:Wait()
			end
		end)
		task.spawn(function()
			while true do
				_L.Functions.Tween(GUI["2"].PetIconGlowing, {ImageTransparency = 0}, { 2, "Sine", "InOut" }).Completed:Wait()
				_L.Functions.Tween(GUI["2"].PetIconGlowing, {ImageTransparency = 1}, { 2, "Sine", "InOut" }).Completed:Wait()
			end
		end)
		task.spawn(function()
			task.spawn(function()
				while wait() do
					vv = GUI["3"].PetIconLayer
					vv.Rotation += 5
					if vv.Rotation >= 360 then
						vv.Rotation = 0
					end
				end
			end)

			while wait(math.random(0.75,1)) do
				local random = math.random(1, 4)
				GUI["3"].PetIcon.Visible = random == 4
				GUI["3"].PetIconBlink1.Visible = random == 1
				GUI["3"].PetIconBlink2.Visible = random == 2
				GUI["3"].PetIconBlink3.Visible = random == 3
			end
		end)
		task.spawn(function()
			while true do
				_L.Functions.Tween(GUI["4"].PetIconGlowing, {ImageTransparency = 0}, { 2, "Sine", "InOut" }).Completed:Wait()
				_L.Functions.Tween(GUI["4"].PetIconGlowing, {ImageTransparency = 1}, { 2, "Sine", "InOut" }).Completed:Wait()
			end
		end)
		task.spawn(function()
			task.spawn(function()
				while wait() do
					vv = GUI["5"].PetIconLayer
					vv.Rotation += 5
					if vv.Rotation >= 360 then
						vv.Rotation = 0
					end
				end
			end)

			while wait(math.random(0.75,1)) do
				local random = math.random(1, 4)
				GUI["5"].PetIcon.Visible = random == 4
				GUI["5"].PetIconBlink1.Visible = random == 1
				GUI["5"].PetIconBlink2.Visible = random == 2
				GUI["5"].PetIconBlink3.Visible = random == 3
			end
		end)
		task.spawn(function()
			while true do
				_L.Functions.Tween(GUI["6"].PetIconGlowing, {ImageTransparency = 0}, { 2, "Sine", "InOut" }).Completed:Wait()
				_L.Functions.Tween(GUI["6"].PetIconGlowing, {ImageTransparency = 1}, { 2, "Sine", "InOut" }).Completed:Wait()
			end
		end)
	end)()]]--
	
	
	-- jelly animation
 	--[[coroutine.wrap(function() 
		for i, v in ipairs({'1','2','3','4','5','6'}) do
			coroutine.wrap(function() 
				local del = rng:NextNumber(0.75,2.5)
				task.wait(del)--idk
				local Pet = t_Pets.Deal.Pets[v]:FindFirstChild("PetIcon")
				local size = Pet.Size
				task.spawn(function()
					if v == '6' then
						local star = t_Pets.Deal.Star
						local pos = star.Position
						while true do
							_L.Functions.Tween(star, {Position = pos + UDim2.new(0, 0, 0.1, 0)}, { 1.5, "Sine", "InOut" }).Completed:Wait()
							_L.Functions.Tween(star, {Position = pos}, { 1.5, "Sine", "InOut" }).Completed:Wait()
						end
					end 
				end)
				while true do
					_L.Functions.Tween(Pet, {Size = size - UDim2.new(0, 0, 0.2, 0)}, { 1.5, "Sine", "InOut" }).Completed:Wait()
					_L.Functions.Tween(Pet, {Size = size}, { 1.5, "Sine", "InOut" }).Completed:Wait()
				end
			end)()
		end
	end)()]]--
end

---- TESTING ------
--_L.GUIFX.Rainbow(t_ExclusiveShop.Container.PetsChroma.Deal.Pets["6"], "ImageColor3", 10)
--_L.GUIFX.Rainbow(t_ExclusiveShop.Container.PetsChroma.Deal.Pets["5"], "ImageColor3", 10)
--_L.GUIFX.Rainbow(t_ExclusiveShop.Container.PetsChroma.Deal.Pets["4"], "ImageColor3", 10)
--_L.GUIFX.Rainbow(t_ExclusiveShop.Container.PetsChroma.Deal.Pets["3"], "ImageColor3", 10)
--_L.GUIFX.Rainbow(t_ExclusiveShop.Container.PetsChroma.Deal.Pets["2"], "ImageColor3", 10)
--_L.GUIFX.Rainbow(t_ExclusiveShop.Container.PetsChroma.Deal.Pets["1"], "ImageColor3", 10)
--_L.GUIFX.Rainbow(t_ExclusiveShop.Container.PetsChroma.Deal.Egg, "ImageColor3", 10)
--task.spawn(function()  _L.GUIFX.Rainbow(t_ExclusiveShop.Container.PetsChroma.Deal.UIGradient, "Color", 10)  end)
---- TESTING ------


function UpdateInfinitePets()  
	local t_InfinitePets = t_ExclusiveShop.Container.InfinitePets
	if not _L.FFlags.Get(_L.FFlags.Keys.InfinitePetPass) then
		t_InfinitePets.Visible = false
		return
	end
	t_InfinitePets.Visible = true
	local t_ID15 = _L.Directory.Products["Infinite Pets"].ID
	local t_Price5 = t_InfinitePets.Deal.Buttons.Price
	local function BuyInfPets() 
		local v27 = _L.Save.Get()
		if v27 and not v27.InfPetsEnabled then
			local v39 = _L.Message.New("Infinite Pets will only last for 72 hours. Are you sure?", true)
			if v39 then
				_L.Shared.PromptPurchase(t_ID15, true)
			end
		end
	end
	if not t_InfinitePets:GetAttribute("Setup") then
		t_InfinitePets:SetAttribute("Setup", true)
		_L.GUIFX.ButtonFX(t_Price5)
		t_Price5.Activated:Connect(function() 
			if not bool1 then
				bool1 = true
				BuyInfPets()
				bool1 = false
			end
		end)
	end
	local v13 = _L.Save.Get()
	if not v13 then return end
	if v13.InfPetsEnabled then
		t_Price5.Robux.Text = "Owned"
		t_Price5.RobuxIcon.Visible = false
		local v21 = (v13.InfPetsTimeStart or 0) + 259200 - (u1 + (workspace:GetServerTimeNow() - ServerTimeNow))
		t_InfinitePets.Deal.TimeLeft.Visible = true
		t_InfinitePets.Deal.TimeLeft.Text = v21 > 0 and _L.Functions.TimeString(v21) .. " Left" or "Expired"
		return
	end
	UpdateRobuxPriceFrame(t_Price5, t_ID15, false)
end
function UpdatePriceFrame(button, p2)  
	local v14 = _L.Shared.Purchasables[p2]
	local Robux = button:FindFirstChild("Robux")
	if v14 and v14.Cost then
		Robux.Text = _L.Functions.Commas(v14.Cost)
		return 
	end
	Robux.Text = "???"
end
function Scrollbar() 
	local UIListLayout = t_ExclusiveShop.Container:FindFirstChildOfClass("UIListLayout")
	local UIPadding = t_ExclusiveShop.Container:FindFirstChildOfClass("UIPadding")
	local v16 = UIListLayout.AbsoluteContentSize.Y + UIPadding.PaddingTop.Offset + UIPadding.PaddingBottom.Offset
	t_ExclusiveShop.Container.CanvasSize = UDim2.new(0, 0, 0, v16)
end
function SizeFrame(p4) 
	local v17 = _L.Functions.ResolutionScale()
	local v18 = 1
	for _, child8 in ipairs(p4:GetChildren()) do
		if child8.ClassName == "UIPadding" then
			local v28 = _L.GUIFX.CacheProperty(child8, "PaddingTop")
			local v29 = _L.GUIFX.CacheProperty(child8, "PaddingBottom")
			child8.PaddingTop = UDim.new(v28.Scale, v28.Offset * v17)
			child8.PaddingBottom = UDim.new(v29.Scale, v29.Offset * v17)
			v18 = v18 + (child8.PaddingTop.Offset + child8.PaddingBottom.Offset)
			continue
		end
		if child8.ClassName ~= "UIListLayout" and child8.ClassName ~= "UIGridLayout" then continue end
		v18 = v18 + child8.AbsoluteContentSize.Y
		if child8.ClassName == "UIListLayout" then
			local v30 = _L.GUIFX.CacheProperty(child8, "Padding")
			child8.Padding = UDim.new(v30.Scale, v30.Offset * v17)
		elseif child8.ClassName == "UIGridLayout" then
			local v40 = _L.GUIFX.CacheProperty(child8, "CellPadding")
			child8.CellPadding = UDim2.new(v40.X.Scale, v40.X.Offset * v17, v40.Y.Scale, v40.Y.Offset * v17)
		end
		if child8.ClassName ~= "UIGridLayout" or not child8:FindFirstChildOfClass("UIAspectRatioConstraint") then continue end
		child8.CellSize = UDim2.new(child8.CellSize.X.Scale, child8.CellSize.X.Offset, 0, child8.AbsoluteCellSize.Y + 2)
	end
	p4.Size = UDim2.new(p4.Size.X.Scale, p4.Size.X.Offset, 0, v18)
end
function Scaling()   
	if not t_ExclusiveShop.Gui.Enabled then return end
	local v19 = game.Workspace.CurrentCamera.ViewportSize.Y <= 1000
	local UIAspectRatioConstraint2 = t_ExclusiveShop.Frame:FindFirstChildOfClass("UIAspectRatioConstraint")
	UIAspectRatioConstraint2.AspectRatio = v19 and 1.6 or 1.2
	t_ExclusiveShop.Tabs.Size = v19 and UDim2.new(0.365, 0, 0.1, 0) or UDim2.new(0.365, 0, 0.065, 0)
	for _, child9 in ipairs(t_ExclusiveShop.Container:GetChildren()) do
		if not child9:IsA("GuiObject") then continue end
		for _, child11 in ipairs(child9:GetChildren()) do
			if not child11:FindFirstChildOfClass("UIListLayout") and not child11:FindFirstChildOfClass("UIGridLayout") then continue end
			SizeFrame(child11)
		end
		SizeFrame(child9)
	end
	Scrollbar()
end
local coroutine_wrap_ret9 = coroutine.wrap(function() 
	while true do
		_L.Heartbeat()
		Scaling()
	end
end)
coroutine_wrap_ret9()
function UpdateRobuxPriceFrame()

end
function UpdateShopButton(a1) 
	if not _L.Save.Get() then
		return
	end
	_L.GUI.Main.Bottom.ExclusiveShop.Notification.Visible = _L.Save.Get().LastShopClick ~= _L.Shared.ShopNumber
	if a1 then
		task.spawn(function()
			while true do
				wait(5)
			end
		end)
	end
end
function UseTab(p5)   
	local FindFirstChild_ret3 = t_ExclusiveShop.Container:FindFirstChild(p5.Name)
	if not FindFirstChild_ret3 then
		warn("No frame!")
		return
	end
	if not t_ExclusiveShop.Container then
		warn("No frame!")
		return
	end
	local v20 = t_ExclusiveShop.Container.CanvasPosition.Y + (FindFirstChild_ret3.AbsolutePosition.Y - t_ExclusiveShop.Container.AbsolutePosition.Y)
	_L.Functions.Tween(t_ExclusiveShop.Container, {CanvasPosition = Vector2.new(0, v20)}, {
		0.2,
		"Expo",
		"Out"
	})
	_L.Audio.Play("rbxassetid://7004248320", script, 1, 0.5)
end
function SetupTab(p6)  
	_L.GUIFX.ButtonFX(p6)
	_L.GUIFX.Tooltip(p6, p6.Name)
	p6.Activated:Connect(function()  
		if not bool1 then
			bool1 = true
			UseTab(p6)
			bool1 = false
		end
	end)
end
for _, child1 in ipairs(t_ExclusiveShop.Tabs:GetChildren()) do
	if child1.ClassName ~= "ImageButton" then continue end
	SetupTab(child1)
end
local t_Redeem = t_ExclusiveShop.Container.Codes.Frame.Buttons.Redeem
_L.GUIFX.ButtonFX(t_Redeem)
t_Redeem.Activated:Connect(function()  
	if not bool1 then
		bool1 = true
		_L.GUI.TwitterCodes.Gui.Enabled = true
		bool1 = false
	end
end)
if t_ExclusiveShop.Container.BoosterPack.Visible then
	local t_Price6 = t_ExclusiveShop.Container.BoosterPack.Deal.Buttons.Price
	UpdatePriceFrame(t_Price6, "The Boost Bundle")
	_L.GUIFX.ButtonFX(t_Price6)
	t_Price6.Activated:Connect(function()  
		if not bool1 then
			bool1 = true
			Purchase("The Boost Bundle")
			bool1 = false
		end
	end)
end
function Purchase(purchasable: string)
	local s, r = _L.Network.Invoke("Exclusive Shop Purchase", purchasable)
	if not s then
		_L.Message.New(r or "Something went wrong, try again!")
		return
	end
	_L.Message.New("Purchase successful ✅")
end

if t_ExclusiveShop.Container.Deal.Visible then
	local priceButton = t_ExclusiveShop.Container.Deal.Deal.Buttons.RedeemButton
	priceButton.Activated:Connect(function()
		if not bool1 then
			bool1 = true
			if _L.Message.New("Would you like to redeem these rewards?", true) then
				_L.Message.New("Calculating compensation... (this may take a while)")
				local s, r = _L.Network.Invoke("Calculate Gamepass Rewards")
				if not s then
					_L.Message.New(r or "Something went wrong, Please try again!")
				end
				_L.Message.New("✅ You have recieved your rewards! Thank you so much for your support! 😊")
			end	
			bool1 = false
		end
	end)
	coroutine.wrap(function()
		local Splash4 = t_ExclusiveShop.Container.Deal.Deal:FindFirstChild("Illustrations").Image
		local t_Position8 = Splash4.Position
		while true do
			_L.Functions.Tween(Splash4, {Position = t_Position8 - UDim2.new(0, 0, 0.025, 0)}, {
				1.25,
				"Sine",
				"InOut"
			}).Completed:Wait()
			_L.Functions.Tween(Splash4, {Position = t_Position8}, {
				1.15,
				"Sine",
				"InOut"
			}).Completed:Wait()
		end
	end)()
end
local t_Redeem2 = t_ExclusiveShop.Container.Merch.Deal.Buttons.Redeem
_L.GUIFX.ButtonFX(t_Redeem2)
t_Redeem2.Activated:Connect(function()  
	if not bool1 then
		bool1 = true
		_L.GUI.MerchCodes.Gui.Enabled = true
		bool1 = false
	end
end)
_L.GUIFX.ButtonFX(t_ExclusiveShop.Close)
t_ExclusiveShop.Close.Activated:Connect(function()  
	if not bool1 then
		bool1 = true
		t_ExclusiveShop.Gui.Enabled = false
		bool1 = false
	end
end)
local u2 = 0
local t_Subtitle = t_ExclusiveShop.Container.Pets.Deal.Subtitle
_L.RunService.Heartbeat:Connect(function(p7) 
	u2 = u2 + p7
	if u2 > 1 then
		u2 = u2 - 1
		if not _L.FFlags.Get(_L.FFlags.Keys.ExclusiveEggTimer) then
			if t_Subtitle.Text ~= "Limited Time Pets!" then
				t_Subtitle.Text = "Limited Time Pets!"
			end
			return
		end
		local v22 = 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999 - workspace:GetServerTimeNow()
		if v22 > 0 then
			if v22 < 345600 then
				t_Subtitle.Text = "Limited time for " .. _L.Functions.FormatTime(v22 >= 0 and v22 or 0, true, true) .. "!"
			end
		else
			t_Subtitle.Text = "Leaving any second! \240\159\142\137"
		end
	end
end)
UpdateGamepasses()
UpdateDiamonds()
UpdateBoosts()
UpdateOctupleEgg()
UpdateSecretHunter()
Update15PetsEquipped()
MerchAnimation()
UpdateExclusiveEggs()
UpdateLazarGun()
UpdateInfinitePets()
_L.Signal.Fired("Stat Changed"):Connect(function(p8)  
	if p8 == "Gamepasses" then
		UpdateGamepasses()
		UpdateSecretHunter()
		return
	end
	if p8 == "Boosts" or p8 == "BoostsInventory" then
		UpdateBoosts()
		return
	end
	if p8 == "MaxEquipped" then
		Update15PetsEquipped()
		return
	end
	if p8 == "InfPetsEnabled" or p8 == "InfPetsTimeStart" then
		UpdateInfinitePets()
		return
	end
	if p8 == "OwnsOctupleEggs" then
		UpdateOctupleEgg()
	end
end)
_L.Signal.Fired("FFlags Changed"):Connect(function()  
	UpdateInfinitePets()
end)
_L.Signal.Fired("Exlusive Shop Tab"):Connect(function(p9) 
	local FindFirstChild_ret4 = t_ExclusiveShop.Tabs:FindFirstChild(p9)
	t_ExclusiveShop.Gui.Enabled = true
	UseTab(FindFirstChild_ret4)
end)
_L.Signal.Fired("Clicked Shop Button"):Connect(function()
	UpdateShopButton()
end)
  -  Editar
  04:54:13.924    -  Editar
  04:54:13.924  ----- [2784] StarterPlayer.StarterPlayerScripts.Scripts.Game.Cannons -----  -  Editar
  04:54:13.924  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_Size = m_Library.Assets.Billboards.Cannon.Size;
local table1 = {};
local u1 = 0;
local bool1 = false;
function Fire(p1, p2) -- Line: 22
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table1
	--]]
	if not p1 then
		m_Library.Print("Cannon does not exist");
		return;
	end
	local v1 = p2 == m_Library.LocalPlayer;
	local v2 = m_Library.Player.Character(p2);
	local v3 = m_Library.Player.PrimaryPart(p2);
	local v4 = m_Library.Player.Humanoid(p2);
	if not v2 or not v3 or not v4 then
		m_Library.Print("Missing character - " .. p2.Name, true);
		return;
	end
	local t_Name = p1.Name;
	local v5 = table1[t_Name];
	if v5.using then
		m_Library.Print("Cannon is already active", true);
		return;
	end
	v5.using = true;
	local t_Name2 = p1.Name;
	if not m_Library.Directory.Worlds[t_Name2] then
		m_Library.Print("World '" .. t_Name2 .. "' doesn't exist", true);
		return;
	end
	p2:SetAttribute("UsingCannon", true);
	if v1 then
		m_Library.Network.Fire("Cannon Fire", m_Library.WorldCmds.Get(), t_Name);
		m_Library.Signal.Fire("Entered Cannon");
		m_Library.Variables.UsingCannon = true;
	else
		m_Library.Signal.Fire("Other Entered Cannon", p2);
	end
	m_Library.Audio.Play("rbxassetid://7480973873", p1, 1, 1, 200);
	local v6 = p1.CFrame * CFrame.new(0, -3.8, 6) * CFrame.Angles(0.5235987755982988, 0, 0.000017453292519943296);
	local DirectionNew = p1:FindFirstChild("DirectionNew");
	if DirectionNew then
		v6 = DirectionNew.WorldCFrame;
	end
	v3.Anchored = true;
	v2:SetPrimaryPartCFrame(v6);
	local v7 = p1.MeshId == "rbxassetid://9196465083";
	local v8 = p1.MeshId == "rbxassetid://12145516344";
	local v9 = p1.MeshId == "rbxassetid://12818763791";
	local str1 = "Cannon Loaded";
	if v7 then
		str1 = "Cannon Loaded Pixel";
	elseif v8 then
		str1 = "Cannon Loaded Doodle";
	elseif v9 then
		str1 = "Cannon Loaded Kawaii";
	end
	local Clone_ret = m_Library.Assets.Models:WaitForChild(str1):Clone();
	Clone_ret.Size = p1.Size;
	Clone_ret.CFrame = p1.CFrame;
	if not v8 then
		Clone_ret.TextureID = p1.TextureID;
	end
	Clone_ret.Parent = p1;
	p1.Transparency = 1;
	local table2 = {};
	local table3 = {};
	for _, descendant1 in ipairs(v2:GetDescendants()) do
		if not descendant1:IsA("BasePart") then continue end
		local table4 = {};
		table2[descendant1] = table4;
		local table5 = {};
		table3[descendant1] = table5;
		local t_Transparency = descendant1.Transparency;
		if t_Transparency < 1 then
			table4.Transparency = t_Transparency;
			descendant1.Transparency = 1;
		end
		if not v8 then continue end
		local t_Size2 = descendant1.Size;
		table5.Size = t_Size2;
		descendant1.Size = Vector3.new(t_Size2.X, t_Size2.Y, 0.125);
	end
	m_Library.Functions.Wait(1);
	for key2, val2 in pairs(table2) do
		if not key2 then continue end
		for key5, val5 in pairs(val2) do
			key2[key5] = val5;
		end
	end
	m_Library.Audio.Play(3644843750, v1 and script or p1, 1, 1, 450);
	local v10 = p1:FindFirstChild("Particles");
	if not v10 then
		v10 = Instance.new("Attachment");
		assert(v10);
		v10.Position = Vector3.new(-0.057, 4.626, -10.26);
		v10.Orientation = Vector3.new(-0.001, 89.999, 30);
		v10.Parent = p1;
	end
	for _, child3 in ipairs(m_Library.Assets.Particles.Cannon:GetChildren()) do
		local Clone_ret2 = child3:Clone();
		Clone_ret2.Parent = v10;
		Clone_ret2:Emit(20);
	end
	local t_Magnitude = (p1.CFrame.Position - game.Workspace.CurrentCamera.CFrame.Position).Magnitude;
	if t_Magnitude < 100 then
		local v13 = (1 - t_Magnitude / 100) * 1.5;
		m_Library.Shake.Create(v13, 0.75, 0.15);
	end
	Clone_ret:Destroy();
	p1.Transparency = 0;
	if v1 then
		local __MAPDEBRIS = m_Library.Debris:FindFirstChild("__MAPDEBRIS");
		if __MAPDEBRIS then
			__MAPDEBRIS:ClearAllChildren();
		end
		local v14 = m_Library.Functions.Animation(7861951207, v4);
		v4.PlatformStand = true;
		v3.Anchored = false;
		v3.Velocity = v6.LookVector * 450;
		m_Library.Functions.Wait(0.3);
		m_Library.WorldCmds.Load(t_Name2);
		m_Library.Variables.UsingCannon = false;
		p2:SetAttribute("UsingCannon", false);
		v14:Stop();
		for key6, val6 in pairs(table3) do
			if not key6 then continue end
			for key7, val7 in pairs(val6) do
				key6[key7] = val7;
			end
		end
	else
		wait(5);
		v10:Destroy();
		v3.Anchored = false;
	end
	v5.using = false;
end
function ClientAttemptFire(p3) -- Line: 208
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local t_Name3 = p3.Name;
	if not m_Library.WorldCmds.CanDoAction() then return end
	if not m_Library.FFlags.Get(m_Library.FFlags.Keys.Cannons) and not m_Library.FFlags.CanBypass(m_Library.LocalPlayer) then
		m_Library.Message.New("Sorry this is disabled right now! Please try back later");
		return;
	end
	local v11, v12 = m_Library.Network.Invoke("Request Cannon Launch", t_Name3);
	if v11 then
		Fire(p3, m_Library.LocalPlayer);
		return;
	end
	m_Library.Message.New(v12 or "You don't have access to this area!");
end
function Init(p4) -- Line: 232
	--[[
		Upvalues:
			[1] = u1
			[2] = table1
			[3] = m_Library
			[4] = bool1
			[5] = t_Size
	--]]
	local u2 = u1;
	local t_Name4 = p4.Name;
	table1[t_Name4] = {
		physical = p4,
		using = false,
		event = nil,
		eventCancel = nil
	};
	local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 244
		--[[
			Upvalues:
				[1] = u1
				[2] = u2
				[3] = table1
				[4] = t_Name4
				[5] = m_Library
				[6] = p4
				[7] = bool1
		--]]
		while u1 == u2 and table1[t_Name4] do
			debug.profilebegin("Cannons.Init.pt1");
			local v17 = table1[t_Name4];
			if v17.using then
				v17.event = nil;
				if v17.eventCancel then
					v17.eventCancel();
					v17.eventCancel = nil;
				end
			elseif not v17.event then
				local v19, v20 = m_Library.Interact.Add(p4.CFrame.Position, {dist = 25});
				v17.event = v19;
				v17.eventCancel = v20;
				v19:Connect(function() -- Line: 263
					--[[
						Upvalues:
							[1] = bool1
							[2] = p4
					--]]
					if not bool1 then
						bool1 = true;
						ClientAttemptFire(p4);
						bool1 = false;
					end
				end);
			end
			debug.profileend();
			wait(0.25);
		end
	end);
	coroutine_wrap_ret();
	local coroutine_wrap_ret2 = coroutine.wrap(function() -- Line: 277
		--[[
			Upvalues:
				[1] = p4
				[2] = m_Library
				[3] = t_Size
				[4] = u1
				[5] = u2
				[6] = table1
				[7] = t_Name4
		--]]
		local bool2 = false;
		local function Show() -- Line: 281
			--[[
				Upvalues:
					[1] = p4
					[2] = m_Library
					[3] = t_Size
			--]]
			local v18 = m_Library.Directory.Worlds[p4.Name];
			local Clone_ret3 = m_Library.Assets.Billboards.Cannon:Clone();
			Clone_ret3.Frame.World.Text = v18.display;
			Clone_ret3.Frame.Currency.Image = m_Library.Directory.Currency[v18.mainCurrency].Image;
			Clone_ret3.Name = "%HUD";
			Clone_ret3.Parent = p4;
			Clone_ret3.Size = UDim2.new(0, 0, 0, 0);
			Clone_ret3.StudsOffset = Vector3.new();
			m_Library.Functions.Tween(Clone_ret3, {
				Size = t_Size,
				StudsOffset = Vector3.new(0, 12, 0)
			}, {
				0.2,
				Enum.EasingStyle.Quad,
				Enum.EasingDirection.Out
			});
		end
		local function Hide() -- Line: 297
			--[[
				Upvalues:
					[1] = p4
					[2] = m_Library
			--]]
			local FindFirstChild_ret = p4:FindFirstChild("%HUD");
			if FindFirstChild_ret then
				m_Library.Functions.Tween(FindFirstChild_ret, {
					Size = UDim2.new(0, 0, 0, 0),
					StudsOffset = Vector3.new(0, 4, 0)
				}, {
					0.15,
					Enum.EasingStyle.Quad,
					Enum.EasingDirection.In
				}).Completed:Connect(function() -- Line: 301
					--[[
						Upvalues:
							[1] = FindFirstChild_ret
					--]]
					FindFirstChild_ret:Destroy();
				end);
			end
		end
		while u1 == u2 and table1[t_Name4] do
			local _ = table1[t_Name4];
			local DistanceFromCharacter_ret = m_Library.LocalPlayer:DistanceFromCharacter(p4.CFrame.Position);
			if not bool2 and DistanceFromCharacter_ret <= 35 then
				bool2 = true;
				Show();
			elseif bool2 and DistanceFromCharacter_ret > 35 then
				bool2 = false;
				Hide();
			end
			wait((math.clamp(DistanceFromCharacter_ret / 35, 0.1, 1)));
		end
	end);
	coroutine_wrap_ret2();
end
function GetCannonPhysical(p5) -- Line: 326
	local __MAP = game.Workspace:WaitForChild("__MAP");
	local Cannons = __MAP:WaitForChild("Cannons");
	return Cannons:FindFirstChild(p5);
end
function LoadWorld() -- Line: 333
	--[[
		Upvalues:
			[1] = u1
			[2] = table1
	--]]
	u1 = u1 + 1;
	table1 = {};
	local __MAP2 = game.Workspace:WaitForChild("__MAP");
	local Cannons2 = __MAP2:WaitForChild("Cannons");
	for _, child4 in ipairs(Cannons2:GetChildren()) do
		Init(child4);
	end
end
m_Library.Network.Fired("Cannon Fired"):Connect(function(p6, p7, p8) -- Line: 349
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	if m_Library.WorldCmds.Get() == p7 and p6 ~= m_Library.LocalPlayer and m_Library.WorldCmds.HasLoaded() then
		local CannonPhysical = GetCannonPhysical(p8);
		Fire(CannonPhysical, p6);
	end
end);
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 357
	LoadWorld();
end);
  -  Editar
  04:54:13.924    -  Editar
  04:54:13.924  ----- [2785] StarterPlayer.StarterPlayerScripts.Scripts.Game.Pet Collection Machine -----  -  Editar
  04:54:13.924  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local Random_new_ret = Random.new();
local u1 = nil;
local bool1 = false;
function Setup() -- Line: 19
	--[[
		Upvalues:
			[1] = bool1
			[2] = u1
			[3] = m_Library
			[4] = Random_new_ret
	--]]
	if bool1 then return end
	bool1 = true;
	if u1.PrimaryPart then
		local v1 = m_Library.Audio.Play("rbxassetid://7349142463", u1.PrimaryPart, 0.8, 0.3, nil, nil, true);
		if v1 then
			v1.RollOffMaxDistance = 55;
			v1.RollOffMinDistance = 10;
		end
	end
	local coroutine_wrap_ret4 = coroutine.wrap(function() -- Line: 35
		--[[
			Upvalues:
				[1] = u1
				[2] = m_Library
				[3] = Random_new_ret
				[4] = bool1
		--]]
		local SurfaceGui = u1.Screen:FindFirstChildOfClass("SurfaceGui");
		local function UpdateBottom() -- Line: 38
			--[[
				Upvalues:
					[1] = m_Library
					[2] = u1
					[3] = SurfaceGui
			--]]
			local v2 = m_Library.Save.Get();
			if not v2 then return end
			local v3 = #v2.Collection;
			local v4 = #m_Library.Shared.GetAllCollectablePets();
			if not u1 or not u1.Parent or not SurfaceGui or not SurfaceGui.Parent then return end
			SurfaceGui.PetAm.Text = m_Library.Functions.Commas(#v2.Collection);
			local math_clamp_ret = math.clamp(v3 / v4, 0, 1);
			SurfaceGui.Percent.Text = m_Library.Functions.FormatPercent(math_clamp_ret);
		end
		local function PickRandomPet() -- Line: 56
			--[[
				Upvalues:
					[1] = m_Library
					[2] = Random_new_ret
			--]]
			local AllCollectablePets = m_Library.Shared.GetAllCollectablePets();
			local v5 = AllCollectablePets[Random_new_ret:NextInteger(1, #AllCollectablePets)];
			return v5.petId, v5.isGolden, v5.isRainbow, v5.isDarkMatter;
		end
		local u3 = nil;
		local function UpdatePet() -- Line: 63
			--[[
				Upvalues:
					[1] = m_Library
					[2] = Random_new_ret
					[3] = u3
					[4] = u1
					[5] = SurfaceGui
			--]]
			local v6 = m_Library.Save.Get();
			if not v6 then return end
			local AllCollectablePets2 = m_Library.Shared.GetAllCollectablePets();
			local v7 = AllCollectablePets2[Random_new_ret:NextInteger(1, #AllCollectablePets2)];
			local t_petId = v7.petId;
			local t_isGolden = v7.isGolden;
			local t_isRainbow = v7.isRainbow;
			local t_isDarkMatter = v7.isDarkMatter;
			if not t_petId then return end
			if u3 then
				u3();
				u3 = nil;
			end
			if not u1 or not u1.Parent or not SurfaceGui or not SurfaceGui.Parent or not SurfaceGui.PetFrame or not SurfaceGui.PetFrame.Pet then return end
			local v8 = m_Library.Directory.Pets[t_petId];
			local v9 = m_Library.Functions.SearchArray(v6.Collection, t_petId .. "-" .. (t_isGolden and 2 or t_isRainbow and 3 or t_isDarkMatter and 4 or 1));
			local v10 = t_isDarkMatter and v8.darkMatterThumbnail or t_isGolden and v8.goldenThumbnail or v8.thumbnail;
			m_Library.ContentProvider:PreloadAsync({v10});
			if not u1 or not u1.Parent or not SurfaceGui or not SurfaceGui.Parent or not SurfaceGui.PetFrame or not SurfaceGui.PetFrame.Pet then return end
			local t_Pet = SurfaceGui.PetFrame.Pet;
			local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 99
				--[[
					Upvalues:
						[1] = u1
						[2] = m_Library
						[3] = Random_new_ret
						[4] = t_Pet
				--]]
				local os_clock_ret = os.clock();
				if u1.PrimaryPart then
					m_Library.Audio.Play("rbxassetid://7349614764", u1.PrimaryPart, Random_new_ret:NextNumber(0.8, 1.2), 0.175, 50);
				end
				while os.clock() - os_clock_ret < 0.2 do
					t_Pet.Position = UDim2.new(0.5, math.sin(math.clamp((os.clock() - os_clock_ret) / 0.2, 0, 1) * 100) * 4, 0, 0);
					m_Library.RenderStepped();
				end
			end);
			coroutine_wrap_ret();
			t_Pet.Image = v10;
			t_Pet.ImageColor3 = v9 and Color3.new(1, 1, 1) or Color3.new(0, 0, 0);
			t_Pet.Locked.Visible = not v9;
			if t_isRainbow and v9 then
				u3 = m_Library.GUIFX.Rainbow(t_Pet, "ImageColor3", 3);
			end
		end
		local coroutine_wrap_ret2 = coroutine.wrap(function() -- Line: 120
			--[[
				Upvalues:
					[1] = u1
					[2] = bool1
					[3] = UpdateBottom
			--]]
			while u1 and u1.Parent and bool1 do
				UpdateBottom();
				wait(2);
			end
		end);
		coroutine_wrap_ret2();
		local coroutine_wrap_ret3 = coroutine.wrap(function() -- Line: 127
			--[[
				Upvalues:
					[1] = u1
					[2] = bool1
					[3] = UpdatePet
			--]]
			while u1 and u1.Parent and bool1 do
				UpdatePet();
				wait(2.5);
			end
		end);
		coroutine_wrap_ret3();
	end);
	coroutine_wrap_ret4();
end
function Check() -- Line: 137
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		u1 = Map.Interactive:FindFirstChild("Pet Collection Machine");
		if u1 then
			Setup();
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 152
	--[[
		Upvalues:
			[1] = bool1
			[2] = u1
	--]]
	bool1 = false;
	u1 = nil;
	Check();
end);
  -  Editar
  04:54:13.924    -  Editar
  04:54:13.924  ----- [2786] StarterPlayer.StarterPlayerScripts.Scripts.Game.Eggs -----  -  Editar
  04:54:13.924  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local Random_new_ret = Random.new();
local t_ID = m_Library.Directory.Gamepasses["Triple Egg Open"].ID;
local t_ID2 = m_Library.Directory.Gamepasses["Auto Hatch"].ID;
local t_IsHardcore = m_Library.Shared.IsHardcore;
local u1 = m_Library.Player.PlayerGui();
local u2 = nil;
local table1 = {};
local bool1 = false;
local table2 = {};
local table3 = nil;
local num1 = 1;
local num2 = 1;
function SetupEgg(p1) -- Line: 28
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
			[3] = table3
			[4] = bool1
			[5] = t_IsHardcore
			[6] = num2
			[7] = num1
			[8] = t_ID
			[9] = table1
			[10] = t_ID2
	--]]
	local Attribute = p1:GetAttribute("ID");
	local u3 = m_Library.Directory.Eggs[Attribute];
	local Center = p1:FindFirstChild("Center");
	local bool2 = false;
	local u4 = nil;
	local u5 = nil;
	local function Show() -- Line: 38
		--[[
			Upvalues:
				[1] = p1
				[2] = m_Library
				[3] = u3
		--]]
		local Attribute2 = p1:GetAttribute("Unlocked");
		local Clone_ret = m_Library.Assets.Billboards.EggInfo:Clone();
		local t_drops = u3.drops;
		local t_isGolden = u3.isGolden;
		local v20 = m_Library.Save.Get();
		if type(t_drops) == "string" then
			t_drops = m_Library.Directory.Eggs[t_drops].drops;
		end
		for key10, val10 in ipairs(t_drops) do
			local v29 = val10[1];
			local v30 = m_Library.Directory.Pets[v29];
			local t_rarity = v30.rarity;
			local v31 = val10[3];
			if t_rarity == "Secret" or v31 and not m_Library.Shared.IsHardcore then continue end
			local Clone_ret2 = m_Library.Assets.UI.EggInfo.Pet:Clone();
			Clone_ret2:SetAttribute("PetId", v29);
			local function CalculatePetChance() -- Line: 63
				--[[
					Upvalues:
						[1] = t_drops
						[2] = val10
				--]]
				local v40 = 0;
				for _, val14 in ipairs(t_drops) do
					v40 = v40 + val14[2];
				end
				return val10[2] / v40 * 100;
			end
			local function GetCollection()
				_string = "-"
				if t_isGolden then
					_string = _string .. "2"
				else
					_string = _string .. "1"
				end
				return v29.._string
			end
			local v32 = 0;
			for _, val13 in ipairs(t_drops) do
				v32 = v32 + val13[2];
			end
			local v33 = val10[2] / v32 * 100;
			Clone_ret2.Thumbnail.Image = t_isGolden and v30.goldenThumbnail or v30.thumbnail;
			Clone_ret2.LayoutOrder = 9999 - v33;
			if v20.AutoDelete[v30.rarity] then
				Clone_ret2.DeleteImage.Visible = true;
			else
				Clone_ret2.DeleteImage.Visible = false;
			end
			
			local colorVariants = v30.colorVariants 
			if colorVariants then
				task.defer(function()
					task.spawn(function()
						local index = 1
						while true do
							if not (Clone_ret and Clone_ret.Parent) then
								break
							end
							local colorData = colorVariants[index]
							if not colorData then
								index = 1
								colorData = colorVariants[index]
							end
							Clone_ret2.Thumbnail.ImageColor3 = colorData.Color
							index = index + 1
							wait(1)
						end
					end)
				end)
			end
			
			local CollectionString = GetCollection()
			if Attribute2 then
				if not table.find(v20.Collection, CollectionString) then
					Clone_ret2.Thumbnail.ImageColor3 = Color3.fromRGB(179, 179, 179);
				end
			end	
			if not Attribute2 then
				Clone_ret2.Thumbnail.ImageColor3 = Color3.new(0, 0, 0);
				Clone_ret2.Thumbnail.Chance.Text = "??";
				Clone_ret2.Thumbnail.Chance.TextColor3 = Color3.new(1, 1, 1);
			elseif t_rarity == "Legendary" or t_rarity == "Mythical" or t_rarity == "Event" or t_rarity == "Exclusive" or v33 <= 0.0099 then
				Clone_ret2.Thumbnail.Chance.Text = "??";
				m_Library.GUIFX.Rainbow(Clone_ret2.Thumbnail.Chance, "TextColor3");
			else
				local math_clamp_ret = math.clamp(math.pow(0.9315, v33) * 94.2467 / 100, 0, 1);
				local Lerp_ret = Color3.fromRGB(49, 255, 39):Lerp(Color3.fromRGB(255, 75, 39), math_clamp_ret);
				local Color3_toHSV_ret1, Color3_toHSV_ret2, Color3_toHSV_ret3 = Color3.toHSV(Lerp_ret);
				local Color3_fromHSV_ret = Color3.fromHSV(Color3_toHSV_ret1, Color3_toHSV_ret2, Color3_toHSV_ret3 * 2);
				Clone_ret2.Thumbnail.Chance.TextColor3 = Color3_fromHSV_ret;
				Clone_ret2.Thumbnail.Chance.Text = m_Library.Functions.FormatChance(v33 / 100);
			end
			if v30.titanic then
				Clone_ret2.TitanicCrown.Visible = true;
			end

			Clone_ret2.Thumbnail.Position = UDim2.new(0, 0, 1, 0);
			Clone_ret2.Thumbnail.ImageTransparency = 1;
			m_Library.Functions.Tween(Clone_ret2.Thumbnail, {
				Position = UDim2.new(0, 0, 0, 0),
				ImageTransparency = Attribute2 and 0 or 0.5
			}, {
				key10 / 9 / 3 + 0.45,
				Enum.EasingStyle.Quart,
				Enum.EasingDirection.Out
			});
			Clone_ret2.Parent = Clone_ret.Frame.Pets;
		end
		Clone_ret.Size = UDim2.new(0, 0, 0, 0);
		Clone_ret.StudsOffset = Vector3.new(0, 4, 0);
		m_Library.Functions.Tween(Clone_ret, {
			Size = UDim2.new(10, 0, 10, 0),
			StudsOffset = Vector3.new(0, 10, 0)
		}, {
			0.2,
			Enum.EasingStyle.Quad,
			Enum.EasingDirection.Out
		});
		local UIGridLayout = Clone_ret.Frame.Pets:FindFirstChild("UIGridLayout");
		UIGridLayout:ApplyLayout();
		Clone_ret.Parent = p1;
	end
	local function Hide() -- Line: 136
		--[[
			Upvalues:
				[1] = p1
				[2] = m_Library
		--]]
		local EggInfo = p1:FindFirstChild("EggInfo");
		if EggInfo then
			m_Library.Functions.Tween(EggInfo, {
				Size = UDim2.new(0, 0, 0, 0),
				StudsOffset = Vector3.new(0, 4, 0)
			}, {
				0.15,
				Enum.EasingStyle.Quad,
				Enum.EasingDirection.In
			}).Completed:Connect(function() -- Line: 140
				--[[
					Upvalues:
						[1] = EggInfo
				--]]
				EggInfo:Destroy();
			end);
		end
	end
	local function HideAutoInterface() -- Line: 150
		--[[
			Upvalues:
				[1] = u1
				[2] = Attribute
				[3] = m_Library
				[4] = table3
		--]]
		local FindFirstChild_ret = u1:FindFirstChild("__AUTOHATCH" .. Attribute);
		if FindFirstChild_ret then
			m_Library.Functions.Tween(FindFirstChild_ret, {
				Size = UDim2.new(0, 0, 0, 0),
				StudsOffset = Vector3.new(0, -2, 0)
			}, {
				0.15,
				Enum.EasingStyle.Quad,
				Enum.EasingDirection.In
			}).Completed:Connect(function() -- Line: 154
				--[[
					Upvalues:
						[1] = FindFirstChild_ret
						[2] = table3
						[3] = Attribute
						[4] = m_Library
				--]]
				FindFirstChild_ret:Destroy();
				if table3 and table3.eggId == Attribute and m_Library.Variables.OpeningEgg <= 0 then
					table3 = nil;
				end
			end);
		end
	end
	local function ShowAutoInterface() -- Line: 164
		--[[
			Upvalues:
				[1] = m_Library
				[2] = table3
				[3] = Attribute
				[4] = Center
				[5] = p1
				[6] = u1
				[7] = bool1
				[8] = HideAutoInterface
		--]]
		local Clone_ret3 = m_Library.Assets.Billboards.AutoHatch:Clone();
		table3 = {
			billboard = Clone_ret3,
			eggId = Attribute,
			root = Center
		};
		Clone_ret3.Size = UDim2.new(0, 0, 0, 0);
		Clone_ret3.StudsOffset = Vector3.new(0, -2, 0);
		m_Library.Functions.Tween(Clone_ret3, {
			Size = UDim2.new(10, 0, 5, 0),
			StudsOffset = Vector3.new(0, -6, 0)
		}, {
			0.15,
			Enum.EasingStyle.Quad,
			Enum.EasingDirection.Out
		});
		Clone_ret3.Name = "__AUTOHATCH" .. Attribute;
		Clone_ret3.Adornee = p1;
		Clone_ret3.Parent = u1;
		local t_Toggle = Clone_ret3.Frame.Toggle;
		m_Library.GUIFX.ButtonFX(t_Toggle);
		t_Toggle.Activated:Connect(function() -- Line: 180
			--[[
				Upvalues:
					[1] = bool1
					[2] = m_Library
					[3] = Attribute
			--]]
			if not bool1 then
				bool1 = true;
				m_Library.Audio.Play("rbxassetid://7004248320", script, 1, 0.5);
				ToggleAutoHatch(nil, Attribute);
				bool1 = false;
			end
		end);
		local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 191
			--[[
				Upvalues:
					[1] = Clone_ret3
					[2] = table3
					[3] = Attribute
					[4] = HideAutoInterface
					[5] = m_Library
					[6] = t_Toggle
			--]]
			while true do
				if Clone_ret3 and Clone_ret3.Parent then
					if not table3 or table3.eggId ~= Attribute then
						HideAutoInterface();
						return;
					end
					local t_AutoHatchEnabled = m_Library.Variables.AutoHatchEnabled;
					t_Toggle.Image = t_AutoHatchEnabled and "rbxassetid://7045637481" or "rbxassetid://7045637286";
					t_Toggle.HoverImage = t_AutoHatchEnabled and "rbxassetid://7045637564" or "rbxassetid://7045637411";
					t_Toggle.Label.Text = t_AutoHatchEnabled and "Turn Off" or "Turn On";
					m_Library.Heartbeat();
					continue;
				end
				return;
			end
		end);
		coroutine_wrap_ret();
	end
	local function Buy() -- Line: 211
		--[[
			Upvalues:
				[1] = m_Library
				[2] = t_IsHardcore
				[3] = u3
				[4] = num2
				[5] = num1
				[6] = t_ID
				[7] = Attribute
		--]]
		local v21 = m_Library.Save.Get();
		if not v21 then return end
		local v22 = (t_IsHardcore and u3.hardcoreCost or u3.cost) * (u3.isGolden and num2 or num1);
		local v23 = m_Library.Gamepasses.Owns(t_ID);
		local t_OwnsOctupleEggs = v21.OwnsOctupleEggs;
		local v24 = "Buy and open a " .. u3.displayName .. " for " .. m_Library.Functions.Commas(v22) .. " " .. u3.currency .. "?";
		--local v25 = t_OwnsOctupleEggs and m_Library.Message.New(v24, "Buy 1", "Buy 3", "Buy 8") or v23 and m_Library.Message.New(v24, "Buy 1", "Buy 3") or m_Library.Message.New(v24, true);
		local v25
		if t_OwnsOctupleEggs then
			v25 = m_Library.Message.New(v24, "Buy 1", "Buy 3", "Buy 8")
		elseif v23 then
			v25 = m_Library.Message.New(v24, "Buy 1", "Buy 3")
		else
			v25 = m_Library.Message.New(v24, true)
		end
		if v25 then
			local v34, v35 = m_Library.Network.Invoke("Buy Egg", Attribute, v25 == 2, v25 == 3);
			if not v34 then
				m_Library.Message.New(v35 or "Something went wrong. Try again!");
				return;
			end
			m_Library.Audio.Play("rbxassetid://7009857460", script);
		end
	end
	local function ShowButton() -- Line: 248
		--[[
			Upvalues:
				[1] = u5
				[2] = u4
				[3] = m_Library
				[4] = Center
				[5] = table1
				[6] = bool1
				[7] = Buy
		--]]
		u5, u4 = m_Library.Interact.Add(Center.CFrame.p + Vector3.new(0, -0.5, 0), {
			dist = 15,
			label = "Buy Egg!"
		});
		table.insert(table1, u4);
		u5:Connect(function() -- Line: 254
			--[[
				Upvalues:
					[1] = bool1
					[2] = Buy
			--]]
			if not bool1 then
				bool1 = true;
				Buy();
				task.delay(0.5, function() -- Line: 258
					--[[
						Upvalues:
							[1] = bool1
					--]]
					bool1 = false;
				end);
			end
		end);
	end
	local function CancelButton() -- Line: 267
		--[[
			Upvalues:
				[1] = u4
		--]]
		if u4 then
			u4();
			u4 = nil;
		end
	end
	local coroutine_wrap_ret2 = coroutine.wrap(function() -- Line: 276
		--[[
			Upvalues:
				[1] = m_Library
				[2] = p1
				[3] = Center
				[4] = bool2
				[5] = Hide
				[6] = u4
				[7] = Show
				[8] = u1
				[9] = Attribute
				[10] = t_ID2
				[11] = table3
				[12] = ShowAutoInterface
				[13] = HideAutoInterface
				[14] = ShowButton
		--]]
		local _ = m_Library.Save.Get();
		while p1 and p1.Parent do
			local Attribute3 = p1:GetAttribute("Unlocked");
			local v36 = m_Library.Variables.OpeningEgg > 0;
			local v37 = m_Library.LocalPlayer:DistanceFromCharacter(Center.CFrame.p) <= 25;
			while true do
				if p1:GetAttribute("Enabled") ~= nil and p1:GetAttribute("Enabled") == false then
					if bool2 and (not v37 or v36) then
						bool2 = false;
						Hide();
					end
					if u4 then
						u4();
						u4 = nil;
					end
					m_Library.Heartbeat(5);
					break;
				end
				local EggInfo2 = p1:FindFirstChild("EggInfo");
				if not bool2 and v37 and not EggInfo2 and not v36 then
					bool2 = true;
					Show();
				elseif bool2 and (not v37 or v36) then
					bool2 = false;
					Hide();
				end
				local FindFirstChild_ret2 = u1:FindFirstChild("__AUTOHATCH" .. Attribute);
				if m_Library.Gamepasses.Owns(t_ID2) and Attribute3 then
					local v41 = not v36 and v37;
					if not FindFirstChild_ret2 and v41 then
						if table3 then
							if table3.eggId == Attribute then
								ShowAutoInterface();
								break;
							end
							if m_Library.LocalPlayer:DistanceFromCharacter(table3.root.CFrame.p) - 1 >= m_Library.LocalPlayer:DistanceFromCharacter(Center.CFrame.p) then
								if m_Library.Variables.AutoHatchEnabled and m_Library.Variables.AutoHatchEggId ~= Attribute then
									ToggleAutoHatch(false);
								end
								ShowAutoInterface();
							end
						else
							ShowAutoInterface();
						end
					elseif FindFirstChild_ret2 and not v41 then
						HideAutoInterface();
					elseif not v37 and m_Library.Variables.AutoHatchEggId == Attribute then
						ToggleAutoHatch(false);
					end
				end
				local v38 = u4 ~= nil;
				if not v36 and Attribute3 and not v38 then
					ShowButton();
				elseif (v36 or not Attribute3) and v38 and u4 then
					u4();
					u4 = nil;
				end
				m_Library.Heartbeat(5);
				break;
			end
		end
	end);
	coroutine_wrap_ret2();
end
function UpdateEgg(p2) -- Line: 352
	--[[
		Upvalues:
			[1] = m_Library
			[2] = Random_new_ret
			[3] = t_IsHardcore
			[4] = num2
			[5] = num1
	--]]
	local v1 = m_Library.Save.Get();
	if not v1 then return end
	local Attribute4 = p2:GetAttribute("ID");
	local v2 = m_Library.Directory.Eggs[Attribute4];
	if not v2 then
		m_Library.Print("Egg directory is missing for ID: " .. Attribute4, true);
		return;
	end
	local Center2 = p2:FindFirstChild("Center");
	local u12 = p2:FindFirstChild("Egg");
	local Attribute5 = p2:GetAttribute("Unlocked");
	local Attribute6 = p2:GetAttribute("CanAfford");
	if not p2:GetAttribute("Setup") then
		p2:SetAttribute("Setup", true);
		u12 = v2.model:Clone();
		for _, descendant3 in ipairs(u12:GetDescendants()) do
			if not descendant3:IsA("BasePart") then continue end
			descendant3.Anchored = false;
			m_Library.Functions.Weld(descendant3, u12);
		end
		u12.Name = "Egg";
		u12.Anchored = true;
		u12.CFrame = CFrame.new(Center2.CFrame.p);
		u12.Parent = p2;
		local coroutine_wrap_ret3 = coroutine.wrap(function() -- Line: 392
			--[[
				Upvalues:
					[1] = u12
					[2] = Random_new_ret
					[3] = p2
					[4] = m_Library
			--]]
			local t_CFrame = u12.CFrame;
			local NextNumber_ret = Random_new_ret:NextNumber(1, 10);
			local os_clock_ret = os.clock();
			local os_clock_ret2 = nil;
			while p2 and p2.Parent do
				if not os_clock_ret2 or os.clock() - os_clock_ret2 >= 2 then
					local DistanceFromCharacter_ret = m_Library.LocalPlayer:DistanceFromCharacter(u12.CFrame.p);
					if DistanceFromCharacter_ret >= 300 then
						wait((math.clamp(DistanceFromCharacter_ret / 600, 0.5, 3)));
					else
						os_clock_ret2 = os.clock();
					end
				end
				local v42 = os.clock() - os_clock_ret + NextNumber_ret;
				u12.CFrame = t_CFrame * CFrame.new(0, math.sin(v42 * 1) / 2, 0) * CFrame.Angles(0, v42, 0);
				m_Library.RenderStepped();
			end
		end);
		coroutine_wrap_ret3();
		SetupEgg(p2);
	end
	if p2:FindFirstChild("EggInfo") then
		local EggInfo3 = p2:FindFirstChild("EggInfo");
		local t_drops2 = v2.drops;
		local _ = v2.isGolden;
		if type(t_drops2) == "string" then
			local _ = m_Library.Directory.Eggs[t_drops2].drops;
		end
		if EggInfo3:FindFirstChild("Frame") and EggInfo3:FindFirstChild("Frame"):FindFirstChild("Pets") then
			local Pets = EggInfo3:FindFirstChild("Frame"):FindFirstChild("Pets");
			for _, child11 in ipairs(Pets:GetChildren()) do
				local Attribute7 = child11:GetAttribute("PetId");
				if not Attribute7 then continue end
				local v39 = m_Library.Directory.Pets[Attribute7];
				local _ = v39.rarity;
				if v1.AutoDelete[v39.rarity] then
					child11.DeleteImage.Visible = true;
					continue;
				end
				child11.DeleteImage.Visible = false;
			end
		end
	end
	local v3 = p2.PriceHUD:FindFirstChild("EggCost");
	if not v3 then
		v3 = m_Library.Assets.Billboards.EggCost:Clone();
		v3.Currency.Image = m_Library.Directory.Currency[v2.currency].Image;
		v3.Parent = p2.PriceHUD;
	end
	v3.Currency.Visible = Attribute5;
	if Attribute5 then
		local v10 = (t_IsHardcore and v2.hardcoreCost or v2.cost) * (v2.isGolden and num2 or num1);
		v3.Amount.Text = m_Library.Functions.NumberShorten(v10);
	else
		v3.Amount.Text = "Locked";
	end
	local v4 = Attribute5 and Attribute6 and (m_Library.Variables.OpeningEgg <= 0 and Attribute4 ~= "Kawaii Alley Egg" or false);
	local VendorBillboard = Center2:FindFirstChild("VendorBillboard");
	if not VendorBillboard and v4 then
		local Clone_ret4 = m_Library.Assets.Billboards.VendorBillboard:Clone();
		local Dir = m_Library.WorldCmds.GetDir();
		if Dir and Dir.display == "Doodle World" then
			Clone_ret4.TextLabel.Visible = false;
			Clone_ret4.DoodleDollar.Visible = true;
		end
		Clone_ret4.Parent = Center2;
	elseif not v4 and VendorBillboard then
		VendorBillboard:Destroy();
	end
	local v5 = p2:FindFirstChild("LOCK");
	if not Attribute5 then
		if not v5 then
			v5 = m_Library.Assets.Models.CapsuleLocks:FindFirstChild(v2.isGolden and "Golden Lock" or "Lock"):Clone();
			v5.CFrame = Center2.CFrame * CFrame.Angles(0, 3.141592653589793, 1.5707963267948966) + Vector3.new(0, 0.25, 0);
			v5.Name = "LOCK";
			v5.Parent = p2;
		end
		local SurfaceGui = v5:FindFirstChildOfClass("SurfaceGui");
		if v2.eggRequiredOpenAmount > 0 and v2.eggRequired ~= "" then
			local v26 = v2.eggRequiredOpenAmount - ((t_IsHardcore and v1.Hardcore.EggsOpened or v1.EggsOpened)[v2.eggRequired] or 0);
			SurfaceGui.Frame.Amount.Text = m_Library.Functions.Commas(v26);
		elseif SurfaceGui then
			SurfaceGui:Destroy();
		end
	elseif v5 then
		m_Library.WorldFX.ModelFlash(p2, 0.5);
		v5:Destroy();
	end
	local CachedProperty_ret = CachedProperty(u12, "TextureID");
	local CachedProperty_ret2 = CachedProperty(u12, "Color");
	u12.TextureID = Attribute5 and CachedProperty_ret or "";
	u12.Color = Attribute5 and CachedProperty_ret2 or Color3.new(0, 0, 0);
	if u12:FindFirstChildOfClass("ParticleEmitter") then
		u12:FindFirstChildOfClass("ParticleEmitter").Enabled = Attribute5;
	end
end
function UpdateGroup(p3) -- Line: 520
	local bool3 = false;
	for _, child1 in ipairs(p3.Eggs:GetChildren()) do
		if not child1:GetAttribute("ID") or not child1:GetAttribute("Unlocked") then continue end
		bool3 = true;
		break;
	end
	local PLATFORM = p3:FindFirstChild("PLATFORM");
	if PLATFORM then
		local Pad = PLATFORM:FindFirstChild("Pad");
		local CachedProperty_ret3 = CachedProperty(Pad, "Color");
		Pad.Color = bool3 and CachedProperty_ret3 or Color3.fromRGB(77, 77, 77);
		local _Unlocked = PLATFORM:FindFirstChild("_Unlocked");
		local CachedProperty_ret4 = CachedProperty(_Unlocked, "Color");
		_Unlocked.Color = bool3 and CachedProperty_ret4 or Color3.fromRGB(0, 0, 0);
		local t_TextLabel = PLATFORM:FindFirstChild("SectionName").SurfaceGui.TextLabel;
		local CachedProperty_ret5 = CachedProperty(t_TextLabel, "TextColor3");
		t_TextLabel.TextColor3 = bool3 and CachedProperty_ret5 or Color3.fromRGB(47, 47, 47);
		_Unlocked:FindFirstChildOfClass("SurfaceLight").Enabled = bool3;
	end
end
function UpdateAllEggs() -- Line: 549
	local AllEggs = GetAllEggs();
	if AllEggs then
		for _, val4 in ipairs(AllEggs) do
			UpdateEgg(val4);
		end
	end
end
function UpdateAllGroups() -- Line: 559
	local AllGroups = GetAllGroups();
	if AllGroups then
		for _, val5 in ipairs(AllGroups) do
			UpdateGroup(val5);
		end
	end
end
function GetAllEggs() -- Line: 572
	--[[
		Upvalues:
			[1] = u2
	--]]
	if not u2 then return end
	local table4 = {};
	local Eggs = u2:FindFirstChild("Eggs");
	if Eggs then
		for _, child6 in ipairs(Eggs:GetChildren()) do
			if child6.ClassName ~= "Folder" or not child6:FindFirstChild("Eggs") then continue end
			for _, child12 in ipairs(child6.Eggs:GetChildren()) do
				if not child12:GetAttribute("ID") then continue end
				table.insert(table4, child12);
			end
		end
	end
	return table4;
end
function GetAllGroups() -- Line: 594
	--[[
		Upvalues:
			[1] = u2
	--]]
	if not u2 then return end
	local table5 = {};
	local Eggs2 = u2:FindFirstChild("Eggs");
	if Eggs2 then
		for _, child7 in ipairs(Eggs2:GetChildren()) do
			if child7.ClassName ~= "Folder" or not child7:FindFirstChild("Eggs") then continue end
			table.insert(table5, child7);
		end
	end
	return table5;
end
function UpdateAffordability() -- Line: 615
	--[[
		Upvalues:
			[1] = m_Library
			[2] = num2
			[3] = num1
	--]]
	local v6 = m_Library.Save.Get();
	if not v6 then return end
	local AllEggs2 = GetAllEggs();
	if AllEggs2 then
		for _, val8 in ipairs(AllEggs2) do
			local v27 = m_Library.Directory.Eggs[val8:GetAttribute("ID")];
			local t_currency = v27.currency;
			local v28 = math.round(v27.cost * (v27.isGolden and num2 or num1)) <= v6[t_currency];
			val8:SetAttribute("CanAfford", v28);
		end
	end
end
function UpdateUnlocked() -- Line: 638
	local AllEggs3 = GetAllEggs();
	if AllEggs3 then
		for _, val9 in ipairs(AllEggs3) do
			local Attribute8 = val9:GetAttribute("ID");
			local IsEggUnlocked_ret = IsEggUnlocked(Attribute8);
			val9:SetAttribute("Unlocked", IsEggUnlocked_ret);
		end
	end
end
function IsEggUnlocked(p4) -- Line: 650
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_IsHardcore
	--]]
	local _ = m_Library.WorldCmds.GetDir();
	local v7 = m_Library.Directory.Eggs[p4];
	local v8 = m_Library.Save.Get();
	if v7.areaRequired then
		local v11 = m_Library.WorldCmds.HasArea(v7.area);
		if not v11 then
			return false;
		end
	end
	if v7.eggRequired ~= "" and v7.eggRequired ~= p4 then
		local IsEggUnlocked_ret2 = IsEggUnlocked(v7.eggRequired);
		if not IsEggUnlocked_ret2 then
			return false;
		end
	end
	if v7.eggRequiredOpenAmount > 0 and v7.eggRequired ~= "" then
		local v12 = (t_IsHardcore and v8.Hardcore.EggsOpened or v8.EggsOpened)[v7.eggRequired];
		if not v12 or v12 < v7.eggRequiredOpenAmount then
			return false;
		end
	end
	if p4 == "Dominus Egg" then
		if t_IsHardcore and not v8.Hardcore.OwnsDominusGate then
			return false;
		end
		if not t_IsHardcore and not v8.OwnsDominusGate then
			return false;
		end
	end
	if p4 == "Hacker Egg" or p4 == "Hacker Golden Egg" then
		if t_IsHardcore and not v8.Hardcore.OwnsHackerGate then
			return false;
		end
		if not t_IsHardcore and not v8.OwnsHackerGate then
			return false;
		end
	end
	return true;
end
function UpdateMasteryPerks() -- Line: 705
	--[[
		Upvalues:
			[1] = m_Library
			[2] = num1
			[3] = num2
	--]]
	local v9 = m_Library.Save.Get();
	if v9 then
		local t_Eggs = m_Library.Directory.Mastery.Eggs;
		local v13 = m_Library.Directory.Mastery["Golden Eggs"];
		local v14 = v9.Mastery.Eggs or 0;
		local v15 = v9.Mastery["Golden Eggs"] or 0;
		local v16 = m_Library.Shared.MasteryXPToLevel(v14);
		local v17 = m_Library.Shared.MasteryXPToLevel(v15);
		local v18 = num1;
		local v19 = num2;
		if t_Eggs.perks[4].level <= v16 then
			num1 = 0.8;
		elseif t_Eggs.perks[2].level <= v16 then
			num1 = 0.9;
		end
		if v13.perks[4].level <= v17 then
			num2 = 0.85;
		elseif v13.perks[2].level <= v17 then
			num2 = 0.95;
		end
		if v18 ~= num1 or v19 ~= num2 then
			UpdateAffordability();
			UpdateAllEggs();
		end
	end
end
UpdateMasteryPerks();
function CachedProperty(p5, p6) -- Line: 736
	--[[
		Upvalues:
			[1] = table2
	--]]
	if not table2[p5] then
		table2[p5] = {};
	end
	if not table2[p5][p6] then
		table2[p5][p6] = p5[p6];
	end
	return table2[p5][p6];
end
function Reset() -- Line: 747
	--[[
		Upvalues:
			[1] = table2
			[2] = table1
	--]]
	table2 = {};
	for _, val2 in ipairs(table1) do
		val2();
	end
	table1 = {};
end
function WorldLoaded() -- Line: 758
	Reset();
	UpdateUnlocked();
	UpdateAffordability();
	UpdateAllEggs();
	UpdateAllGroups();
end
function ToggleAutoHatch(p7, p8) -- Line: 769
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.Variables.AutoHatchEggId = p8;
	if p7 ~= nil then
		m_Library.Variables.AutoHatchEnabled = p7;
		return;
	end
	m_Library.Variables.AutoHatchEnabled = not m_Library.Variables.AutoHatchEnabled;
end
m_Library.Signal.Fired("Auto Delete Settings Changed"):Connect(function(_) -- Line: 781
end);
m_Library.Signal.Fired("World Changed"):Connect(function(_, p9) -- Line: 785
	--[[
		Upvalues:
			[1] = u2
	--]]
	u2 = p9;
	WorldLoaded();
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p10) -- Line: 791
	if p10 == "AreasUnlocked" or p10 == "EggsOpened" or p10 == "OwnsDominusGate" or p10 == "OwnsHackerGate" or p10 == "Hardcore" then
		UpdateUnlocked();
		UpdateAllEggs();
		UpdateAllGroups();
		return;
	end
	if string.find(p10, "Coins") or p10 == "Diamonds" then
		UpdateAffordability();
		return;
	end
	if p10 == "Mastery" then
		UpdateMasteryPerks();
	end
end);
m_Library.Signal.Invoked("Can Continue Auto").OnInvoke = function() -- Line: 805
	--[[
		Upvalues:
			[1] = table3
			[2] = m_Library
	--]]
	if not table3 then
		return false;
	end
	if m_Library.LocalPlayer:DistanceFromCharacter(table3.root.CFrame.p) <= 12 then
		return true;
	end
	return false;
end
while true do
	if u2 and not m_Library.Variables.LoadingWorld then
		UpdateAllEggs();
	end
	wait(1);
end
  -  Editar
  04:54:13.924    -  Editar
  04:54:13.924  ----- [2787] StarterPlayer.StarterPlayerScripts.Scripts.Game.Lootbags -----  -  Editar
  04:54:13.925  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local table1 = {
	"rbxassetid://8049260816",
	"rbxassetid://8049260930"
};
local table2 = {"rbxassetid://8049260324"};
local table3 = {
	"rbxassetid://8049260443",
	"rbxassetid://8049260584",
	"rbxassetid://8049260694"
};
local table4 = {
	"rbxassetid://8068357028",
	"rbxassetid://8068356928",
	"rbxassetid://8068357072"
};
local _ = {"rbxassetid://8068356980"};
local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_Lootbags = m_Library.Assets.Models.Lootbags;
local t_Lootbags2 = m_Library.Things.Lootbags;
local Random_new_ret = Random.new();
local FindFirstChild_ret = m_Library.Assets.Particles:FindFirstChild("Lootbag Pickup");
function Add(p1, p2) -- Line: 79
	--[[
		Upvalues:
			[1] = t_Lootbags2
			[2] = m_Library
			[3] = t_Lootbags
			[4] = Random_new_ret
			[5] = table1
			[6] = table2
			[7] = table3
	--]]
	if t_Lootbags2:FindFirstChild(p1) then
		return m_Library.Print("Lootbag '" .. p1 .. "' already exists in world", true);
	end
	local v1 = m_Library.Save.Get();
	if not v1 then return end
	if m_Library.WorldCmds.Get() ~= p2.world then
		return m_Library.Print("Lootbag '" .. p1 .. "' is in another world", true);
	end
	local v2 = m_Library.Directory.Lootbags[p2.type];
	local Clone_ret = t_Lootbags:FindFirstChild(v2.model):Clone();
	Clone_ret.CollisionGroup = "Lootbags";
	Clone_ret.Anchored = false;
	Clone_ret.CanCollide = true;
	Clone_ret.CFrame = CFrame.new(p2.position) + Vector3.new(0, 5, 0);
	Clone_ret.Name = p1;
	Clone_ret:SetAttribute("ID", p1);
	Clone_ret:SetAttribute("Collected", false);
	Clone_ret:SetAttribute("ReadyForCollection", false);
	if p2.disableMagnet then
		Clone_ret:SetAttribute("DisableMagnet", true);
	elseif p2.freeMagnet then
		Clone_ret:SetAttribute("FreeMagnet", true);
	end
	if p2.reward[1] == "Boost" then
		local v7 = p2.reward[2];
		local v8 = p2.reward[3];
		Clone_ret:SetAttribute("IsBoost", true);
		Clone_ret:SetAttribute("BoostAmount", v7);
		Clone_ret:SetAttribute("BoostType", v8);
	end
	local BodyGyro = Instance.new("BodyGyro");
	BodyGyro.Parent = Clone_ret;
	Clone_ret.Parent = t_Lootbags2;
	local v3 = p2.blastRadius or 1;
	Clone_ret.Velocity = Vector3.new(Random_new_ret:NextNumber(-30, 30) * v3, 90, Random_new_ret:NextNumber(-30, 30) * v3);
	m_Library.Audio.Play(table1, Clone_ret, Random_new_ret:NextNumber(0.95, 1.05), 1, 300);
	if v2.isRare then
		m_Library.Audio.Play(table2, Clone_ret, 1, 1.45, 350);
	end
	if p2.diamondBagMaster then
		m_Library.Audio.Play(table2, Clone_ret, Random_new_ret:NextNumber(1.5, 1.6), 0.8, 350);
		local Attachment = Instance.new("Attachment");
		for _, child3 in ipairs(m_Library.Assets:WaitForChild("Particles"):WaitForChild("Diamond Bag Upgrade"):GetChildren()) do
			child3:Clone().Parent = Attachment;
		end
		Attachment.Parent = Clone_ret;
	end
	m_Library.WorldFX.QuestGlow(Clone_ret, 1, 0.8);
	local Trail = Clone_ret:FindFirstChildOfClass("Trail");
	local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 146
		--[[
			Upvalues:
				[1] = m_Library
				[2] = Trail
		--]]
		m_Library.Functions.Wait(0.5);
		Trail.Enabled = false;
	end);
	coroutine_wrap_ret();
	local coroutine_wrap_ret2 = coroutine.wrap(function() -- Line: 152
		--[[
			Upvalues:
				[1] = m_Library
				[2] = Clone_ret
				[3] = table3
				[4] = Random_new_ret
		--]]
		local function HitGround() -- Line: 153
			--[[
				Upvalues:
					[1] = m_Library
					[2] = Clone_ret
			--]]
			local Map = m_Library.WorldCmds.GetMap();
			local RaycastParams_new_ret = RaycastParams.new();
			RaycastParams_new_ret.FilterDescendantsInstances = {Map:FindFirstChild("Areas")};
			RaycastParams_new_ret.FilterType = Enum.RaycastFilterType.Whitelist;
			local Raycast_ret = game.Workspace:Raycast(Clone_ret.CFrame.Position, Vector3.new(0, -(Clone_ret.Size.Y / 2 + 1), 0), RaycastParams_new_ret);
			if Raycast_ret and Raycast_ret.Instance then
				return true;
			end
			return false;
		end
		local v10 = false;
		local os_clock_ret = os.clock();
		while Clone_ret and Clone_ret.Parent and not v10 do
			v10 = HitGround();
			if v10 or os.clock() - os_clock_ret >= 4 then
				v10 = true;
				m_Library.Audio.Play(table3, Clone_ret.CFrame.Position, Random_new_ret:NextNumber(0.95, 1.05), 0.4, 125);
				local BodyPosition = Instance.new("BodyPosition");
				BodyPosition.D = 50;
				BodyPosition.P = 0;
				BodyPosition.MaxForce = Vector3.new();
				BodyPosition.Parent = Clone_ret;
				Clone_ret:SetAttribute("ReadyForCollection", true);
			end
			m_Library.RenderStepped();
		end
	end);
	coroutine_wrap_ret2();
end
function Remove(p3) -- Line: 185
	--[[
		Upvalues:
			[1] = t_Lootbags2
	--]]
	local FindFirstChild_ret2 = t_Lootbags2:FindFirstChild(p3);
	if FindFirstChild_ret2 then
		FindFirstChild_ret2:Destroy();
	end
end
function Collect(p4) -- Line: 196
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table4
			[3] = Random_new_ret
			[4] = FindFirstChild_ret
	--]]
	p4:SetAttribute("Collected", true);
	local Attribute = p4:GetAttribute("ID");
	local Attribute2 = p4:GetAttribute("IsBoost");
	local t_p = p4.CFrame.p;
	m_Library.Audio.Play(table4, p4.CFrame.Position, Random_new_ret:NextNumber(0.95, 1.05), 0.8, 250);
	local v4, v5 = m_Library.Functions.CreateParticleHost(t_p);
	for _, child1 in ipairs(FindFirstChild_ret:GetChildren()) do
		local Clone_ret2 = child1:Clone();
		Clone_ret2.Parent = v5;
		Clone_ret2:Emit(5);
	end
	m_Library.Functions.AddDebris(v4, 3);
	if Attribute2 then
		m_Library.Audio.Play("rbxassetid://8167299784", script, 1, 1);
		local Attribute3 = p4:GetAttribute("BoostType");
		local Attribute4 = p4:GetAttribute("BoostAmount");
		m_Library.Signal.Fire("Rewards Redeemed", {{
			Attribute3,
			Attribute4
		}});
	end
	m_Library.Network.Fire("Collect Lootbag", Attribute, t_p);
	p4:Destroy();
end
function ScanForCollection() -- Line: 227
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_Lootbags2
	--]]
	local v6 = m_Library.Player.Humanoid();
	local u1 = m_Library.Player.UpperTorso();
	if not u1 or not v6 then return end
	local t_HipHeight = v6.HipHeight;
	local u2 = m_Library.Gamepasses.Owns(m_Library.Directory.Gamepasses.Magnet.ID);
	for key2, child2 in ipairs(t_Lootbags2:GetChildren()) do
		pcall(function() -- Line: 237
			--[[
				Upvalues:
					[1] = key2
					[2] = m_Library
					[3] = child2
					[4] = t_HipHeight
					[5] = u1
					[6] = u2
			--]]
			if key2 % 25 == 0 then
				m_Library.RenderStepped();
			end
			if child2:GetAttribute("ReadyForCollection") and not child2:GetAttribute("Collected") then
				local DistanceFromCharacter_ret = m_Library.LocalPlayer:DistanceFromCharacter(child2.CFrame.p);
				local v11 = (child2.Size.X + child2.Size.Z) / 2;
				if DistanceFromCharacter_ret <= v11 + t_HipHeight + 1 then
					Collect(child2);
					return;
				end
				local BodyPosition2 = child2:FindFirstChildOfClass("BodyPosition");
				if BodyPosition2 then
					BodyPosition2.MaxForce = Vector3.new(BodyPosition2.P, BodyPosition2.P, BodyPosition2.P);
					BodyPosition2.Position = u1.Position + u1.CFrame.LookVector - Vector3.new(0, t_HipHeight, 0);
					local v12 = u2;
					if not v12 and child2:GetAttribute("FreeMagnet") then
						v12 = true;
					end
					if v12 and not child2:GetAttribute("DisableMagnet") then
						BodyPosition2.P = 17500;
						return;
					end
					BodyPosition2.P = 3500 - math.clamp(DistanceFromCharacter_ret / (v11 + 18), 0, 1) * 3500;
				end
			end
		end);
	end
end
local coroutine_wrap_ret3 = coroutine.wrap(function() -- Line: 272
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	while true do
		ScanForCollection();
		m_Library.Heartbeat();
	end
end);
coroutine_wrap_ret3();
m_Library.Network.Fired("Spawn Lootbag"):Connect(function(p5, p6) -- Line: 283
	Add(p5, p6);
end);
m_Library.Network.Fired("Remove Lootbag"):Connect(function(p7) -- Line: 288
	Remove(p7);
end);
  -  Editar
  04:54:13.925    -  Editar
  04:54:13.925  ----- [2788] StarterPlayer.StarterPlayerScripts.Scripts.Game.Music and Ambience -----  -  Editar
  04:54:13.925  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local Random_new_ret = Random.new();
local u1 = {};
local table1 = {};
local u2 = nil;
local u3 = nil;
function Shuffle() -- Line: 23
	--[[
		Upvalues:
			[1] = u1
			[2] = table1
			[3] = Random_new_ret
			[4] = u2
			[5] = m_Library
	--]]
	local table_clone_ret = table.clone(u1);
	if #table_clone_ret > 1 then
		for _, val1 in ipairs(table1) do
			for key2, val2 in ipairs(table_clone_ret) do
				if val2 ~= val1 then continue end
				table.remove(table_clone_ret, key2);
				break;
			end
		end
	end
	local v1 = table_clone_ret[Random_new_ret:NextInteger(1, #table_clone_ret)];
	u2 = m_Library.Audio.PlayMusic(v1, 0.135, 4, nil, false);
	if #table1 >= 4 then
		table.remove(table1, 1);
	end
	table.insert(table1, v1);
end
function Clear() -- Line: 48
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u2
			[3] = table1
	--]]
	m_Library.Audio.StopMusic(1);
	u2 = nil;
	table1 = {};
end
function Set(p1) -- Line: 56
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
			[3] = u3
	--]]
	local v2 = m_Library.Directory.Worlds[p1];
	u1 = v2.music;
	Clear();
	if u3 then
		local u4 = u3;
		m_Library.Functions.Tween(u4, {Volume = 0}, {2}).Completed:Connect(function() -- Line: 68
			--[[
				Upvalues:
					[1] = u4
			--]]
			u4:Stop();
			u4:Destroy();
		end);
	end
	local t_ambience = v2.ambience;
	local t_ambienceVolume = v2.ambienceVolume;
	if t_ambience and t_ambience ~= 0 then
		u3 = m_Library.Audio.Play(t_ambience, script, 1, t_ambienceVolume, nil, nil, true);
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function(p2) -- Line: 85
	Set(p2);
end);
while true do
	if m_Library.Settings.MusicEnabled and #u1 > 0 then
		if not u2 or u2.TimePosition >= u2.TimeLength - 0.5 and u2.IsLoaded then
			Shuffle();
		end
	elseif not m_Library.Settings.MusicEnabled and u2 then
		Clear();
	end
	m_Library.Heartbeat(5);
end
  -  Editar
  04:54:13.925    -  Editar
  04:54:13.925  ----- [2789] StarterPlayer.StarterPlayerScripts.Scripts.Game.Kawaii Alley Minigame -----  -  Editar
  04:54:13.925  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = nil;
local u2 = nil;
local table1 = {};
local table2 = {};
local table3 = {
	[1] = {
		Vector3.new(0, 7.864, 0),
		Vector3.new(0, 7.864, 0),
		Vector3.new(0, -17.136, 0)
	},
	[2] = {
		Vector3.new(0, 95.358, 0),
		Vector3.new(0, 70.533, 0),
		Vector3.new(0, 70.414, 0)
	},
	[3] = {
		Vector3.new(0, 88.708, 0),
		Vector3.new(0, 112.024, 0),
		Vector3.new(0, 112.024, 0)
	},
	[4] = {
		Vector3.new(0, 177.976, 0),
		Vector3.new(0, -158.024, 0),
		Vector3.new(0, -158.024, 0)
	}
};
function Reset() -- Line: 33
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table2
	--]]
	m_Library.Signal.Fire("Notification", "Kawaii Alley Minigame has reset!", {
		color = Color3.fromRGB(255, 46, 46),
		force = true,
		world = "Kawaii"
	});
	table2 = {};
	Teleport();
end
function Update() -- Line: 39
	--[[
		Upvalues:
			[1] = u2
			[2] = u1
	--]]
	if u2 == nil or u1 == nil then
		RequestData();
	end
	UpdateChests();
	UpdateWalls();
	for index1 = 1, u2.ALLEY_COUNT do
		UpdateSign(index1);
		UpdateEgg(index1);
	end
end
function UpdateChests() -- Line: 52
	--[[
		Upvalues:
			[1] = table2
	--]]
	for key1, val1 in pairs(table2) do
		UpdateChest(key1, val1);
	end
end
function UpdateEgg(p1) -- Line: 58
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table1
	--]]
	local v1 = m_Library.Save.Get();
	if not v1 then
		warn("Save wasn't loaded!");
		return;
	end
	assert(v1);
	if (m_Library.Shared.IsHardcore and v1.Hardcore.World or v1.World) ~= "Kawaii" then return end
	local v2 = m_Library.Network.Invoke("Kawaii Alley: Completed", p1);
	local Map = m_Library.WorldCmds.GetMap();
	local Eggs = Map:WaitForChild("Eggs");
	local WaitForChild_ret = Eggs:WaitForChild("Alley " .. p1);
	for _, descendant2 in ipairs(WaitForChild_ret:GetDescendants()) do
		if not descendant2:isA("BasePart") then continue end
		if not table1[descendant2] then
			table1[descendant2] = {
				CanCollide = descendant2.CanCollide,
				CanTouch = descendant2.CanTouch,
				CanQuery = descendant2.CanQuery
			};
		end
		descendant2.CanCollide = v2 and table1[descendant2].CanCollide or false;
		descendant2.CanTouch = v2 and table1[descendant2].CanTouch or false;
		descendant2.CanQuery = v2 and table1[descendant2].CanQuery or false;
	end
	local Eggs2 = WaitForChild_ret:FindFirstChild("Eggs");
	if not Eggs2 then
		warn("Eggs subfolder not loaded", p1);
		return;
	end
	local FindFirstChild_ret = Eggs2:FindFirstChild("Egg Capsule");
	if not FindFirstChild_ret then
		warn("Egg Capsule not loaded", p1);
		return;
	end
	FindFirstChild_ret:SetAttribute("Enabled", v2);
	local Attribute = FindFirstChild_ret:GetAttribute("ID");
	local PriceFrame = FindFirstChild_ret:FindFirstChild("PriceFrame");
	if PriceFrame then
		for _, child8 in pairs(PriceFrame:GetChildren()) do
			child8.Transparency = v2 and 0 or 1;
		end
	end
	for _, child3 in pairs(FindFirstChild_ret:GetChildren()) do
		if child3.Name == "PriceFrame" or child3.Name == "Center" or child3.Name == "PriceHUD" or child3.Name == "EggInfo" then continue end
		child3.Transparency = v2 and 0 or 1;
	end
	local PriceHUD = FindFirstChild_ret:FindFirstChild("PriceHUD");
	local EggCost = PriceHUD:FindFirstChild("EggCost");
	EggCost.Enabled = v2;
	local Egg = FindFirstChild_ret:FindFirstChild("Egg");
	local Sparkles = Egg:FindFirstChild("Sparkles");
	Sparkles.Enabled = v2;
	local BillboardGui = FindFirstChild_ret:FindFirstChild("Center"):FindFirstChild("BillboardGui");
	BillboardGui.Enabled = v2;
	local PLATFORM = WaitForChild_ret:FindFirstChild("PLATFORM");
	if PLATFORM then
		for _, child9 in pairs(PLATFORM:GetChildren()) do
			if child9.Name == "SectionName" then continue end
			child9.Transparency = v2 and 0 or 1;
		end
		local SectionName = PLATFORM:FindFirstChild("SectionName");
		local SurfaceGui = SectionName:FindFirstChild("SurfaceGui");
		SurfaceGui.Enabled = v2;
	end
	if v2 then
		local Timer = BillboardGui:FindFirstChild("Timer");
		local u3 = m_Library.Network.Invoke("Kawaii Alley: Get Reset Timestamp");
		local Connect_ret = nil;
		Connect_ret = m_Library.RunService.Heartbeat:Connect(function(_) -- Line: 163
			--[[
				Upvalues:
					[1] = BillboardGui
					[2] = Connect_ret
					[3] = u3
					[4] = Timer
					[5] = m_Library
			--]]
			if not BillboardGui or BillboardGui.Enabled == false then
				Connect_ret:Disconnect();
				return;
			end
			local v9 = u3 - workspace:GetServerTimeNow();
			if v9 <= 0 then
				Connect_ret:Disconnect();
				BillboardGui.Enabled = false;
				return;
			end
			Timer.Text = m_Library.Functions.FormatTime(v9);
		end);
		return;
	end
	local FindFirstChild_ret2 = m_Library.LocalPlayer.PlayerGui:FindFirstChild("__AUTOHATCH" .. Attribute);
	if FindFirstChild_ret2 then
		FindFirstChild_ret2:Destroy();
	end
end
function UpdateSign(p2) -- Line: 180
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table1
	--]]
	local __MAPDEBRIS = workspace:FindFirstChild("__DEBRIS"):FindFirstChild("__MAPDEBRIS");
	local Debris = __MAPDEBRIS:FindFirstChild("Debris");
	local FindFirstChild_ret3 = Debris:FindFirstChild("Alley Signs");
	if not FindFirstChild_ret3 then return end
	local v3 = m_Library.Network.Invoke("Kawaii Alley: Should Show Sign", p2);
	local FindFirstChild_ret4 = FindFirstChild_ret3:FindFirstChild(p2);
	if not FindFirstChild_ret4 then
		warn("Didn't load sign for alley", p2);
		return;
	end
	for _, descendant4 in ipairs(FindFirstChild_ret4:GetDescendants()) do
		if descendant4:isA("BasePart") then
			if not table1[descendant4] then
				table1[descendant4] = {
					CanCollide = descendant4.CanCollide,
					CanTouch = descendant4.CanTouch,
					CanQuery = descendant4.CanQuery,
					Transparency = descendant4.Transparency
				};
			end
			descendant4.CanCollide = v3 and table1[descendant4].CanCollide or false;
			descendant4.CanTouch = v3 and table1[descendant4].CanTouch or false;
			descendant4.CanQuery = v3 and table1[descendant4].CanQuery or false;
			descendant4.Transparency = v3 and table1[descendant4].Transparency or 1;
		end
		if not descendant4:isA("SurfaceGui") then continue end
		descendant4.Enabled = v3;
	end
	if v3 then
		m_Library.Audio.Play(4489274818, FindFirstChild_ret4:GetPrimaryPartCFrame().p, 1, 1, 400);
	end
end
function UpdateChest(p3, p4) -- Line: 223
	--[[
		Upvalues:
			[1] = u1
			[2] = table3
			[3] = m_Library
	--]]
	if not u1 then
		warn("No alley data!");
		return;
	end
	local ChestByCoinId = GetChestByCoinId(p3);
	if not ChestByCoinId then
		warn("No chest data!");
		return;
	end
	local v4 = u1.Status[ChestByCoinId.Alley];
	if table3[ChestByCoinId.Alley] and table3[ChestByCoinId.Alley][ChestByCoinId.Order] then
		local u4 = table3[ChestByCoinId.Alley][ChestByCoinId.Order];
		task.delay(1, function() -- Line: 239
			--[[
				Upvalues:
					[1] = p4
					[2] = u4
			--]]
			p4.Rotation = u4;
		end);
	end
	local v5 = v4 < ChestByCoinId.Order;
	p4:SetAttribute("PreventClick", v5);
	local ClickDetector = p4:FindFirstChild("ClickDetector");
	if ClickDetector then
		ClickDetector.MaxActivationDistance = v5 and 0 or m_Library.Settings.CoinGrabDistance;
	end
end
function UpdateWalls() -- Line: 253
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	local __MAPDEBRIS2 = workspace:FindFirstChild("__DEBRIS"):FindFirstChild("__MAPDEBRIS");
	local Debris2 = __MAPDEBRIS2:FindFirstChild("Debris");
	local FindFirstChild_ret5 = Debris2:FindFirstChild("Alley Walls");
	if not FindFirstChild_ret5 then return end
	local v6, _ = m_Library.Network.Invoke("Kawaii Alley: Completed");
	for _, child5 in pairs(FindFirstChild_ret5:GetChildren()) do
		local t_Name = child5.Name;
		local string_split_ret = string.split(t_Name, " ");
		local v8 = u1.Status[tonumber(string_split_ret[1])] <= tonumber(string_split_ret[2]) and not v6;
		child5.PrimaryPart.CanCollide = v8;
		for _, descendant10 in ipairs(child5:GetDescendants()) do
			if descendant10.Name == "Barrier" or not descendant10:isA("BasePart") then continue end
			descendant10.Transparency = v8 and 0 or 1;
		end
	end
end
function RequestData() -- Line: 281
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
			[3] = u2
	--]]
	local v7 = m_Library.Network.Invoke("Kawaii Alley: Get Data");
	if v7 and not u1 then
		u1 = v7;
	end
	if u2 == nil then
		u2 = m_Library.Network.Invoke("Kawaii Alley: Get Settings");
	end
end
function Teleport() -- Line: 291
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local __MAPDEBRIS3 = workspace:FindFirstChild("__DEBRIS"):FindFirstChild("__MAPDEBRIS");
	local Debris3 = __MAPDEBRIS3:FindFirstChild("Debris");
	local FindFirstChild_ret6 = Debris3:FindFirstChild("Alley Boxes");
	if not FindFirstChild_ret6 then return end
	for _, child6 in pairs(FindFirstChild_ret6:GetChildren()) do
		local PartsInPart = workspace:GetPartsInPart(child6);
		for _, val11 in pairs(PartsInPart) do
			if game.Players:GetPlayerFromCharacter(val11.Parent) ~= m_Library.LocalPlayer then continue end
			local FindFirstChild_ret7 = m_Library.WorldCmds.GetMap().Teleports:FindFirstChild("Kawaii Tokyo");
			if FindFirstChild_ret7 then
				local v10 = m_Library.Player.Character();
				local v11 = m_Library.Player.Humanoid();
				m_Library.GUIFX.Flash(0.25, 0.75, Color3.new(255, 255, 255));
				m_Library.Variables.Teleporting = true;
				m_Library.Signal.Fire("Teleporting");
				m_Library.Functions.Wait(0.25);
				v10:SetPrimaryPartCFrame(FindFirstChild_ret7.CFrame + Vector3.new(0, v11.HipHeight + 1, 0));
				m_Library.Audio.Play("rbxassetid://7210953148", script, 1, 1);
				m_Library.Network.Fire("Performed Teleport", "Kawaii Tokyo");
				m_Library.Functions.Wait(0.25);
				m_Library.Variables.Teleporting = false;
				return;
			end
			m_Library.Message.New("Something went wrong. Try again!");
			return;
		end
	end
end
function GetChestByCoinId(p5) -- Line: 329
	--[[
		Upvalues:
			[1] = u1
	--]]
	if not u1 then
		return nil;
	end
	local _ = u1.Status;
	for key7, val7 in pairs(u1.Chests) do
		if key7 ~= p5 then continue end
		return val7;
	end
	return nil;
end
m_Library.Network.Fired("Kawaii Alley: Progressed"):Connect(function(p6) -- Line: 346
	--[[
		Upvalues:
			[1] = u1
	--]]
	if not u1 then return end
	u1.Status = p6;
	Update();
end);
m_Library.Network.Fired("Kawaii Alley: Broadcast Data"):Connect(function(p7) -- Line: 354
	--[[
		Upvalues:
			[1] = u1
			[2] = u2
			[3] = m_Library
	--]]
	u1 = p7;
	if u2 == nil then
		u2 = m_Library.Network.Invoke("Kawaii Alley: Get Settings");
	end
	Update();
end);
m_Library.Network.Fired("Kawaii Alley: Reset"):Connect(Reset);
m_Library.Network.Fired("Kawaii Alley: Egg Found"):Connect(Update);
m_Library.Network.Fired("Kawaii Alley: Update Sign"):Connect(UpdateSign);
m_Library.Signal.Fired("Kawaii Alley: Setup Breakable"):Connect(function(p8, p9) -- Line: 368
	--[[
		Upvalues:
			[1] = table2
	--]]
	if not table2[p8] then
		table2[p8] = p9;
	end
	UpdateChests();
end);
m_Library.Signal.Fired("World Changed"):Connect(function(p10) -- Line: 375
	if p10 == "Kawaii" then
		task.defer(Update);
	end
end);
task.spawn(RequestData);
  -  Editar
  04:54:13.925    -  Editar
  04:54:13.925  ----- [2790] StarterPlayer.StarterPlayerScripts.Scripts.Game.TEST TEST TEST -----  -  Editar
  04:54:13.925  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local IsStudio_ret = m_Library.RunService:IsStudio();
if not IsStudio_ret then
	m_Library.Print("CLIENT TEST SCRIPT IS ENABLED. MAKE SURE TO DISABLE!", true);
	return;
end
wait(3);
local _ = m_Library.WorldFX.QuestGlow(game.Workspace.__MAP.Areas["Area 1"].Side.building, 1.5);
  -  Editar
  04:54:13.925    -  Editar
  04:54:13.925  ----- [2791] StarterPlayer.StarterPlayerScripts.Scripts.Game.Reedem VIP Rewards -----  -  Editar
  04:54:13.926  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local Pad = nil;
local u1 = nil;
local os_clock_ret = nil;
function Animation() -- Line: 19
	--[[
		Upvalues:
			[1] = Pad
			[2] = m_Library
	--]]
	if not Pad then return end
	m_Library.Audio.Play("rbxassetid://7055150312", Pad, 1, 1, 350);
	local Clone_ret = m_Library.Assets.Particles:FindFirstChild("Rank Redeem"):Clone();
	Clone_ret.Parent = Pad;
	Clone_ret:Emit(50);
	m_Library.Functions.AddDebris(Clone_ret, 5);
end
function Redeem() -- Line: 33
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v1 = m_Library.Network.Invoke("Redeem VIP Rewards");
	if v1 then
		Animation();
	end
end
function Raycast() -- Line: 41
	--[[
		Upvalues:
			[1] = m_Library
			[2] = Pad
	--]]
	if not m_Library.WorldCmds.CanDoAction() then return end
	local v2 = m_Library.Player.UpperTorso();
	if not Pad or not v2 then return end
	local RaycastParams_new_ret = RaycastParams.new();
	RaycastParams_new_ret.FilterDescendantsInstances = {Pad};
	RaycastParams_new_ret.FilterType = Enum.RaycastFilterType.Whitelist;
	local Raycast_ret = workspace:Raycast(v2.CFrame.p, Vector3.new(0, -1, 0).Unit * 25, RaycastParams_new_ret);
	if Raycast_ret and Raycast_ret.Instance then
		Redeem();
	end
end
function UpdateHUD() -- Line: 62
	--[[
		Upvalues:
			[1] = Pad
			[2] = m_Library
			[3] = u1
			[4] = os_clock_ret
	--]]
	if not Pad then return end
	local v3 = m_Library.Save.Get();
	if not v3 then return end
	if not u1 or not os_clock_ret then
		local v5 = m_Library.Network.Invoke("Get OSTime");
		os_clock_ret = os.clock();
		u1 = v5;
	end
	local t_VIPCooldown = v3.VIPCooldown;
	local v4 = 14400 - (u1 + (os.clock() - os_clock_ret) - t_VIPCooldown);
	local BillboardGui = Pad:FindFirstChildOfClass("BillboardGui");
	if not BillboardGui or not BillboardGui:FindFirstChild("Timer") then return end
	if v4 > 0 then
		BillboardGui.Timer.Text = m_Library.Functions.TimerString(v4);
		return;
	end
	BillboardGui.Timer.Text = "Redeem!";
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 93
	--[[
		Upvalues:
			[1] = m_Library
			[2] = Pad
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map and Map:FindFirstChild("Interactive") and Map.Interactive:FindFirstChild("VIP Rewards") then
		Pad = Map.Interactive:FindFirstChild("VIP Rewards"):FindFirstChild("Pad");
		return;
	end
	Pad = nil;
end);
while true do
	UpdateHUD();
	Raycast();
	wait(0.5);
end
  -  Editar
  04:54:13.926    -  Editar
  04:54:13.926  ----- [2792] StarterPlayer.StarterPlayerScripts.Scripts.Game.Hoverboard -----  -  Editar
  04:54:13.926  -- Decompiled with the Synapse X Luau decompiler.

local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not v1.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end;
local l__ID__2 = v1.Directory.Gamepasses.Hoverboard.ID;
local u1 = nil;
local u2 = { 71.875, 93.75, 112.5 };
local u3 = { 7, 12, 17 };
function Create(p1)
	local v3 = v1.Player.Character(p1);
	local v4 = p1 == v1.LocalPlayer;
	if not v3 then
		return;
	end;
	local u4 = v1.Player.PrimaryPart(p1);
	local u5 = v1.Player.Humanoid(p1);
	if not (not v1.Variables.LoadingWorld and (v3 and (u4 and 0 < u5.Health))) then
		return;
	end;
	local v5 = v1.Save.Get(p1);
	if not v5 then
		return;
	end;
	local l__EquippedHoverboard__6 = v5.EquippedHoverboard;
	local v7 = v1.Directory.Hoverboards[l__EquippedHoverboard__6];
	if l__EquippedHoverboard__6 ~= "" then
		if not v7 then
			return;
		end;
	else
		return;
	end;
	if v3:FindFirstChild("__HOVERBOARD") then
		Remove(p1);
	end;
	local v8 = v7.board:Clone();
	v8.Massless = true;
	v8.Anchored = false;
	v8.CanCollide = false;
	v8.CanQuery = true;
	v8.CanTouch = true;
	v8.AssemblyLinearVelocity = Vector3.new();
	v8.AssemblyAngularVelocity = Vector3.new();
	local v9 = u5.HipHeight + u4.Size.Y / 2;
	local l__Center__10 = v8:WaitForChild("Center");
	v8.CFrame = u4.CFrame * CFrame.Angles(0, 1.5707963267948966, 0) - Vector3.new(0, v9, 0) - Vector3.new(0, l__Center__10.Position.Y, 0);
	v8.CanCollide = false;
	v8.Name = "__HOVERBOARD";
	v8.Parent = v3;
	local v11 = v1.Functions.Weld(u4, v8);
	local l__Sparkles__12 = v8.Back:FindFirstChild("Sparkles");
	local v13 = l__Sparkles__12:Clone();
	v13.Name = "SparklesJump";
	v13.Enabled = false;
	v13.Rate = v13.Rate * 5;
	v13.SpreadAngle = Vector2.new(-90, 90);
	v13.EmissionDirection = Enum.NormalId.Bottom;
	v13.Speed = NumberRange.new(5, 10);
	v13.Parent = l__Center__10;
	local l__Running__14 = v1.Player.PrimaryPart(p1):FindFirstChild("Running");
	local v15 = nil;
	if l__Running__14 then
		v15 = l__Running__14.Volume;
		l__Running__14.Volume = 0;
	end;
	local v16 = nil;
	local v17 = nil;
	local v18 = tick();
	if v4 then
		v16 = Instance.new("BodyPosition");
		v16.MaxForce = Vector3.new(0, math.huge, 0);
		v16.Position = v8.Position;
		v16.D = 600;
		v16.Parent = v8;
		v17 = Instance.new("BodyGyro");
		v17.MaxTorque = Vector3.new(math.huge, math.huge, math.huge);
		v17.CFrame = CFrame.Angles(0, -1.5707963267948966, 0);
		v17.Parent = v8;
	end;
	local v19 = v1.Assets.Particles:FindFirstChild("Hoverboard Spawn"):Clone();
	v19.Parent = v8.Center;
	v19:Emit(10);
	v1.Audio.Play(v7.sounds.equip, v8, 1, 0.5);
	local v20 = v1.Audio.Play(v7.sounds.idle, v8, 1, 0.1, nil, nil, true);
	if v4 then
		u1 = v1.Functions.Animation(15084173682, u5);
	end;
	local u6 = os.clock();
	local function u7(p2)
		local v21 = v8.Size.X / 2 * 1;
		local v22 = v8.Size.Z / 2 * 1;
		local v23 = nil;
		for v24 = 1, 5 do
			local v25
			if v24 == 1 then
				v25 = Vector3.new(-v21, 0, v22);
			elseif v24 == 2 then
				v25 = Vector3.new(v21, 0, -v22);
			elseif v24 == 3 then
				v25 = Vector3.new(v21, 0, v22);
			elseif v24 == 4 then
				v25 = Vector3.new(-v21, 0, -v22);
			else
				v25 = Vector3.new(0, 0, 0);
			end;
			local v26, v27 = game.Workspace:FindPartOnRayWithWhitelist(Ray.new(u4.CFrame.p + v25, (Vector3.new(0, -(2.5 + v9 + 1 + p2), 0))), { game.Workspace.__MAP });
			if v26 then
				if v27 then
					if v23 then
						if v23.Y < v27.Y then
							v23 = v27;
						end;
					else
						v23 = v27;
					end;
				end;
			end;
		end	
		return v23;
	end;
	local u8 = 0;
	local u9 = 0;
	local u10 = 600;
	local u11 = 600;
	local u12 = v18;
	local u13 = u3[v7.speed];
	local u14 = u2[v7.speed];
	local l__Volume__15 = v20.Volume;
	v1.RunService:BindToRenderStep("Hoverboard " .. p1.Name, Enum.RenderPriority.Character.Value + 1, function(p3)
		if v8 then
			if v8.Parent then
				if not (not v1.Variables.LoadingWorld and (v3 and (u4 and 0 < u5.Health))) then

				elseif v4 then
					u5.PlatformStand = true;
					local v28 = math.sin((os.clock() - u6) * 3) * 0.5;
					local v29 = u7(v28);
					local v30 = v29 ~= nil;
					local v31
					if v30 then
						v31 = 0;
					else
						v31 = math.clamp(u8 * 1.065, 2, 10);
					end;
					u8 = v31;
					local v32 = os.clock() - u9 <= 0.6;
					local v33 = (v30 and v29.Y + 2.5 or v8.Position.Y - u8) + v28;
					if v32 then
						if u10 ~= 2000 then
							u11 = v16.D;
							u10 = 2000;
							u12 = tick();
						end;
					elseif -0.35 < v33 - v16.Position.Y then
						if u10 ~= 360 then
							u11 = v16.D;
							u10 = 360;
							u12 = tick();
						end;
					elseif v33 - v16.Position.Y <= -0.35 then
						if u10 ~= 1400 then
							u11 = v16.D;
							u10 = 1400;
							u12 = tick();
						end;
					end;
					if v16.D ~= u10 then
						v16.D = (math.clamp(tick() - u12, 0, 0.2) - 0) / 0.2 * (u10 - u11) + u11;
					end;
					v16.Position = Vector3.new(0, v33, 0);
					local v34 = u4.Position + u5.MoveDirection;
					if v34 ~= u4.Position then
						v17.CFrame = CFrame.new(u4.Position, v34) * CFrame.Angles(0, 1.5707963267948966, 0);
					end;
					if u5.Jump then
						if v30 then
							if 1 <= os.clock() - u9 then
								u9 = os.clock();
								v1.Audio.Play(v7.sounds.jump, v8, 1.25, 0.4);
							end;
						end;
					end;
					local v35 = 0;
					if os.clock() - u9 <= 0.3 then
						v35 = (1 - math.clamp((os.clock() - u9) / 0.3, 0, 1) ^ 2) * (1000 * u13);
					end;
					local v36 = u5.MoveDirection * u14;
					local v37 = Vector3.new(v36.X, -v35, v36.Z);
					local l__Magnitude__38 = u4.Velocity.Magnitude;
					l__Sparkles__12.Enabled = 8 < l__Magnitude__38;
					if os.clock() - u9 <= 0.3 then
						local v39 = math.sin(2 * math.pi * math.clamp((os.clock() - u9) / 0.3, 0, 1));
						v37 = v37 + v37 * Vector3.new(1, 0, 1) * (u13 / 10);
						v13.Enabled = true;
					else
						v20.Volume = l__Volume__15;
						v13.Enabled = false;
					end;
					u4.Velocity = u4.Velocity:Lerp(v37, 0.035);
					v20.Pitch = math.clamp(1 + l__Magnitude__38 / u14, 1, 2);
					return;
				else
					local l__Magnitude__40 = u4.Velocity.Magnitude;
					v20.Pitch = math.clamp(1 + l__Magnitude__40 / u14, 1, 2);
					l__Sparkles__12.Enabled = 8 < l__Magnitude__40;
					return;
				end;
			end;
		end;
		if l__Running__14 then
			l__Running__14.Volume = v15;
		end;
		pcall(function()
			v1.RunService:UnbindFromRenderStep("Hoverboard " .. p1.Name);
		end);
	end);
end;
function Remove(p4)
	local l____HOVERBOARD__41 = v1.Player.Character(p4):FindFirstChild("__HOVERBOARD");
	if l____HOVERBOARD__41 then
		l____HOVERBOARD__41:Destroy();
	end;
	if p4 == v1.LocalPlayer then
		if u1 then
			u1:Stop();
		end;
		v1.Player.PrimaryPart().Velocity = Vector3.new();
		v1.Player.Humanoid().PlatformStand = false;
		v1.RunService:UnbindFromRenderStep("Hoverboard " .. p4.Name);
	end;
end;
local l__Hoverboard__16 = v1.GUI.Main.Tools.Hoverboard;
function UpdateButton()
	l__Hoverboard__16.Keybind.Visible = not v1.Variables.Mobile;
	l__Hoverboard__16.Keybind.Desktop.Visible = v1.Variables.Desktop;
	l__Hoverboard__16.Keybind.Xbox.Visible = v1.Variables.Console;
	l__Hoverboard__16.BackgroundColor3 = v1.Variables.UsingHoverboard and Color3.fromRGB(252, 209, 59) or Color3.fromRGB(59, 177, 252);
end;
function Toggle()
	v1.Variables.UsingHoverboard = not v1.Variables.UsingHoverboard;
	UpdateButton();
	v1.Signal.Fire("Toggled Hoverboard", v1.Variables.UsingHoverboard);
	v1.Network.Fire("Update Hoverboard State", v1.Variables.UsingHoverboard);
	task.defer(function()
		if not v1.Variables.UsingHoverboard then
			Remove(v1.LocalPlayer);
			return;
		end;
		Create(v1.LocalPlayer);
	end);
end;
function CanUseHoverboard()
	return v1.Save.Get().EquippedHoverboard ~= "";
end;
function ProcessInput(p5)
	if CanUseHoverboard() then
		if v1.WorldCmds.CanDoAction() then
			Toggle();
		end;
	end;
	v1.Variables.HoverboardMenuActive = v1.Variables.UsingHoverboard or not v1.Variables.HoverboardMenuActive;
	v1.Signal.Fire("Toggled Hoverboard Menu");
end;
v1.GUIFX.Tooltip(l__Hoverboard__16, "Hoverboard");
v1.GUIFX.ButtonFX(l__Hoverboard__16);
local u17 = false;
l__Hoverboard__16.Activated:Connect(function()
	if not u17 then
		u17 = true;
		ProcessInput();
		u17 = false;
	end;
end);
UpdateButton();
v1.Signal.Fired("Stat Changed"):Connect(function(p6)
	if p6 == "Gamepasses" then
		UpdateButton();
	end;
end);
v1.Signal.Fired("Changed Platform"):Connect(function()
	UpdateButton();
end);
local l__Enum_KeyCode_Q__18 = Enum.KeyCode.Q;
v1.UserInputService.InputBegan:Connect(function(p7, p8)
	if not p8 and ((p7.KeyCode == l__Enum_KeyCode_Q__18 or p7.KeyCode == Enum.KeyCode.DPadUp) and not u17) then
		u17 = true;
		ProcessInput(true);
		u17 = false;
	end;
end);
v1.Signal.Fired("Entered Cannon"):Connect(function()
	if v1.Variables.UsingHoverboard then
		Toggle();
	end;
end);
v1.Signal.Fired("World Changed"):Connect(function()
	if v1.Variables.UsingHoverboard then
		Toggle();
	end;
end);
v1.Signal.Fired("Stop Using Hoverboard"):Connect(function()
	if v1.Variables.UsingHoverboard then
		Toggle();
	end;
end);
v1.Signal.Fired("Stat Changed"):Connect(function(p9)
	if p9 == "EquippedHoverboard" and v1.Variables.UsingHoverboard then
		Create(v1.LocalPlayer);
	end;
end);
v1.Signal.Fired("Other Stat Changed"):Connect(function(p10, p11)
	if p11 == "EquippedHoverboard" and p10:GetAttribute("UsingHoverboard") then
		task.delay(0.1, function()
			Create(p10);
		end);
	end;
end);
function UpdatePlayer(p12, p13)
	local v42 = v1.Player.Character(p12);
	if v42 then
		if p13 then
			if not v42:FindFirstChild("__HOVERBOARD") then
				task.delay(0.1, function()
					Create(p12);
				end);
				return;
			end;
		end;
	end;
	if not p13 then
		if v42:FindFirstChild("__HOVERBOARD") then
			Remove(p12);
		end;
	end;
end;
function TrackPlayer(p14)
	if p14:GetAttribute("UsingHoverboard") then
		while true do
			if v1.Variables.LoadingWorld then

			else
				break;
			end;
			v1.Heartbeat();		
		end;
		UpdatePlayer(p14, true);
	end;
	p14:GetAttributeChangedSignal("UsingHoverboard"):Connect(function()
		UpdatePlayer(p14, (p14:GetAttribute("UsingHoverboard")));
	end);
end;
game.Players.PlayerAdded:Connect(function(p15)
	TrackPlayer(p15);
end);
for v43, v44 in ipairs(game.Players:GetPlayers()) do
	TrackPlayer(v44);
end;
  -  Editar
  04:54:13.926    -  Editar
  04:54:13.926  ----- [2793] StarterPlayer.StarterPlayerScripts.Scripts.Game.Dog Club Return Door -----  -  Editar
  04:54:13.926  -- Decompiled by Electron BETA [ Made By (Co) ]
-- Path: StarterPlayer.StarterPlayerScripts.Scripts.Game.Dog Club Return Door
local u1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
while not u1.Loaded do
	game:GetService("RunService").Heartbeat:Wait()
end
local u2 = nil

function Teleport()
	local teleport = u1.WorldCmds.GetMap().Teleports:FindFirstChild("Dog Park")
	if u1.WorldCmds.GetMap().Teleports:FindFirstChild("Dog Park") then
		local v1 = u1.Player.Character()
		u1.GUIFX.Flash(0.25, 0.75, Color3.new(255, 255, 255))
		u1.Variables.Teleporting = true
		u1.Signal.Fire("Teleporting")
		u1.Functions.Wait(0.25);
		v1:SetPrimaryPartCFrame(teleport.CFrame + Vector3.new(0, v1.Humanoid().HipHeight + 1, 0))
		u1.Audio.Play("rbxassetid://7210953148", script, 1, 1)
		u1.Network.Fire("Performed Teleport", "Dog Park")
		u1.Functions.Wait(0.25)
		u1.Variables.Teleporting = false
		return
	end
	u1.Message.New("Something went wrong. Try again!")
end

function Setup()
	if u1.WorldCmds.GetMap():FindFirstChild("Interactive") then
		u2 = u1.WorldCmds.GetMap().Interactive:FindFirstChild("Dog Club Return Door")
		if u2 then
			local interactive, v3 = u1.Interact.Add(u2.PrimaryPart, {
				dist = 12,
				label = "Leave Dog Club"
			})
			if interactive then
				interactive:Connect(function()
					Teleport()
				end)
			end
		end
	end
end

u1.Signal.Fired("World Changed"):Connect(function(world)
	if world == "Dog" then
		Setup()
	end
end)  -  Editar
  04:54:13.926    -  Editar
  04:54:13.926  ----- [2794] StarterPlayer.StarterPlayerScripts.Scripts.Game.Hacker Portal Quests -----  -  Editar
  04:54:13.926  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_IsHardcore = m_Library.Shared.IsHardcore;
local bool1 = false;
local FindFirstChild_ret = nil;
function Travel() -- Line: 19
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v1 = m_Library.Message.New("Travel through the portal?", true);
	if v1 then
		m_Library.WorldCmds.Load("Void");
	end
end
function OpenPortal() -- Line: 27
	--[[
		Upvalues:
			[1] = FindFirstChild_ret
			[2] = m_Library
	--]]
	local CENTER = FindFirstChild_ret:FindFirstChild("CENTER");
	m_Library.Audio.Play(8803688837, CENTER, 1, 1.5, 500);
	m_Library.Functions.Tween(CENTER, {Color = Color3.new(0.75, 0.75, 0.75)}, {
		1,
		"Expo",
		"Out"
	}).Completed:Wait();
	while FindFirstChild_ret and FindFirstChild_ret.Parent do
		m_Library.Functions.Tween(CENTER, {Color = Color3.new(0.8, 0.8, 0.8)}, {
			1.5,
			"Sine",
			"InOut"
		}).Completed:Wait();
		m_Library.Functions.Tween(CENTER, {Color = Color3.new(0.65098, 0.592157, 0.690196)}, {
			2,
			"Sine",
			"InOut"
		}).Completed:Wait();
		m_Library.RenderStepped();
	end
end
function PromptQuest() -- Line: 42
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_IsHardcore
	--]]
	local v2 = m_Library.Save.Get();
	local v3, v4 = unpack(t_IsHardcore and v2.Hardcore.HackerPortalProgress or v2.HackerPortalProgress);
	if v4 <= 0 then
		local v9 = m_Library.Message.New("To unlock the portal, you need to complete a quest. Start?", true);
		if v9 then
			m_Library.Network.Fire("Start Hacker Portal Quests");
		end
		return;
	end
	if v4 > 1 then
		v4 = 1;
		v3 = m_Library.Shared.HackerPortalQuests[1];
	end
	local v5 = m_Library.Shared.HackerPortalQuests[v4];
	if not v5 then
		print("Not needed");
		return;
	end
	if v5 <= v3 then
		local v10 = m_Library.Network.Invoke("Finish Hacker Portal Quest");
		if v10 then
			m_Library.Audio.Play(8803681943, script, 1, 1.5);
		end
	else
		local v11 = v5 - v3;
		if v4 == 1 then
			m_Library.Message.New(string.format("Quest - Break %s Giant Hacker Chest%s. Return when you have finished.", v11, v11 <= 1 and "" or "s"));
		end
	end
end
function Clicked() -- Line: 85
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_IsHardcore
	--]]
	local v6 = m_Library.Save.Get();
	if t_IsHardcore and v6.Hardcore.HackerPortalUnlocked or not t_IsHardcore and v6.HackerPortalUnlocked then
		Travel();
		return;
	end
	PromptQuest();
end
function Setup() -- Line: 97
	--[[
		Upvalues:
			[1] = FindFirstChild_ret
			[2] = m_Library
			[3] = bool1
			[4] = t_IsHardcore
	--]]
	local v7, _ = m_Library.Interact.Add(FindFirstChild_ret:FindFirstChild("_INTERACT").CFrame.p, {dist = 30});
	v7:Connect(function() -- Line: 100
		--[[
			Upvalues:
				[1] = bool1
		--]]
		if not bool1 then
			bool1 = true;
			Clicked();
			bool1 = false;
		end
	end);
	local v8 = m_Library.Save.Get();
	if v8 and (t_IsHardcore and v8.Hardcore.HackerPortalUnlocked or not t_IsHardcore and v8.HackerPortalUnlocked) then
		OpenPortal();
	end
end
function Check() -- Line: 118
	--[[
		Upvalues:
			[1] = m_Library
			[2] = FindFirstChild_ret
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		FindFirstChild_ret = Map.Interactive:FindFirstChild("Hacker Portal");
		if FindFirstChild_ret then
			Setup();
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 133
	Check();
end);
m_Library.Network.Fired("Hacker Portal Progressed"):Connect(function() -- Line: 138
	--[[
		Upvalues:
			[1] = FindFirstChild_ret
	--]]
	if FindFirstChild_ret then
		wait(0.5);
		PromptQuest();
	end
end);
m_Library.Network.Fired("Hacker Portal Unlocked"):Connect(function() -- Line: 146
	--[[
		Upvalues:
			[1] = FindFirstChild_ret
			[2] = m_Library
	--]]
	if FindFirstChild_ret then
		m_Library.Message.New("Congrats! The portal is now permanently unlocked.");
		OpenPortal();
	end
end);
  -  Editar
  04:54:13.926    -  Editar
  04:54:13.926  ----- [2795] StarterPlayer.StarterPlayerScripts.Scripts.Game.Reedem Rank Rewards -----  -  Editar
  04:54:13.927  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local Pad = nil;
local u1 = nil;
local os_clock_ret = nil;
function Animation() -- Line: 18
	--[[
		Upvalues:
			[1] = Pad
			[2] = m_Library
	--]]
	if not Pad then return end
	m_Library.Audio.Play("rbxassetid://7055150312", Pad, 1, 1, 350);
	local Clone_ret = m_Library.Assets.Particles:FindFirstChild("Rank Redeem"):Clone();
	Clone_ret.Parent = Pad;
	Clone_ret:Emit(50);
	m_Library.Functions.AddDebris(Clone_ret, 5);
end
function Redeem() -- Line: 32
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v1 = m_Library.Network.Invoke("Redeem Rank Rewards");
	if v1 then
		Animation();
	else
		m_Library.Message.New("Could not redeem rewards.");
	end
	wait(3);
end
function Raycast() -- Line: 43
	--[[
		Upvalues:
			[1] = m_Library
			[2] = Pad
	--]]
	if not m_Library.WorldCmds.CanDoAction() then return end
	local v2 = m_Library.Player.UpperTorso();
	if not Pad or not v2 then return end
	local RaycastParams_new_ret = RaycastParams.new();
	RaycastParams_new_ret.FilterDescendantsInstances = {Pad};
	RaycastParams_new_ret.FilterType = Enum.RaycastFilterType.Whitelist;
	local Raycast_ret = workspace:Raycast(v2.CFrame.p, Vector3.new(0, -1, 0).Unit * 25, RaycastParams_new_ret);
	if Raycast_ret and Raycast_ret.Instance then
		Redeem();
	end
end
function UpdateHUD() -- Line: 64
	--[[
		Upvalues:
			[1] = Pad
			[2] = m_Library
			[3] = u1
			[4] = os_clock_ret
	--]]
	if not Pad then return end
	local v3 = m_Library.Save.Get();
	if not v3 then return end
	local BillboardGui = Pad:FindFirstChildOfClass("BillboardGui");
	if not BillboardGui or not BillboardGui:FindFirstChild("Timer") then return end
	local t_Rank = v3.Rank;
	local t_RankTimer = v3.RankTimer;
	local v4 = m_Library.Directory.Ranks[t_Rank];
	local v5 = #v4.rewards > 0;
	if not u1 or not os_clock_ret then
		local v6 = m_Library.Network.Invoke("Get OSTime");
		os_clock_ret = os.clock();
		u1 = v6;
	end
	if not BillboardGui or not BillboardGui:FindFirstChild("Timer") then return end
	if v5 then
		local v7 = v4.rewardCooldown - (u1 + (os.clock() - os_clock_ret) - t_RankTimer);
		if v7 > 0 then
			BillboardGui.Timer.Text = m_Library.Functions.TimerString(v7);
			return;
		end
		BillboardGui.Timer.Text = "Redeem!";
		return;
	end
	BillboardGui.Timer.Text = "(None)";
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 108
	--[[
		Upvalues:
			[1] = m_Library
			[2] = Pad
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map and Map:FindFirstChild("Interactive") and Map.Interactive:FindFirstChild("Rank Rewards") then
		Pad = Map.Interactive:FindFirstChild("Rank Rewards"):FindFirstChild("Pad");
		return;
	end
	Pad = nil;
end);
task.spawn(function() -- Line: 121
	while true do
		UpdateHUD();
		wait(0.5);
	end
end);
task.spawn(function() -- Line: 129
	while true do
		Raycast();
		wait(0.5);
	end
end);
  -  Editar
  04:54:13.927    -  Editar
  04:54:13.927  ----- [2796] StarterPlayer.StarterPlayerScripts.Scripts.Game.Fireworks -----  -  Editar
  04:54:13.927  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local table1 = {
	Color3.fromRGB(255, 49, 49),
	Color3.fromRGB(255, 179, 55),
	Color3.fromRGB(255, 255, 53),
	Color3.fromRGB(105, 255, 79),
	Color3.fromRGB(70, 252, 255),
	Color3.fromRGB(193, 85, 255),
	Color3.fromRGB(255, 169, 225)
};
local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local Random_new_ret = Random.new();
local t_Achievements = m_Library.Assets.Particles.Achievements;
function GetRandomInPart(p1) -- Line: 25
	local Random_new_ret2 = Random.new();
	local NextNumber_ret = Random_new_ret2:NextNumber(-p1.Size.X / 2, p1.Size.X / 2);
	local NextNumber_ret2 = Random_new_ret2:NextNumber(-p1.Size.Y / 2, p1.Size.Y / 2);
	local NextNumber_ret3 = Random_new_ret2:NextNumber(-p1.Size.Z / 2, p1.Size.Z / 2);
	return p1.CFrame * CFrame.new(NextNumber_ret, NextNumber_ret2, NextNumber_ret3);
end
function Firework(p2, p3, p4, p5) -- Line: 35
	--[[
		Upvalues:
			[1] = table1
			[2] = Random_new_ret
			[3] = m_Library
			[4] = t_Achievements
	--]]
	if not p3 then
		p3 = 1;
	end
	if not p4 then
		p4 = 1;
	end
	local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 42
		--[[
			Upvalues:
				[1] = table1
				[2] = Random_new_ret
				[3] = p2
				[4] = m_Library
				[5] = p5
				[6] = t_Achievements
				[7] = p3
				[8] = p4
		--]]
		local v2 = table1[Random_new_ret:NextInteger(1, #table1)];
		local firework = Instance.new("Part");
		firework.CanCollide = false;
		firework.Anchored = true;
		firework.CFrame = p2;
		firework.Size = Vector3.new();
		firework.Name = "firework";
		firework.Parent = m_Library.Debris;
		if p5 and math.random() < 0.1 then
			m_Library.Audio.Play("rbxassetid://6958700030", firework, 1, 1.2, 100);
		end
		local Clone_ret = t_Achievements:FindFirstChild("Firework-Trail"):Clone();
		Clone_ret.Parent = firework;
		local NextNumber_ret4 = Random_new_ret:NextNumber(8, 11);
		m_Library.Functions.Tween(firework, {CFrame = p2 + Vector3.new(0, NextNumber_ret4, 0)}, {
			NextNumber_ret4 / 10,
			"Linear"
		}).Completed:Wait();
		Clone_ret.Enabled = false;
		local Clone_ret2 = t_Achievements:FindFirstChild("Firework"):Clone();
		Clone_ret2.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0, v2),
			ColorSequenceKeypoint.new(1, v2)
		});
		Clone_ret2.Parent = firework;
		Clone_ret2.Speed = NumberRange.new(Clone_ret2.Speed.Min * p3);
		Clone_ret2.Drag = Clone_ret2.Drag * p4;
		Clone_ret2:Emit(25);
		m_Library.Functions.AddDebris(firework, 4);
	end);
	coroutine_wrap_ret();
end
function PlayFireworks(p6) -- Line: 77
	--[[
		Upvalues:
			[1] = m_Library
			[2] = Random_new_ret
	--]]
	local v1 = m_Library.Player.UpperTorso(p6);
	if not v1 then return end
	m_Library.Audio.Play("rbxassetid://6958700030", v1, 1, 1.2, 250);
	for index1 = 1, Random_new_ret:NextInteger(8, 10) do
		if v1 then
			Firework(v1.CFrame + Vector3.new(Random_new_ret:NextNumber(-4, 4), -2, Random_new_ret:NextNumber(-4, 4)));
		end
		m_Library.Functions.Wait(0.25, 0.5);
	end
end
m_Library.Signal.Fired("Play Fireworks"):Connect(Firework);
m_Library.Network.Fired("Play Fireworks"):Connect(Firework);
local Random_new_ret3 = Random.new();
m_Library.Network.Fired("Start Dance Party Fireworks"):Connect(function(p7) -- Line: 101
	--[[
		Upvalues:
			[1] = m_Library
			[2] = Random_new_ret3
	--]]
	local u1 = p7 or 18000;
	task.spawn(function() -- Line: 103
		--[[
			Upvalues:
				[1] = u1
				[2] = m_Library
				[3] = Random_new_ret3
		--]]
		for index2 = 1, u1 do
			local Map = m_Library.WorldCmds.GetMap();
			local Interactive = Map:FindFirstChild("Interactive");
			if Interactive then
				local FireworkZone = Interactive:FindFirstChild("FireworkZone");
				if FireworkZone then
					local RandomInPart = GetRandomInPart(FireworkZone);
					Firework(RandomInPart, Random_new_ret3:NextNumber(1, 4), Random_new_ret3:NextNumber(0.5, 1), true);
					m_Library.Functions.Wait(0.01);
				end
			end
		end
	end);
end);
m_Library.Network.Fired("Fireworks Animation"):Connect(function(p8) -- Line: 119
	PlayFireworks(p8);
end);
m_Library.Signal.Fired("Fireworks Animation"):Connect(function(p9) -- Line: 123
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	p9 = p9 or m_Library.LocalPlayer;
	PlayFireworks(p9);
end);
  -  Editar
  04:54:13.927    -  Editar
  04:54:13.927  ----- [2797] StarterPlayer.StarterPlayerScripts.Scripts.Game.Fantasy Portals -----  -  Editar
  04:54:13.927  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local table1 = {};
local u1 = nil;
local bool1 = false;
local bool2 = false;
function Teleport(p1) -- Line: 20
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local Attribute = p1:GetAttribute("Area");
	local _ = m_Library.WorldCmds.GetMap();
	local FindFirstChild_ret = m_Library.WorldCmds.GetMap().Teleports:FindFirstChild(Attribute);
	if FindFirstChild_ret then
		local v4 = m_Library.Player.Character();
		local v5 = m_Library.Player.Humanoid();
		m_Library.GUIFX.Flash(0.25, 0.75, p1.PrimaryPart.Color);
		m_Library.Variables.Teleporting = true;
		m_Library.Signal.Fire("Teleporting");
		m_Library.Functions.Wait(0.25);
		v4:SetPrimaryPartCFrame(FindFirstChild_ret.CFrame + Vector3.new(0, v5.HipHeight + 1, 0));
		m_Library.Audio.Play("rbxassetid://7210953148", script, 1, 1);
		m_Library.Network.Fire("Performed Teleport", Attribute);
		m_Library.Functions.Wait(0.25);
		m_Library.Variables.Teleporting = false;
		return;
	end
	m_Library.Message.New("Something went wrong. Try again!");
end
function UpdatePortal(p2) -- Line: 43
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local Attribute2 = p2:GetAttribute("Area");
	local v1 = Attribute2 and m_Library.WorldCmds.HasArea(Attribute2);
	local v2 = p2:GetAttribute("Unlocked") or false;
	p2:SetAttribute("Unlocked", v1);
	local t_PrimaryPart = p2.PrimaryPart;
	local ParticleEmitter = p2.PrimaryPart:FindFirstChildOfClass("ParticleEmitter");
	local SurfaceLight = t_PrimaryPart:FindFirstChildOfClass("SurfaceLight");
	ParticleEmitter.Enabled = v1;
	SurfaceLight.Enabled = v1;
	if v1 then
		if not v2 then
			t_PrimaryPart.Transparency = 1;
			ParticleEmitter:Emit(20);
			m_Library.Functions.Tween(t_PrimaryPart, {Transparency = 0.35}, {
				1,
				"Expo",
				"Out"
			});
			m_Library.Audio.Play("rbxassetid://7210953203", t_PrimaryPart, 1, 1, 325);
			m_Library.Audio.Play("rbxassetid://7210953181", t_PrimaryPart, 1, 0.2, 65, nil, true);
		end
	else
		t_PrimaryPart.Transparency = 1;
	end
end
function Interact(p3) -- Line: 70
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local Attribute3 = p3:GetAttribute("Area");
	local v3 = m_Library.Directory.Areas[Attribute3];
	local Attribute4 = p3:GetAttribute("Unlocked");
	if not Attribute4 then
		local v6 = m_Library.Message.New("Buy this area for " .. m_Library.Functions.Commas(v3.gate.cost) .. " " .. v3.gate.currency .. "?", true);
		if v6 then
			local v9, v10 = m_Library.Network.Invoke("Buy Area", Attribute3);
			if not v9 then
				m_Library.Message.New(v10 or "Error");
			end
		end
	else
		Teleport(p3);
	end
end
function Setup(p4) -- Line: 92
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table1
			[3] = bool2
	--]]
	for _, val1 in ipairs(p4) do
		local Attribute5 = val1:GetAttribute("Area");
		local bool3 = true;
		if not Attribute5 or Attribute5 == "" then
			bool3 = false;
		end
		UpdatePortal(val1);
		if not bool3 then continue end
		local v7, v8 = m_Library.Interact.Add(val1.PrimaryPart, {dist = 10});
		table.insert(table1, v8);
		v7:Connect(function() -- Line: 106
			--[[
				Upvalues:
					[1] = bool2
					[2] = val1
			--]]
			if not bool2 then
				bool2 = true;
				Interact(val1);
				bool2 = false;
			end
		end);
	end
end
function Check() -- Line: 118
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		u1 = Map.Interactive:FindFirstChild("Portals");
		if u1 then
			Setup(u1:GetChildren());
		end
	end
end
function Clean() -- Line: 130
	--[[
		Upvalues:
			[1] = table1
			[2] = u1
	--]]
	for _, val2 in pairs(table1) do
		val2();
	end
	table1 = {};
	u1 = nil;
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 142
	--[[
		Upvalues:
			[1] = bool1
	--]]
	bool1 = false;
	Clean();
	Check();
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p5) -- Line: 149
	--[[
		Upvalues:
			[1] = u1
	--]]
	if (p5 == "AreasUnlocked" or p5 == "Hardcore") and u1 then
		for _, child3 in ipairs(u1:GetChildren()) do
			UpdatePortal(child3);
		end
	end
end);
  -  Editar
  04:54:13.928    -  Editar
  04:54:13.928  ----- [2798] StarterPlayer.StarterPlayerScripts.Scripts.Game.Shiny Relic -----  -  Editar
  04:54:13.928  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local FindFirstChild_ret = nil;
local t_IsHardcore = m_Library.Shared.IsHardcore;
function Unlock() -- Line: 18
	--[[
		Upvalues:
			[1] = FindFirstChild_ret
	--]]
	local Interact = FindFirstChild_ret:FindFirstChild("Interact");
	if Interact then
		Interact:Destroy();
	end
end
function IsUnlocked() -- Line: 27
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_IsHardcore
	--]]
	local v1 = m_Library.Save.Get();
	if v1 then
		return t_IsHardcore and v1.CaveShinyBoost;
	end
	return false;
end
function Buy() -- Line: 36
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v2, v3 = m_Library.Network.Invoke("Offer Shiny Relic");
	if not v2 then
		m_Library.Message.New(v3 or "Error");
		return;
	end
	Unlock();
	PlayAnimation();
end
function Prompt() -- Line: 47
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_IsHardcore
	--]]
	local v4 = m_Library.Save.Get();
	if v4 then
		local v7 = v4.Achievements["Unlock Secret Cave"];
		if not t_IsHardcore or not v7 then
			m_Library.Message.New("Leave now... you aren't supposed to be here!");
			return;
		end
		local v8 = m_Library.Message.New("Are you willing to sacrifice 250m Diamonds to the Shiny Relic?", true);
		if v8 then
			Buy();
		end
	end
end
function Setup() -- Line: 64
	--[[
		Upvalues:
			[1] = m_Library
			[2] = FindFirstChild_ret
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		FindFirstChild_ret = Map.Interactive:FindFirstChild("Shiny Relic");
		if FindFirstChild_ret then
			if IsUnlocked() then
				Unlock();
				return;
			end
			local v9, _ = m_Library.Interact.Add(FindFirstChild_ret:WaitForChild("Interact"), {dist = 12});
			if v9 then
				v9:Connect(function() -- Line: 74
					Prompt();
				end);
			end
		end
	end
end
function PlayAnimation(_) -- Line: 84
	--[[
		Upvalues:
			[1] = FindFirstChild_ret
			[2] = m_Library
	--]]
	if not FindFirstChild_ret or not FindFirstChild_ret.PrimaryPart then return end
	m_Library.Audio.Play(11788144854, FindFirstChild_ret:GetPrimaryPartCFrame().p, 1, 1, 400);
	local v5, v6 = m_Library.Functions.CreateParticleHost(FindFirstChild_ret:GetPrimaryPartCFrame().p);
	local Children = m_Library.Assets.Particles:FindFirstChild("Golden Machine"):GetChildren();
	for _, val1 in ipairs(Children) do
		local Clone_ret = val1:Clone();
		Clone_ret.Parent = v6;
		Clone_ret:Emit(40);
	end
	m_Library.Functions.AddDebris(v5, 4);
	m_Library.Functions.Wait(1.5);
	m_Library.Message.New("Offering accepted! Shiny pet chances have been increased! \226\156\168");
end
m_Library.Signal.Fired("World Changed"):Connect(function(p1) -- Line: 109
	--[[
		Upvalues:
			[1] = t_IsHardcore
	--]]
	if p1 == "Secret Cave" and t_IsHardcore then
		Setup();
	end
end);
  -  Editar
  04:54:13.928    -  Editar
  04:54:13.928  ----- [2799] StarterPlayer.StarterPlayerScripts.Scripts.Game.Traveling Merchant -----  -  Editar
  04:54:13.928  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
if m_Library.Shared.IsHardcore then return end
local u1 = nil;
local u2 = nil;
local u3 = false;
local u4 = false;
function UpdateTimer() -- Line: 24
	--[[
		Upvalues:
			[1] = u1
			[2] = u2
			[3] = m_Library
	--]]
	if not u1 then return end
	if not u2 then
		local v5, v6 = m_Library.Network.Invoke("Get Merchant Timer");
		if not v5 then
			u2 = nil;
			return;
		end
		local v7 = v6 - v5;
		u2 = os.clock() + v7;
	end
	local v1 = u2 - os.clock();
	local Sign = u1:FindFirstChild("Sign");
	if Sign then
		if v1 <= 5 then
			Sign.SurfaceGui.Timer.Text = "Leaving...";
			return;
		end
		Sign.SurfaceGui.Timer.Text = m_Library.Functions.TimerString(v1);
	end
end
function Show() -- Line: 52
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u4
			[3] = u1
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	local v2 = m_Library.WorldCmds.Get();
	if u4 then
		u1 = m_Library.Assets.Models:FindFirstChild(v2 == "Spawn" and "Secret Merchant" or "Secret Merchant (Trading Plaza)"):Clone();
	else
		u1 = m_Library.Assets.Models:FindFirstChild(v2 == "Spawn" and "Traveling Merchant" or "Traveling Merchant (Trading Plaza)"):Clone();
	end
	u1.Parent = Map.Interactive;
	m_Library.Audio.Play("rbxassetid://7399584411", u1.PrimaryPart, 1, 0.33, 125, nil, true);
end
function Depart() -- Line: 66
	--[[
		Upvalues:
			[1] = u2
			[2] = u1
	--]]
	u2 = nil;
	if not u1 then return end
	u1:Destroy();
	u1 = nil;
end
function Check() -- Line: 78
	--[[
		Upvalues:
			[1] = u1
			[2] = u3
			[3] = m_Library
	--]]
	if u1 and not u3 then
		Depart();
	end
	if not u3 then return end
	local v3 = m_Library.WorldCmds.Get();
	local v4 = v3 == "Spawn" and true or v3 == "Trading Plaza";
	if not v4 and u1 then
		u1 = nil;
		return;
	end
	if v4 and not u1 then
		Show();
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 101
	--[[
		Upvalues:
			[1] = u1
	--]]
	u1 = nil;
	Check();
end);
m_Library.Network.Fired("Merchant Departed"):Connect(function() -- Line: 107
	--[[
		Upvalues:
			[1] = u3
	--]]
	u3 = false;
	Check();
end);
m_Library.Network.Fired("Merchant Arrival"):Connect(function(p1) -- Line: 113
	--[[
		Upvalues:
			[1] = u3
			[2] = u4
	--]]
	u3 = true;
	u4 = p1;
	Check();
end);
task.spawn(function() -- Line: 120
	--[[
		Upvalues:
			[1] = u3
			[2] = u4
			[3] = m_Library
	--]]
	u3, u4 = m_Library.Network.Invoke("Is Merchant Here");
end);
local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 128
	--[[
		Upvalues:
			[1] = u1
	--]]
	while true do
		if u1 then
			UpdateTimer();
		end
		wait(0.5);
	end
end);
coroutine_wrap_ret();
  -  Editar
  04:54:13.929    -  Editar
  04:54:13.929  ----- [2800] StarterPlayer.StarterPlayerScripts.Scripts.Game.Select Coins -----  -  Editar
  04:54:13.929  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_CoinGrabDistance = m_Library.Settings.CoinGrabDistance;
local Coins = m_Library.Things:WaitForChild("Coins");
local u1 = m_Library.Player.Camera();
local u2 = nil;
local u3 = nil;
function SelectCoin(p1, p2) -- Line: 20
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local Attribute = p1:GetAttribute("Area");
	local v1 = m_Library.WorldCmds.HasArea(Attribute);
	local Coin = p1:FindFirstChild("Coin");
	if Coin and Coin:GetAttribute("PreventClick") then return end
	if v1 then
		if p2 then
			m_Library.Signal.Fire("Group Select Coin", p1);
			return;
		end
		m_Library.Signal.Fire("Select Coin", p1);
	end
end
function ProcessInput(p3) -- Line: 40
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
			[3] = Coins
			[4] = t_CoinGrabDistance
	--]]
	if not m_Library.WorldCmds.CanDoAction() then return end
	local ScreenPointToRay_ret = u1:ScreenPointToRay(p3.X, p3.Y);
	local RaycastParams_new_ret = RaycastParams.new();
	RaycastParams_new_ret.FilterDescendantsInstances = {Coins};
	RaycastParams_new_ret.FilterType = Enum.RaycastFilterType.Whitelist;
	local Raycast_ret = game.Workspace:Raycast(ScreenPointToRay_ret.Origin, ScreenPointToRay_ret.Direction * 1000, RaycastParams_new_ret);
	if Raycast_ret and Raycast_ret.Instance then
		local v2 = Raycast_ret.Instance;
		if m_Library.LocalPlayer:DistanceFromCharacter(v2.CFrame.p) <= t_CoinGrabDistance then
			while true do
				v2 = v2.Parent;
				if not v2 then break end
				if not v2:GetAttribute("ID") then continue end
				return v2;
			end
		end
	end
end
function InputDown(p4) -- Line: 70
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u3
			[3] = u2
	--]]
	local ProcessInput_ret = ProcessInput(p4);
	if ProcessInput_ret or m_Library.Variables.Desktop then
		u3 = ProcessInput_ret;
		u2 = os.clock();
	end
end
function InputUp(p5) -- Line: 79
	--[[
		Upvalues:
			[1] = u2
			[2] = u3
			[3] = m_Library
	--]]
	local ProcessInput_ret2 = ProcessInput(p5);
	if ProcessInput_ret2 and u2 and (u3 == ProcessInput_ret2 or m_Library.Variables.Desktop) then
		SelectCoin(ProcessInput_ret2, os.clock() - u2 > 0.35);
	end
	u2 = nil;
	u3 = nil;
end
m_Library.UserInputService.TouchStarted:Connect(function(p6, p7) -- Line: 95
	if not p7 then
		InputDown(p6.Position);
	end
end);
m_Library.UserInputService.TouchEnded:Connect(function(hit, p8) -- Line: 102
	if not p8 then
		InputUp(hit.Position);
	end
end);
m_Library.UserInputService.InputBegan:Connect(function(input, gameProcessedEvent) -- Line: 110
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local t_UserInputType = input.UserInputType;
	local _ = input.UserInputState;
	local t_KeyCode = input.KeyCode;
	if not gameProcessedEvent and (t_UserInputType == Enum.UserInputType.MouseButton1 or t_KeyCode == Enum.KeyCode.ButtonX or t_KeyCode == Enum.KeyCode.ButtonR2 or t_KeyCode == Enum.KeyCode.ButtonL2) then
		InputDown(m_Library.UserInputService:GetMouseLocation() - Vector2.new(0, 36));
	end
end);
m_Library.UserInputService.InputEnded:Connect(function(input2, gameProcessedEvent2) -- Line: 119
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local t_UserInputType2 = input2.UserInputType;
	local _ = input2.UserInputState;
	local t_KeyCode2 = input2.KeyCode;
	if not gameProcessedEvent2 and (t_UserInputType2 == Enum.UserInputType.MouseButton1 or t_KeyCode2 == Enum.KeyCode.ButtonX or t_KeyCode2 == Enum.KeyCode.ButtonR2 or t_KeyCode2 == Enum.KeyCode.ButtonL2) then
		InputUp(m_Library.UserInputService:GetMouseLocation() - Vector2.new(0, 36));
	end
end);
  -  Editar
  04:54:13.929    -  Editar
  04:54:13.929  ----- [2801] StarterPlayer.StarterPlayerScripts.Scripts.Game.Scavenger Hunt -----  -  Editar
  04:54:13.929  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local bool1 = false;
local table1 = {};
local u1 = nil;
local u2 = nil;
local u3 = nil;
function SetupScavengerEgg(p1) -- Line: 8
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u2
			[3] = u1
			[4] = table1
			[5] = bool1
			[6] = u3
	--]]
	local v1 = m_Library.Save.Get();
	if not v1 then return end
	if v1.ScavengerEggsCollected and v1.ScavengerEggsCollected[tostring(u2)] and table.find(v1.ScavengerEggsCollected[tostring(u2)], p1.Name) then
		DisableScavengerEgg(p1);
		return;
	end
	local t_Name = p1.Name;
	if not u1 or not table.find(u1, t_Name) then
		DisableScavengerEgg(p1);
		return;
	end
	local bool2 = false;
	local v2, v3 = m_Library.Interact.Add(p1.Egg.CFrame.p, {
		label = "Collect",
		dist = 20
	});
	table.insert(table1, v3);
	v2:Connect(function() -- Line: 30
		--[[
			Upvalues:
				[1] = bool1
				[2] = m_Library
				[3] = p1
				[4] = table1
		--]]
		if not bool1 then
			bool1 = true;
			if not m_Library.FFlags.Get(m_Library.FFlags.Keys.ScavengerClaim) then
				m_Library.Message.New("Sorry, this is disabled right now! Try back soon!");
				bool1 = false;
				return;
			end
			local v6, v7 = m_Library.Network.Invoke("Claim Scavenger Item", p1.Name);
			if v6 ~= true then
				m_Library.Message.New(v7 or "Something went wrong!");
				bool1 = false;
				return;
			end
			p1:Destroy();
			for _, val8 in ipairs(table1) do
				val8();
			end
			table1 = {};
			bool1 = false;
		end
	end);
	EnableScavengerEgg(p1);
	local function Show() -- Line: 62
		--[[
			Upvalues:
				[1] = m_Library
				[2] = u3
				[3] = p1
		--]]
		local v4 = m_Library.Directory.Eggs[u3];
		local Clone_ret = m_Library.Assets.Billboards.EggInfo:Clone();
		local t_drops = v4.drops;
		local t_isGolden = v4.isGolden;
		local v5 = m_Library.Save.Get();
		if type(t_drops) == "string" then
			t_drops = m_Library.Directory.Eggs[t_drops].drops;
		end
		for key7, val7 in ipairs(t_drops) do
			local v8 = val7[1];
			local v9 = m_Library.Directory.Pets[v8];
			local t_rarity = v9.rarity;
			local v10 = val7[3];
			if t_rarity == "Secret" or v10 and not m_Library.Shared.IsHardcore then continue end
			local Clone_ret2 = m_Library.Assets.UI.EggInfo.Pet:Clone();
			Clone_ret2:SetAttribute("PetId", v8);
			local function CalculatePetChance() -- Line: 87
				--[[
					Upvalues:
						[1] = t_drops
						[2] = val7
				--]]
				local v15 = 0;
				for _, val10 in ipairs(t_drops) do
					v15 = v15 + val10[2];
				end
				return val7[2] / v15 * 100;
			end
			local v11 = 0;
			for _, val9 in ipairs(t_drops) do
				v11 = v11 + val9[2];
			end
			local v12 = val7[2] / v11 * 100;
			Clone_ret2.Thumbnail.Image = t_isGolden and v9.goldenThumbnail or v9.thumbnail;
			Clone_ret2.LayoutOrder = 9999 - v12;
			if v5.AutoDelete[v9.rarity] then
				Clone_ret2.DeleteImage.Visible = true;
			else
				Clone_ret2.DeleteImage.Visible = false;
			end
			if t_rarity == "Legendary" or t_rarity == "Mythical" or t_rarity == "Event" or t_rarity == "Exclusive" or v12 <= 0.0099 then
				Clone_ret2.Thumbnail.Chance.Text = "??";
				m_Library.GUIFX.Rainbow(Clone_ret2.Thumbnail.Chance, "TextColor3");
			else
				local math_clamp_ret = math.clamp(math.pow(0.9315, v12) * 94.2467 / 100, 0, 1);
				local Lerp_ret = Color3.fromRGB(49, 255, 39):Lerp(Color3.fromRGB(255, 75, 39), math_clamp_ret);
				local Color3_toHSV_ret1, Color3_toHSV_ret2, Color3_toHSV_ret3 = Color3.toHSV(Lerp_ret);
				local Color3_fromHSV_ret = Color3.fromHSV(Color3_toHSV_ret1, Color3_toHSV_ret2, Color3_toHSV_ret3 * 2);
				Clone_ret2.Thumbnail.Chance.TextColor3 = Color3_fromHSV_ret;
				Clone_ret2.Thumbnail.Chance.Text = m_Library.Functions.FormatChance(v12 / 100);
			end
			if v9.titanic then
				Clone_ret2.TitanicCrown.Visible = true;
			end
			Clone_ret2.Thumbnail.Position = UDim2.new(0, 0, 1, 0);
			Clone_ret2.Thumbnail.ImageTransparency = 1;
			m_Library.Functions.Tween(Clone_ret2.Thumbnail, {
				Position = UDim2.new(0, 0, 0, 0),
				ImageTransparency = 0
			}, {
				key7 / 9 / 3 + 0.45,
				Enum.EasingStyle.Quart,
				Enum.EasingDirection.Out
			});
			Clone_ret2.Parent = Clone_ret.Frame.Pets;
		end
		Clone_ret.Size = UDim2.new(0, 0, 0, 0);
		Clone_ret.StudsOffset = Vector3.new(0, 4, 0);
		m_Library.Functions.Tween(Clone_ret, {
			Size = UDim2.new(10, 0, 10, 0),
			StudsOffset = Vector3.new(0, 10, 0)
		}, {
			0.2,
			Enum.EasingStyle.Quad,
			Enum.EasingDirection.Out
		});
		local UIGridLayout = Clone_ret.Frame.Pets:FindFirstChild("UIGridLayout");
		UIGridLayout:ApplyLayout();
		Clone_ret.Parent = p1.Egg;
	end
	local function Hide() -- Line: 148
		--[[
			Upvalues:
				[1] = p1
				[2] = m_Library
		--]]
		local EggInfo = p1.Egg:FindFirstChild("EggInfo");
		if EggInfo then
			m_Library.Functions.Tween(EggInfo, {
				Size = UDim2.new(0, 0, 0, 0),
				StudsOffset = Vector3.new(0, 4, 0)
			}, {
				0.15,
				Enum.EasingStyle.Quad,
				Enum.EasingDirection.In
			}).Completed:Connect(function() -- Line: 152
				--[[
					Upvalues:
						[1] = EggInfo
				--]]
				EggInfo:Destroy();
			end);
		end
	end
	local t_Egg = p1.Egg;
	local Random_new_ret = Random.new();
	local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 163
		--[[
			Upvalues:
				[1] = t_Egg
				[2] = Random_new_ret
				[3] = m_Library
		--]]
		local t_CFrame = t_Egg.CFrame;
		local NextNumber_ret = Random_new_ret:NextNumber(1, 10);
		local os_clock_ret = os.clock();
		local os_clock_ret2 = nil;
		while t_Egg and t_Egg.Parent do
			if not os_clock_ret2 or os.clock() - os_clock_ret2 >= 2 then
				local DistanceFromCharacter_ret = m_Library.LocalPlayer:DistanceFromCharacter(t_Egg.CFrame.p);
				if DistanceFromCharacter_ret >= 300 then
					wait((math.clamp(DistanceFromCharacter_ret / 600, 0.5, 3)));
				else
					os_clock_ret2 = os.clock();
				end
			end
			local v13 = os.clock() - os_clock_ret + NextNumber_ret;
			t_Egg.CFrame = t_CFrame * CFrame.new(0, math.sin(v13 * 1) / 2, 0) * CFrame.Angles(0, v13, 0);
			m_Library.RenderStepped();
		end
	end);
	coroutine_wrap_ret();
	local coroutine_wrap_ret2 = coroutine.wrap(function() -- Line: 188
		--[[
			Upvalues:
				[1] = m_Library
				[2] = p1
				[3] = bool2
				[4] = Show
				[5] = Hide
		--]]
		local _ = m_Library.Save.Get();
		while p1 and p1:FindFirstChild("Egg") do
			local v14 = (p1.Egg and m_Library.LocalPlayer:DistanceFromCharacter(p1.Egg.CFrame.p) or 999) <= 20;
			local _ = p1.Egg:FindFirstChild("EggInfo");
			if v14 and not bool2 then
				bool2 = true;
				Show();
			elseif bool2 and not v14 then
				bool2 = false;
				Hide();
			end
			m_Library.Heartbeat(5);
		end
	end);
	coroutine_wrap_ret2();
end
function DisableScavengerEgg(p2) -- Line: 210
	for _, descendant1 in ipairs(p2:GetDescendants()) do
		if descendant1:isA("ParticleEmitter") then
			descendant1.Enabled = false;
		end
		if descendant1:isA("SurfaceLight") then
			descendant1.Enabled = false;
		end
		if not descendant1:isA("BasePart") then continue end
		descendant1.Transparency = 1;
		descendant1.CanCollide = false;
	end
	p2.DescendantAdded:Connect(function(descendant) -- Line: 224
		if descendant:isA("ParticleEmitter") then
			descendant.Enabled = false;
		end
		if descendant:isA("SurfaceLight") then
			descendant.Enabled = false;
		end
		if descendant:isA("BasePart") then
			descendant.Transparency = 1;
			descendant.CanCollide = false;
		end
	end);
end
function EnableScavengerEgg(p3) -- Line: 238
	for _, descendant2 in ipairs(p3:GetDescendants()) do
		if descendant2:isA("ParticleEmitter") then
			descendant2.Enabled = true;
		end
		if descendant2:isA("SurfaceLight") then
			descendant2.Enabled = true;
		end
		if not descendant2:isA("BasePart") then continue end
		descendant2.Transparency = 0;
		descendant2.CanCollide = true;
	end
	p3.DescendantAdded:Connect(function(descendant2_0) -- Line: 252
		if descendant2_0:isA("ParticleEmitter") then
			descendant2_0.Enabled = true;
		end
		if descendant2_0:isA("SurfaceLight") then
			descendant2_0.Enabled = true;
		end
		if descendant2_0:isA("BasePart") then
			descendant2_0.Transparency = 0;
			descendant2_0.CanCollide = true;
		end
	end);
end
function ClearWorld() -- Line: 266
	--[[
		Upvalues:
			[1] = table1
			[2] = m_Library
	--]]
	for _, val3 in ipairs(table1) do
		val3();
	end
	table1 = {};
	local Map = m_Library.WorldCmds.GetMap();
	local Scavenger = Map:WaitForChild("Scavenger");
	for _, child4 in ipairs(Scavenger:GetChildren()) do
		DisableScavengerEgg(child4);
	end
	Scavenger.ChildAdded:Connect(function(child) -- Line: 279
		DisableScavengerEgg(child);
	end);
end
function LoadWorld() -- Line: 284
	--[[
		Upvalues:
			[1] = u1
			[2] = u2
			[3] = u3
			[4] = m_Library
			[5] = table1
	--]]
	if not u1 then
		u1, u2, u3 = m_Library.Network.Invoke("Get Scavenger Event Info");
		if not u1 or not u2 then return end
	end
	if not m_Library.Network.Invoke("Scavenger Hunt Active") then
		ClearWorld();
		return;
	end
	for _, val5 in ipairs(table1) do
		val5();
	end
	table1 = {};
	local Map2 = m_Library.WorldCmds.GetMap();
	local Scavenger2 = Map2:WaitForChild("Scavenger");
	for _, child6 in ipairs(Scavenger2:GetChildren()) do
		SetupScavengerEgg(child6);
	end
	Scavenger2.ChildAdded:Connect(function(child2) -- Line: 308
		SetupScavengerEgg(child2);
	end);
end
m_Library.Signal.Fired("World Changed"):Connect(LoadWorld);
m_Library.Network.Fired("Scavenger Hunt Started"):Connect(LoadWorld);
m_Library.Network.Fired("Scavenger Hunt Ended"):Connect(ClearWorld);
m_Library.Network.Fired("Scavenger Event Ready"):Connect(function(p4, p5, p6) -- Line: 321
	--[[
		Upvalues:
			[1] = u1
			[2] = u2
			[3] = u3
	--]]
	u1 = p4;
	u2 = p5;
	u3 = p6;
	LoadWorld();
end);
  -  Editar
  04:54:13.929    -  Editar
  04:54:13.929  ----- [2802] StarterPlayer.StarterPlayerScripts.Scripts.Game.Cat Throne Return Door -----  -  Editar
  04:54:13.929  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local FindFirstChild_ret = nil;
local _ = m_Library.Shared.IsHardcore;
function Teleport() -- Line: 18
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local FindFirstChild_ret2 = m_Library.WorldCmds.GetMap().Teleports:FindFirstChild("Dog Park");
	if FindFirstChild_ret2 then
		local v1 = m_Library.Player.Character();
		local v2 = m_Library.Player.Humanoid();
		m_Library.GUIFX.Flash(0.25, 0.75, Color3.new(255, 255, 255));
		m_Library.Variables.Teleporting = true;
		m_Library.Signal.Fire("Teleporting");
		m_Library.Functions.Wait(0.25);
		v1:SetPrimaryPartCFrame(FindFirstChild_ret2.CFrame + Vector3.new(0, v2.HipHeight + 1, 0));
		m_Library.Audio.Play("rbxassetid://7210953148", script, 1, 1);
		m_Library.Network.Fire("Performed Teleport", "Dog Park");
		m_Library.Functions.Wait(0.25);
		m_Library.Variables.Teleporting = false;
		return;
	end
	m_Library.Message.New("Something went wrong. Try again!");
end
function Setup() -- Line: 40
	--[[
		Upvalues:
			[1] = m_Library
			[2] = FindFirstChild_ret
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		FindFirstChild_ret = Map.Interactive:FindFirstChild("Throne Return Door");
		if FindFirstChild_ret then
			local v3, _ = m_Library.Interact.Add(FindFirstChild_ret.PrimaryPart, {dist = 12});
			if v3 then
				v3:Connect(function() -- Line: 47
					Teleport();
				end);
			end
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function(p1) -- Line: 56
	if p1 == "Cat" then
		Setup();
	end
end);
  -  Editar
  04:54:13.929    -  Editar
  04:54:13.929  ----- [2803] StarterPlayer.StarterPlayerScripts.Scripts.Game.Coins -----  -  Editar
  04:54:13.930  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local table1 = {
	normal = "rbxassetid://6958713639",
	good = "rbxassetid://6958713793",
	great = "rbxassetid://6958713747",
	special = "rbxassetid://6958713692",
	easteregg = "rbxassetid://9395255388",
	fruit = "rbxassetid://12970061125"
};
local table2 = {
	coin = {
		"rbxassetid://6422233047",
		"rbxassetid://6422233117"
	},
	cardboard_coin = {
		"rbxassetid://12151937071",
		"rbxassetid://12151936879",
		"rbxassetid://12151936744"
	},
	chest = {
		"rbxassetid://6422233314",
		"rbxassetid://6422233259",
		"rbxassetid://6422233191"
	},
	cardboard_chest = {"rbxassetid://12151937223"},
	safe = {"rbxassetid://6958718789"},
	vault = {"rbxassetid://6958718747"},
	special = {"rbxassetid://7029284027"},
	luckyblock = {"rbxassetid://11648888186"}
};
local _ = {
	[1] = "rbxassetid://7004964385",
	[2] = "rbxassetid://7004964341",
	[3] = "rbxassetid://7004964463"
};
local table3 = {
	"chest",
	"vault",
	"safe"
};
local table4 = {
	6485234572,
	6485234808,
	6485234993
};
local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local m_Areas = require(game.ReplicatedStorage.Library.Modules.Areas);
local Coins = m_Library.Things:WaitForChild("Coins");
local Random_new_ret = Random.new();
local _ = m_Library.Player.Camera();
local t_CoinGrabDistance = m_Library.Settings.CoinGrabDistance;
local _ = m_Library.Shared.IsHardcore;
local u1 = {};
local table5 = {};
local table6 = {};
local table7 = {
	[1] = "Default",
	[2] = "Mid",
	[3] = "Low",
	[4] = "Default"
};
function UpdateCoin(p1) -- Line: 59
	--[[
		Upvalues:
			[1] = u1
			[2] = Coins
			[3] = m_Library
			[4] = m_Areas
			[5] = table7
			[6] = table4
			[7] = table5
			[8] = t_CoinGrabDistance
			[9] = table3
			[10] = table2
	--]]
	debug.profilebegin("Coins.Updatecoin");
	local v1 = u1[p1];
	if not v1 then return end
	local FindFirstChild_ret = Coins:FindFirstChild(p1);
	if not FindFirstChild_ret then return end
	assert(typeof(p1) == "string");
	local v2 = FindFirstChild_ret:GetAttribute("Frame") + 1;
	local POS = FindFirstChild_ret:FindFirstChild("POS");
	local u2 = FindFirstChild_ret:FindFirstChild("Coin");
	local Pets = FindFirstChild_ret:FindFirstChild("Pets");
	local t_h = v1.h;
	local t_p = v1.p;
	local t_n = v1.n;
	local t_a = v1.a;
	local _ = v1.w;
	local t_pets = v1.pets;
	local _ = v1.r;
	local u3 = m_Library.Directory.Coins[t_n];
	local t_mh = v1.mh;
	FindFirstChild_ret:SetAttribute("Area", t_a);
	FindFirstChild_ret:SetAttribute("Health", t_h);
	FindFirstChild_ret:SetAttribute("Frame", v2);
	local Attribute = FindFirstChild_ret:GetAttribute("ModelStage");
	local t_modelHasStages = u3.modelHasStages;
	if t_modelHasStages and (FindFirstChild_ret:GetAttribute("HasLanded") or v2 == 1) then
		FindFirstChild_ret:SetAttribute("ModelStage", table7[m_Areas.ComputeCoinStage(u3, v1, t_h)]);
	elseif not FindFirstChild_ret:GetAttribute("HasLanded") or not t_modelHasStages then
		FindFirstChild_ret:SetAttribute("ModelStage", "Default");
	end
	local Attribute2 = FindFirstChild_ret:GetAttribute("ModelStage");
	if Attribute ~= Attribute2 then
		local v12 = u2 == nil;
		if not v12 then
			local _ = Attribute2 == "Low";
			m_Library.Audio.Play(table4, POS.CFrame.Position, 1, 0.66, 325);
			CoinDamageAnimation(p1, false);
		end
		if u2 then
			m_Library.Functions.AddDebris(u2, 0);
		end
		local v13 = table5[p1];
		if v13 then
			table5[p1] = nil;
			v13();
		end
		u2 = (Attribute2 == "Default" and u3.model or Attribute2 == "Mid" and u3.modelMidHealth or Attribute2 == "Low" and u3.modelLowHealth or false):Clone();
		u2.Name = "Coin";
		if t_n ~= "Ice Block" then
			u2.Color = Color3.new(1, 1, 1);
		end
		if v12 and t_n == "Massive Comet" then
			local v18 = m_Library.Functions.Scaler();
			v18(u2, 5);
		end
		if u3.textureID ~= "" and u3.textureID ~= nil then
			u2.TextureID = u3.textureID;
		end
		u2.CastShadow = false;
		u2.Anchored = true;
		u2.CollisionGroup = "Coins";
		local Pivot = u2:GetPivot();
		for _, child8 in ipairs(u2:GetChildren()) do
			if not child8:IsA("BasePart") then continue end
			local ToObjectSpace_ret2 = Pivot:ToObjectSpace(child8:GetPivot());
			child8:SetAttribute("RelativeCFrame", ToObjectSpace_ret2);
			child8.CastShadow = false;
			child8.Anchored = true;
			child8.CollisionGroup = "Coins";
		end
		local ToObjectSpace_ret = u2.CFrame:ToObjectSpace(u3.model.CFrame);
		u2.CFrame = POS.CFrame * ToObjectSpace_ret:Inverse();
		local Pivot2 = u2:GetPivot();
		for _, child9 in ipairs(u2:GetChildren()) do
			if not child9:IsA("BasePart") then continue end
			local Attribute3 = child9:GetAttribute("RelativeCFrame");
			if not Attribute3 then continue end
			child9:PivotTo(Pivot2:ToWorldSpace(Attribute3));
		end
		local ClickDetector = Instance.new("ClickDetector");
		ClickDetector.MaxActivationDistance = t_CoinGrabDistance;
		ClickDetector.CursorIcon = "rbxassetid://7029597423";
		ClickDetector.Parent = u2;
		if u2:GetAttribute("Comet") then
			u2.Position = t_p + Vector3.new(0, u2.Size.Y / 2 - u2.Size.Y / 3, 0);
			u2.Rotation = u3.model.Rotation;
			m_Library.Signal.Fire("Comets: Setup Breakable", p1, u2);
		elseif t_n == "Giant Rainbow Chest" then
			m_Library.Signal.Fire("Rainbow: Setup Breakable", p1, u2);
		elseif t_n == "Kawaii Alley Chest" then
			m_Library.Signal.Fire("Kawaii Alley: Setup Breakable", p1, u2);
		end
		u2.Parent = FindFirstChild_ret;
	end
	for _, val1 in ipairs(t_pets) do
		local FindFirstChild_ret4 = Pets:FindFirstChild(val1);
		if not FindFirstChild_ret4 then
			local v19, v20 = m_Library.PetCmds.Get(val1);
			if not v19 or not v20 then continue end
			local Folder = Instance.new("Folder");
			Folder.Name = val1;
			Folder:SetAttribute("Owner", v20.Name);
			Folder:SetAttribute("Dir", v19.id);
			Folder:SetAttribute("ID", v19.uid);
			Folder:SetAttribute("Tick", v2);
			Folder.Parent = Pets;
			continue;
		end
		FindFirstChild_ret4:SetAttribute("Tick", v2);
	end
	for _, child2 in ipairs(Pets:GetChildren()) do
		if child2:GetAttribute("Tick") == v2 then continue end
		m_Library.Functions.AddDebris(child2, 0);
	end
	local bool1 = false;
	for _, child3 in ipairs(Pets:GetChildren()) do
		if child3:GetAttribute("Owner") ~= m_Library.LocalPlayer.Name then continue end
		bool1 = true;
		break;
	end
	if not FindFirstChild_ret:GetAttribute("HasLanded") and not FindFirstChild_ret:GetAttribute("IsFalling") then
		FindFirstChild_ret:SetAttribute("IsFalling", true);
		local DistanceFromCharacter_ret = m_Library.LocalPlayer:DistanceFromCharacter(POS.CFrame.Position);
		local Attribute4 = u2:GetAttribute("InstantLand");
		if DistanceFromCharacter_ret <= 400 and not Attribute4 then
			local t_CFrame = POS.CFrame;
			local u8 = t_CFrame * CFrame.new(0, 60, 0);
			u2.CanCollide = false;
			u2.CFrame = u8;
			local Pivot3 = u2:GetPivot();
			for _, child13 in ipairs(u2:GetChildren()) do
				if not child13:IsA("BasePart") then continue end
				child13.CanCollide = false;
				local Attribute6 = child13:GetAttribute("RelativeCFrame");
				if not Attribute6 then continue end
				child13:PivotTo(Pivot3:ToWorldSpace(Attribute6));
			end
			local num1 = 0.9;
			local u9 = Enum.EasingStyle.Bounce;
			local t_Out = Enum.EasingDirection.Out;
			if m_Library.Functions.SearchArray(table3, u3.landSound) then
				num1 = 0.2;
				u9 = Enum.EasingStyle.Linear;
			end
			m_Library.Functions.RenderStepped(function(_, p25) -- Line: 300
				--[[
					Upvalues:
						[1] = m_Library
						[2] = u9
						[3] = t_Out
						[4] = u2
						[5] = u8
						[6] = t_CFrame
				--]]
				local v36 = m_Library.Functions.Easing(p25, u9, t_Out);
				u2.CFrame = u8:Lerp(t_CFrame, v36);
				local Pivot4 = u2:GetPivot();
				for _, child15 in ipairs(u2:GetChildren()) do
					if not child15:IsA("BasePart") then continue end
					local Attribute5 = child15:GetAttribute("RelativeCFrame");
					if not Attribute5 then continue end
					child15:PivotTo(Pivot4:ToWorldSpace(Attribute5));
				end
			end, num1, true);
			local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 319
				--[[
					Upvalues:
						[1] = u2
						[2] = t_CFrame
						[3] = table2
						[4] = u3
						[5] = m_Library
						[6] = FindFirstChild_ret
				--]]
				local v37 = false;
				while u2 and u2.Parent and not v37 do
					v37 = u2.Position.Y - u2.Size.Y / 2 - t_CFrame.Y <= 2;
					if v37 then
						if table2[u3.landSound] then
							local v40 = u3.landSound == "chest" and true or u3.landSound == "safe" and true or u3.landSound == "vault";
							m_Library.Audio.Play(table2[u3.landSound], u2.CFrame.Position, 1, v40 and 0.5 or 0.15, v40 and 600 or 300);
						end
						u2.CanCollide = true;
						for _, child16 in ipairs(u2:GetChildren()) do
							if not child16:IsA("BasePart") then continue end
							child16.CanCollide = true;
						end
						FindFirstChild_ret:SetAttribute("HasLanded", true);
						FindFirstChild_ret:SetAttribute("IsFalling", false);
						if u3.grinchPetId then
							local Grinch = FindFirstChild_ret:FindFirstChild("Coin"):FindFirstChild("Grinch");
							Grinch.Anchored = false;
							m_Library.Functions.Animation("7019175615", Grinch, 1);
						end
					end
					m_Library.Heartbeat(2);
				end
			end);
			coroutine_wrap_ret();
		else
			FindFirstChild_ret:SetAttribute("HasLanded", true);
			FindFirstChild_ret:SetAttribute("IsFalling", false);
		end
	end
	local HUD = POS:FindFirstChild("HUD");
	if #t_pets > 0 and bool1 then
		local math_clamp_ret = math.clamp(t_h / t_mh, 0, 1);
		local v17;
		if not HUD then
			v17 = m_Library.Assets.Billboards:WaitForChild("Progress"):Clone();
			v17.Name = "HUD";
			v17.StudsOffset = Vector3.new(0, u2.Size.Y / 2 + 3, 0);
			local math_clamp_ret2 = math.clamp(math.max(u2.Size.X, u2.Size.Z) / 4.5, 1, 12);
			local ProgressText = v17:FindFirstChild("ProgressText");
			if ProgressText then
				local UIStroke = ProgressText:FindFirstChildOfClass("UIStroke");
				if UIStroke then
					UIStroke.Thickness = UIStroke.Thickness + math_clamp_ret2 / 3.5;
				end
			end
			v17.Size = UDim2.new(v17.Size.X.Scale * math_clamp_ret2, v17.Size.X.Offset, v17.Size.Y.Scale * math_clamp_ret2, v17.Size.Y.Offset);
			v17.Parent = POS;
		else
			v17 = HUD;
		end
		local ProgressText2 = v17:FindFirstChild("ProgressText");
		if ProgressText2 then
			ProgressText2.Text = m_Library.Functions.NumberShorten(t_h, false);
		end
		v17.Adornee = u2;
		local Progress = v17:FindFirstChild("Progress");
		if Progress then
			local Health = Progress:FindFirstChild("Health");
			if Health then
				local udim2 = UDim2.new(math_clamp_ret, 0, 1, 0);
				if udim2.X.Scale == 1 then
					Health.Size = udim2;
				else
					m_Library.Functions.Tween(Health, {Size = udim2}, {
						0.125,
						"Expo",
						"Out"
					});
				end
				if t_modelHasStages then
					if math_clamp_ret <= 1 / 3 then
						Health.BackgroundColor3 = Color3.fromRGB(252, 75, 75);
					elseif math_clamp_ret <= 2 / 3 then
						Health.BackgroundColor3 = Color3.fromRGB(252, 140, 60);
					else
						Health.BackgroundColor3 = Color3.fromRGB(59, 177, 252);
					end
				end
			end
		end
		if not table5[p1] then
			table5[p1] = m_Library.WorldFX.QuestGlow(u2, 1, 0.85);
		end
		local t_b2 = v1.b;
		for key10, val10 in pairs(m_Areas.SPECIAL_BONUS_TYPES) do
			local v21 = t_b2 and m_Areas.CalcSpecialBonusMultiplier(t_b2, val10);
			local v22 = "SpecialBonusText" .. key10;
			local FindFirstChild_ret3 = v17:FindFirstChild(v22);
			if not v21 then
				if not FindFirstChild_ret3 then continue end
				m_Library.Functions.AddDebris(FindFirstChild_ret3, 0);
				continue;
			end
			local v34;
			if not FindFirstChild_ret3 then
				v34 = m_Library.Assets.Other:WaitForChild("Coin Special Bonuses"):WaitForChild(key10):Clone();
				v34.Name = v22;
				v34.Parent = v17;
			else
				v34 = FindFirstChild_ret3;
			end
			v34.Text = string.format("* %gx %s! *", v21, key10);
		end
	elseif HUD then
		m_Library.Functions.AddDebris(HUD, 0);
		local v23 = table5[p1];
		if v23 then
			v23();
			table5[p1] = nil;
		end
	end
	if u2 then
		local t_b = v1.b;
		for key11, val11 in pairs(m_Areas.SPECIAL_BONUS_TYPES) do
			local v24 = t_b and m_Areas.CalcSpecialBonusMultiplier(t_b, val11);
			local v25 = "SpecialBonusParticle" .. key11;
			local FindFirstChild_ret2 = u2:FindFirstChild(v25);
			if not v24 then
				if not FindFirstChild_ret2 then continue end
				m_Library.Functions.AddDebris(FindFirstChild_ret2, 0);
				continue;
			end
			local v35;
			if not FindFirstChild_ret2 then
				v35 = m_Library.Assets.Particles:WaitForChild("Coin Special Bonuses"):WaitForChild(key11):Clone();
				v35.Name = v25;
				v35:SetAttribute("OriginalRate", v35.Rate);
				v35.Parent = u2;
			else
				v35 = FindFirstChild_ret2;
			end
			v35.Rate = math.max(1, (math.ceil(v35:GetAttribute("OriginalRate") * v24 / 3)));
		end
	end
	debug.profileend();
end
function AddCoin(p2) -- Line: 481
	--[[
		Upvalues:
			[1] = table6
			[2] = u1
			[3] = m_Library
			[4] = Coins
	--]]
	assert(typeof(p2) == "string");
	if table6[p2] then return end
	local v3 = u1[p2];
	if not v3 then
		m_Library.Print("Coin ID [bold]" .. p2 .. "[/bold] doesn't exist", true);
		return;
	end
	if Coins:FindFirstChild(p2) then
		m_Library.Print("Coin ID [bold]" .. p2 .. "[/bold] is already rendered", true);
		return;
	end
	debug.profilebegin("Coins.AddCoin");
	local t_h2 = v3.h;
	local t_p2 = v3.p;
	local t_r = v3.r;
	local t_n2 = v3.n;
	local _ = v3.w;
	local v4 = m_Library.Directory.Coins[t_n2];
	local Folder2 = Instance.new("Folder");
	Folder2.Name = p2;
	local POS2 = Instance.new("Part");
	POS2.Transparency = 1;
	POS2.Anchored = true;
	POS2.CanCollide = false;
	POS2.Size = Vector3.new();
	POS2.CFrame = CFrame.new(t_p2) * CFrame.Angles(0, t_r, 0) + Vector3.new(0, v4.model.Size.Y / 2, 0) - Vector3.new(0, 0.075, 0);
	POS2.Name = "POS";
	POS2.Parent = Folder2;
	Folder2:SetAttribute("ID", p2);
	Folder2:SetAttribute("Health", t_h2);
	Folder2:SetAttribute("Name", t_n2);
	Folder2:SetAttribute("ModelStage", "");
	Folder2:SetAttribute("IsFalling", false);
	Folder2:SetAttribute("HasLanded", false);
	Folder2:SetAttribute("Frame", 0);
	local Pets2 = Instance.new("Folder");
	Pets2.Name = "Pets";
	Pets2.Parent = Folder2;
	Folder2.Parent = Coins;
	UpdateCoin(p2);
	debug.profileend();
end
function RemoveCoin(p3, p4, p5) -- Line: 546
	--[[
		Upvalues:
			[1] = Coins
			[2] = table6
			[3] = u1
			[4] = m_Areas
			[5] = m_Library
			[6] = table4
			[7] = table1
			[8] = Random_new_ret
	--]]
	assert(typeof(p3) == "string");
	debug.profilebegin("Coins.RemoveCoin");
	local FindFirstChild_ret5 = Coins:FindFirstChild(p3);
	if FindFirstChild_ret5 then
		table6[p3] = true;
		local v14 = u1[p3];
		if v14 and not p4 then
			local v26 = 1;
			local v27 = 1;
			local v28 = 1;
			local t_b3 = v14.b;
			if t_b3 then
				for _, val14 in pairs(m_Areas.SPECIAL_BONUS_TYPES) do
					local v38 = m_Areas.CalcSpecialBonusMultiplier(t_b3, val14);
					if not v38 then continue end
					local v39 = math.log(v38) * 0.333691 + 0.81863;
					v26 = v26 * v39;
					v27 = v27 * v39;
				end
			end
			local v29 = m_Library.Directory.Coins[v14.n];
			if v29.breakSoundMultiplier then
				v28 = v28 * v29.breakSoundMultiplier;
			end
			local POS3 = FindFirstChild_ret5:FindFirstChild("POS");
			if POS3 then
				local t_Position = POS3.CFrame.Position;
				m_Library.Audio.Play(table4, t_Position, 1.2, v26 * 0.66, 325);
				m_Library.Audio.Play(table1[v29.breakSound], t_Position, Random_new_ret:NextNumber(0.95, 1.05), v26 * 0.75 * v28, 325);
			end
			CoinDamageAnimation(p3, true);
		end
		if p5 and p5 > 0 then
			local u10 = m_Library.Functions.Transparency();
			local v30 = m_Library.Functions.RenderStepped(function(_, p26) -- Line: 608
				--[[
					Upvalues:
						[1] = u10
						[2] = FindFirstChild_ret5
				--]]
				u10(FindFirstChild_ret5, 1, p26);
			end, p5, true);
			v30:Then(function() -- Line: 610
				--[[
					Upvalues:
						[1] = m_Library
						[2] = FindFirstChild_ret5
				--]]
				m_Library.Functions.AddDebris(FindFirstChild_ret5, 0);
			end);
		else
			m_Library.Functions.AddDebris(FindFirstChild_ret5, 0);
		end
	end
	u1[p3] = nil;
	debug.profileend();
end
function CoinDamageAnimation(p6, p7) -- Line: 624
	--[[
		Upvalues:
			[1] = Coins
			[2] = u1
			[3] = m_Areas
			[4] = m_Library
			[5] = Random_new_ret
	--]]
	local FindFirstChild_ret6 = Coins:FindFirstChild(p6);
	if not FindFirstChild_ret6 then return end
	local POS4 = FindFirstChild_ret6:FindFirstChild("POS");
	if not POS4 then return end
	local Coin = FindFirstChild_ret6:FindFirstChild("Coin");
	if not Coin then return end
	local v5 = u1[p6];
	if not v5 then
		warn("WHY?");
		return;
	end
	debug.profilebegin("Coins.CoinDamageAnimation");
	local v6 = 1;
	local u4 = 1;
	local t_b4 = v5.b;
	if t_b4 then
		for _, val12 in pairs(m_Areas.SPECIAL_BONUS_TYPES) do
			local v31 = m_Areas.CalcSpecialBonusMultiplier(t_b4, val12);
			if not v31 then continue end
			local v32 = math.log(v31) * 0.333691 + 0.81863;
			v6 = v6 * v32;
			u4 = u4 * v32;
		end
	end
	local function _(p23) -- Anonymous function at line 661
		--[[
			Upvalues:
				[1] = u4
		--]]
		return math.ceil(p23 * u4);
	end
	local function _(p24) -- Anonymous function at line 662
		--[[
			Upvalues:
				[1] = u4
		--]]
		return p24 * u4;
	end
	local t_CFrame2 = POS4.CFrame;
	local v7, v8 = m_Library.Functions.CreateParticleHost(t_CFrame2);
	local math_max_ret = math.max((Coin.Size.Magnitude / 20) ^ 0.9, 1);
	local Children = m_Library.Assets.Particles:FindFirstChild(p7 and "Coin Explode" or "Coin Damage"):GetChildren();
	for _, val4 in ipairs(Children) do
		local Clone_ret2 = val4:Clone();
		m_Library.Functions.ScaleParticle(Clone_ret2, math_max_ret);
		Clone_ret2.Parent = v8;
		if Clone_ret2.Name == "Sparkles" then
			Clone_ret2:Emit((math.ceil(u4 * 15)));
			continue;
		end
		Clone_ret2:Emit((math.ceil(u4 * 2)));
	end
	local num2 = 25;
	local num3 = 25;
	local num4 = 40;
	local math_ceil_ret = math.ceil(u4 * 10);
	local math_ceil_ret2 = math.ceil(num2 * u4);
	local math_ceil_ret3 = math.ceil(num3 * u4);
	local math_ceil_ret4 = math.ceil(num4 * u4);
	local Clone_ret = m_Library.Assets.Particles:FindFirstChild("New Coin Particle"):Clone();
	Clone_ret.Parent = v8;
	Clone_ret:Emit(Random_new_ret:NextInteger(math_ceil_ret, math_ceil_ret2));
	if p7 then
		local v15 = u4 * 120;
		Clone_ret.Rate = v15;
		Clone_ret.Enabled = true;
		task.delay(Random_new_ret:NextInteger(math_ceil_ret3, math_ceil_ret4) / v15, function() -- Line: 705
			--[[
				Upvalues:
					[1] = Clone_ret
			--]]
			Clone_ret.Enabled = false;
		end);
	end
	m_Library.Functions.AddDebris(v7, 5);
	debug.profileend();
end
function PetDamageAnimation(p8, _, p9, _) -- Line: 753
	--[[
		Upvalues:
			[1] = Coins
			[2] = Random_new_ret
			[3] = m_Library
	--]]
	debug.profilebegin("Coins.PetDamageAnimation");
	local FindFirstChild_ret7 = Coins:FindFirstChild(p8);
	if FindFirstChild_ret7 and p9 == true then
		local Coin2 = FindFirstChild_ret7:FindFirstChild("Coin");
		if Coin2 then
			local v33 = Coin2.Size / 2;
			local Attachment = Instance.new("Attachment");
			Attachment.Position = Vector3.new(Random_new_ret:NextNumber(-v33.X, v33.X), Random_new_ret:NextNumber(-v33.Y, v33.Y), Random_new_ret:NextNumber(-v33.Z, v33.Z));
			local Clone_ret3 = m_Library.Assets.Particles:FindFirstChild("Pet Damage"):Clone();
			Clone_ret3.ZOffset = math.max(v33.X, v33.Z);
			Clone_ret3.Parent = Attachment;
			Clone_ret3:Emit(1);
			Attachment.Parent = Coin2;
			m_Library.Functions.AddDebris(Attachment, 1);
		end
	end
	debug.profileend();
end
function UpdateComets() -- Line: 793
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
			[3] = Coins
	--]]
	local v9 = m_Library.WorldCmds.Get();
	for key5, val5 in pairs(u1) do
		if Coins:FindFirstChild(key5) then continue end
		local t_h3 = val5.h;
		if val5.n ~= "Massive Comet" and val5.n ~= "Mini Comet" and val5.n ~= "Giant Rainbow Chest" and val5.n ~= "Kawaii Alley Chest" or t_h3 <= 0 or v9 ~= val5.w then continue end
		AddCoin(key5);
	end
end
function UpdateCoins() -- Line: 808
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
			[3] = Coins
	--]]
	debug.profilebegin("Coins.UpdateCoins");
	local v10 = m_Library.WorldCmds.Get();
	for key6, val6 in pairs(u1) do
		if Coins:FindFirstChild(key6) or val6.h <= 0 or v10 ~= val6.w then continue end
		debug.profileend();
		m_Library.Functions.Wait(0.03);
		debug.profilebegin("Coins.UpdateCoins");
		AddCoin(key6);
	end
	for _, child7 in ipairs(Coins:GetChildren()) do
		local t_Name = child7.Name;
		local v16 = u1[t_Name];
		if v16 and v10 == v16.w then continue end
		RemoveCoin(t_Name);
	end
	debug.profileend();
end
function InvokeCoins() -- Line: 837
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	local v11 = m_Library.Network.Invoke("Get Coins");
	if v11 then
		u1 = v11;
		return;
	end
	m_Library.Print("Coins returned as nil", true);
end
local coroutine_wrap_ret2 = coroutine.wrap(function() -- Line: 851
	--[[
		Upvalues:
			[1] = m_Library
			[2] = Coins
	--]]
	wait(1);
	if m_Library.Variables.Mobile then return end
	local u5 = m_Library.Player.Mouse();
	local u6 = nil;
	local u7 = nil;
	game:GetService("RunService").RenderStepped:Connect(function(_) -- Line: 862
		--[[
			Upvalues:
				[1] = u5
				[2] = Coins
				[3] = u6
				[4] = u7
				[5] = m_Library
		--]]
		debug.profilebegin("Coins.Mouse");
		local t_Target = u5.Target;
		if t_Target and t_Target:IsDescendantOf(Coins) and t_Target.Parent and t_Target.Parent:GetAttribute("ID") and not t_Target:GetAttribute("PreventClick") then
			if u6 ~= t_Target then
				if u7 then
					u7();
				end
				local t_Parent = t_Target.Parent;
				if t_Parent then
					u7 = m_Library.WorldFX.QuestGlow(t_Parent, 1.5, 0.5, true);
				end
			end
			u6 = t_Target;
		else
			u6 = nil;
			if u7 then
				u7();
			end
		end
		debug.profileend();
	end);
end);
coroutine_wrap_ret2();
m_Library.Network.Fired("Update Coin Pets"):Connect(function(p10, p11) -- Line: 892
	--[[
		Upvalues:
			[1] = u1
	--]]
	if u1[p10] then
		u1[p10].pets = p11;
		UpdateCoin(p10);
	end
end);
m_Library.Network.Fired("Update Coin Health"):Connect(function(p12, p13) -- Line: 900
	--[[
		Upvalues:
			[1] = u1
	--]]
	if u1[p12] then
		u1[p12].h = p13;
		UpdateCoin(p12);
	end
end);
m_Library.Network.Fired("Update Coin Special Bonus"):Connect(function(p14, p15) -- Line: 908
	--[[
		Upvalues:
			[1] = u1
	--]]
	if u1[p14] then
		u1[p14].b = p15;
		UpdateCoin(p14);
	end
end);
m_Library.Network.Fired("Remove Coin"):Connect(function(p16, p17, p18) -- Line: 916
	--[[
		Upvalues:
			[1] = u1
	--]]
	if u1[p16] then
		RemoveCoin(p16, p17, p18);
	end
end);
m_Library.Network.Fired("Damage Coin"):Connect(function(p19, p20, p21, p22) -- Line: 923
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	p22 = p22 or m_Library.LocalPlayer;
	if u1[p19] then
		if p22 ~= m_Library.LocalPlayer then return end
		PetDamageAnimation(p19, p20, p21, p22);
	end
end);
while true do
	if not m_Library.WorldCmds.HasLoaded() or not m_Library.LocalPlayer:FindFirstChild("__LOADED") then
		m_Library.RenderStepped();
		continue;
	end
	pcall(function() -- Line: 942
		InvokeCoins();
		UpdateComets();
		UpdateCoins();
	end);
	wait(2);
end
  -  Editar
  04:54:13.930    -  Editar
  04:54:13.930  ----- [2804] StarterPlayer.StarterPlayerScripts.Scripts.Game.Tutorial -----  -  Editar
  04:54:13.930  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_cost = m_Library.Directory.Eggs["Cracked Egg"].cost;
function Finished() -- Line: 25
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.Signal.Fire("Notification", "Nice! You can afford your first egg! Go buy it!", {
		color = Color3.fromRGB(255, 243, 62),
		time = 7
	});
	m_Library.Signal.Fire("Fireworks Animation");
end
function Progress() -- Line: 31
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_cost
	--]]
	local v1 = m_Library.Save.Get();
	if not v1 then return end
	local t_TutorialProgress = v1.TutorialProgress;
	if t_TutorialProgress < 100 then
		m_Library.Signal.Fire("Notification", "(" .. t_TutorialProgress .. "%) Save up " .. t_cost .. " Coins");
	end
end
m_Library.Signal.Fired("Stat Changed"):Connect(function(p1) -- Line: 44
	if p1 == "TutorialProgress" then
		Progress();
	end
end);
m_Library.Network.Fired("Finished Tutorial"):Connect(function() -- Line: 51
	Finished();
end);
  -  Editar
  04:54:13.930    -  Editar
  04:54:13.930  ----- [2805] StarterPlayer.StarterPlayerScripts.Scripts.Game.Auto Hatch -----  -  Editar
  04:54:13.930  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_ID = m_Library.Directory.Gamepasses["Auto Hatch"].ID;
function AttemptHatch() -- Line: 17
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v1 = m_Library.Save.Get();
	if not v1 then return end
	local t_AutoHatchEggId = m_Library.Variables.AutoHatchEggId;
	if not t_AutoHatchEggId then return end
	local v2 = v1.AutoHatchSettings.TripleEggs or false;
	local v3 = v1.AutoHatchSettings.OctupleEggs or false;
	local v4, v5 = m_Library.Network.Invoke("Buy Egg", t_AutoHatchEggId, v2, v3);
	if not v4 then
		m_Library.Signal.Fire("Notification", "Failed to buy egg (" .. (v5 or "An error occurred") .. ")", {color = Color3.fromRGB(255, 46, 46)});
		if v1.AutoHatchSettings.StopOnFailure then
			m_Library.Variables.AutoHatchEnabled = false;
			m_Library.Variables.AutoHatchEggId = nil;
			m_Library.Signal.Fire("Notification", "Auto Hatch is now turned off", {color = Color3.fromRGB(255, 46, 46)});
		end
	end
end
function CanPerform() -- Line: 44
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_ID
	--]]
	if not m_Library.Gamepasses.Owns(t_ID) then return end
	if not m_Library.WorldCmds.CanDoAction() then return end
	return m_Library.Variables.AutoHatchEnabled;
end
task.spawn(function() -- Line: 56
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_ID
	--]]
	local bool1 = false;
	while true do
		if bool1 then return end
		if not m_Library.WorldCmds.CanDoAction() then
			m_Library.Heartbeat(5);
		else
			bool1 = true;
			if not m_Library.Gamepasses.Owns(t_ID) then return end
			local LocalPlayerTeleportData = m_Library.TeleportService:GetLocalPlayerTeleportData();
			if LocalPlayerTeleportData ~= nil then
				local t_AutoHatchEnabled = LocalPlayerTeleportData.AutoHatchEnabled;
				local t_AutoHatchEggId2 = LocalPlayerTeleportData.AutoHatchEggId;
				if t_AutoHatchEnabled ~= nil and typeof(t_AutoHatchEnabled) == "boolean" and t_AutoHatchEggId2 ~= nil and typeof(t_AutoHatchEggId2) == "string" then
					if not m_Library.Directory.Eggs[t_AutoHatchEggId2] then return end
					if not m_Library.Signal.Invoke("Can Continue Auto") then return end
					m_Library.Variables.AutoHatchEnabled = t_AutoHatchEnabled;
					m_Library.Variables.AutoHatchEggId = t_AutoHatchEggId2;
					AttemptHatch();
				end
			end
		end
	end
end);
while true do
	if CanPerform() then
		wait(0.75);
		if CanPerform() then
			AttemptHatch();
		end
	end
	m_Library.Heartbeat(5);
end
  -  Editar
  04:54:13.930    -  Editar
  04:54:13.930  ----- [2806] StarterPlayer.StarterPlayerScripts.Scripts.Game.Orbs -----  -  Editar
  04:54:13.930  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local table1 = {
	"rbxassetid://6980747874",
	"rbxassetid://6980747719",
	"rbxassetid://6980747831",
	"rbxassetid://6980747761"
};
local table2 = {
	"rbxassetid://6422183746",
	"rbxassetid://6422183796",
	"rbxassetid://6422183836",
	"rbxassetid://6422183697"
};
local table3 = {
	"rbxassetid://7139322725",
	"rbxassetid://7139322752",
	"rbxassetid://7139322637",
	"rbxassetid://7139322684"
};
local table4 = {
	"rbxassetid://6980747924",
	"rbxassetid://6980747977"
};
local table5 = {
	"rbxassetid://7805996163",
	"rbxassetid://7805996068"
};
local table6 = {
	"rbxassetid://7805995973",
	"rbxassetid://7805996231"
};
local table7 = {
	"rbxassetid://8269454300",
	"rbxassetid://8269454300"
};
local table8 = {
	"rbxassetid://8269454228",
	"rbxassetid://8269454359"
};
local table9 = {
	"rbxassetid://8269454300",
	"rbxassetid://8269454300"
};
local table10 = {
	"rbxassetid://8269454228",
	"rbxassetid://8269454359"
};
local table11 = {
	"rbxassetid://8269454300",
	"rbxassetid://8269454300"
};
local table12 = {
	"rbxassetid://8269454228",
	"rbxassetid://8269454359"
};
local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local Orbs = m_Library.Things:FindFirstChild("Orbs");
local _ = game:GetService("Debris");
local Random_new_ret = Random.new();
local u1 = 12;
local table13 = {};
local table14 = {};
local u2 = 0;
local table15 = {};
local u3 = 0;
local u4 = false;
game:GetService("RunService").Heartbeat:Connect(function(p1) -- Line: 66
	--[[
		Upvalues:
			[1] = table15
			[2] = u3
			[3] = m_Library
	--]]
	if #table15 > 0 then
		u3 = u3 + p1;
		if u3 >= 0.25 then
			u3 = 0;
			local v16 = table15;
			table15 = {};
			m_Library.Network.Fire("Claim Orbs", v16);
		end
	end
end);
function Collect(p2) -- Line: 79
	--[[
		Upvalues:
			[1] = table13
			[2] = m_Library
			[3] = table15
	--]]
	debug.profilebegin("Orbs.Collect");
	local v1 = table13[p2];
	local t_type = v1.type;
	local t_amount = v1.amount;
	RemoveOrb(p2);
	m_Library.WorldFX.AddCurrency(m_Library.Player.UpperTorso().CFrame.p, t_amount, t_type, true);
	QueueOrbSound(t_type);
	for _, val1 in ipairs(v1.ids) do
		table.insert(table15, val1);
	end
	debug.profileend();
end
function AddOrb(p3, p4) -- Line: 101
	--[[
		Upvalues:
			[1] = Orbs
			[2] = u4
			[3] = u2
			[4] = table13
			[5] = m_Library
			[6] = Random_new_ret
			[7] = table1
	--]]
	debug.profilebegin("Orbs.AddOrb.task");
	local t_type2 = p4.type;
	local t_am = p4.am;
	local t_pos = p4.pos;
	local t_extra = p4.extra;
	if Orbs:FindFirstChild(p3) then
		debug.profileend();
		return;
	end
	local Part = Instance.new("Part");
	Part.Transparency = 1;
	Part.Size = Vector3.new(0.5, 0.5, 0.5);
	Part.CFrame = CFrame.new(t_pos);
	Part.Anchored = false;
	Part.Name = p3;
	Part.CanQuery = false;
	Part.CanTouch = false;
	if u4 then
		Part.CanCollide = false;
	else
		Part.CanCollide = true;
		Part.CollisionGroup = "Orbs";
	end
	local table16 = {
		type = t_type2,
		amount = t_am,
		ids = {p3},
		spawnTick = u2,
		lastCheck = u2,
		lastActivity = u2,
		lastCombineCheck = nil
	};
	if t_extra and t_extra.PickupDistance then
		table16.pickupDistance = t_extra.PickupDistance;
	end
	table13[Part] = table16;
	local Clone_ret = m_Library.Assets.Billboards.Orb:Clone();
	Clone_ret.Item.Image = m_Library.Directory.Currency[t_type2].ImageTiny;
	Clone_ret.Parent = Part;
	debug.profileend();
	task.delay(math.random() * 0.25, function() -- Line: 149
		--[[
			Upvalues:
				[1] = t_extra
				[2] = Part
				[3] = Random_new_ret
				[4] = m_Library
				[5] = table1
				[6] = Orbs
		--]]
		debug.profilebegin("Orbs.AddOrb.finish");
		local v15 = t_extra and (t_extra.BlastRadius or 1) or 1;
		Part.Velocity = Vector3.new(Random_new_ret:NextNumber(-20, 20) * v15, 50, Random_new_ret:NextNumber(-20, 20) * v15);
		Part.RotVelocity = Vector3.new(Random_new_ret:NextNumber(-20, 20) * v15, Random_new_ret:NextNumber(-20, 20) * v15, Random_new_ret:NextNumber(-20, 20) * v15);
		task.spawn(function() -- Line: 160
			--[[
				Upvalues:
					[1] = m_Library
					[2] = table1
					[3] = Part
					[4] = Random_new_ret
			--]]
			m_Library.Audio.Play(table1, Part, Random_new_ret:NextNumber(0.95, 1.05), 0.4, 125);
		end);
		local BodyPosition = Instance.new("BodyPosition");
		BodyPosition.D = 50;
		BodyPosition.P = 0;
		BodyPosition.MaxForce = Vector3.new();
		BodyPosition.Parent = Part;
		Part.Parent = Orbs;
		debug.profileend();
	end);
end
function RemoveOrb(p5) -- Line: 177
	--[[
		Upvalues:
			[1] = Orbs
			[2] = table13
			[3] = m_Library
	--]]
	debug.profilebegin("Orbs.RemoveOrb");
	local v2 = typeof(p5) == "Instance" and p5 or Orbs:FindFirstChild(p5);
	if v2 and table13[v2] then
		table13[v2] = nil;
		m_Library.Functions.AddDebris(v2, 0);
	end
	debug.profileend();
end
function QueueOrbSound(p6) -- Line: 198
	--[[
		Upvalues:
			[1] = table14
	--]]
	if not table14[p6] then
		table14[p6] = 1;
		return;
	end
	local v3 = table14;
	v3[p6] = v3[p6] + 1;
end
function PlaySounds() -- Line: 207
	--[[
		Upvalues:
			[1] = table14
			[2] = m_Library
			[3] = table6
			[4] = Random_new_ret
			[5] = table8
			[6] = table10
			[7] = table12
			[8] = table3
			[9] = table4
			[10] = table5
			[11] = table7
			[12] = table9
			[13] = table11
			[14] = table2
	--]]
	for key2, val2 in pairs(table14) do
		if val2 >= 8 then
			if key2 == "Halloween Candy" then
				m_Library.Audio.Play(table6, script, Random_new_ret:NextNumber(0.95, 1.05), 0.45);
				continue;
			end
			if key2 == "Gingerbread" then
				m_Library.Audio.Play(table8, script, Random_new_ret:NextNumber(1.3, 1.4), 0.325);
				continue;
			end
			if key2 == "Valentine Hearts" then
				m_Library.Audio.Play(table10, script, Random_new_ret:NextNumber(1.8, 2), 0.325);
				continue;
			end
			if key2 == "Clover Coins" then
				m_Library.Audio.Play(table12, script, Random_new_ret:NextNumber(1.8, 2), 0.325);
				continue;
			end
			m_Library.Audio.Play(table3, script, Random_new_ret:NextNumber(0.95, 1.05), 0.45);
			continue;
		end
		if key2 == "Diamonds" then
			m_Library.Audio.Play(table4, script, Random_new_ret:NextNumber(0.95, 1.05), 0.45);
			continue;
		end
		if key2 == "Halloween Candy" then
			m_Library.Audio.Play(table5, script, Random_new_ret:NextNumber(0.95, 1.05), 0.45);
			continue;
		end
		if key2 == "Gingerbread" then
			m_Library.Audio.Play(table7, script, Random_new_ret:NextNumber(1.3, 1.4), 0.325);
			continue;
		end
		if key2 == "Valentine Hearts" then
			m_Library.Audio.Play(table9, script, Random_new_ret:NextNumber(1.8, 2), 0.325);
			continue;
		end
		if key2 == "Clover Coins" then
			m_Library.Audio.Play(table11, script, Random_new_ret:NextNumber(1.8, 2), 0.325);
			continue;
		end
		m_Library.Audio.Play(table2, script, Random_new_ret:NextNumber(0.95, 1.05), 0.4);
	end
	table14 = {};
end
local u5 = 0;
game:GetService("RunService").Heartbeat:Connect(function(p7) -- Line: 242
	--[[
		Upvalues:
			[1] = u5
	--]]
	u5 = u5 + p7;
	if u5 < 1 / 30 then return end
	u5 = 0;
	PlaySounds();
end);
function Combine(p8, p9) -- Line: 255
	--[[
		Upvalues:
			[1] = table13
	--]]
	debug.profilebegin("Orbs.Combine");
	local v4 = table13[p8];
	local v5 = table13[p9];
	v5.amount = v5.amount + v4.amount;
	for _, val3 in pairs(v4.ids) do
		table.insert(v5.ids, val3);
	end
	RemoveOrb(p8);
	debug.profileend();
end
function TryToCombine(p10) -- Line: 273
	--[[
		Upvalues:
			[1] = table13
			[2] = Orbs
	--]]
	debug.profilebegin("Orbs.TryToCombine");
	if p10 then
		local v12 = table13[p10];
		if v12 then
			local t_Position = p10.CFrame.Position;
			local Children = Orbs:GetChildren();
			for _, val6 in ipairs(Children) do
				local v17 = table13[val6];
				if not v17 or val6 == p10 or v12.type ~= v17.type or (val6.CFrame.p - t_Position).Magnitude > 5 then continue end
				Combine(p10, val6);
				break;
			end
		end
	end
	debug.profileend();
end
function GetClosestEntity(p11, p12) -- Line: 301
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	debug.profilebegin("Orbs.GetClosestEntity");
	local v6 = m_Library.Player.PrimaryPart();
	local v7 = m_Library.LocalPlayer:DistanceFromCharacter(p11 + Vector3.new(0, 2, 0));
	local v8 = v6;
	for _, val4 in ipairs(p12) do
		if not m_Library.Shared.HasPower(val4, "Magnet") then continue end
		local t_uid = val4.uid;
		local FindFirstChild_ret = m_Library.Things.Pets:FindFirstChild(t_uid);
		if not FindFirstChild_ret then continue end
		local t_Magnitude = (FindFirstChild_ret.CFrame.p - p11).Magnitude;
		if t_Magnitude >= v7 then continue end
		v7 = t_Magnitude;
		v8 = FindFirstChild_ret;
	end
	debug.profileend();
	return v7, v8;
end
function OrbLoop(p13) -- Line: 326
	--[[
		Upvalues:
			[1] = u2
			[2] = m_Library
			[3] = Orbs
			[4] = table13
			[5] = u1
			[6] = Random_new_ret
	--]]
	debug.profilebegin("Orbs.OrbLoop");
	u2 = u2 + p13;
	local _ = m_Library.LocalPlayer;
	local v9 = m_Library.Player.PrimaryPart();
	if not v9 then
		debug.profileend();
		return;
	end
	local Equipped = m_Library.PetCmds.GetEquipped();
	local Children2 = Orbs:GetChildren();
	local v10 = #Children2;
	for _, val5 in ipairs(Children2) do
		if not val5 then continue end
		local v13 = table13[val5];
		if not v13 or u2 - v13.lastCheck < 0.33 then continue end
		local BodyPosition2 = val5:FindFirstChildOfClass("BodyPosition");
		if not BodyPosition2 then continue end
		local GetClosestEntity_ret1, GetClosestEntity_ret2 = GetClosestEntity(val5.CFrame.Position, Equipped);
		if not GetClosestEntity_ret2 then continue end
		v13.lastActivity = u2;
		local v14 = v13.pickupDistance and v13.pickupDistance or u1;
		BodyPosition2.P = 1250 - math.clamp(GetClosestEntity_ret1 / v14, 0, 1) * 1250;
		BodyPosition2.MaxForce = Vector3.new(BodyPosition2.P, BodyPosition2.P, BodyPosition2.P);
		BodyPosition2.Position = GetClosestEntity_ret2.Position + GetClosestEntity_ret2.CFrame.LookVector - Vector3.new(0, 2, 0);
		if v14 + 5 > GetClosestEntity_ret1 then
			if GetClosestEntity_ret1 > 4 then continue end
			Collect(val5);
			continue;
		end
		v13.lastCheck = u2;
		if Random_new_ret:NextNumber() < 0.03 then
			val5.Velocity = val5.Velocity + Vector3.new(0, 30, 0);
		end
		if u2 - v13.spawnTick < 1.5 or v10 < 150 or v13.lastCombineCheck and u2 - v13.lastCombineCheck < 5 then continue end
		v13.lastCombineCheck = u2;
		TryToCombine(val5);
	end
	debug.profileend();
end
game:GetService("RunService").Stepped:Connect(function(p14, p15) -- Line: 409
	OrbLoop(p15);
end);
function UpdatePickupDistance() -- Line: 417
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u4
			[3] = u1
	--]]
	debug.profilebegin("Orbs.UpdatePickupDistance");
	local v11 = m_Library.Save.Get();
	if v11 then
		u4 = m_Library.Gamepasses.Owns(m_Library.Directory.Gamepasses.Magnet.ID);
		if u4 then
			u1 = math.huge;
		else
			u1 = (v11.Upgrades["Orb Pickup Distance"] or 0) * 10 + 12;
		end
	end
	debug.profileend();
end
m_Library.Signal.Fired("Stat Changed"):Connect(function(p16) -- Line: 433
	if p16 == "Upgrades" or p16 == "Gamepasses" then
		UpdatePickupDistance();
	end
end);
UpdatePickupDistance();
m_Library.Network.Fired("Orb Added"):Connect(function(p17, p18) -- Line: 446
	AddOrb(p17, p18);
end);
m_Library.Network.Fired("Orb Removed"):Connect(function(p19) -- Line: 451
	RemoveOrb(p19);
end);
  -  Editar
  04:54:13.931    -  Editar
  04:54:13.931  ----- [2807] StarterPlayer.StarterPlayerScripts.Scripts.Game.Orbs.Orb -----  -  Editar
  04:54:13.931  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = nil;
coroutine.wrap(function() -- Line: 3
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
end)();
local table1 = {
	"rbxassetid://6980747874",
	"rbxassetid://6980747719",
	"rbxassetid://6980747831",
	"rbxassetid://6980747761"
};
local _ = {
	"rbxassetid://6422183746",
	"rbxassetid://6422183796",
	"rbxassetid://6422183836",
	"rbxassetid://6422183697"
};
local _ = {
	"rbxassetid://7139322725",
	"rbxassetid://7139322752",
	"rbxassetid://7139322637",
	"rbxassetid://7139322684"
};
local _ = {
	"rbxassetid://6980747924",
	"rbxassetid://6980747977"
};
local _ = {
	"rbxassetid://7805996163",
	"rbxassetid://7805996068"
};
local _ = {
	"rbxassetid://7805995973",
	"rbxassetid://7805996231"
};
local _ = {
	"rbxassetid://8269454300",
	"rbxassetid://8269454300"
};
local _ = {
	"rbxassetid://8269454228",
	"rbxassetid://8269454359"
};
local Random_new_ret = Random.new();
local Orbs = m_Library.Things:FindFirstChild("Orbs");
local table2 = {new = function(p1, p2, p3, p4, p5, p6) -- new (Line: 27)
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table1
			[3] = Random_new_ret
			[4] = Orbs
	--]]
	assert(typeof(p1) == "string");
	assert(typeof(p2) == "string");
	assert(typeof(p3) == "number");
	assert(p3 >= 0);
	assert(m_Library.Functions.IsFinite(p3));
	assert(typeof(p4) == "Vector3");
	assert(p5 == nil and true or typeof(p5) == "table");
	assert(typeof(p6) == "number");
	local Part = Instance.new("Part");
	Part.Name = p1;
	Part.Transparency = 1;
	Part.Size = Vector3.new(0.5, 0.5, 0.5);
	Part.CFrame = CFrame.new(p4);
	Part.Anchored = true;
	Part.CanQuery = false;
	Part.CanTouch = false;
	Part.CanCollide = false;
	local Clone_ret = m_Library.Assets.Billboards.Orb:Clone();
	Clone_ret.Item.Image = m_Library.Directory.Currency[p2].ImageTiny;
	Clone_ret.Parent = Part;
	local bool1 = false;
	local vec3 = Vector3.new();
	local u1 = Vector3.new();
	local table3 = {
		id = p1,
		idTable = {[p1] = p3},
		currencyType = p2,
		amount = p3,
		isDestroyed = function() -- Line: 80
			--[[
				Upvalues:
					[1] = bool1
			--]]
			return bool1;
		end,
		destroy = function() -- Line: 84
			--[[
				Upvalues:
					[1] = bool1
					[2] = m_Library
					[3] = Part
			--]]
			if bool1 then
				return false;
			end
			bool1 = true;
			m_Library.Functions.AddDebris(Part, 0);
			return true;
		end
	};
	function table3.canCombine(p7) -- Anonymous function at line 93
		--[[
			Upvalues:
				[1] = table3
				[2] = p1
				[3] = bool1
		--]]
		if p7 == table3 then
			return false;
		end
		if table3.id == p1 then
			return false;
		end
		if p7.currencyType ~= table3.currencyType then
			return false;
		end
		if p7.isDestroyed() then
			return false;
		end
		if bool1 then
			return false;
		end
		return true;
	end
	function table3.combine(p8) -- Anonymous function at line 112
		--[[
			Upvalues:
				[1] = table3
				[2] = bool1
		--]]
		assert(table3 ~= p8);
		assert(p8.id ~= table3.id);
		assert(p8.currencyType == table3.currencyType);
		assert(not bool1);
		assert(p8.destroy());
		for key1, val1 in pairs(p8.idTable) do
			if table3.idTable[key1] ~= nil then continue end
			table3.idTable[key1] = val1;
			local v1 = table3;
			v1.amount = v1.amount + val1;
		end
	end
	task.delay(math.random() * 0.25, function() -- Line: 129
		--[[
			Upvalues:
				[1] = bool1
				[2] = m_Library
				[3] = table1
				[4] = Part
				[5] = Random_new_ret
				[6] = p5
				[7] = vec3
				[8] = u1
				[9] = Orbs
		--]]
		if not bool1 then
			m_Library.Audio.Play(table1, Part, Random_new_ret:NextNumber(0.95, 1.05), 0.4, 125);
			local v2 = p5 and p5.BlastRadius or 1;
			vec3 = Vector3.new(Random_new_ret:NextNumber(-20, 20) * v2, 50, Random_new_ret:NextNumber(-20, 20) * v2);
			u1 = Vector3.new(Random_new_ret:NextNumber(-20, 20), Random_new_ret:NextNumber(-20, 20), Random_new_ret:NextNumber(-20, 20)) * v2;
			Part.Parent = Orbs;
		end
	end);
	return table3;
end};
return table2;
  -  Editar
  04:54:13.931    -  Editar
  04:54:13.931  ----- [2808] StarterPlayer.StarterPlayerScripts.Scripts.Game.HoverboardBackup -----  -  Editar
  04:54:13.931  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local t_Q = Enum.KeyCode.Q;
local table1 = {
	[1] = 57.5,
	[2] = 75,
	[3] = 90
};
local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_Hoverboard = m_Library.GUI.Main.Tools.Hoverboard;
local _ = m_Library.Directory.Gamepasses.Hoverboard.ID;
local bool1 = false;
local u1 = nil;
function Create(p1) -- Line: 32
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
			[3] = table1
	--]]
	local u2 = m_Library.Player.Character(p1);
	local u3 = m_Library.Player.PrimaryPart(p1);
	local u4 = m_Library.Player.Humanoid(p1);
	local u5 = p1 == m_Library.LocalPlayer;
	local function Check() -- Line: 36
		--[[
			Upvalues:
				[1] = m_Library
				[2] = u2
				[3] = u3
				[4] = u4
		--]]
		return not m_Library.Variables.LoadingWorld and u2 and u3 and u4.Health > 0;
	end
	if m_Library.Variables.LoadingWorld or not u2 or not u3 or u4.Health <= 0 then return end
	local v1 = m_Library.Save.Get(p1);
	if not v1 then return end
	local t_EquippedHoverboard = v1.EquippedHoverboard;
	local u6 = m_Library.Directory.Hoverboards[t_EquippedHoverboard];
	if t_EquippedHoverboard == "" or not u6 then return end
	if u2:FindFirstChild("__HOVERBOARD") then
		Remove(p1);
	end
	local Clone_ret = u6.board:Clone();
	local u7 = u4.HipHeight + u3.Size.Y / 2;
	local t_Y = Clone_ret:FindFirstChild("Center").Position.Y;
	Clone_ret.CFrame = u3.CFrame * CFrame.Angles(0, 1.5707963267948966, 0) - Vector3.new(0, u7, 0) - Vector3.new(0, t_Y, 0);
	Clone_ret.CanCollide = false;
	Clone_ret.Name = "__HOVERBOARD";
	Clone_ret.Parent = u2;
	local _ = m_Library.Functions.Weld(u3, Clone_ret);
	local Sparkles = Clone_ret.Back:FindFirstChild("Sparkles");
	local Running = m_Library.Player.PrimaryPart(p1):FindFirstChild("Running");
	local t_Volume = nil;
	if Running then
		t_Volume = Running.Volume;
		Running.Volume = 0;
	end
	local BodyPosition = nil;
	local BodyGyro = nil;
	local u8 = 600;
	local tick_ret = tick();
	if u5 then
		BodyPosition = Instance.new("BodyPosition");
		BodyPosition.MaxForce = Vector3.new(0, math.huge, 0);
		BodyPosition.Position = Clone_ret.Position;
		BodyPosition.D = u8;
		BodyPosition.Parent = Clone_ret;
		BodyGyro = Instance.new("BodyGyro");
		BodyGyro.MaxTorque = Vector3.new(math.huge, math.huge, math.huge);
		BodyGyro.CFrame = CFrame.Angles(0, -1.5707963267948966, 0);
		BodyGyro.Parent = Clone_ret;
	end
	local Clone_ret2 = m_Library.Assets.Particles:FindFirstChild("Hoverboard Spawn"):Clone();
	Clone_ret2.Parent = Clone_ret.Center;
	Clone_ret2:Emit(10);
	m_Library.Audio.Play(u6.sounds.equip, Clone_ret, 1, 0.5);
	local u9 = m_Library.Audio.Play(u6.sounds.idle, Clone_ret, 1, 0.1, nil, nil, true);
	if u5 then
		u1 = m_Library.Functions.Animation(3510226236, u4);
	end
	local function PerformRays() -- Line: 113
		--[[
			Upvalues:
				[1] = Clone_ret
				[2] = u3
				[3] = u7
		--]]
		local v5 = Clone_ret.Size.X / 2;
		local v6 = Clone_ret.Size.Z / 2;
		local v7 = nil;
		for index1 = 1, 5 do
			local Ray_new_ret = Ray.new(u3.CFrame.p + (index1 == 1 and Vector3.new(-v5, 0, v6) or index1 == 2 and Vector3.new(v5, 0, -v6) or index1 == 3 and Vector3.new(v5, 0, v6) or index1 == 4 and Vector3.new(-v5, 0, -v6) or Vector3.new(0, 0, 0)), (Vector3.new(0, -(u7 + 3), 0)));
			local FindPartOnRayWithWhitelist_ret1, FindPartOnRayWithWhitelist_ret2 = game.Workspace:FindPartOnRayWithWhitelist(Ray_new_ret, {game.Workspace.__MAP});
			if FindPartOnRayWithWhitelist_ret1 and FindPartOnRayWithWhitelist_ret2 and (not v7 or FindPartOnRayWithWhitelist_ret2.Y > v7.Y) then
				v7 = FindPartOnRayWithWhitelist_ret2;
			end
		end
		return v7;
	end
	local os_clock_ret = os.clock();
	local u11 = 0;
	local u12 = 0;
	local u13 = table1[u6.speed];
	local function RangeMap(p11, p12, p13, p14, p15) -- Line: 153
		return (p11 - p12) / (p13 - p12) * (p15 - p14) + p14;
	end
	local function HoverboardCalculation(_) -- Line: 157
		--[[
			Upvalues:
				[1] = Clone_ret
				[2] = m_Library
				[3] = u2
				[4] = u3
				[5] = u4
				[6] = Running
				[7] = t_Volume
				[8] = p1
				[9] = u5
				[10] = os_clock_ret
				[11] = PerformRays
				[12] = u12
				[13] = BodyPosition
				[14] = u8
				[15] = u8
				[16] = tick_ret
				[17] = BodyGyro
				[18] = u11
				[19] = u6
				[20] = u13
				[21] = u9
				[22] = Sparkles
		--]]
		if not Clone_ret or not Clone_ret.Parent or m_Library.Variables.LoadingWorld or not u2 or not u3 or u4.Health <= 0 then
			if Running then
				Running.Volume = t_Volume;
			end
			pcall(function() -- Line: 162
				--[[
					Upvalues:
						[1] = m_Library
						[2] = p1
				--]]
				m_Library.RunService:UnbindFromRenderStep("Hoverboard " .. p1.Name);
			end);
			return;
		end
		if u5 then
			u4.PlatformStand = true;
			local v8 = math.sin((os.clock() - os_clock_ret) * 3) / 2 - 0.5;
			local v9 = PerformRays();
			local v10 = v9 ~= nil;
			local v11 = v10 and v9.Y + 3 or Clone_ret.Position.Y - u12;
			u12 = v10 and 0 or math.clamp(u12 * 1.065, 2, 10);
			local v12 = v11 + v8;
			if v12 - BodyPosition.Position.Y > 0.05 and u8 ~= 360 then
				u8 = BodyPosition.D;
				u8 = 360;
				tick_ret = tick();
			elseif v12 - BodyPosition.Position.Y < 0.05 and u8 ~= 1400 then
				u8 = BodyPosition.D;
				u8 = 1400;
				tick_ret = tick();
			end
			if BodyPosition.D ~= u8 then
				local v16 = BodyPosition;
				local math_clamp_ret = math.clamp(tick() - tick_ret, 0, 0.2);
				local v17 = u8;
				v16.D = (math_clamp_ret - 0) / 0.2 * (u8 - v17) + v17;
			end
			BodyPosition.Position = Vector3.new(0, v11 + v8, 0);
			local v13 = u3.Position + u4.MoveDirection;
			if v13 ~= u3.Position then
				BodyGyro.CFrame = CFrame.new(u3.Position, v13) * CFrame.Angles(0, 1.5707963267948966, 0);
			end
			if u4.Jump and v10 and os.clock() - u11 >= 1 then
				u11 = os.clock();
				m_Library.Audio.Play(u6.sounds.jump, Clone_ret, 1.25, 0.4);
			end
			local v14 = os.clock() - u11 <= 0.3 and (1 - math.clamp((os.clock() - u11) / 0.3, 0, 1) ^ 2) * 7000 or 0;
			local v15 = u4.MoveDirection * u13;
			local vec3 = Vector3.new(v15.X, -v14, v15.Z);
			u3.Velocity = u3.Velocity:Lerp(vec3, 0.035);
		end
		local t_Magnitude = u3.Velocity.Magnitude;
		u9.Pitch = math.clamp(t_Magnitude / u13 + 1, 1, 2);
		Sparkles.Enabled = t_Magnitude > 8;
	end
	m_Library.RunService:BindToRenderStep("Hoverboard " .. p1.Name, Enum.RenderPriority.Character.Value + 1, HoverboardCalculation);
end
function Remove(p2) -- Line: 247
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	local v3 = m_Library.Player.Character(p2);
	local __HOVERBOARD = v3:FindFirstChild("__HOVERBOARD");
	if __HOVERBOARD then
		__HOVERBOARD:Destroy();
	end
	if p2 == m_Library.LocalPlayer then
		if u1 then
			u1:Stop();
		end
		m_Library.Player.PrimaryPart().Velocity = Vector3.new();
		m_Library.Player.Humanoid().PlatformStand = false;
		m_Library.RunService:UnbindFromRenderStep("Hoverboard " .. p2.Name);
	end
end
function UpdateButton() -- Line: 268
	--[[
		Upvalues:
			[1] = t_Hoverboard
			[2] = m_Library
	--]]
	t_Hoverboard.Keybind.Visible = not m_Library.Variables.Mobile;
	t_Hoverboard.Keybind.Desktop.Visible = m_Library.Variables.Desktop;
	t_Hoverboard.Keybind.Xbox.Visible = m_Library.Variables.Console;
	t_Hoverboard.BackgroundColor3 = m_Library.Variables.UsingHoverboard and Color3.fromRGB(252, 209, 59) or Color3.fromRGB(59, 177, 252);
end
function Toggle() -- Line: 280
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.Variables.UsingHoverboard = not m_Library.Variables.UsingHoverboard;
	if not m_Library.Variables.UsingHoverboard then
		Remove(m_Library.LocalPlayer);
	else
		Create(m_Library.LocalPlayer);
	end
	UpdateButton();
	m_Library.Signal.Fire("Toggled Hoverboard", m_Library.Variables.UsingHoverboard);
	m_Library.Network.Fire("Update Hoverboard State", m_Library.Variables.UsingHoverboard);
end
function CanUseHoverboard() -- Line: 296
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	return m_Library.Save.Get().EquippedHoverboard ~= "";
end
function ProcessInput(_) -- Line: 304
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	if CanUseHoverboard() and m_Library.WorldCmds.CanDoAction() then
		Toggle();
	end
	m_Library.Variables.HoverboardMenuActive = m_Library.Variables.UsingHoverboard or not m_Library.Variables.HoverboardMenuActive;
	m_Library.Signal.Fire("Toggled Hoverboard Menu");
end
m_Library.GUIFX.Tooltip(t_Hoverboard, "Hoverboard");
m_Library.GUIFX.ButtonFX(t_Hoverboard);
t_Hoverboard.Activated:Connect(function() -- Line: 326
	--[[
		Upvalues:
			[1] = bool1
	--]]
	if not bool1 then
		bool1 = true;
		ProcessInput();
		bool1 = false;
	end
end);
UpdateButton();
m_Library.Signal.Fired("Stat Changed"):Connect(function(p3) -- Line: 337
	if p3 == "Gamepasses" then
		UpdateButton();
	end
end);
m_Library.Signal.Fired("Changed Platform"):Connect(function() -- Line: 343
	UpdateButton();
end);
m_Library.UserInputService.InputBegan:Connect(function(input, gameProcessedEvent) -- Line: 352
	--[[
		Upvalues:
			[1] = t_Q
			[2] = bool1
	--]]
	if not gameProcessedEvent and (input.KeyCode == t_Q or input.KeyCode == Enum.KeyCode.DPadUp) and not bool1 then
		bool1 = true;
		ProcessInput(true);
		bool1 = false;
	end
end);
m_Library.Signal.Fired("Entered Cannon"):Connect(function() -- Line: 364
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	if m_Library.Variables.UsingHoverboard then
		Toggle();
	end
end);
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 371
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	if m_Library.Variables.UsingHoverboard then
		Toggle();
	end
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p4) -- Line: 378
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	if p4 == "EquippedHoverboard" and m_Library.Variables.UsingHoverboard then
		Create(m_Library.LocalPlayer);
	end
end);
m_Library.Signal.Fired("Other Stat Changed"):Connect(function(p5, p6) -- Line: 385
	if p6 == "EquippedHoverboard" and p5:GetAttribute("UsingHoverboard") then
		Create(p5);
	end
end);
function UpdatePlayer(p7, p8) -- Line: 397
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v4 = m_Library.Player.Character(p7);
	if p8 and not v4:FindFirstChild("__HOVERBOARD") then
		Create(p7);
		return;
	end
	if not p8 and v4:FindFirstChild("__HOVERBOARD") then
		Remove(p7);
	end
end
function TrackPlayer(p9) -- Line: 407
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local Attribute = p9:GetAttribute("UsingHoverboard");
	if Attribute then
		while m_Library.Variables.LoadingWorld do
			m_Library.Heartbeat();
		end
		UpdatePlayer(p9, true);
	end
	p9:GetAttributeChangedSignal("UsingHoverboard"):Connect(function() -- Line: 415
		--[[
			Upvalues:
				[1] = p9
		--]]
		local Attribute2 = p9:GetAttribute("UsingHoverboard");
		UpdatePlayer(p9, Attribute2);
	end);
end
game.Players.PlayerAdded:Connect(function(p10) -- Line: 422
	TrackPlayer(p10);
end);
for _, val1 in ipairs(game.Players:GetPlayers()) do
	TrackPlayer(val1);
end
  -  Editar
  04:54:13.931    -  Editar
  04:54:13.931  ----- [2809] StarterPlayer.StarterPlayerScripts.Scripts.Game.Dominus Gate -----  -  Editar
  04:54:13.931  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local FindFirstChild_ret = nil;
local t_IsHardcore = m_Library.Shared.IsHardcore;
function Unlock() -- Line: 18
	--[[
		Upvalues:
			[1] = FindFirstChild_ret
	--]]
	FindFirstChild_ret:Destroy();
end
function IsUnlocked() -- Line: 23
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_IsHardcore
	--]]
	local v1 = m_Library.Save.Get();
	if v1 then
		return t_IsHardcore and v1.Hardcore.OwnsDominusGate or not t_IsHardcore and v1.OwnsDominusGate;
	end
	return false;
end
function Buy() -- Line: 32
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v2, v3 = m_Library.Network.Invoke("Buy Dominus Gate");
	if not v2 then
		m_Library.Message.New(v3 or "Error");
		return;
	end
	Unlock();
end
function Prompt() -- Line: 42
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_IsHardcore
	--]]
	local v4 = m_Library.WorldCmds.HasArea("Cave");
	if not v4 then
		m_Library.Message.New("(Ad hoc enim estis carnales...)");
		return;
	end
	local v5 = m_Library.Message.New(string.format("Do you wish to sacrifice %s Diamonds?", m_Library.Functions.Commas(t_IsHardcore and 10000000 or 100000)), true);
	if v5 then
		Buy();
	end
end
function Setup() -- Line: 57
	--[[
		Upvalues:
			[1] = m_Library
			[2] = FindFirstChild_ret
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		FindFirstChild_ret = Map.Interactive:FindFirstChild("Dominus Gate");
		if FindFirstChild_ret then
			if IsUnlocked() then
				Unlock();
				return;
			end
			local v6, _ = m_Library.Interact.Add(FindFirstChild_ret.PrimaryPart, {dist = 15});
			v6:Connect(function() -- Line: 66
				Prompt();
			end);
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function(p1) -- Line: 75
	if p1 == "Spawn" then
		Setup();
	end
end);
  -  Editar
  04:54:13.931    -  Editar
  04:54:13.931  ----- [2810] StarterPlayer.StarterPlayerScripts.Scripts.Game.Cat Throne Gate -----  -  Editar
  04:54:13.931  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local FindFirstChild_ret = nil;
local t_IsHardcore = m_Library.Shared.IsHardcore;
function Unlock(p1) -- Line: 18
	--[[
		Upvalues:
			[1] = FindFirstChild_ret
			[2] = m_Library
	--]]
	FindFirstChild_ret:SetAttribute("Unlocked", true);
	local Lock = FindFirstChild_ret:FindFirstChild("Lock");
	if Lock and p1 then
		m_Library.Audio.Play("rbxassetid://7751703357", Lock.CFrame.p, 0.8, 1, 150);
		m_Library.WorldFX.ModelFlash(Lock, 0.3);
		Lock:Destroy();
		return;
	end
	if Lock then
		Lock:Destroy();
	end
end
function IsUnlocked() -- Line: 32
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_IsHardcore
	--]]
	local v1 = m_Library.Save.Get();
	if v1 then
		return t_IsHardcore and m_Library.Functions.SearchDictionary(v1.Hardcore.AreasUnlocked, "Cat Throne Room") or not t_IsHardcore and m_Library.Functions.SearchDictionary(v1.AreasUnlocked, "Cat Throne Room");
	end
	return false;
end
function Teleport() -- Line: 42
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local _ = m_Library.WorldCmds.GetMap();
	local FindFirstChild_ret2 = m_Library.WorldCmds.GetMap().Teleports:FindFirstChild("Cat Throne Room");
	if FindFirstChild_ret2 then
		local v6 = m_Library.Player.Character();
		local v7 = m_Library.Player.Humanoid();
		m_Library.GUIFX.Flash(0.25, 0.75, Color3.new(255, 255, 255));
		m_Library.Variables.Teleporting = true;
		m_Library.Signal.Fire("Teleporting");
		m_Library.Functions.Wait(0.25);
		v6:SetPrimaryPartCFrame(FindFirstChild_ret2.CFrame + Vector3.new(0, v7.HipHeight + 1, 0));
		m_Library.Audio.Play("rbxassetid://7210953148", script, 1, 1);
		m_Library.Network.Fire("Performed Teleport", "Cat Throne Room");
		m_Library.Functions.Wait(0.25);
		m_Library.Variables.Teleporting = false;
		return;
	end
	m_Library.Message.New("Something went wrong. Try again!");
end
function Buy() -- Line: 66
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v2, v3 = m_Library.Network.Invoke("Buy Area", "Cat Throne Room");
	if not v2 then
		m_Library.Message.New(v3 or "Error");
		return;
	end
	Unlock(true);
end
function PromptBuy() -- Line: 76
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v4 = m_Library.WorldCmds.HasArea("Cat Kingdom");
	if not v4 then
		m_Library.Message.New("Leave this place meow...");
		return;
	end
	local v5 = m_Library.Message.New("Are you sure you want to buy this area for 5t Rainbow Coins?", true);
	if v5 then
		Buy();
	end
end
function Setup() -- Line: 90
	--[[
		Upvalues:
			[1] = m_Library
			[2] = FindFirstChild_ret
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Gates") then
		FindFirstChild_ret = Map.Gates:FindFirstChild("Cat Throne Room");
		if FindFirstChild_ret then
			if IsUnlocked() then
				Unlock(false);
				local v8, _ = m_Library.Interact.Add(FindFirstChild_ret.PrimaryPart, {dist = 12});
				if v8 then
					v8:Connect(function() -- Line: 100
						Teleport();
					end);
				end
			else
				local v9, _ = m_Library.Interact.Add(FindFirstChild_ret.PrimaryPart, {dist = 12});
				if v9 then
					v9:Connect(function() -- Line: 107
						--[[
							Upvalues:
								[1] = FindFirstChild_ret
						--]]
						if FindFirstChild_ret:GetAttribute("Unlocked") then
							Teleport();
							return;
						end
						PromptBuy();
					end);
				end
			end
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function(p2) -- Line: 121
	if p2 == "Cat" then
		Setup();
	end
end);
  -  Editar
  04:54:13.932    -  Editar
  04:54:13.932  ----- [2811] StarterPlayer.StarterPlayerScripts.Scripts.Game.Limbo Portal -----  -  Editar
  04:54:13.932  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local _ = m_Library.Shared.IsHardcore;
local bool1 = false;
local FindFirstChild_ret = nil;
function TryTravel() -- Line: 18
	--[[
		Upvalues:
			[1] = m_Library
			[2] = FindFirstChild_ret
	--]]
	local v1 = m_Library.Save.Get();
	if not v1 then return end
	assert(v1);
	local v2 = m_Library.Message.New("Step into the portal?", true);
	if v2 then
		if not FindFirstChild_ret:GetAttribute("RequiredArea") or m_Library.WorldCmds.HasArea(FindFirstChild_ret:GetAttribute("RequiredArea")) then
			m_Library.Audio.Play("rbxassetid://7210953203", m_Library.Player.PrimaryPart(), 1, 1, 325);
			m_Library.WorldCmds.Load(FindFirstChild_ret:GetAttribute("DestinationWorld"));
			return;
		end
		m_Library.Audio.Play("rbxassetid://8803688837", m_Library.Player.PrimaryPart(), 4, 1, 325);
		local LaunchDirection = FindFirstChild_ret.PrimaryPart:FindFirstChild("LaunchDirection");
		local t_Character = m_Library.LocalPlayer.Character;
		if t_Character then
			local t_PrimaryPart = t_Character.PrimaryPart;
			if t_PrimaryPart then
				t_PrimaryPart.Velocity = LaunchDirection.WorldCFrame.UpVector * 250;
				task.delay(2.5, function() -- Line: 39
					--[[
						Upvalues:
							[1] = m_Library
					--]]
					m_Library.Message.New("Primum oportet Cat Regnum reserare!");
				end);
			end
		end
	end
end
function Clicked() -- Line: 49
	TryTravel();
end
function Setup() -- Line: 54
	--[[
		Upvalues:
			[1] = FindFirstChild_ret
			[2] = m_Library
			[3] = bool1
	--]]
	local v3, _ = m_Library.Interact.Add(FindFirstChild_ret:FindFirstChild("_INTERACT").CFrame.p, {dist = 30});
	v3:Connect(function() -- Line: 57
		--[[
			Upvalues:
				[1] = bool1
		--]]
		if not bool1 then
			bool1 = true;
			Clicked();
			bool1 = false;
		end
	end);
end
function Check() -- Line: 75
	--[[
		Upvalues:
			[1] = m_Library
			[2] = FindFirstChild_ret
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		FindFirstChild_ret = Map.Interactive:FindFirstChild("Limbo Portal");
		if FindFirstChild_ret then
			Setup();
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 90
	Check();
end);
  -  Editar
  04:54:13.932    -  Editar
  04:54:13.932  ----- [2812] StarterPlayer.StarterPlayerScripts.Scripts.Game.Purchasable Booths -----  -  Editar
  04:54:13.932  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = m_Library.Shared.IsTradingPlaza or m_Library.RunService:IsStudio();
local table1 = {};
local bool1 = false;
function RemoveInteract(p1) -- Line: 19
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table1
	--]]
	local Interact = p1:FindFirstChild("Interact");
	local Booth = p1:FindFirstChild("Booth");
	if Interact then
		Interact:Destroy();
	end
	if Booth then
		local OwnedAttachment = Booth:FindFirstChild("OwnedAttachment");
		if OwnedAttachment then
			OwnedAttachment:FindFirstChild("Owned").Enabled = true;
		end
	end
	m_Library.Functions.RemoveTable(table1, p1);
end
function IsPurchased(p2) -- Line: 39
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v1 = m_Library.Save.Get();
	if v1 then
		return v1.TradingBoothStyles and m_Library.Functions.SearchArray(v1.TradingBoothStyles, p2:GetAttribute("Product"));
	end
	return false;
end
function Prompt(p3) -- Line: 48
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	if not p3:GetAttribute("Product") then
		warn("Invalid booth, doesn't have name attribute");
		return;
	end
	local Attribute = p3:GetAttribute("Product");
	local v2 = m_Library.Directory.Booths[Attribute];
	if not v2 then
		m_Library.Message.New("Something went wrong!");
		return;
	end
	local t_ProductId = v2.ProductId;
	if t_ProductId then
		local v3 = m_Library.Network.Invoke("Attempt Buy Trading Booth Style", Attribute);
		if v3 then
			m_Library.Shared.PromptPurchase(t_ProductId, true);
		end
		return;
	end
	if v2.RequirementMessage then
		m_Library.Message.New(v2.RequirementMessage);
		return;
	end
	if v2.DiamondPrice then
		local v4 = "Buy " .. v2.DisplayName .. " for " .. m_Library.Functions.Commas(v2.DiamondPrice) .. " Diamonds?";
		local v5 = m_Library.Message.New(v4, true);
		if v5 then
			local v7, v8 = m_Library.Network.Invoke("Purchase Booth Style", Attribute);
			if not v7 then
				m_Library.Message.New(v8 or "Something went wrong!");
				return;
			end
			m_Library.Signal.Fire("Notification", "Success! \226\156\133", {
				color = Color3.fromRGB(105, 255, 168),
				sound = "rbxassetid://11648890466"
			});
		end
	end
end
function Setup() -- Line: 88
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
			[3] = bool1
			[4] = table1
	--]]
	if not u1 then return end
	local Map = m_Library.WorldCmds.GetMap();
	local Interactive = Map:FindFirstChild("Interactive");
	if Interactive then
		local PurchasableBooths = Interactive:FindFirstChild("PurchasableBooths");
		if PurchasableBooths then
			for _, child1 in pairs(PurchasableBooths:GetChildren()) do
				local _ = child1:GetAttribute("Product");
				if IsPurchased(child1) then
					RemoveInteract(child1);
				else
					local v9, _ = m_Library.Interact.Add(child1.PrimaryPart, {dist = 12});
					if v9 then
						v9:Connect(function() -- Line: 106
							--[[
								Upvalues:
									[1] = bool1
									[2] = child1
							--]]
							if not bool1 then
								bool1 = true;
								Prompt(child1);
								bool1 = false;
							end
						end);
					end
				end
				table.insert(table1, child1);
			end
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function(p4) -- Line: 123
	if p4 == "Trading Plaza" then
		Setup();
	end
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p5) -- Line: 130
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table1
	--]]
	if p5 == "TradingBoothStyles" then
		local v6 = m_Library.Save.Get();
		if v6 then
			for _, val2 in ipairs(table1) do
				if not m_Library.Functions.SearchArray(v6.TradingBoothStyles, val2:GetAttribute("Product")) then continue end
				RemoveInteract(val2);
			end
		end
	end
end);
  -  Editar
  04:54:13.932    -  Editar
  04:54:13.932  ----- [2813] StarterPlayer.StarterPlayerScripts.Scripts.Game.Teleport To Player -----  -  Editar
  04:54:13.932  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local Players = game:GetService("Players");
local TeleportService = game:GetService("TeleportService");
function TeleporToPlayer(p1) -- Line: 10
	--[[
		Upvalues:
			[1] = Players
			[2] = m_Library
	--]]
	assert(typeof(p1) == "Instance" and p1:IsA("Player") or false);
	local t_LocalPlayer = Players.LocalPlayer;
	if not m_Library.WorldCmds.CanDoAction() then
		return false, "Cannot perform actions right now";
	end
	if not t_LocalPlayer or not t_LocalPlayer.Parent then
		return false, "Source player is not valid";
	end
	if not p1 or not p1.Parent then
		return false, "Destination player is not valid";
	end
	if t_LocalPlayer == p1 then
		return false, "Source and Destination player cannot be the same";
	end
	local v1 = m_Library.WorldCmds.Get(t_LocalPlayer);
	if not v1 then
		return false, "Source player was not in a world";
	end
	local v2 = m_Library.WorldCmds.Get(p1);
	if not v2 then
		return false, "Destination player was not in a world";
	end
	if not m_Library.WorldCmds.HasAccess(v2) then
		return false, "Source player does not have access to the Destination players' world";
	end
	local function teleport() -- Line: 37
		--[[
			Upvalues:
				[1] = m_Library
				[2] = t_LocalPlayer
				[3] = p1
		--]]
		if not m_Library.WorldCmds.CanDoAction() then
			return false, "Cannot perform actions right now";
		end
		if not t_LocalPlayer or not t_LocalPlayer.Parent then
			return false, "Source player is not valid";
		end
		if not p1 or not p1.Parent then
			return false, "Destination player is not valid";
		end
		local v4 = m_Library.WorldCmds.Get(t_LocalPlayer);
		if not v4 then
			return false, "Source player was not in a world";
		end
		local v5 = m_Library.WorldCmds.Get(p1);
		if not v5 then
			return false, "Destination player was not in a world";
		end
		if v4 ~= v5 then
			return false, "Source ande Destination player are not in the same world";
		end
		if not m_Library.WorldCmds.HasAccess(v5) then
			return false, "Source player does not have access to the Destination players' world";
		end
		local t_Character = t_LocalPlayer.Character;
		if not t_Character then
			return false, "Source player has no Character";
		end
		local t_PrimaryPart = t_Character.PrimaryPart;
		if not t_PrimaryPart then
			return false, "Source player has no PrimaryPart";
		end
		local Humanoid = t_Character:FindFirstChildOfClass("Humanoid");
		if not Humanoid then
			return false, "Source player has no Humanoid";
		end
		local t_Character2 = p1.Character;
		if not t_Character2 then
			return false, "Destination player has no Character";
		end
		local t_PrimaryPart2 = t_Character2.PrimaryPart;
		if not t_PrimaryPart2 then
			return false, "Destination player has no PrimaryPart";
		end
		local Humanoid2 = t_Character2:FindFirstChildOfClass("Humanoid");
		if not Humanoid2 then
			return false, "Destination player has no Humanoid";
		end
		local t_CFrame = t_PrimaryPart2.CFrame;
		local v6 = t_CFrame - t_CFrame.UpVector * (t_PrimaryPart2.Size.Y / 2 + Humanoid2.HipHeight);
		t_Character:PivotTo(v6 + v6.UpVector * (t_PrimaryPart.Size.Y / 2 + Humanoid.HipHeight));
		return true;
	end
	if v1 ~= v2 then
		m_Library.WorldCmds.Load(v2);
	end
	return teleport();
end
task.spawn(function() -- Line: 99
	--[[
		Upvalues:
			[1] = TeleportService
			[2] = Players
			[3] = m_Library
	--]]
	local LocalPlayerTeleportData = TeleportService:GetLocalPlayerTeleportData();
	if typeof(LocalPlayerTeleportData) == "table" then
		local t_TeleportToPlayer = LocalPlayerTeleportData.TeleportToPlayer;
		if typeof(t_TeleportToPlayer) == "number" then
			local PlayerByUserId = Players:GetPlayerByUserId(t_TeleportToPlayer);
			if PlayerByUserId then
				while not m_Library.WorldCmds.CanDoAction() do
					wait(0.1);
				end
				local TeleporToPlayer_ret1, TeleporToPlayer_ret2 = TeleporToPlayer(PlayerByUserId);
				if not TeleporToPlayer_ret1 then
					warn(string.format("Failed to teleport to player: %s", tostring(TeleporToPlayer_ret2)));
				end
			end
		end
	end
end);
m_Library.Network.Invoked("Teleport To Player").OnInvoke = TeleporToPlayer;
m_Library.Signal.Invoked("Teleport To Player").OnInvoke = TeleporToPlayer;
  -  Editar
  04:54:13.932    -  Editar
  04:54:13.932  ----- [2814] StarterPlayer.StarterPlayerScripts.Scripts.Game.Select Pets -----  -  Editar
  04:54:13.933  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_PetGrabDistance = m_Library.Settings.PetGrabDistance or 300;
local Pets = m_Library.Things:WaitForChild("Pets");
local u1 = m_Library.Player.Camera();
local u2 = nil;
local u3 = nil;
function SelectPet(p1, p2) -- Line: 20
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.Signal.Fire("Select Pet", p1, p2);
end
function ProcessInput(p3) -- Line: 25
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
			[3] = Pets
			[4] = t_PetGrabDistance
	--]]
	if not m_Library.WorldCmds.CanDoAction() then return end
    local ScreenPointToRay_ret = u1:ScreenPointToRay(p3.X, p3.Y);
	local RaycastParams_new_ret = RaycastParams.new();
	RaycastParams_new_ret.FilterDescendantsInstances = { game:GetService("Workspace"):WaitForChild("__THINGS"):WaitForChild("Pets") };
    RaycastParams_new_ret.FilterType = Enum.RaycastFilterType.Whitelist;
    
    local Raycast_ret = workspace:Raycast(ScreenPointToRay_ret.Origin, ScreenPointToRay_ret.Direction * 1000, RaycastParams_new_ret);
    
	if Raycast_ret and Raycast_ret.Instance then
		local t_Instance = Raycast_ret.Instance;
        if m_Library.LocalPlayer:DistanceFromCharacter(t_Instance.CFrame.p) <= t_PetGrabDistance then
			return t_Instance;
		end
	end
end
function InputDown(p4) -- Line: 47
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u3
			[3] = u2
	--]]
	local ProcessInput_ret = ProcessInput(p4);
	if ProcessInput_ret or m_Library.Variables.Desktop then
		u3 = ProcessInput_ret;
		u2 = os.clock();
	end
end
function InputUp(p5) -- Line: 56
	--[[
		Upvalues:
			[1] = u2
			[2] = u3
			[3] = m_Library
	--]]
    local ProcessInput_ret2 = ProcessInput(p5);
	if ProcessInput_ret2 and u2 and (u3 == ProcessInput_ret2 or m_Library.Variables.Desktop) then
		SelectPet(ProcessInput_ret2, os.clock() - u2 > 0.35);
	end
	u2 = nil;
	u3 = nil;
end
m_Library.UserInputService.TouchStarted:Connect(function(p6, p7) -- Line: 72
	if not p7 then
		InputDown(p6.Position);
	end
end);
m_Library.UserInputService.TouchEnded:Connect(function(hit, p8) -- Line: 79
	if not p8 then
		InputUp(hit.Position);
	end
end);
m_Library.UserInputService.InputBegan:Connect(function(input, gameProcessedEvent) -- Line: 87
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local t_UserInputType = input.UserInputType;
	local _ = input.UserInputState;
	local t_KeyCode = input.KeyCode;
	if not gameProcessedEvent and (t_UserInputType == Enum.UserInputType.MouseButton1 or t_KeyCode == Enum.KeyCode.ButtonX or t_KeyCode == Enum.KeyCode.ButtonR2 or t_KeyCode == Enum.KeyCode.ButtonL2) then
		InputDown(m_Library.UserInputService:GetMouseLocation() - Vector2.new(0, 36));
	end
end);
m_Library.UserInputService.InputEnded:Connect(function(input2, gameProcessedEvent2) -- Line: 96
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local t_UserInputType2 = input2.UserInputType;
	local _ = input2.UserInputState;
	local t_KeyCode2 = input2.KeyCode;
	if not gameProcessedEvent2 and (t_UserInputType2 == Enum.UserInputType.MouseButton1 or t_KeyCode2 == Enum.KeyCode.ButtonX or t_KeyCode2 == Enum.KeyCode.ButtonR2 or t_KeyCode2 == Enum.KeyCode.ButtonL2) then
		InputUp(m_Library.UserInputService:GetMouseLocation() - Vector2.new(0, 36));
	end
end);
  -  Editar
  04:54:13.933    -  Editar
  04:54:13.933  ----- [2815] StarterPlayer.StarterPlayerScripts.Scripts.Game.Dojo Door -----  -  Editar
  04:54:13.933  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local FindFirstChild_ret = nil;
local t_IsHardcore = m_Library.Shared.IsHardcore;
function Unlock(p1) -- Line: 18
	--[[
		Upvalues:
			[1] = FindFirstChild_ret
			[2] = m_Library
	--]]
	FindFirstChild_ret:SetAttribute("Unlocked", true);
	local Lock = FindFirstChild_ret:FindFirstChild("Lock");
	if Lock and p1 then
		m_Library.Audio.Play("rbxassetid://7751703357", Lock.CFrame.p, 0.8, 1, 150);
		m_Library.WorldFX.ModelFlash(Lock, 0.3);
		Lock:Destroy();
		return;
	end
	if Lock then
		Lock:Destroy();
	end
end
function IsUnlocked() -- Line: 32
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_IsHardcore
	--]]
	local v1 = m_Library.Save.Get();
	if v1 then
		return t_IsHardcore and m_Library.Functions.SearchDictionary(v1.Hardcore.AreasUnlocked, "Kawaii Dojo") or not t_IsHardcore and m_Library.Functions.SearchDictionary(v1.AreasUnlocked, "Kawaii Dojo");
	end
	return false;
end
function Teleport() -- Line: 42
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local FindFirstChild_ret2 = m_Library.WorldCmds.GetMap().Teleports:FindFirstChild("Kawaii Dojo");
	if FindFirstChild_ret2 then
		local v6 = m_Library.Player.Character();
		local v7 = m_Library.Player.Humanoid();
		m_Library.GUIFX.Flash(0.25, 0.75, Color3.new(255, 255, 255));
		m_Library.Variables.Teleporting = true;
		m_Library.Signal.Fire("Teleporting");
		m_Library.Functions.Wait(0.25);
		v6:SetPrimaryPartCFrame(FindFirstChild_ret2.CFrame + Vector3.new(0, v7.HipHeight + 1, 0));
		m_Library.Audio.Play("rbxassetid://7210953148", script, 1, 1);
		m_Library.Network.Fire("Performed Teleport", "Kawaii Dojo");
		m_Library.Functions.Wait(0.25);
		m_Library.Variables.Teleporting = false;
		return;
	end
	m_Library.Message.New("Something went wrong. Try again!");
end
function Buy() -- Line: 65
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v2, v3 = m_Library.Network.Invoke("Buy Area", "Kawaii Dojo");
	if not v2 then
		m_Library.Message.New(v3 or "Error");
		return;
	end
	Unlock(true);
end
function PromptBuy() -- Line: 75
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v4 = m_Library.WorldCmds.HasArea("Kawaii Temple");
	if not v4 then
		m_Library.Message.New("\227\129\130\227\129\170\227\129\159\227\129\175\227\129\181\227\129\149\227\130\143\227\129\151\227\129\143\227\129\130\227\130\138\227\129\190\227\129\155\227\130\147\239\188\129");
		return;
	end
	local v5 = m_Library.Message.New("Are you sure you want to buy this area for 45b Cartoon Coins?", true);
	if v5 then
		Buy();
	end
end
function Setup() -- Line: 89
	--[[
		Upvalues:
			[1] = m_Library
			[2] = FindFirstChild_ret
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Gates") then
		FindFirstChild_ret = Map.Gates:FindFirstChild("Kawaii Dojo");
		if FindFirstChild_ret then
			if IsUnlocked() then
				Unlock(false);
				local v8, _ = m_Library.Interact.Add(FindFirstChild_ret.PrimaryPart, {
					dist = 12,
					label = "Enter Dojo!"
				});
				if v8 then
					v8:Connect(function() -- Line: 99
						Teleport();
					end);
				end
			else
				local v9, _ = m_Library.Interact.Add(FindFirstChild_ret.PrimaryPart, {
					dist = 12,
					label = "Enter Dojo!"
				});
				if v9 then
					v9:Connect(function() -- Line: 106
						--[[
							Upvalues:
								[1] = FindFirstChild_ret
						--]]
						if FindFirstChild_ret:GetAttribute("Unlocked") then
							Teleport();
							return;
						end
						PromptBuy();
					end);
				end
			end
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function(p2) -- Line: 120
	if p2 == "Kawaii" then
		Setup();
	end
end);
  -  Editar
  04:54:13.933    -  Editar
  04:54:13.933  ----- [2816] StarterPlayer.StarterPlayerScripts.Scripts.Game.FireworkLauncherClient -----  -  Editar
  04:54:13.933  local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local Random_new_ret = Random.new();
local table1 = {
	Color3.fromRGB(255, 49, 49),
	Color3.fromRGB(255, 179, 55),
	Color3.fromRGB(255, 255, 53),
	Color3.fromRGB(105, 255, 79),
	Color3.fromRGB(70, 252, 255),
	Color3.fromRGB(193, 85, 255),
	Color3.fromRGB(255, 169, 225)
};
local bool1 = false;
local t_FireworkLauncher = m_Library.GUI.FireworkLauncher;
local t_Close = t_FireworkLauncher.Close;
local t_FireworkProjectile = m_Library.Assets.Models.FireworkProjectile;
local t_FireworkLauncher2 = m_Library.Assets.Models.FireworkLauncher;
local _ = {};
local table2 = {};
local table3 = {
	fpsOffset = CFrame.new(1.5, -1, -3),
	fpsRot = CFrame.Angles(0, 3.141592653589793, 0),
	lao = CFrame.new(0.5, -1.5, -2),
	lar = CFrame.Angles(1.5707963267948966, -0.17453292519943295, 0.5235987755982988),
	rao = CFrame.new(2.5, -2, -2),
	rar = CFrame.Angles(1.5707963267948966, -0.5235987755982988, 0),
	rotx = -1.5707963267948966,
	roty = 3.141592653589793,
	rotz = -1.5707963267948966,
	offset = CFrame.new(-0.5, -0.6, 0.2)
};
local Mouse = game.Players.LocalPlayer:GetMouse();
function createProjectile(p1, p2, p3, p4, p5)  
	if p1 == m_Library.LocalPlayer then
		m_Library.Network.Fire("FireworkLauncher_FireProjectile", p2, p3, p4, p5);
	end
	m_Library.Audio.Play(4537511307, p2, nil);
	local u1 = m_Library.Functions.GenerateUID();
	local Clone_ret = t_FireworkProjectile:Clone();
	Clone_ret.Anchored = true;
	Clone_ret.Position = p2;
	Clone_ret.Parent = workspace.__DEBRIS;
	Clone_ret.CFrame = CFrame.new(p2.X, p2.Y, p2.Z);
	Clone_ret.CanCollide = false;
	local u2 = table1[Random_new_ret:NextInteger(1, #table1)];
	local Clone_ret2 = m_Library.Assets.Particles.Achievements:FindFirstChild("SuperFirework-Trail"):Clone();
	Clone_ret2.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0, u2),
		ColorSequenceKeypoint.new(1, u2)
	});
	Clone_ret2.Parent = Clone_ret;
	local u3 = p5 * math.tan(p4) > 600 and 600 / (p5 * math.tan(p4)) or 1;
	local function getCFrame(p16)  
		local v7 = p2.X + math.cos(p3) * p5 * p16 * u3;
		local v8 = p2.Z + math.sin(p3) * p5 * p16 * u3;
		local vec3 = Vector3.new(v7, p2.Y + (p5 * math.tan(p4) * p16 - math.pow(p16, 2) * 28.099999999999994) * u3, v8);
		return CFrame.new(vec3, vec3 + (vec3 - Clone_ret.CFrame.p)) * CFrame.Angles(0, math.pi / 2, 0);
	end
	local tick_ret = nil;
	local v1 = getCFrame(0.0001);
	local t_LookVector = CFrame.new(Clone_ret.CFrame.Position, v1.Position).LookVector;
	Clone_ret.CFrame = CFrame.new(Clone_ret.CFrame.Position + t_LookVector * (Clone_ret.Size.X / 2), v1.Position + t_LookVector * (Clone_ret.Size.X / 2)) * CFrame.Angles(0, 1.5707963267948966, 0);
	p2 = Clone_ret.CFrame.Position;
	m_Library.Services.RunService:BindToRenderStep("Projectile" .. u1, 1, function() 
		if not tick_ret then
			tick_ret = tick();
		end
		local t_Position = Clone_ret.CFrame.Position;
		Clone_ret.CFrame = getCFrame(tick() - tick_ret);
		local Ray_new_ret = Ray.new(Clone_ret.CFrame.Position, (t_Position - Clone_ret.CFrame.Position).Magnitude * CFrame.new(t_Position, Clone_ret.CFrame.Position).LookVector);
		local table4 = {workspace.__DEBRIS};
		if p1.Character then
			table.insert(table4, p1.Character);
		end
		local FindPartOnRayWithIgnoreList_ret1, FindPartOnRayWithIgnoreList_ret2 = workspace:FindPartOnRayWithIgnoreList(Ray_new_ret, table4);
		if FindPartOnRayWithIgnoreList_ret1 or tick() - tick_ret > 10 then
			m_Library.Services.RunService:UnbindFromRenderStep("Projectile" .. u1);
			local v10 = FindPartOnRayWithIgnoreList_ret2 or Clone_ret.CFrame.Position;
			local firework = Instance.new("Part");
			firework.CanCollide = false;
			firework.Anchored = true;
			firework.CFrame = CFrame.new(v10);
			firework.Size = Vector3.new();
			firework.Name = "firework";
			firework.Parent = m_Library.Debris;
			local Clone_ret3 = m_Library.Assets.Particles.Achievements:FindFirstChild("SuperFirework"):Clone();
			Clone_ret3.Color = ColorSequence.new({
				ColorSequenceKeypoint.new(0, u2),
				ColorSequenceKeypoint.new(1, u2)
			});
			Clone_ret3.Parent = firework;
			Clone_ret3:Emit(250);
			m_Library.Audio.Play("rbxassetid://11981238658", firework, 1, 1.2, 250);
			m_Library.Functions.AddDebris(firework, 4);
			local FindFirstChild_ret = Clone_ret:FindFirstChild("SuperFirework-Trail");
			if FindFirstChild_ret then
				FindFirstChild_ret.Enabled = false;
			end
			m_Library.Functions.AddDebris(Clone_ret, 1);
			if m_Library.Functions.VerifyPlayerMagnitude(m_Library.LocalPlayer, v10, 200) then
				local table5 = {
					10231636855,
					10231636725,
					10231636318
				};
				m_Library.Audio.Play(table5[math.random(#table5)], v10, nil, 0.35);
			end
			if FindPartOnRayWithIgnoreList_ret1 then
				local FindFirstAncestorOfClass_ret = FindPartOnRayWithIgnoreList_ret1:FindFirstAncestorOfClass("Model");
				if FindFirstAncestorOfClass_ret then
					local PlayerFromCharacter = m_Library.Players:GetPlayerFromCharacter(FindFirstAncestorOfClass_ret);
					if PlayerFromCharacter and PlayerFromCharacter ~= p1 then
						local _ = FindFirstAncestorOfClass_ret.PrimaryPart;
						local Highlight = Instance.new("Highlight");
						Highlight.Adornee = FindFirstAncestorOfClass_ret;
						Highlight.DepthMode = Enum.HighlightDepthMode.Occluded;
						Highlight.FillColor = Color3.new(1, 0, 0);
						Highlight.FillTransparency = 0.5;
						Highlight.OutlineTransparency = 1;
						Highlight.Parent = FindFirstAncestorOfClass_ret;
						m_Library.Functions.Tween(Highlight, {FillTransparency = 1}, {
							0.25,
							"Cubic",
							"In"
						});
						m_Library.Functions.AddDebris(Highlight, 0.25);
					end
				end
			end
		end
	end);
end
function disableUpperBody(_)  
end
function enableUpperBody(_)  
end
function getWeaponState(p6)  
	return table2[p6 or m_Library.LocalPlayer];
end
function fireWeapon()  
	local WeaponState = getWeaponState();
	if not WeaponState then return end
	if WeaponState.lastShot and tick() - WeaponState.lastShot < 0.35 then return end
	WeaponState.lastShot = tick();
	if WeaponState.gyro then
		WeaponState.gyro.P = 100000;
		task.spawn(function()  
			task.wait(0.2);
			if WeaponState.gyro and WeaponState.gyro.P == 100000 then
				WeaponState.gyro.P = 400;
			end
		end);
	end
	task.spawn(function()   
		local t_part = WeaponState.part;
		if not t_part:FindFirstChild("TipAttachment") then return end
		Mouse.TargetFilter = workspace.__DEBRIS;
		local t_WorldPosition = t_part.TipAttachment.WorldPosition;
		local t_p = Mouse.Hit.p;
		local vec2 = Vector2.new(t_p.X, t_p.Z);
		local vec2_2 = Vector2.new(t_WorldPosition.X, t_WorldPosition.Z);
		local v9 = vec2 - vec2_2;
		local math_atan2_ret = math.atan2(v9.Y, v9.X);
		local math_atan_ret = math.atan((t_p.Y - t_WorldPosition.Y) / (vec2 - vec2_2).Magnitude);
		createProjectile(m_Library.LocalPlayer, t_WorldPosition, math_atan2_ret, math_atan_ret, 200);
	end);
end
function unequipWeapon(p7)  
	if not table2[p7] then return end
	local v2 = table2[p7];
	if p7 == m_Library.LocalPlayer then
		t_FireworkLauncher.Gui.Enabled = false;
	end
	enableUpperBody(p7);
	m_Library.Services.RunService:UnbindFromRenderStep("FireworkLauncher" .. v2.uid);
	if v2.weld then
		v2.weld:Destroy();
	end
	if v2.gyro then
		v2.gyro:Destroy();
	end
	v2.part:Destroy();
	for _, val1 in pairs(v2.cframeValues) do
		val1:Destroy();
	end
	local v3 = m_Library.Player.RightShoulder(p7);
	local v4 = m_Library.Player.LeftShoulder(p7);
	v3.C0 = v2.originalRightShoulder;
	v4.C0 = v2.originalLeftShoulder;
	m_Library.Network.Fire("FireworkLauncher_UnequipServer", p7)
	table2[p7] = nil;
end
function equipWeapon(p8) 
	if getWeaponState(p8) then return end
	if p8 == game.Players.LocalPlayer and not p8:GetAttribute("FireworkLauncher") then return end
	local u5 = p8 == m_Library.LocalPlayer;
	local v5 = m_Library.Functions.GenerateUID();
	local Clone_ret4 = t_FireworkLauncher2:Clone();
	Clone_ret4.Parent = workspace.__DEBRIS;
	Clone_ret4.Name = "WEAPON_" .. p8.Name;
	local table6 = {
		uid = v5,
		part = Clone_ret4,
		character = m_Library.Player.Character(p8),
		isEquipped = true,
		lastShot = nil,
		weld = nil,
		gyro = nil,
		cframeValues = {}
	};
	table2[p8] = table6;
	if u5 then
		t_Close.Activated:Connect(function()  
			unequipWeapon(m_Library.LocalPlayer);
		end);
		t_FireworkLauncher.Gui.Enabled = true;
	end
	local function make3rdPersonWeld()  
		local Weld = Instance.new("Weld");
		Weld.Part0 = Clone_ret4;
		Weld.Part1 = m_Library.Player.RightHand(p8);
		Weld.Parent = Clone_ret4;
		Weld.C0 = table3.offset * CFrame.Angles(table3.rotx, table3.roty, table3.rotz);
		table6.weld = Weld;
	end
	local u6 = m_Library.Player.PrimaryPart(p8);
	local _ = Clone_ret4.CFrame;
	if u5 then
		m_Library.Network.Fire("FireworkLauncher_Equip");
		local BodyGyro = Instance.new("BodyGyro", m_Library.Player.PrimaryPart());
		BodyGyro.MaxTorque = Vector3.new(1, 1, 1) * 100000000;
		BodyGyro.P = 400;
		table6.gyro = BodyGyro;
	end
	m_Library.Audio.Play(10231636563, u6.Position);
	local u7 = m_Library.Player.RightShoulder(p8);
	local u8 = m_Library.Player.LeftShoulder(p8);
	local CFrameValue = Instance.new("CFrameValue");
	local CFrameValue2 = Instance.new("CFrameValue");
	CFrameValue.Value = table3.lao;
	CFrameValue2.Value = table3.lar;
	local CFrameValue3 = Instance.new("CFrameValue");
	local CFrameValue4 = Instance.new("CFrameValue");
	CFrameValue3.Value = table3.rao;
	CFrameValue4.Value = table3.rar;
	local CFrameValue5 = Instance.new("CFrameValue");
	local CFrameValue6 = Instance.new("CFrameValue");
	CFrameValue5.Value = table3.fpsOffset;
	CFrameValue6.Value = table3.fpsRot;
	table6.cframeValues.leftOffset = CFrameValue;
	table6.cframeValues.leftRot = CFrameValue2;
	table6.cframeValues.rightOffset = CFrameValue3;
	table6.cframeValues.rightRot = CFrameValue4;
	table6.cframeValues.weaponOffset = CFrameValue5;
	table6.cframeValues.weaponRot = CFrameValue6;
	table6.originalRightShoulder = u7.C0;
	table6.originalLeftShoulder = u8.C0;
	disableUpperBody(p8);
	local Weld2 = Instance.new("Weld");
	Weld2.Part0 = Clone_ret4;
	Weld2.Part1 = m_Library.Player.RightHand(p8);
	Weld2.Parent = Clone_ret4;
	Weld2.C0 = table3.offset * CFrame.Angles(table3.rotx, table3.roty, table3.rotz);
	table6.weld = Weld2;
	m_Library.Services.RunService:BindToRenderStep("FireworkLauncher" .. v5, 1, function()  
		m_Library.Services.UserInputService.MouseIconEnabled = true;
		local t_weld = table6.weld;
		t_weld.C0 = table3.offset * CFrame.Angles(table3.rotx, table3.roty, table3.rotz);
		u7.C0 = CFrame.new(0.5, 0.5, 0.8) * CFrame.Angles(1.5707963267948966, 0, -0.2617993877991494);
		u8.C0 = CFrame.new(-0.8, 0.5, 0) * CFrame.Angles(1.5707963267948966, 0, 1.0471975511965976);
		if u5 then
			local vec3_2 = Vector3.new(Mouse.Hit.p.X, u6.Position.Y, Mouse.Hit.p.Z);
			local t_gyro = table6.gyro;
			t_gyro.CFrame = CFrame.new(u6.Position, vec3_2);
		end
	end);
end
function initializeOtherPlayers()  
	local v6 = m_Library.Network.Invoke("FireworkLauncher_GetPlayersEquipped");
	for key2, _ in pairs(v6) do
		local PlayerByUserId = game.Players:GetPlayerByUserId(key2);
		if not PlayerByUserId or m_Library.Players.Get() == PlayerByUserId then continue end
		equipWeapon(PlayerByUserId);
	end
end
function animateTargetHit(_, _)   
end
function allTargetsHit()  
end
function shootingLoop()  
	while true do
		m_Library.RenderStepped();
		while not bool1 do
			m_Library.RenderStepped();
		end
		local WeaponState2 = getWeaponState();
		if WeaponState2 and WeaponState2.isEquipped and (not WeaponState2.lastShot or tick() - WeaponState2.lastShot > 0.35) then
			fireWeapon();
		end
	end
end
m_Library.Network.Fired("FireworkLauncher_OtherPlayerFiredProjectile"):Connect(function(p9, p10, p11, p12, p13) 
	createProjectile(p9, p10, p11, p12, p13);
end);
m_Library.Signal.Fired("FireworkLauncher_Equip"):Connect(function()  
	equipWeapon(m_Library.LocalPlayer);
end);
m_Library.Network.Fired("FireworkLauncher_Equip"):Connect(function(p14)  
	equipWeapon(p14);
end);
m_Library.Signal.Fired("FireworkLauncher_Unequip"):Connect(function()  
	unequipWeapon(m_Library.LocalPlayer);
end);
m_Library.Network.Fired("FireworkLauncher_Unequip"):Connect(function(p15)  
	unequipWeapon(p15);
end);
m_Library.Signal.Invoked("FireworkLauncher_IsEquipped").OnInvoke = function()  
	return getWeaponState(m_Library.LocalPlayer) ~= nil;
end
m_Library.Network.Fired("FireworkLauncher_HackyEquip"):Connect(function()  
	if m_Library.Signal.Invoke("FireworkLauncher_IsEquipped") then
		m_Library.Signal.Fire("FireworkLauncher_Unequip");
		return;
	end
	m_Library.Signal.Fire("FireworkLauncher_Equip");
end);
m_Library.Services.UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)  
	if gameProcessedEvent then return end
	local WeaponState3 = getWeaponState();
	if not WeaponState3 then return end
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch or input.KeyCode == Enum.KeyCode.ButtonR2 then
		bool1 = true;
	end
end);
m_Library.Services.UserInputService.InputEnded:Connect(function(input2, gameProcessedEvent2)  
	if gameProcessedEvent2 then return end
	if input2.UserInputType == Enum.UserInputType.MouseButton1 or input2.UserInputType == Enum.UserInputType.Touch or input2.KeyCode == Enum.KeyCode.ButtonR2 then
		bool1 = false;
	end
end);
task.spawn(initializeOtherPlayers);
task.spawn(shootingLoop);
game.Players.PlayerRemoving:Connect(unequipWeapon);
  -  Editar
  04:54:13.933    -  Editar
  04:54:13.933  ----- [2817] StarterPlayer.StarterPlayerScripts.Scripts.Game.Trading Booths -----  -  Editar
  04:54:13.934  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = m_Library.Shared.IsTradingPlaza or m_Library.RunService:IsStudio();
local table1 = {};
local table2 = {};
local table3 = {};
local bool1 = false;
local Color3_fromHSV_ret = nil;
local table4 = {};
function ThrottleRequest(p1, p2) -- Line: 26
	--[[
		Upvalues:
			[1] = table4
	--]]
	if table4[p1] then
		return true;
	end
	table4[p1] = true;
	task.delay(p2 or 1, function() -- Line: 33
		--[[
			Upvalues:
				[1] = table4
				[2] = p1
		--]]
		table4[p1] = nil;
	end);
	return false;
end
function getStyle(p3) -- Line: 40
	if p3 == nil then
		return "Default Booth";
	end
	return p3;
end
function SetupModel(p4, p5) 
	local Map = m_Library.WorldCmds.GetMap();

	local Clone_ret = m_Library.Directory.Booths[getStyle(p5.Style)].Model:Clone();
	
	p5.Model = Clone_ret;
	SetupModelPosition(p4, p5.Model);
	local Interactive = Map:FindFirstChild("Interactive");
	local Booths = Interactive:FindFirstChild("Booths");
	Clone_ret.Parent = Booths;
end
function UpdateModel(p6, p7, p8) 
	if p8.Model then
		p8.Model:Destroy();
	end
	SetupModel(p7, p8);
	if p8.Owner == m_Library.LocalPlayer.UserId then
		SetupEditInteract(p6, p8);
		return;
	end
	SetupViewInteract(p6, p8);
end
function GetFullName(p9) -- Line: 79
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local str1 = "";
	local t_name = m_Library.Directory.Pets[p9.id].name;
	local t_g = p9.g;
	local t_r = p9.r;
	local t_dm = p9.dm;
	if t_g then
		str1 = "Golden ";
	elseif t_r then
		str1 = "Rainbow ";
	elseif t_dm then
		str1 = "Dark Matter ";
	end
	return str1 .. t_name;
end
function AttemptBuy(p10, p11, p12, p13) -- Line: 100
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table3
	--]]
	local v1 = m_Library.Save.Get();
	if not v1 then return end
	if ThrottleRequest("AttemptBuy", 7) then
		m_Library.Message.New("You are doing this too fast!");
		return;
	end
	if v1.Diamonds < p13 then
		m_Library.Message.New("You don't have enough Diamonds to buy this!");
		return;
	end
	local v2 = m_Library.Directory.Pets[p12.id];
	local math_ceil_ret = math.ceil(table3[p10].Listings[p11].Timestamp + 3 - workspace:GetServerTimeNow());
	if math_ceil_ret > 0 and (v2.isGift and m_Library.Message.New("Would you like to buy this " .. GetFullName(p12) .. " for " .. m_Library.Functions.Commas(p13) .. " Diamonds?", true, math_ceil_ret, true) or m_Library.Message.New("Would you like to buy this " .. GetFullName(p12) .. " pet for " .. m_Library.Functions.Commas(p13) .. " Diamonds?", true, math_ceil_ret, true)) or v2.isGift and m_Library.Message.New("Would you like to buy this " .. GetFullName(p12) .. " for " .. m_Library.Functions.Commas(p13) .. " Diamonds?", true) or m_Library.Message.New("Would you like to buy this " .. GetFullName(p12) .. " pet for " .. m_Library.Functions.Commas(p13) .. " Diamonds?", true) then
		local v21, v22 = m_Library.Network.Invoke("Purchase Trading Booth Pet", p10, p11);
		if not v21 then
			m_Library.Message.New(v22);
			return;
		end
		m_Library.Signal.Fire("Notification", "Success! \226\156\133", {
			color = Color3.fromRGB(105, 255, 168),
			sound = "rbxassetid://11648890466"
		});
	end
end
function UpdateUI(p14, p15, p16) -- Line: 150
	--[[
		Upvalues:
			[1] = m_Library
			[2] = bool1
			[3] = Color3_fromHSV_ret
	--]]
	if not p15.Model then return end
	local t_PetScroll = p15.Model.Pets.SurfaceGui.PetScroll;
	local t_Frame = p15.Model.Info.SurfaceGui.Frame;
	local t_Top = t_Frame.Top;
	local t_Bottom = t_Frame.Bottom;
	--local t_PetHolder = t_PetScroll:FindFirstChild("PetHolder");
	--if not t_PetHolder then
	local t_PetHolder = script.PetHolder
	--end
	
	for _, child1 in pairs(t_PetScroll:GetChildren()) do
		if not child1:IsA("Frame") or child1:GetAttribute("Template") or p15.Listings[child1.Name] then continue end
		child1:Destroy();
	end
	local table5 = {};
	for key2, _ in pairs(p15.Listings) do
		local v23 = m_Library.PetCmds.Get(key2);
		if v23 then
			table.insert(table5, v23);
			continue;
		end
		if not p16 then
			p16 = 1;
		end
		if p16 <= 3 then
			task.delay(0.25, UpdateUI, p14, p15, p16 + 1);
		end
		return;
	end
	local v3 = 0;
	local v4 = m_Library.Shared.SortPets(nil, table5);
	for _, val3 in ipairs(v4) do
		local t_uid = val3.uid;
		local _ = p15.Listings[t_uid];
		local t_Price = p15.Listings[t_uid].Price;
		local _ = p15.Listings[t_uid].Timestamp;
		if t_PetScroll:FindFirstChild(t_uid) then
			t_PetScroll:FindFirstChild(t_uid).LayoutOrder = v3;
			v3 = v3 + 1;
			continue;
		end
		local Clone_ret2 = t_PetHolder:Clone();
		Clone_ret2:SetAttribute("Template", false);
		Clone_ret2.Pet:Destroy();
		Clone_ret2.Visible = true;
		Clone_ret2.Name = t_uid;
		Clone_ret2.LayoutOrder = v3;
		v3 = v3 + 1;
		local Clone_ret3 = m_Library.Assets.UI.Inventory.Pet:Clone();
		m_Library.PetUI.Create(Clone_ret3, t_uid);
		Clone_ret3:SetAttribute("DirId", val3.id);
		Clone_ret3:SetAttribute("Hardcore", val3.hc);
		Clone_ret3.Parent = Clone_ret2;
		Clone_ret3:SetAttribute("SurfaceElement", true);
		Clone_ret3.AnchorPoint = t_PetHolder.Pet.AnchorPoint;
		Clone_ret3.Position = t_PetHolder.Pet.Position;
		Clone_ret3.Size = t_PetHolder.Pet.Size;
		Clone_ret2.Buy.Cost.Text = m_Library.Functions.NumberShorten(t_Price);
		m_Library.GUIFX.ButtonFX(Clone_ret2.Buy);
		if p15.Owner ~= m_Library.LocalPlayer.UserId then
			m_Library.GUIFX.ButtonFX(Clone_ret2.Buy);
			Clone_ret2.Buy.Activated:Connect(function() -- Line: 231
				--[[
					Upvalues:
						[1] = bool1
						[2] = p14
						[3] = t_uid
						[4] = val3
						[5] = t_Price
				--]]
				if not bool1 then
					bool1 = true;
					AttemptBuy(p14, t_uid, val3, t_Price);
					bool1 = false;
				end
			end);
		else
			Clone_ret2.Buy.HoverImage = "";
			Clone_ret2.Buy.PressedImage = "";
		end
		Clone_ret2.Parent = t_PetScroll;
		if not val3.r then continue end
		local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 248
			--[[
				Upvalues:
					[1] = Clone_ret3
					[2] = Clone_ret2
					[3] = Color3_fromHSV_ret
					[4] = m_Library
			--]]
			while Clone_ret3 and Clone_ret3.Parent and Clone_ret2.Parent do
				Clone_ret3.PetIcon.ImageColor3 = Color3_fromHSV_ret;
				m_Library.RenderStepped();
			end
		end);
		coroutine_wrap_ret();
	end
	local PlayerByUserId = game.Players:GetPlayerByUserId(p15.Owner);
	if PlayerByUserId then
		t_Top.Text = PlayerByUserId.DisplayName .. "'s Stand";
		local v24 = m_Library.Save.Get(PlayerByUserId);
		if v24 then
			local v26 = v24.BoothDiamondsEarned or 0;
			t_Bottom.Text = m_Library.Functions.NumberShorten(v26) .. " Diamonds Earned";
		else
			t_Bottom.Text = "0 Diamonds Earned";
		end
	else
		t_Top.Text = "Unknown's Stand";
		t_Bottom.Text = "0 Diamonds Earned";
	end
	BoothScrolling(p15);
end
function GetBooth() -- Line: 277
	--[[
		Upvalues:
			[1] = table3
			[2] = m_Library
	--]]
	for _, val4 in pairs(table3) do
		if val4.Owner ~= m_Library.LocalPlayer.UserId then continue end
		return val4;
	end
	return nil;
end
function BoothScrolling(p17) -- Line: 288
	if not p17.Model then return end
	local t_PetScroll2 = p17.Model.Pets.SurfaceGui.PetScroll;
	local UIPadding = t_PetScroll2:FindFirstChildOfClass("UIPadding");
	local UIListLayout = t_PetScroll2:FindFirstChildOfClass("UIListLayout");
	UIListLayout:ApplyLayout();
	t_PetScroll2.CanvasSize = UDim2.new(0, UIListLayout.AbsoluteContentSize.X + UIPadding.PaddingLeft.Offset + 15, 0, 0);
end
function SetupUnclaimed(p18, p19, _) -- Line: 300
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local Clone_ret4 = m_Library.Directory.Booths["Default Booth"].Model:Clone();
	local table6 = {
		ID = p18,
		Model = Clone_ret4
	};
	SetupModelPosition(p19, Clone_ret4);
	if not GetBooth() then
		SetupClaimInteract(table6);
	end
	local Map2 = m_Library.WorldCmds.GetMap();
	local Interactive2 = Map2:FindFirstChild("Interactive");
	local Booths2 = Interactive2:FindFirstChild("Booths");
	Clone_ret4.Parent = Booths2;
	BoothScrolling(table6);
	return table6;
end
function SetupClaimed(p20, p21, p22) -- Line: 325
	--[[
		Upvalues:
			[1] = table3
	--]]
	table3[p20] = p21;
	if p22 then
		SetupModel(p22, p21);
	end
	SetupViewInteract(p20, p21);
	UpdateUI(p20, p21);
	BoothScrolling(p21);
end
function SetupModelPosition(p23, p24) -- Line: 338
	local v5 = p23.Position.Y - Vector3.new(1, 1, 1).Y / 2 + p24.PrimaryPart.Size.Y / 2 - p23.Position.Y;
	p24:SetPrimaryPartCFrame(p23.CFrame + Vector3.new(0, v5, 0));
end
function ClaimBooth(p25) -- Line: 350
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table3
	--]]
	local v6, v7 = m_Library.Network.Invoke("Claim Trading Booth", p25.ID);
	if not v6 then
		m_Library.Signal.Fire("Notification", v7, {color = Color3.fromRGB(255, 46, 46)});
		return;
	end
	m_Library.Signal.Fire("Notification", "Booth claimed!", {color = Color3.fromRGB(33, 255, 218)});
	local v8 = table3[p25.ID];
	if not v8 then return end
	if v8.Model then
		m_Library.Audio.Play(11648890586, v8.Model:GetPrimaryPartCFrame().p, 1, 1, 100);
	end
end
function EditBooth(p26) -- Line: 371
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.Signal.Fire("Show Booth", p26);
end
function ViewBooth(p27) -- Line: 376
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.Signal.Fire("Show Booth", p27);
end
function SetupClaimInteract(p28) -- Line: 381
	--[[
		Upvalues:
			[1] = m_Library
			[2] = bool1
	--]]
	if p28.InteractDestroy then
		p28.InteractDestroy();
	end
	task.delay(1, function() -- Line: 386
		--[[
			Upvalues:
				[1] = p28
				[2] = m_Library
				[3] = bool1
		--]]
		if p28.Model and p28.Model.Parent then
			local Booth = p28.Model:FindFirstChild("Booth");
			if Booth then
				Booth.Transparency = 0.6;
			end
			for _, child14 in pairs(p28.Model:GetChildren()) do
				if child14.Name ~= "Backface" then continue end
				child14.Material = Enum.Material.SmoothPlastic;
				child14.Transparency = 0.6;
			end
			local Interact = p28.Model:FindFirstChild("Interact");
			local v28, v29 = m_Library.Interact.Add(Interact, {
				dist = 12,
				label = "Claim Booth!"
			});
			p28.InteractDestroy = v29;
			if v28 then
				v28:Connect(function() -- Line: 405
					--[[
						Upvalues:
							[1] = bool1
							[2] = p28
					--]]
					if not bool1 then
						bool1 = true;
						ClaimBooth(p28);
						bool1 = false;
					end
				end);
			end
		end
	end);
end
function SetupEditInteract(p29, p30) -- Line: 418
	--[[
		Upvalues:
			[1] = table3
			[2] = m_Library
			[3] = bool1
	--]]
	if p30.InteractDestroy then
		p30.InteractDestroy();
	end
	task.delay(1, function() -- Line: 423
		--[[
			Upvalues:
				[1] = table3
				[2] = p29
				[3] = p30
				[4] = m_Library
				[5] = bool1
		--]]
		if table3[p29] and table3[p29].Owner == p30.Owner then
			if not p30.Model then
				warn("Can't find booth model!", p30.Name);
				return;
			end
			local Booth2 = p30.Model:FindFirstChild("Booth");
			if Booth2 then
				Booth2.Transparency = 0;
			end
			for _, child15 in pairs(p30.Model:GetChildren()) do
				if child15.Name ~= "Backface" then continue end
				child15.Material = Enum.Material.Neon;
				child15.Transparency = 0;
			end
			local Interact2 = p30.Model:FindFirstChild("Interact");
			local v30, v31 = m_Library.Interact.Add(Interact2, {
				dist = 12,
				label = "Edit Booth!"
			});
			p30.InteractDestroy = v31;
			if v30 then
				v30:Connect(function() -- Line: 446
					--[[
						Upvalues:
							[1] = bool1
							[2] = p29
					--]]
					if not bool1 then
						bool1 = true;
						EditBooth(p29);
						bool1 = false;
					end
				end);
			end
			SetupYourBoothBillboard(p30);
		end
	end);
end
function SetupYourBoothBillboard(p31) -- Line: 461
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local t_Model = p31.Model;
	if not t_Model or t_Model:FindFirstChild("YourBoothAttachment") then return end
	local YourBoothAttachment = Instance.new("Attachment");
	YourBoothAttachment.Name = "YourBoothAttachment";
	YourBoothAttachment.Position = Vector3.new(0, 8, 0);
	YourBoothAttachment.Parent = t_Model.PrimaryPart;
	local Clone_ret5 = m_Library.Assets.Billboards.YourBooth:Clone();
	Clone_ret5.Parent = YourBoothAttachment;
end
function RemoveYourBoothBillboard(p32) -- Line: 477
	local t_Model2 = p32.Model;
	if not t_Model2 or not t_Model2:FindFirstChild("YourBoothAttachment") then return end
	t_Model2:FindFirstChild("YourBoothAttachment"):Destroy();
end
function SetupViewInteract(p33, p34) -- Line: 487
	--[[
		Upvalues:
			[1] = m_Library
			[2] = bool1
	--]]
	if not p34.Model then return end
	local Interact3 = p34.Model:FindFirstChild("Interact");
	local v9, v10 = m_Library.Interact.Add(Interact3, {
		dist = 12,
		label = "View Booth!"
	});
	if p34.InteractDestroy then
		p34.InteractDestroy();
	end
	p34.InteractDestroy = v10;
	local Booth3 = p34.Model:FindFirstChild("Booth");
	if Booth3 then
		Booth3.Transparency = 0;
	end
	for _, child5 in pairs(p34.Model:GetChildren()) do
		if child5.Name ~= "Backface" then continue end
		child5.Material = Enum.Material.Neon;
		child5.Transparency = 0;
	end
	if v9 then
		v9:Connect(function() -- Line: 514
			--[[
				Upvalues:
					[1] = bool1
					[2] = p33
			--]]
			if not bool1 then
				bool1 = true;
				ViewBooth(p33);
				bool1 = false;
			end
		end);
	end
end
function UpdateBooth(p35, p36) 
	local v11 = table3[p35];
	if not v11 then return end
	local t_Style = v11.Style;
	v11.Owner = p36.Owner;
	v11.Style = p36.Style;
	v11.Listings = p36.Listings;
	if t_Style ~= v11.Style and v11.Owner == m_Library.LocalPlayer.UserId then
		local v25 = m_Library.Save.Get();
		if v25 then
			v25.SelectedTradingBooth = v11.Style;
			m_Library.Signal.Fire("Booth Style Updated", v25.SelectedTradingBooth);
			m_Library.Audio.Play("rbxassetid://11648890653", script, 1, 1);
		end
	end
	if getStyle(p36.Style) ~= getStyle(t_Style) then
		UpdateModel(p35, table1[p35], v11);
	end
	UpdateUI(p35, v11);
end
function Setup() -- Line: 556
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
			[3] = table2
			[4] = table1
	--]]
	if not u1 then return end
	local v12 = m_Library.Network.Invoke("Get All Booths");
	local v13 = m_Library.Functions.DeepCopyUnsafe(v12);
	for key6, val6 in pairs(v13) do
		if typeof(key6) ~= "string" then continue end
		v12[tonumber(key6)] = val6;
		v12[key6] = nil;
	end
	local Map3 = m_Library.WorldCmds.GetMap();
	local BoothSpawns = Map3:FindFirstChild("BoothSpawns");
	if BoothSpawns then
		for _, child8 in pairs(BoothSpawns:GetChildren()) do
			local Attribute = child8:GetAttribute("ID");
			local v27 = v12[Attribute];
			local Part = Instance.new("Part");
			Part.Anchored = true;
			Part.Transparency = 1;
			Part.Size = Vector3.new(1, 1, 1);
			Part.CFrame = child8.PrimaryPart.CFrame;
			Part.Position = Part.Position - Vector3.new(0, child8.PrimaryPart.Size.Y / 2, 0) + Vector3.new(0, Part.Size.Y / 2, 0);
			Part.Parent = BoothSpawns;
			child8:Destroy();
			if v27 then
				SetupClaimed(Attribute, v27, Part);
			else
				table2[Attribute] = SetupUnclaimed(Attribute, Part);
			end
			table1[Attribute] = Part;
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function(p37) -- Line: 603
	if p37 == "Trading Plaza" then
		Setup();
	end
end);
m_Library.Signal.Invoked("Is Trading Booth Pet").OnInvoke = function(p38) -- Line: 610
	--[[
		Upvalues:
			[1] = table3
	--]]
	for _, val7 in pairs(table3) do
		for key9, _ in pairs(val7.Listings) do
			if key9 ~= p38 then continue end
			return true;
		end
	end
	return false;
end
m_Library.Signal.Fired("Other Stat Changed"):Connect(function(p39, p40) -- Line: 623
	--[[
		Upvalues:
			[1] = table3
	--]]
	if p40 == "BoothDiamondsEarned" then
		for key10, val10 in ipairs(table3) do
			if val10.Owner ~= p39.UserId then continue end
			UpdateUI(key10, val10);
			return;
		end
	end
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p41) -- Line: 635
	--[[
		Upvalues:
			[1] = table3
			[2] = m_Library
	--]]
	if p41 == "BoothDiamondsEarned" then
		for key11, val11 in ipairs(table3) do
			if val11.Owner ~= m_Library.LocalPlayer.UserId then continue end
			UpdateUI(key11, val11);
			return;
		end
	end
end);
m_Library.Signal.Invoked("Get Booth By Id").OnInvoke = function(p42) -- Line: 646
	--[[
		Upvalues:
			[1] = table3
	--]]
	return table3[p42];
end
m_Library.Network.Fired("Trade Booth Updated"):Connect(function(p43, p44) -- Line: 651
	UpdateBooth(p43, p44);
end);
m_Library.Network.Fired("Trading Booth Claimed"):Connect(function(p45, p46) -- Line: 656
	--[[
		Upvalues:
			[1] = table2
			[2] = table3
			[3] = table1
			[4] = m_Library
	--]]
	local v14 = table2[p45];
	if v14 then
		v14.Model:Destroy();
		table2[p45] = nil;
	end
	table3[p45] = p46;
	local v15 = table1[p45];
	if v15 then
		SetupModel(v15, p46);
	end
	if p46.Owner == m_Library.LocalPlayer.UserId then
		for _, val12 in pairs(table2) do
			if not val12.InteractDestroy then continue end
			val12.InteractDestroy();
			val12.InteractDestroy = nil;
		end
		SetupEditInteract(p45, p46);
	else
		SetupViewInteract(p45, p46);
	end
	UpdateUI(p45, p46);
	BoothScrolling(p46);
end);
m_Library.Network.Fired("Trading Booth Unclaimed"):Connect(function(p47) -- Line: 688
	--[[
		Upvalues:
			[1] = table3
			[2] = table1
			[3] = table2
			[4] = m_Library
	--]]
	local v16 = table3[p47];
	if not v16 then return end
	table3[p47] = nil;
	if v16.Model then
		v16.Model:Destroy();
	end
	local v17 = table1[p47];
	if v17 then
		table2[p47] = SetupUnclaimed(p47, v17);
	end
	if v16.Owner == m_Library.LocalPlayer.UserId then
		for _, val13 in pairs(table2) do
			if val13.InteractDestroy then continue end
			SetupClaimInteract(val13);
		end
	end
end);
m_Library.Network.Fired("Trading Booth Particle"):Connect(function(p48, _, _, p49, p50, p51) -- Line: 715
	--[[
		Upvalues:
			[1] = table3
			[2] = m_Library
	--]]
	local v18 = table3[p48];
	if not v18 or not v18.Model or not v18.Model.Table then return end
	m_Library.Audio.Play(11648890524, v18.Model:GetPrimaryPartCFrame().p, 1, 1, 80);
	local t_Booth = m_Library.Assets.Particles.Booth;
	local t_Table = v18.Model.Table;
	local t_Attachment = t_Table.Attachment;
	local Clone_ret6 = t_Booth.Diamonds:Clone();
	Clone_ret6.Rate = Clone_ret6.Rate * p49;
	local v19 = Vector2.new(Clone_ret6.Speed.Min, Clone_ret6.Speed.Max);
	if p50 then
		v19 = v19 * p50;
	end
	Clone_ret6.Speed = NumberRange.new(v19.X, v19.Y);
	local Clone_ret7 = t_Booth.Shine:Clone();
	Clone_ret7.Parent = t_Attachment;
	Clone_ret6.Parent = t_Table;
	local v20 = p51 * 1;
	task.delay(v20, function() -- Line: 742
		--[[
			Upvalues:
				[1] = Clone_ret7
				[2] = Clone_ret6
		--]]
		Clone_ret7.Enabled = false;
		Clone_ret6.Enabled = false;
		task.delay(10, function() -- Line: 746
			--[[
				Upvalues:
					[1] = Clone_ret7
					[2] = Clone_ret6
			--]]
			Clone_ret7:Destroy();
			Clone_ret6:Destroy();
		end);
	end);
end);
local u2 = 0;
game:GetService("RunService").RenderStepped:Connect(function(p52) -- Line: 755
	--[[
		Upvalues:
			[1] = u2
			[2] = Color3_fromHSV_ret
	--]]
	u2 = u2 + p52;
	Color3_fromHSV_ret = Color3.fromHSV(u2 / 2 % 1, 1, 1);
end);
  -  Editar
  04:54:13.934    -  Editar
  04:54:13.934  ----- [2818] StarterPlayer.StarterPlayerScripts.Scripts.Game.Diamond Party Sign -----  -  Editar
  04:54:13.934  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local bool1 = false;
function Prompt() -- Line: 17
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v1 = m_Library.WorldCmds.HasArea("Cave");
	if not v1 then
		m_Library.Message.New("(The door is solid and cold)");
		return;
	end
	local v2 = m_Library.Message.New("Are you willing to spend 10b Tech Coins and 500k Diamonds to open?", true);
	if v2 then
		Buy();
	end
end
function Setup() -- Line: 31
	--[[
		Upvalues:
			[1] = m_Library
			[2] = bool1
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		local t_Buy = Map:FindFirstChild("Interactive"):FindFirstChild("Diamond Party Sign").Main.SurfaceGui.Buy;
		m_Library.GUIFX.ButtonFX(t_Buy);
		t_Buy.Activated:Connect(function() -- Line: 39
			--[[
				Upvalues:
					[1] = bool1
					[2] = m_Library
			--]]
			if not bool1 then
				bool1 = true;
				local v3 = m_Library.Message.New("Do you want to spend 50b Diamonds and start a Diamond drop party?", true);
				if v3 then
					local v4 = m_Library.Message.New("Are you sure? This costs 50b Diamonds!", true);
					if v4 then
						local v5, v6 = m_Library.Network.Invoke("Diamond Party: Buy");
						if not v5 then
							m_Library.Message.New(v6 or "You cannot do this right now!");
						end
					end
				end
				bool1 = false;
			end
		end);
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function(p1) -- Line: 60
	if p1 == "Trading Plaza" then
		Setup();
	end
end);
  -  Editar
  04:54:13.934    -  Editar
  04:54:13.934  ----- [2819] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc Setup -----  -  Editar
  04:54:13.934  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local success, pcall_ret2 = pcall(function() -- Line: 15
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local t_LocalPlayer = m_Library.LocalPlayer;
	local table1 = {
		255,
		254,
		100,
		10,
		3,
		1
	};
	if t_LocalPlayer:GetRankInGroup(32485727) == 5 then
		return true;
	end
	local RankInGroup = t_LocalPlayer:GetRankInGroup(32604465);
	return m_Library.Functions.SearchDictionary(table1, RankInGroup);
end);
if success and pcall_ret2 then
	m_Library.LocalPlayer:SetAttribute("CanSign", true);
end  -  Editar
  04:54:13.934    -  Editar
  04:54:13.934  ----- [2820] StarterPlayer.StarterPlayerScripts.Scripts.Game.Exclusive Eggs -----  -  Editar
  04:54:13.935  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage.Library);
m_Library.Load();
local _ = require(game.ReplicatedStorage.Library.Modules.Pets);
local u1 = require(script.CameraSpace).new();
local ExclusiveEggs = m_Library.Things:WaitForChild("ExclusiveEggs");
local ExclusiveEggPets = m_Library.Things:WaitForChild("ExclusiveEggPets");
local t_ExclusiveEggSpacingRadius = m_Library.Shared.ExclusiveEggSpacingRadius;
local t_ExclusiveEggRadiusRange = m_Library.Shared.ExclusiveEggRadiusRange;
local t_ExclusiveEggRadiusStep = m_Library.Shared.ExclusiveEggRadiusStep;
local _ = m_Library.Shared.ExclusiveEggRadiusBuffer;
local t_ExclusiveEggMaxHeight = m_Library.Shared.ExclusiveEggMaxHeight;
local t_ExclusiveEggHeightOffset = m_Library.Shared.ExclusiveEggHeightOffset;
local _ = m_Library.Shared.ExclusiveEggMaxHeightBuffer;
local table1 = {
	Enum.NormalId.Back,
	Enum.NormalId.Front,
	Enum.NormalId.Left,
	Enum.NormalId.Right,
	Enum.NormalId.Top,
	Enum.NormalId.Bottom
};
local table2 = {};
local table3 = {
	EGG_LAND = {"rbxassetid://12435203400"},
	EGG_OPEN = {"rbxassetid://12442069637"},
	EGG_OPEN_RARE = {"rbxassetid://12442069770"},
	EGG_OPEN_HUGE = {"rbxassetid://12442070128"},
	EGG_OPEN_TITANIC = {"rbxassetid://12442069945"},
	EGG_SPAWN = {
		"rbxassetid://8049260816",
		"rbxassetid://8049260930"
	},
	EGG_THROW = {
		"rbxassetid://12435304840",
		"rbxassetid://12435304721"
	},
	EGG_SHAKE = {"rbxassetid://12435304915"},
	EGG_GROW_HUGE = {"rbxassetid://12442109123"},
	EGG_GROW_TITANIC = {"rbxassetid://12442109307"},
	PET_REMOVE = {"rbxassetid://8863194418"},
	INVENTORY_OPEN = {"rbxassetid://9846764504"}
};
function preloadAssets() -- Line: 92
	--[[
		Upvalues:
			[1] = table3
			[2] = m_Library
	--]]
	local table4 = {};
	for _, val1 in pairs(table3) do
		for _, val6 in ipairs(val1) do
			table.insert(table4, val6);
		end
	end
	m_Library.Functions.wcall(function() -- Line: 102
		--[[
			Upvalues:
				[1] = m_Library
				[2] = table4
		--]]
		m_Library.ContentProvider:PreloadAsync(table4);
	end);
end
function autoControlPoint(p1, p2) -- Line: 107
	local v1 = (p1 + p2) / 2;
	local t_Magnitude = ((p1 - p2) * Vector3.new(1, 0, 1)).Magnitude;
	local v2 = math.max(p1.Y, p2.Y) + t_Magnitude;
	return Vector3.new(v1.X, v2, v1.Z);
end
function createPetGui(p3, p4) -- Line: 117
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v3 = m_Library.Directory.Pets[p4.id];
	assert(v3);
	local v4 = v3.name;
	if p4.dm then
		v4 = "Dark Matter " .. v4;
	elseif p4.r then
		v4 = "Rainbow " .. v4;
	elseif p4.g then
		v4 = "Golden " .. v4;
	end
	if p4.sh then
		v4 = "Shiny " .. v4;
	end
	local Clone_ret = m_Library.Assets.Billboards.ExclusivePet:Clone();
	Clone_ret.Name = "__BILLBOARD";
	Clone_ret.StudsOffset = Vector3.new(0, (p3.center.Position - p3.bottom.Position).Y * 2 + 0.5, 0);
	Clone_ret.PetName.Text = v4;
	Clone_ret.PetIcon.Image = p4.dm and v3.darkMatterThumbnail or p4.g and v3.goldenThumbnail or v3.thumbnail;
	Clone_ret.Rarity.Text = v3.rarity;
	m_Library.Shared.ApplyRarityColor(Clone_ret.Rarity, v3.rarity);
	if p4.r then
		m_Library.GUIFX.Rainbow(Clone_ret.PetName, "TextColor3", 2);
		m_Library.GUIFX.Rainbow(Clone_ret.PetIcon, "ImageColor3", 2);
	end
	Clone_ret.Parent = p3.part;
	return Clone_ret;
end
function performAnimation(p5) -- Line: 163
	--[[
		Upvalues:
			[1] = m_Library
			[2] = ExclusiveEggs
			[3] = table3
			[4] = table2
			[5] = table1
			[6] = u1
			[7] = ExclusiveEggPets
	--]]
	local t_player = p5.player;
	local t_origin = p5.origin;
	local t_eggId = p5.eggId;
	local t_petData = p5.petData;
	local t_position = p5.position;
	local table5 = {
		Timing = {
			DelayPerEgg = 0.15,
			UpscaleDuration = 0.75,
			TrailLifetime = 0.35,
			MoveDuration = 0.75,
			BounceDuration = 0.55,
			DramaticPauseDuration = 1,
			ImpactParticleLifetime = 0.5,
			ShakePreDuration = 1.75,
			ShakePostDuration = 1,
			PauseDuration = 5,
			GrowScreenShakeDurationBuffer = 2,
			GrowHugeDuration = 4,
			GrowTitanicDuration = 8.5,
			GrowTitanicAuraDelay = 5.5,
			GrowTitanicAuraScreenShakeDuration = 1,
			GrowTitanicAuraParticleLifetime = 1,
			ExplodeParticleLifetime = 1.5,
			ExplodeTitanicParticleDuration = 7,
			ExplodeUpscaleDuration = 1,
			SpawnPetDelay = 0.25,
			PetLookAtPlayerDuration = 2.5,
			PetLookAtPlayerDurationOther = 4,
			PetFlyIntoPlayerDuration = 0.7,
			PetCameraMoveDuration = 0.5,
			PetCameraIdleDuration = 2.5,
			PetCameraFadeDuration = 0.5
		},
		Other = {
			BounceHeight = 2.25,
			ShakePitchMagnitude = -30,
			ShakePitchA = 1.5,
			ShakePitchB = 7,
			ShakeRollMagnitude = 30,
			ShakeRollA = 1.5,
			ShakeRollB = 7,
			GrowHugeScale = 3,
			GrowHugeScreenShakeMagnitude = 0.2,
			GrowHugeShakeRate = 60,
			GrowHugeShakeMagnitude = 5,
			GrowTitanicScale = 7,
			GrowTitanicScreenShakeMagnitude = 0.4,
			GrowTitanicShakeRate = 60,
			GrowTitanicShakeMagnitude = 10,
			GrowTitanicAuraScreenShakeMagnitude = 2,
			GrowTitanicAuraScreenShakeSmoothness = 0.1,
			GrowScreenShakeSmoothness = 0.5,
			GrowScreenShakeDistance = 400,
			ExplodeUpscaleSize = 3,
			OpenRareChance = 10,
			ExplodeTitanicShakeMagnitude = 1,
			ExplodeTitanicShakeSmoothness = 0.5,
			LuckyClickTimeout = 1,
			AnnouncementNotificationDuration = 5,
			PetLookAtPlayerFloatRate = 0.5,
			PetLookAtPlayerFloatHeight = 1,
			PetCameraDistance = 7.2,
			PetCameraTargetEMA = 0.1,
			PetCameraTargetRate = 60,
			PetCameraIdleNoUpdatesAfter = 0.75
		}
	};
	local v5 = m_Library.Directory.Pets[t_petData.id];
	assert(v5);
	local u2 = m_Library.Directory.Eggs[t_eggId];
	assert(u2);
	local Model = Instance.new("Model");
	Model:SetAttribute("Target", t_position);
	local Clone_ret2 = u2.model:Clone();
	Clone_ret2.Anchored = true;
	Clone_ret2.Parent = Model;
	Model.PrimaryPart = Clone_ret2;
	Model:PivotTo(CFrame.new(t_origin) * CFrame.fromOrientation(0, math.pi * 2 * math.random(), 0));
	local v6 = t_position + Vector3.new(0, Clone_ret2.Size.Y / 2, 0);
	for _, descendant2 in ipairs(Model:GetDescendants()) do
		if not descendant2:IsA("BasePart") then continue end
		descendant2.CanCollide = false;
		descendant2.CanQuery = true;
		descendant2.CanTouch = true;
		descendant2.CastShadow = false;
	end
	local Bottom = Instance.new("Attachment");
	Bottom.Name = "Bottom";
	Bottom.Position = Vector3.new(0, -Clone_ret2.Size.Y / 2, 0);
	Bottom.Parent = Clone_ret2;
	local Top = Instance.new("Attachment");
	Top.Name = "Top";
	Top.Position = Vector3.new(0, Clone_ret2.Size.Y / 2, 0);
	Top.Parent = Clone_ret2;
	local Clone_ret3 = script.Trail:Clone();
	Clone_ret3.Attachment0 = Bottom;
	Clone_ret3.Attachment1 = Top;
	Clone_ret3.Lifetime = table5.Timing.TrailLifetime;
	Clone_ret3.Parent = Clone_ret2;
	local ClickDetector = Instance.new("ClickDetector");
	ClickDetector.MaxActivationDistance = math.huge;
	ClickDetector.CursorIcon = "rbxassetid://12429634668";
	ClickDetector.Parent = Clone_ret2;
	local RaycastParams_new_ret = RaycastParams.new();
	RaycastParams_new_ret.FilterDescendantsInstances = {Model};
	RaycastParams_new_ret.FilterType = Enum.RaycastFilterType.Include;
	RaycastParams_new_ret.RespectCanCollide = false;
	RaycastParams_new_ret.IgnoreWater = true;
	local os_clock_ret = nil;
	ClickDetector.MouseClick:Connect(function() -- Line: 341
		--[[
			Upvalues:
				[1] = os_clock_ret
				[2] = m_Library
				[3] = Clone_ret2
				[4] = RaycastParams_new_ret
				[5] = t_petData
		--]]
		os_clock_ret = os.clock();
		local MouseLocation = m_Library.UserInputService:GetMouseLocation();
		local v50 = m_Library.Player.Camera();
		local ViewportPointToRay_ret = v50:ViewportPointToRay(MouseLocation.X, MouseLocation.Y, 0);
		local t_Origin = ViewportPointToRay_ret.Origin;
		local v51 = ViewportPointToRay_ret.Direction.Unit * (t_Origin - Clone_ret2.Position).Magnitude;
		local v52 = t_Origin + v51;
		local Raycast_ret = workspace:Raycast(t_Origin, v51, RaycastParams_new_ret);
		if Raycast_ret then
			v52 = Raycast_ret.Position;
		end
		local v53, v54 = m_Library.Functions.CreateParticleHost(v52);
		local _, v55 = m_Library.Functions.Emit(v54, nil, script:WaitForChild("LuckyParticle"));
		m_Library.Functions.AddDebris(v53, v55);
		m_Library.Network.Fire("Exclusive Eggs: Lucky", t_petData.uid);
	end);
	local u3 = m_Library.Functions.Scaler();
	u3(Model, 0);
	local u4 = m_Library.Functions.Transparency();
	Model.Parent = ExclusiveEggs;
	task.wait((p5.partyIndex - 1) * table5.Timing.DelayPerEgg);
	local v7 = (p5.partyIndex - 1) * 0.1 + 0.7;
	m_Library.Audio.Play(table3.EGG_SPAWN, Clone_ret2, v7, 0.75, 350);
	m_Library.Functions.RenderStepped(function(_, p26) -- Line: 404
		--[[
			Upvalues:
				[1] = m_Library
				[2] = u3
				[3] = Model
		--]]
		local v56 = m_Library.Functions.Easing(p26, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out);
		u3(Model, v56);
	end, table5.Timing.UpscaleDuration, true);
	u3(Model, 1);
	m_Library.Audio.Play(table3.EGG_THROW, Clone_ret2, (p5.partyIndex - 1) * 0.05 + 1, 0.5, 175);
	local u5 = m_Library.Functions.Bezier(t_origin, autoControlPoint(t_origin, v6), v6);
	local v8 = m_Library.Functions.RenderStepped(function(_, p37) -- Line: 427
		--[[
			Upvalues:
				[1] = m_Library
				[2] = Model
				[3] = u5
		--]]
		local v63 = m_Library.Functions.Easing(p37, Enum.EasingStyle.Sine, Enum.EasingDirection.In);
		Model:PivotTo(CFrame.new(u5(v63)) * Model:GetPivot().Rotation);
	end, table5.Timing.MoveDuration, true);
	v8:Wait();
	Model:PivotTo(CFrame.new(v6) * Model:GetPivot().Rotation);
	m_Library.Audio.Play(table3.EGG_LAND, Clone_ret2, 1, 0.55, 250);
	local v9, v10 = m_Library.Functions.CreateParticleHost(t_position);
	local _, v11 = m_Library.Functions.Emit(v10, function(p38) -- Line: 440
		--[[
			Upvalues:
				[1] = table5
		--]]
		p38.Lifetime = NumberRange.new(p38.Lifetime.Min * table5.Timing.ImpactParticleLifetime, p38.Lifetime.Max * table5.Timing.ImpactParticleLifetime);
	end, table.unpack(script:WaitForChild("Impact"):GetChildren()));
	m_Library.Functions.AddDebris(v9, v11);
	local Pivot = Model:GetPivot();
	local v12 = m_Library.Functions.RenderStepped(function(_, p39) -- Line: 452
		--[[
			Upvalues:
				[1] = m_Library
				[2] = Pivot
				[3] = table5
				[4] = Model
		--]]
		p39 = 1 - m_Library.Functions.Easing(p39, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out);
		Model:PivotTo(Pivot + Vector3.new(0, table5.Other.BounceHeight, 0) * p39);
	end, table5.Timing.BounceDuration, true);
	v12:Wait();
	Model:PivotTo(Pivot);
	task.wait(table5.Timing.DramaticPauseDuration);
	Clone_ret3:Destroy();
	local u6 = nil;
	local Pivot2 = Model:GetPivot();
	local u7 = table5.Timing.ShakePreDuration + table5.Timing.ShakePostDuration;
	local u8 = 0;
	local v13 = m_Library.Functions.RenderStepped(function(_, p40) -- Line: 472
		--[[
			Upvalues:
				[1] = table2
				[2] = p5
				[3] = table5
				[4] = u8
				[5] = u7
				[6] = u6
				[7] = m_Library
				[8] = table3
				[9] = Clone_ret2
				[10] = Pivot2
				[11] = Model
		--]]
		local v64 = 0;
		local table6 = {};
		for key13, _ in pairs(table2) do
			if p5 == key13 or key13.completed or p5.priority <= key13.priority then continue end
			table6[key13.priority] = true;
		end
		for _, _ in pairs(table6) do
			v64 = v64 + table5.Timing.PauseDuration;
		end
		u8 = math.max(u8, v64);
		if u7 + u8 <= p40 then
			return true;
		end
		if p40 >= 0.25 and not u6 then
			u6 = m_Library.Audio.Play(table3.EGG_SHAKE, Clone_ret2, {
				0.9,
				1.1
			}, 0.035, 175);
		end
		local v65 = p40 / (table5.Timing.ShakePreDuration + table5.Timing.ShakePostDuration);
		local math_clamp_ret = math.clamp(v65, 0, 1.5);
		local math_clamp_ret2 = math.clamp(p40 / table5.Timing.ShakePreDuration, 0, 1);
		local v66 = m_Library.Functions.Easing(math_clamp_ret2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out);
		Model:PivotTo(Pivot2 * CFrame.fromOrientation(math.rad(table5.Other.ShakePitchMagnitude * math.sin(math.pi * 2 * (v65 * (math_clamp_ret * table5.Other.ShakePitchA)) * table5.Other.ShakePitchB) * v66), 0, (math.rad(table5.Other.ShakeRollMagnitude * math.sin(math.pi * 2 * (v65 * (math_clamp_ret * table5.Other.ShakeRollA)) * table5.Other.ShakeRollB) * v66))));
	end);
	v13:Wait();
	Model:PivotTo(Pivot2);
	if u6 then
		u6:Stop();
		u6:Destroy();
	end
	ClickDetector:Destroy();
	local u9 = 1;
	local v14 = 0;
	local u10 = 0;
	local u11 = 0;
	if v5.titanic then
		u9 = table5.Other.GrowTitanicScale;
		v14 = table5.Timing.GrowTitanicDuration;
		u10 = table5.Other.GrowTitanicScreenShakeMagnitude;
		u11 = table5.Other.GrowTitanicShakeRate;
		local _ = table5.Other.GrowTitanicShakeMagnitude;
	elseif v5.huge then
		u9 = table5.Other.GrowHugeScale;
		v14 = table5.Timing.GrowHugeDuration;
		u10 = table5.Other.GrowHugeScreenShakeMagnitude;
		u11 = table5.Other.GrowHugeShakeRate;
		local _ = table5.Other.GrowHugeShakeMagnitude;
	end
	if u9 > 1 then
		local v32 = nil;
		if v5.titanic then
			v32 = m_Library.Audio.Play(table3.EGG_GROW_TITANIC, Clone_ret2.CFrame, 1, 3.25, 1000);
		elseif v5.huge then
			v32 = m_Library.Audio.Play(table3.EGG_GROW_HUGE, Clone_ret2.CFrame, 1, 2.25, 700);
		end
		if u10 > 0 then
			local v67 = t_player == m_Library.LocalPlayer;
			if not v67 then
				local v78 = m_Library.Player.Optional.PrimaryPart(m_Library.LocalPlayer);
				if v78 and (v78.Position - t_origin).Magnitude < table5.Other.GrowScreenShakeDistance then
					v67 = true;
				end
			end
			if v67 then
				local u25 = v14 + table5.Timing.GrowScreenShakeDurationBuffer;
				m_Library.Shake.Create(u25, u10, table5.Other.GrowScreenShakeSmoothness, true);
				if v5.titanic then
					task.delay(table5.Timing.GrowTitanicAuraDelay, function() -- Line: 601
						--[[
							Upvalues:
								[1] = m_Library
								[2] = table5
								[3] = u25
								[4] = u10
						--]]
						m_Library.Shake.Create(table5.Timing.GrowTitanicAuraScreenShakeDuration, table5.Other.GrowTitanicAuraScreenShakeMagnitude, table5.Other.GrowTitanicAuraScreenShakeSmoothness, false);
						task.delay(table5.Timing.GrowTitanicAuraScreenShakeDuration, function() -- Line: 610
							--[[
								Upvalues:
									[1] = m_Library
									[2] = u25
									[3] = table5
									[4] = u10
							--]]
							m_Library.Shake.Create(u25 - table5.Timing.GrowTitanicAuraDelay - table5.Timing.GrowTitanicAuraScreenShakeDuration, u10, table5.Other.GrowScreenShakeSmoothness, false);
						end);
					end);
				end
			end
		end
		if v5.titanic then
			task.delay(table5.Timing.GrowTitanicAuraDelay, function() -- Line: 624
				--[[
					Upvalues:
						[1] = m_Library
						[2] = Clone_ret2
						[3] = table5
						[4] = u9
				--]]
				local v105, v106 = m_Library.Functions.CreateParticleHost(Clone_ret2.Position);
				local _, v107 = m_Library.Functions.Emit(v106, function(p58) -- Line: 628
					--[[
						Upvalues:
							[1] = table5
							[2] = m_Library
							[3] = u9
					--]]
					p58.Lifetime = NumberRange.new(p58.Lifetime.Min * table5.Timing.GrowTitanicAuraParticleLifetime, p58.Lifetime.Max * table5.Timing.GrowTitanicAuraParticleLifetime);
					m_Library.Functions.ScaleParticle(p58, u9 * 2.5);
				end, table.unpack(script:WaitForChild("TitanicAura"):GetChildren()));
				m_Library.Functions.AddDebris(v105, v107);
			end);
		end
		local table7 = {};
		if v5.titanic then
			for _, descendant15 in ipairs(Model:GetDescendants()) do
				for _, val18 in ipairs(table1) do
					local _SELECTIONFX = Instance.new("Decal");
					_SELECTIONFX.Texture = "rbxassetid://6381483576";
					_SELECTIONFX.Name = "_SELECTIONFX";
					_SELECTIONFX.Transparency = 1;
					_SELECTIONFX.Face = val18;
					_SELECTIONFX.Parent = descendant15;
					table.insert(table7, _SELECTIONFX);
				end
			end
			local v68 = m_Library.Functions.RenderStepped(function(_, p57) -- Line: 657
				--[[
					Upvalues:
						[1] = m_Library
						[2] = table7
				--]]
				local v108 = m_Library.Functions.Easing(p57, Enum.EasingStyle.Circular, Enum.EasingDirection.In);
				for _, val21 in ipairs(table7) do
					val21.Transparency = 1 - v108;
				end
			end, v14, true);
			v68:Then(function() -- Line: 662
				--[[
					Upvalues:
						[1] = table7
				--]]
				for _, val19 in ipairs(table7) do
					val19:Destroy();
				end
			end);
		end
		local Pivot7 = Model:GetPivot();
		local v33 = m_Library.Functions.RenderStepped(function(_, p49) -- Line: 671
			--[[
				Upvalues:
					[1] = m_Library
					[2] = u3
					[3] = Model
					[4] = u9
					[5] = Pivot7
					[6] = u11
					[7] = u10
			--]]
			local v79 = m_Library.Functions.Easing(p49, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut);
			u3(Model, (1 - v79) * 1 + u9 * v79, (Vector3.new(0, -0.5, 0)));
			local Pivot8 = Model:GetPivot();
			Model:PivotTo(Pivot8 - (Pivot8.Position - Pivot7.Position) * Vector3.new(1, 0, 1) + Vector3.new(math.noise(v79 * u11, -u10, u10), 0, math.noise(-v79 * u11, -u10, u10)));
		end, v14, true);
		v33:Wait();
		u3(Model, u9);
		local Pivot9 = Model:GetPivot();
		Model:PivotTo(Pivot9 - (Pivot9.Position - Pivot7.Position) * Vector3.new(1, 0, 1));
		for _, val7 in ipairs(table7) do
			val7:Destroy();
		end
		if v32 then
			v32:Stop();
			v32:Destroy();
		end
	end
	if v5.titanic then
		m_Library.Audio.Play(table3.EGG_OPEN_TITANIC, Clone_ret2.CFrame, 1, 6, 1000);
	elseif v5.huge then
		m_Library.Audio.Play(table3.EGG_OPEN_HUGE, Clone_ret2.CFrame, 1, 3, 700);
	elseif p5.chance <= table5.Other.OpenRareChance / 100 then
		m_Library.Audio.Play(table3.EGG_OPEN_RARE, Clone_ret2.CFrame, 1, 1.1, 500);
	else
		m_Library.Audio.Play(table3.EGG_OPEN, Clone_ret2.CFrame, 1, 1, 400);
	end
	local v15, v16 = m_Library.Functions.CreateParticleHost(Clone_ret2.Position);
	local _, v17 = m_Library.Functions.Emit(v16, function(p41) -- Line: 720
		--[[
			Upvalues:
				[1] = table5
				[2] = m_Library
				[3] = u9
		--]]
		p41.Lifetime = NumberRange.new(p41.Lifetime.Min * table5.Timing.ExplodeParticleLifetime, p41.Lifetime.Max * table5.Timing.ExplodeParticleLifetime);
		m_Library.Functions.ScaleParticle(p41, u9);
		local math_ceil_ret = math.ceil((p41:GetAttribute("EmitCount") or p41.Rate) * u9);
		p41:SetAttribute("EmitCount", math_ceil_ret);
	end, table.unpack(script:WaitForChild("Explode"):GetChildren()));
	m_Library.Functions.AddDebris(v15, v17);
	if v5.titanic then
		local v34, v35 = m_Library.Functions.CreateParticleHost(Clone_ret2.Position);
		local _, v36 = m_Library.Functions.Emit(v35, function(p50) -- Line: 742
			--[[
				Upvalues:
					[1] = table5
			--]]
			p50.Lifetime = NumberRange.new(p50.Lifetime.Min * table5.Timing.ExplodeParticleLifetime, p50.Lifetime.Max * table5.Timing.ExplodeParticleLifetime);
		end, table.unpack(script:WaitForChild("TitanicExplode"):GetChildren()));
		m_Library.Functions.AddDebris(v34, v36);
		local u21, _ = m_Library.Functions.CreateParticleHost(t_position);
		local Children = script:WaitForChild("TitanicExplodeAOE"):GetChildren();
		for key8, val8 in ipairs(Children) do
			local Clone_ret4 = val8:Clone();
			Children[key8] = Clone_ret4;
			Clone_ret4.Parent = u21;
		end
		task.delay(table5.Timing.ExplodeTitanicParticleDuration, function() -- Line: 760
			--[[
				Upvalues:
					[1] = Children
					[2] = m_Library
					[3] = u21
			--]]
			local v73 = 0;
			for _, val16 in ipairs(Children) do
				val16.Enabled = false;
				v73 = math.max(v73, val16.Lifetime.Max);
			end
			m_Library.Functions.AddDebris(u21, v73);
		end);
		m_Library.Shake.Create(table5.Timing.ExplodeTitanicParticleDuration, table5.Other.ExplodeTitanicShakeMagnitude, table5.Other.ExplodeTitanicShakeSmoothness, true);
	end
	local Pivot3 = Model:GetPivot();
	for _, descendant3 in ipairs(Model:GetDescendants()) do
		if not descendant3:IsA("MeshPart") then continue end
		descendant3.TextureID = "";
		descendant3.Color = Color3.new(1, 1, 1);
		descendant3.Material = Enum.Material.SmoothPlastic;
	end
	m_Library.Functions.RenderStepped(function(_, p27) -- Line: 790
		--[[
			Upvalues:
				[1] = m_Library
				[2] = u3
				[3] = Model
				[4] = u9
				[5] = table5
				[6] = u4
		--]]
		local v57 = m_Library.Functions.Easing(p27, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out);
		u3(Model, u9 * (1 - v57) + u9 * table5.Other.ExplodeUpscaleSize * v57, (Vector3.new(0, -0.5, 0)));
		u4(Model, 1, v57);
	end, table5.Timing.ExplodeUpscaleDuration, true);
	u3(Model, u9 * table5.Other.ExplodeUpscaleSize, (Vector3.new(0, -0.5, 0)));
	u4(Model, 1, 1);
	local u12 = m_Library.PetCmds.Spawn(t_petData, t_player, true);
	local createPetGui_ret = createPetGui(u12, t_petData);
	local t_part = u12.part;
	local function getPetTarget() -- Line: 808
		--[[
			Upvalues:
				[1] = t_origin
				[2] = m_Library
				[3] = t_player
		--]]
		local v58 = t_origin;
		local v59 = m_Library.Player.PrimaryPart(t_player);
		if v59 then
			v58 = v59:GetPivot().Position;
		end
		return v58;
	end
	local function lookAtTarget(p28, p29) -- Line: 821
		local vec3 = Vector3.new(p29.X, p28.Y, p29.Z);
		if (p28.Position - vec3).Magnitude < 0.001 then
			return p28;
		end
		return CFrame.lookAt(p28.Position, vec3);
	end
	local v19 = t_origin;
	local v20 = m_Library.Player.PrimaryPart(t_player);
	if v20 then
		v19 = v20:GetPivot().Position;
	end
	t_part:PivotTo(lookAtTarget(Pivot3, v19));
	local u13 = t_player == m_Library.LocalPlayer and u1.add() or nil;
	task.wait(table5.Timing.SpawnPetDelay);
	local v21, v22, v23 = m_Library.Shared.HatchMessage(t_petData, t_player);
	if v23 then
		m_Library.ChatMsg.New(v21, v22);
	end
	if v5.titanic or v5.huge then
		m_Library.Signal.Fire("Notification", v21, {
			color = v22,
			force = true,
			time = table5.Other.AnnouncementNotificationDuration
		});
	end
	local u14 = m_Library.Functions.RenderStepped(function(p42, p43) -- Line: 859
		--[[
			Upvalues:
				[1] = t_part
				[2] = u12
				[3] = m_Library
				[4] = t_petData
		--]]
		if not t_part.Parent then
			return true;
		end
		if u12.moving then
			local v80 = u12;
			v80.movingTick = v80.movingTick + p42;
		else
			u12.movingTick = 0;
		end
		m_Library.PetCmds.Effects(u12, t_petData, p43, p42, true);
	end);
	t_part.Destroying:Connect(function() -- Line: 871
		--[[
			Upvalues:
				[1] = u14
		--]]
		u14:Disconnect();
	end);
	t_part.Parent = ExclusiveEggPets;
	local v24 = t_player == m_Library.LocalPlayer and table5.Timing.PetLookAtPlayerDuration or table5.Timing.PetLookAtPlayerDurationOther;
	local Pivot4 = t_part:GetPivot();
	local v25 = m_Library.Functions.RenderStepped(function(_, p44) -- Line: 883
		--[[
			Upvalues:
				[1] = Pivot4
				[2] = table5
				[3] = t_origin
				[4] = m_Library
				[5] = t_player
				[6] = t_part
		--]]
		local v69 = Pivot4 + Vector3.new(0, math.sin(math.pi * 2 * p44 * table5.Other.PetLookAtPlayerFloatRate) * table5.Other.PetLookAtPlayerFloatHeight, 0);
		local v70 = t_origin;
		local v71 = m_Library.Player.PrimaryPart(t_player);
		if v71 then
			v70 = v71:GetPivot().Position;
		end
		local vec3_2 = Vector3.new(v70.X, v69.Y, v70.Z);
		local v72 = (v69.Position - vec3_2).Magnitude < 0.001 and v69 or CFrame.lookAt(v69.Position, vec3_2);
		t_part:PivotTo(v72);
	end, v24, true);
	v25:Wait();
	Model:Destroy();
	local function hitCameraSFX(p30, p31) -- Line: 898
		--[[
			Upvalues:
				[1] = t_petData
				[2] = m_Library
				[3] = u2
		--]]
		if t_petData.r then
			m_Library.Audio.Play("rbxassetid://7503155199", p30, 1, p31 * 1, 100);
		elseif t_petData.g and not u2.isGolden then
			m_Library.Audio.Play("rbxassetid://7503155258", p30, 1, p31 * 0.85, 100);
		end
		if t_petData.sh then
			m_Library.Audio.Play("rbxassetid://11788145043", p30, 1, p31 * 1, 100);
		end
	end
	if t_player == m_Library.LocalPlayer then
		if t_player == m_Library.LocalPlayer then
			local _ = m_Library.Variables.OpeningEgg <= 0;
			local t_Variables2 = m_Library.Variables;
			t_Variables2.OpeningEgg = t_Variables2.OpeningEgg + 1;
			m_Library.Signal.Fire("Opening Egg", t_eggId);
		end
		local workspace_CurrentCamera = workspace.CurrentCamera;
		t_part.Parent = workspace_CurrentCamera;
		local function computeCameraSpace() -- Line: 927
			--[[
				Upvalues:
					[1] = u1
					[2] = u13
					[3] = m_Library
			--]]
			local v74 = u1.compute(u13);
			return m_Library.Functions.Map2(v74, Vector2.new(0, 0), Vector2.new(1, 1), Vector2.new(0.05, 0), Vector2.new(0.95, 0.85));
		end
		local function computePetCameraTarget(p45, p46) -- Line: 937
			--[[
				Upvalues:
					[1] = workspace_CurrentCamera
			--]]
			local v75 = workspace_CurrentCamera.ViewportSize * p45;
			local ViewportPointToRay_ret2 = workspace_CurrentCamera:ViewportPointToRay(v75.X, v75.Y, p46);
			return CFrame.new(ViewportPointToRay_ret2.Origin) * CFrame.lookAt(Vector3.new(), -ViewportPointToRay_ret2.Direction, workspace_CurrentCamera.CFrame.UpVector);
		end
		local function updateRelativePos(p47, p48) -- Line: 944
			--[[
				Upvalues:
					[1] = computeCameraSpace
					[2] = table5
			--]]
			local v76 = computeCameraSpace();
			local math_clamp_ret3 = math.clamp(1 - math.pow(1 - table5.Other.PetCameraTargetEMA, p48 * table5.Other.PetCameraTargetRate), 0, 1);
			p47 = p47:Lerp(v76, math_clamp_ret3);
			return p47;
		end
		local v37 = v5.titanic and 7.5 or v5.huge and 4.5 or 1.5;
		local v38 = (v37 + 0.5) / 2;
		local vec3_4 = Vector3.new(0, u12.bottom.Position.Y - v37 / 2, 0);
		local v39 = v38 * 1.3;
		createPetGui_ret.Size = UDim2.new(createPetGui_ret.Size.X.Scale / 2.5 * v39, createPetGui_ret.Size.X.Offset, createPetGui_ret.Size.Y.Scale * v39, createPetGui_ret.Size.Y.Offset);
		createPetGui_ret.StudsOffset = vec3_4;
		createPetGui_ret.AlwaysOnTop = true;
		local u23 = computeCameraSpace();
		local t_PetCameraDistance = table5.Other.PetCameraDistance;
		local u24 = v5.titanic and t_PetCameraDistance + 9.15 or v5.huge and t_PetCameraDistance + 2.7 or t_PetCameraDistance + 1.3;
		u12.moving = true;
		local Pivot6 = t_part:GetPivot();
		local v40 = m_Library.Functions.RenderStepped(function(p51, p52) -- Line: 992
			--[[
				Upvalues:
					[1] = m_Library
					[2] = u23
					[3] = table5
					[4] = computeCameraSpace
					[5] = u24
					[6] = workspace_CurrentCamera
					[7] = Pivot6
					[8] = t_part
			--]]
			local v81 = m_Library.Functions.Easing(p52, Enum.EasingStyle.Sine, Enum.EasingDirection.Out);
			local v82 = u23;
			local v83 = p51 * table5.Timing.PetCameraMoveDuration;
			local v84 = computeCameraSpace();
			local math_clamp_ret4 = math.clamp(1 - math.pow(1 - table5.Other.PetCameraTargetEMA, v83 * table5.Other.PetCameraTargetRate), 0, 1);
			u23 = v82:Lerp(v84, math_clamp_ret4);
			local v85 = u23;
			local v86 = u24;
			local v87 = workspace_CurrentCamera.ViewportSize * v85;
			local ViewportPointToRay_ret3 = workspace_CurrentCamera:ViewportPointToRay(v87.X, v87.Y, v86);
			local Lerp_ret = Pivot6:Lerp(CFrame.new(ViewportPointToRay_ret3.Origin) * CFrame.lookAt(Vector3.new(), -ViewportPointToRay_ret3.Direction, workspace_CurrentCamera.CFrame.UpVector), v81);
			t_part:PivotTo(Lerp_ret);
		end, table5.Timing.PetCameraMoveDuration, true);
		v40:Wait();
		u12.moving = false;
		hitCameraSFX(script, 1);
		local v41 = m_Library.Functions.RenderStepped(function(p53, p54) -- Line: 1006
			--[[
				Upvalues:
					[1] = table5
					[2] = u23
					[3] = computeCameraSpace
					[4] = u24
					[5] = workspace_CurrentCamera
					[6] = t_part
			--]]
			if p54 <= table5.Other.PetCameraIdleNoUpdatesAfter then
				local v109 = u23;
				local v110 = p53 * table5.Timing.PetCameraIdleDuration;
				local v111 = computeCameraSpace();
				local math_clamp_ret5 = math.clamp(1 - math.pow(1 - table5.Other.PetCameraTargetEMA, v110 * table5.Other.PetCameraTargetRate), 0, 1);
				u23 = v109:Lerp(v111, math_clamp_ret5);
			end
			local v88 = u23;
			local v89 = u24;
			local v90 = workspace_CurrentCamera.ViewportSize * v88;
			local ViewportPointToRay_ret4 = workspace_CurrentCamera:ViewportPointToRay(v90.X, v90.Y, v89);
			t_part:PivotTo(CFrame.new(ViewportPointToRay_ret4.Origin) * CFrame.lookAt(Vector3.new(), -ViewportPointToRay_ret4.Direction, workspace_CurrentCamera.CFrame.UpVector));
		end, table5.Timing.PetCameraIdleDuration, true);
		v41:Wait();
		local v42 = m_Library.Functions.RenderStepped(function(_, p55) -- Line: 1016
			--[[
				Upvalues:
					[1] = m_Library
					[2] = u23
					[3] = u24
					[4] = workspace_CurrentCamera
					[5] = t_part
					[6] = u4
					[7] = u3
			--]]
			local v91 = m_Library.Functions.Easing(p55, Enum.EasingStyle.Cubic, Enum.EasingDirection.In);
			local v92 = m_Library.Functions.Bezier2(u23, Vector2.new(0.5, 0.1), Vector2.new(0.5, 0.9));
			local v93 = v92(v91);
			local v94 = u24;
			local v95 = workspace_CurrentCamera.ViewportSize * v93;
			local ViewportPointToRay_ret5 = workspace_CurrentCamera:ViewportPointToRay(v95.X, v95.Y, v94);
			t_part:PivotTo(CFrame.new(ViewportPointToRay_ret5.Origin) * CFrame.lookAt(Vector3.new(), -ViewportPointToRay_ret5.Direction, workspace_CurrentCamera.CFrame.UpVector));
			local v96 = m_Library.Functions.Easing(p55, Enum.EasingStyle.Exponential, Enum.EasingDirection.In);
			u4(t_part, 1, v96);
			u3(t_part, 1 - v96);
		end, table5.Timing.PetCameraFadeDuration, true);
		v42:Wait();
		u4(t_part, 1, 1);
		u3(t_part, 0);
		if t_player == m_Library.LocalPlayer then
			local t_Variables = m_Library.Variables;
			t_Variables.OpeningEgg = t_Variables.OpeningEgg - 1;
			m_Library.Signal.Fire("Done Opening Egg", t_eggId);
			local _ = m_Library.Variables.OpeningEgg <= 0;
		end
	else
		local Pivot5 = t_part:GetPivot();
		u12.moving = true;
		local v43 = m_Library.Functions.RenderStepped(function(_, p56) -- Line: 1054
			--[[
				Upvalues:
					[1] = Pivot5
					[2] = t_origin
					[3] = m_Library
					[4] = t_player
					[5] = t_part
					[6] = u4
					[7] = u3
			--]]
			local v97 = Pivot5;
			local v98 = t_origin;
			local v99 = m_Library.Player.PrimaryPart(t_player);
			if v99 then
				v98 = v99:GetPivot().Position;
			end
			local v100 = v98;
			local v101 = m_Library.Functions.Bezier(Pivot5.Position, autoControlPoint(Pivot5.Position, v100), v100);
			local v102 = CFrame.new(v101(p56)) * v97.Rotation;
			local vec3_3 = Vector3.new(v100.X, v102.Y, v100.Z);
			local v103 = (v102.Position - vec3_3).Magnitude < 0.001 and v102 or CFrame.lookAt(v102.Position, vec3_3);
			t_part:PivotTo(v103);
			local v104 = m_Library.Functions.Easing(p56, Enum.EasingStyle.Exponential, Enum.EasingDirection.In);
			u4(t_part, 1, v104);
			u3(t_part, 1 - v104);
		end, table5.Timing.PetFlyIntoPlayerDuration, true);
		v43:Wait();
		u4(t_part, 1, 1);
		u3(t_part, 0);
		u12.moving = false;
		hitCameraSFX(t_part.Position, 0.5);
	end
	m_Library.Audio.Play(table3.PET_REMOVE, t_part.Position, m_Library.Random.number(0.95, 1.05), 0.4, 100);
	u14:Disconnect();
	t_part:Destroy();
	if u13 then
		u1.remove(u13);
	end
end
function performOpen(p6, p7, p8, p9, p10, p11) -- Line: 1098
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table2
	--]]
	m_Library.Asserts.Player(p6);
	m_Library.Asserts.finiteVector3(p7);
	m_Library.Asserts.string(p8);
	m_Library.Asserts.array.table(p9);
	m_Library.Asserts.array.finiteVector3(p10);
	m_Library.Asserts.array.number(p11);
	assert(m_Library.Directory.Eggs[p8]);
	assert(#p9 >= 1);
	assert(#p9 == #p10);
	assert(#p9 == #p11);
	if p6 == m_Library.LocalPlayer then
		local table10 = {};
		for _, val9 in ipairs(p9) do
			table.insert(table10, val9.uid);
		end
		m_Library.Signal.Fire("Hide Pets", table10);
	end
	local table8 = {};
	local v27 = #p9;
	for index1 = 1, v27 do
		local v44 = p9[index1];
		local v45 = p10[index1];
		local v46 = p11[index1];
		local v47 = m_Library.Directory.Pets[v44.id];
		local v48 = v47.titanic and 3 or v47.huge and 2 or 1;
		local table9 = {
			player = p6,
			origin = p7,
			eggId = p8,
			petData = v44,
			position = v45,
			chance = v46,
			priority = v48,
			partyIndex = index1,
			partyCount = v27,
			completed = false
		};
		table.insert(table8, table9);
		table2[table9] = true;
	end
	preloadAssets();
	local function onComplete() -- Line: 1175
		--[[
			Upvalues:
				[1] = p6
				[2] = m_Library
				[3] = p9
		--]]
		if p6 == m_Library.LocalPlayer then
			for _, val17 in ipairs(p9) do
				task.spawn(function() -- Line: 1179
					--[[
						Upvalues:
							[1] = m_Library
							[2] = val17
							[3] = p6
					--]]
					local v116, _ = m_Library.Network.Invoke("Equip Pet", val17.uid);
					if v116 then
						m_Library.PetCmds.LocalEquipPet(p6, val17.uid, true);
					end
				end);
			end
		end
	end
	local u16 = #table8;
	for _, val4 in ipairs(table8) do
		task.spawn(function() -- Line: 1192
			--[[
				Upvalues:
					[1] = m_Library
					[2] = val4
					[3] = table2
					[4] = p6
					[5] = u16
					[6] = onComplete
			--]]
			m_Library.Functions.wcall(function() -- Line: 1194
				--[[
					Upvalues:
						[1] = val4
				--]]
				performAnimation(val4);
			end);
			val4.completed = true;
			table2[val4] = nil;
			if p6 == m_Library.LocalPlayer then
				m_Library.Signal.Fire("Show Pets", {val4.petData.uid});
			end
			u16 = u16 - 1;
			if u16 <= 0 then
				onComplete();
			end
		end);
	end
end
function computePositions(p12, p13) -- Line: 1216
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table2
			[3] = t_ExclusiveEggHeightOffset
			[4] = t_ExclusiveEggMaxHeight
			[5] = t_ExclusiveEggSpacingRadius
			[6] = t_ExclusiveEggRadiusRange
			[7] = t_ExclusiveEggRadiusStep
	--]]
	local v28 = p12 or 1;
	local u17 = 360 / (v28 * 6);
	local t_Character = m_Library.LocalPlayer.Character;
	if not t_Character then
		return nil;
	end
	assert(t_Character);
	local t_PrimaryPart = t_Character.PrimaryPart;
	if not t_PrimaryPart then
		return nil;
	end
	assert(t_PrimaryPart);
	local Humanoid = t_Character:FindFirstChildOfClass("Humanoid");
	if not Humanoid then
		return nil;
	end
	assert(Humanoid);
	local Pivot10 = t_Character:GetPivot();
	local t_Position = Pivot10.Position;
	local u18 = t_Position - Pivot10.UpVector * Vector3.new(0, Humanoid.HipHeight + t_PrimaryPart.Size.Y / 2, 0);
	if not m_Library.WorldCmds.HasLoaded() then
		return nil;
	end
	local Map = m_Library.WorldCmds.GetMap();
	local table11 = {};
	for key5, _ in pairs(table2) do
		if key5.completed then continue end
		table.insert(table11, key5.position);
	end
	if p13 then
		for _, val10 in ipairs(p13) do
			table.insert(table11, val10);
		end
	end
	local table12 = {
		Map,
		m_Library.Things:WaitForChild("Comets")
	};
	local RaycastParams_new_ret2 = RaycastParams.new();
	RaycastParams_new_ret2.FilterDescendantsInstances = table12;
	RaycastParams_new_ret2.FilterType = Enum.RaycastFilterType.Include;
	RaycastParams_new_ret2.IgnoreWater = false;
	RaycastParams_new_ret2.RespectCanCollide = false;
	local function randomPosition(p32) -- Line: 1301
		--[[
			Upvalues:
				[1] = t_Position
		--]]
		local v60 = math.pi * 2 * math.random();
		return t_Position + Vector3.new(p32 * math.cos(v60), 0, p32 * math.sin(v60));
	end
	local function findGround(p33) -- Line: 1311
		--[[
			Upvalues:
				[1] = t_ExclusiveEggHeightOffset
				[2] = t_ExclusiveEggMaxHeight
				[3] = RaycastParams_new_ret2
		--]]
		local Raycast_ret2 = workspace:Raycast(p33 + Vector3.new(0, t_ExclusiveEggHeightOffset, 0), Vector3.new(0, -(t_ExclusiveEggMaxHeight + t_ExclusiveEggHeightOffset), 0), RaycastParams_new_ret2);
		if not Raycast_ret2 then
			return nil;
		end
		assert(Raycast_ret2);
		local t_Instance = Raycast_ret2.Instance;
		if not t_Instance then
			return nil;
		end
		assert(t_Instance);
		return Raycast_ret2;
	end
	local function hasConflict(p34) -- Line: 1342
		--[[
			Upvalues:
				[1] = table11
				[2] = t_ExclusiveEggSpacingRadius
		--]]
		for _, val11 in ipairs(table11) do
			if (p34 - val11).Magnitude > t_ExclusiveEggSpacingRadius * 2 then continue end
			return true;
		end
		return false;
	end
	local function canSee(p35, p36) -- Line: 1357
		--[[
			Upvalues:
				[1] = t_ExclusiveEggSpacingRadius
				[2] = t_Position
				[3] = u18
				[4] = RaycastParams_new_ret2
		--]]
		local workspace_CurrentCamera2 = workspace.CurrentCamera;
		local v61 = p35 + Vector3.new(0, t_ExclusiveEggSpacingRadius, 0);
		local vec3_5 = Vector3.new(0, 0.25, 0);
		local table13 = {
			{
				workspace_CurrentCamera2.Focus.Position,
				v61
			},
			{
				t_Position,
				v61
			},
			{
				u18 + vec3_5,
				v61
			},
			{
				workspace_CurrentCamera2.Focus.Position,
				p35
			},
			{
				t_Position,
				p35
			},
			{
				u18 + vec3_5,
				p35
			}
		};
		for _, val12 in ipairs(table13) do
			local v77 = val12[1];
			local Raycast_ret3 = workspace:Raycast(v77, val12[2] - v77, RaycastParams_new_ret2);
			if not Raycast_ret3 then continue end
			assert(Raycast_ret3);
			if Raycast_ret3.Instance == p36 then continue end
			return false;
		end
		return true;
	end
	local function tryFind() -- Line: 1402
		--[[
			Upvalues:
				[1] = Pivot10
				[2] = t_ExclusiveEggRadiusRange
				[3] = t_ExclusiveEggRadiusStep
				[4] = u17
				[5] = t_ExclusiveEggSpacingRadius
				[6] = t_Position
				[7] = findGround
				[8] = table11
				[9] = canSee
		--]]
		local table14 = {
			-1,
			1
		};
		local _, ToOrientation_ret2, _ = Pivot10:ToOrientation();
		local v62 = ToOrientation_ret2 + math.pi / 2;
		for index3 = t_ExclusiveEggRadiusRange.X, t_ExclusiveEggRadiusRange.Y, t_ExclusiveEggRadiusStep do
			for index4 = 0, 180, u17 do
				for _, val20 in ipairs(table14) do
					local v112 = index4 * val20;
					local v113 = t_ExclusiveEggSpacingRadius + index3;
					local v114 = math.rad(v112) - v62;
					local v115 = findGround(t_Position + Vector3.new(v113 * math.cos(v114), 0, v113 * math.sin(v114)));
					if not v115 then continue end
					assert(v115);
					local t_Position2 = v115.Position;
					local control1;
					for _, val22 in ipairs(table11) do
						if (t_Position2 - val22).Magnitude <= t_ExclusiveEggSpacingRadius * 2 then
							control1 = 1;
							break;
						end
					end
					local bool1;
					if control1 == nil then
						bool1 = false;
					elseif control1 == 1 then
						bool1 = true;
					end
					if bool1 or not canSee(t_Position2, v115.Instance) then continue end
					return t_Position2;
				end
			end
		end
		return nil;
	end
	local table15 = {};
	for index2 = 1, v28 do
		local v49 = tryFind();
		if not v49 then
			return nil;
		end
		assert(v49);		
		table.insert(table15, v49);
		table.insert(table11, v49);
	end
	return table15;
end
function requestToOpen(p14, p15) -- Line: 1473
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table3
	--]]
	m_Library.Asserts.string(p14);
	m_Library.Asserts.integer(p15);
	assert(p15 > 0);
	local computePositions_ret = computePositions(p15);
	if not computePositions_ret then
		return false, "Not enough space, try a more open area!";
	end
	assert(computePositions_ret);
	m_Library.Audio.Play(table3.INVENTORY_OPEN, script, 1, 1);
	local v30, v31 = m_Library.Network.Invoke("Exclusive Eggs: Open", p14, p15, computePositions_ret);
	return v30, v31;
end
m_Library.Signal.Invoked("Exclusive Eggs: Open").OnInvoke = function(p16, p17) -- Line: 1505
	return requestToOpen(p16, p17);
end
m_Library.Network.Fired("Exclusive Eggs: Animation"):Connect(function(p18, p19, p20, p21, p22, p23) -- Line: 1517
	performOpen(p18, p19, p20, p21, p22, p23);
end);
m_Library.Network.Invoked("Exclusive Eggs: Compute Positions").OnInvoke = function(p24, p25) -- Line: 1535
	return computePositions(p24, p25);
end
  -  Editar
  04:54:13.936    -  Editar
  04:54:13.937  ----- [2821] StarterPlayer.StarterPlayerScripts.Scripts.Game.Exclusive Eggs.CameraSpace -----  -  Editar
  04:54:13.937  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Hungarian = require(script.Hungarian);
local table1 = {};
function computePosition(p1, p2) -- Line: 12
	local v1 = p2 <= 3 and 1 or math.ceil((math.pow(p2, 1 / 3)));
	local math_ceil_ret = math.ceil(p2 / v1);
	local math_floor_ret = math.floor(p2 / math_ceil_ret);
	local v2 = p2 - math_floor_ret * math_ceil_ret;
	local math_floor_ret2 = math.floor((p1 - 1) / math_ceil_ret);
	return Vector2.new(((p1 - 1) % math_ceil_ret + 0.5) / (math_floor_ret2 < math_floor_ret and math_ceil_ret or v2), (math_floor_ret2 + 0.5) / v1);
end
function table1.new() -- Line: 45
	--[[
		Upvalues:
			[1] = m_Hungarian
	--]]
	local table2 = {};
	local table3 = {};
	local function modify(p3) -- Line: 50
		--[[
			Upvalues:
				[1] = table3
				[2] = m_Hungarian
		--]]
		local v3 = #table3;
		local table4 = {};
		for index1 = 1, v3 do
			table.insert(table4, computePosition(index1, v3));
		end
		p3();
		local v4 = #table3;
		local table5 = {};
		for index2 = 1, v4 do
			table.insert(table5, computePosition(index2, v4));
		end
		if #table4 >= 1 and #table5 >= 1 then
			local v5 = m_Hungarian.minimize_distance(table4, table5);
			for key1, val1 in pairs(v5) do
				if key1 == val1 then continue end
				local v6 = table3;
				local v7 = table3;
				local v8 = table3[val1];
				local v9 = table3[key1];
				v6[key1] = v8;
				v7[val1] = v9;
				table3[key1].index = key1;
				table3[val1].index = val1;
			end
		end
	end
	function table2.add() -- Anonymous function at line 87
		--[[
			Upvalues:
				[1] = table3
				[2] = modify
		--]]
		local table6 = {index = #table3 + 1};
		modify(function() -- Line: 91
			--[[
				Upvalues:
					[1] = table3
					[2] = table6
			--]]
			table.insert(table3, table6);
		end);
		return table6;
	end
	function table2.remove(p4) -- Anonymous function at line 97
		--[[
			Upvalues:
				[1] = table3
				[2] = modify
		--]]
		local t_index = p4.index;
		if table3[t_index] ~= p4 then return end
		modify(function() -- Line: 104
			--[[
				Upvalues:
					[1] = table3
					[2] = t_index
			--]]
			table.remove(table3, t_index);
			for index3 = t_index, #table3 do
				table3[index3].index = index3;
			end
		end);
	end
	function table2.compute(p5) -- Anonymous function at line 115
		--[[
			Upvalues:
				[1] = table3
		--]]
		return computePosition(p5.index, #table3);
	end
	return table2;
end
return table1;
  -  Editar
  04:54:13.937    -  Editar
  04:54:13.937  ----- [2822] StarterPlayer.StarterPlayerScripts.Scripts.Game.Exclusive Eggs.CameraSpace.Hungarian -----  -  Editar
  04:54:13.937  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local table1 = {};
function Hungarian(p1) -- Line: 5
	local v1 = #p1;
	local table2 = {};
	local table3 = {};
	local table4 = {};
	local table5 = {};
	local table6 = {};
	for index1 = 1, v1 do
		table4[index1] = 0;
		table6[index1] = 0;
	end
	for index2 = 1, v1 do
		for index5 = 1, v1 do
			table5[index5] = math.huge;
		end
		while true do
			local v4 = 0;
			local v5 = 0;
			for index7 = 1, v1 do
				if table4[index7] == 0 and table5[index7] == 0 then
					local bool1 = true;
					for index10 = 1, v1 do
						if table4[index10] == index7 then
							bool1 = false;
							break;
						end
					end
					if bool1 then
						v4 = index7;
						break;
					end
				end
			end
			if v4 == 0 then break end
			local v6 = math.huge;
			for index8 = 1, v1 do
				if table4[index8] == 0 then
					local v7 = p1[v4][index8] - table2[v4] - table3[index8];
					if v7 < table5[index8] then
						table5[index8] = v7;
						table6[index8] = v4;
					end
					if table5[index8] < v6 then
						v6 = table5[index8];
						v5 = index8;
					end
				end
			end
			for index9 = 0, v1 do
				if table4[index9] == v5 then
					v4 = index9;
					break;
				end
			end
			table2[v4] = table2[v4] + v6;
			table3[v5] = table3[v5] - v6;
			table4[v5] = v4;
		end
	end
	local table7 = {};
	for index3 = 1, v1 do
		if table4[index3] > 0 then
			table7[table4[index3]] = index3;
		end
	end
	return table7;
end
function table1.minimize_distance(p2, p3) -- Line: 88
	local v2 = #p2;
	local v3 = #p3;
	local table8 = {};
	for index4 = 1, v2 do
		table8[index4] = {};
		for index6 = 1, v3 do
			table8[index4][index6] = (p2[index4] - p3[index6]).Magnitude;
		end
	end
	return Hungarian(table8);
end
return table1;
  -  Editar
  04:54:13.937    -  Editar
  04:54:13.937  ----- [2823] StarterPlayer.StarterPlayerScripts.Scripts.Game.Gates -----  -  Editar
  04:54:13.937  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local bool1 = false;
local table1 = {};
function Animation(p1, p2) -- Line: 18
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local Part = Instance.new("Part");
	Part.Anchored = true;
	Part.CanCollide = false;
	Part.Transparency = 1;
	Part.Size = p1;
	Part.CFrame = p2;
	Part.Parent = m_Library.Debris;
	m_Library.Audio.Play("rbxassetid://6980742890", Part, 1, 1.25, 500);
	local Clone_ret = m_Library.Assets.Particles:FindFirstChild("Gate Unlock"):Clone();
	Clone_ret.Parent = Part;
	Clone_ret:Emit(100);
	m_Library.Functions.AddDebris(Part, 10);
end
function BuyGate(p3) -- Line: 37
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local t_Name = p3.Name;
	local v1 = m_Library.Directory.Areas[t_Name];
	local v2 = m_Library.Message.New("Are you sure you want to buy this area for " .. m_Library.Functions.Commas(v1.gate.cost) .. " " .. v1.gate.currency .. "?", true);
	if not v2 then return end
	local BasePart = p3:FindFirstChildWhichIsA("BasePart");
	local t_Size = BasePart.Size;
	local t_CFrame = BasePart.CFrame;
	local v3, v4 = m_Library.Network.Invoke("Buy Area", t_Name);
	if not v3 then
		m_Library.Message.New(v4 or "Error");
		return;
	end
	Animation(t_Size, t_CFrame);
end
function SetupGate(p4) -- Line: 58
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table1
			[3] = bool1
	--]]
	local v5 = m_Library.Directory.Areas[p4.Name];
	local BasePart2 = p4:FindFirstChildWhichIsA("BasePart");
	local u1 = v5 and not v5.hideGatePurchase and v5.gate;
	local u2 = nil;
	if u1 then
		local Clone_ret2 = m_Library.Assets.Billboards.GateHUD:Clone();
		if v5.gate.cost >= 1000000 then
			Clone_ret2.Req.Cost.Text = m_Library.Functions.NumberShorten(v5.gate.cost, false);
		else
			Clone_ret2.Req.Cost.Text = m_Library.Functions.Commas(v5.gate.cost);
		end
		local Dir = m_Library.WorldCmds.GetDir();
		if Dir and Dir.display == "Doodle World" then
			Clone_ret2.TextLabel.Font = Enum.Font.IndieFlower;
		end
		local v6 = m_Library.Directory.Currency[v5.gate.currency];
		Clone_ret2.Req.Currency.Image = v6.ImageOutline;
		v6.Gradient:Clone().Parent = Clone_ret2.Req.Cost;
		Clone_ret2.Parent = BasePart2;
		local v7 = nil;
		v7, u2 = m_Library.Interact.Add(BasePart2.CFrame.p - Vector3.new(0, BasePart2.Size.Y / 3, 0), {
			label = "Buy Area",
			dist = 40
		});
		table.insert(table1, u2);
		v7:Connect(function() -- Line: 89
			--[[
				Upvalues:
					[1] = bool1
					[2] = p4
			--]]
			if not bool1 then
				bool1 = true;
				BuyGate(p4);
				bool1 = false;
			end
		end);
	end
	local Connect_ret = nil;
	local function UpdateGate() -- Line: 99
		--[[
			Upvalues:
				[1] = p4
				[2] = Connect_ret
				[3] = u1
				[4] = u2
		--]]
		if GateUnlocked(p4) then
			Connect_ret:Disconnect();
			if u1 then
				u2();
			end
			RemoveGate(p4);
		end
	end
	Connect_ret = m_Library.Signal.Fired("Stat Changed"):Connect(function(p7) -- Line: 109
		--[[
			Upvalues:
				[1] = p4
				[2] = Connect_ret
				[3] = u1
				[4] = u2
		--]]
		if (p7 == "AreasUnlocked" or p7 == "Hardcore") and GateUnlocked(p4) then
			Connect_ret:Disconnect();
			if u1 then
				u2();
			end
			RemoveGate(p4);
		end
	end);
	if GateUnlocked(p4) then
		Connect_ret:Disconnect();
		if u1 then
			u2();
		end
		RemoveGate(p4);
	end
end
function RemoveGate(p5) -- Line: 119
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	if p5.Name == "Cat Throne Room" or p5.Name == "Doodle Barn" or p5.Name == "Cozy Cove" or p5.Name == "Dog Club" then return end
	p5:Destroy();
	m_Library.Signal.Fire("Gate Unlocked", p5.Name);
end
function GateUnlocked(p6) -- Line: 129
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	return m_Library.WorldCmds.HasArea(p6.Name);
end
function LoadWorld() -- Line: 134
	--[[
		Upvalues:
			[1] = table1
			[2] = m_Library
	--]]
	for _, val1 in ipairs(table1) do
		val1();
	end
	table1 = {};
	local Map = m_Library.WorldCmds.GetMap();
	local Gates = Map:WaitForChild("Gates");
	for _, child2 in ipairs(Gates:GetChildren()) do
		SetupGate(child2);
	end
	Gates.ChildAdded:Connect(function(child) -- Line: 145
		SetupGate(child);
	end);
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 155
	LoadWorld();
end);
m_Library.Signal.Fired("Attempt Buy Gate"):Connect(BuyGate);
  -  Editar
  04:54:13.937    -  Editar
  04:54:13.937  ----- [2824] StarterPlayer.StarterPlayerScripts.Scripts.Game.Auction Billboard -----  -  Editar
  04:54:13.937  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local v1 = m_Library.Shared.IsTradingPlaza or m_Library.RunService:IsStudio();
local t_Inventory = m_Library.Assets.UI.Inventory;
local FindFirstChild_ret = nil;
local Color3_fromHSV_ret = nil;
local u1 = nil;
local table1 = {};
local u2 = {};
local table2 = {};
function PlaySound(p1, p2, p3) -- Line: 51
	--[[
		Upvalues:
			[1] = FindFirstChild_ret
			[2] = m_Library
	--]]
	if not FindFirstChild_ret then return end
	if not p3 then
		local v5 = m_Library.Audio.Play(p1, FindFirstChild_ret.PrimaryPart, 1, p2 or 1, nil, nil, false);
		v5.RollOffMaxDistance = 500;
		v5.RollOffMinDistance = 400;
		return;
	end
	m_Library.Audio.Play(p1, script, 1, 1);
end
function GetCurrentAuction() -- Line: 67
	--[[
		Upvalues:
			[1] = u2
	--]]
	if #u2 == 0 or u2[1].Completed or not u2[1].EndTime then
		return nil;
	end
	return u2[1];
end
function SetupPetGui(p4, p5, p6) -- Line: 76
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_Inventory
			[3] = Color3_fromHSV_ret
	--]]
	local _ = m_Library.Directory.Pets[p4.id];
	if p5 then
		p5:Destroy();
	end
	p5 = t_Inventory.Pet:Clone();
	m_Library.PetUI.Create(p5, p4.uid, p4);
	p5.Size = UDim2.new(1, 0, 1, 0);
	p5.Level:FindFirstChildOfClass("UIStroke").Thickness = 4;
	p5.HC:FindFirstChildOfClass("UIStroke").Thickness = 4;
	p5.Stars.Visible = true;
	p5.Equipped.Visible = false;
	p5.Name = "Pet";
	p5.Parent = p6;
	p5:SetAttribute("SurfaceElement", true);
	if p4.r then
		local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 98
			--[[
				Upvalues:
					[1] = p5
					[2] = Color3_fromHSV_ret
					[3] = m_Library
			--]]
			while p5 and p5.Parent and p5.Parent.Parent do
				p5.PetIcon.ImageColor3 = Color3_fromHSV_ret;
				m_Library.RenderStepped();
			end
		end);
		coroutine_wrap_ret();
	end
end
function UpdateAuctionTime(p7, p8) -- Line: 108
	local math_max_ret = math.max(p7.EndTime - workspace:GetServerTimeNow(), 0);
	local v2 = math_max_ret / 60;
	p8.Progress.Bar.Size = UDim2.new(v2, 0, 1, 0);
	p8.Seconds.Text = math.ceil(math_max_ret) .. "s";
end
function UpdateLayout() -- Line: 117
	--[[
		Upvalues:
			[1] = FindFirstChild_ret
			[2] = u1
			[3] = u2
	--]]
	if not FindFirstChild_ret then return end
	local Main = FindFirstChild_ret:FindFirstChild("Main");
	local SurfaceGui = Main:FindFirstChild("SurfaceGui");
	local t_LeftPanel = SurfaceGui.LeftPanel;
	local t_RightPanel = SurfaceGui.RightPanel;
	local t_CurrentAuction = t_LeftPanel.CurrentAuction;
	local t_PreviousBids = t_LeftPanel.PreviousBids;
	local t_PetHolder = t_CurrentAuction.PetHolder;
	local t_UpcomingAuctions = t_RightPanel.UpcomingAuctions;
	local t_TextHolder = t_CurrentAuction.TextHolder;
	local Pet = t_PetHolder:FindFirstChild("Pet");
	if u1 then
		local v6 = u1.CurrentBid ~= nil;
		t_TextHolder.Position = UDim2.new(1, 0, 0.1, 0);
		t_PetHolder.NoAuction.Visible = false;
		t_LeftPanel.Title.Text = v6 and "\240\159\142\137 Winning Bid! \240\159\142\137" or "\226\152\185 No Winner! \226\152\185";
		t_LeftPanel.TimeLeft.Visible = false;
		t_LeftPanel.WinningBid.Visible = true;
		t_PreviousBids.Visible = false;
		t_TextHolder.CurrentBid.Visible = true;
		t_TextHolder.PlaceBidHolder.Visible = false;
	elseif #u2 == 0 or not u1 and not GetCurrentAuction() then
		t_TextHolder.Position = UDim2.new(1, 0, 0.2, 0);
		if Pet then
			Pet:Destroy();
			t_PetHolder.NoAuction.Visible = true;
		end
		t_LeftPanel.Title.Text = "No Current Auction!";
		t_LeftPanel.TimeLeft.Visible = false;
		t_LeftPanel.WinningBid.Visible = false;
		t_PreviousBids.Visible = false;
		t_TextHolder.CurrentBid.Visible = false;
		t_TextHolder.PlaceBidHolder.Visible = false;
	else
		t_TextHolder.Position = UDim2.new(1, 0, 0, 0);
		t_PetHolder.NoAuction.Visible = false;
		t_LeftPanel.Title.Text = "\240\159\155\141 Current Auction \240\159\155\141";
		t_LeftPanel.TimeLeft.Visible = true;
		t_LeftPanel.WinningBid.Visible = false;
		t_PreviousBids.Visible = true;
		t_TextHolder.CurrentBid.Visible = true;
		t_TextHolder.PlaceBidHolder.Visible = true;
	end
	t_UpcomingAuctions.NoAuction.Visible = #u2 == 0 and true or #u2 == 1 and GetCurrentAuction() or false;
end
function UpdateBillboard() -- Line: 174
	--[[
		Upvalues:
			[1] = FindFirstChild_ret
			[2] = u1
			[3] = m_Library
			[4] = u2
			[5] = table2
	--]]
	if not FindFirstChild_ret then return end
	local CurrentAuction = GetCurrentAuction();
	local Main2 = FindFirstChild_ret:FindFirstChild("Main");
	local SurfaceGui2 = Main2:FindFirstChild("SurfaceGui");
	local t_LeftPanel2 = SurfaceGui2.LeftPanel;
	local t_RightPanel2 = SurfaceGui2.RightPanel;
	local t_CurrentAuction2 = t_LeftPanel2.CurrentAuction;
	local t_PreviousBids2 = t_LeftPanel2.PreviousBids;
	local t_TimeLeft = t_LeftPanel2.TimeLeft;
	local t_PetHolder2 = t_CurrentAuction2.PetHolder;
	local t_TextHolder2 = t_CurrentAuction2.TextHolder;
	local Pet2 = t_PetHolder2:FindFirstChild("Pet");
	if u1 then
		local t_WinningBid = t_LeftPanel2.WinningBid;
		local t_PetData3 = u1.PetData;
		local v7 = u1.CurrentBid ~= nil;
		SetupPetGui(t_PetData3, Pet2, t_PetHolder2);
		t_WinningBid.Visible = true;
		t_WinningBid.Title.Text = v7 and "\240\159\165\179 Congrats!" or "\226\157\140 Failed!";
		t_WinningBid.Subtitle.Text = v7 and "Won by @" .. u1.CurrentBid.UserName or "Pet was not bid on!";
		t_TextHolder2.Title.Text = m_Library.Shared.PetNameShort(t_PetData3);
		t_TextHolder2.Player.Text = "@" .. u1.UserName;
		t_TextHolder2.CurrentBid.Cost.Text = u1.CurrentBid and m_Library.Functions.NumberShorten(u1.CurrentBid.Amount) or m_Library.Functions.NumberShorten(u1.MinimumBidAmount);
	elseif not CurrentAuction then
		t_TextHolder2.Title.Text = "No Auction";
		t_TextHolder2.Player.Text = "Start one!";
	else
		local t_PetData2 = CurrentAuction.PetData;
		SetupPetGui(t_PetData2, Pet2, t_PetHolder2);
		t_TextHolder2.Title.Text = m_Library.Shared.PetNameShort(t_PetData2);
		t_TextHolder2.Player.Text = "@" .. CurrentAuction.UserName;
		t_TextHolder2.CurrentBid.Cost.Text = CurrentAuction.CurrentBid and m_Library.Functions.NumberShorten(CurrentAuction.CurrentBid.Amount) or m_Library.Functions.NumberShorten(CurrentAuction.MinimumBidAmount);
		UpdateAuctionTime(CurrentAuction, t_TimeLeft);
	end
	local _ = t_RightPanel2.StartAuction.ListPet;
	local t_UpcomingAuctions2 = t_RightPanel2.UpcomingAuctions;
	local UpcomingAuction = t_UpcomingAuctions2:FindFirstChild("UpcomingAuction");
	UpcomingAuction.Visible = false;
	for _, child1 in pairs(t_UpcomingAuctions2:GetChildren()) do
		if not child1:IsA("Frame") or child1.Name == "UpcomingAuction" or child1.Name == "NoAuction" then continue end
		local t_LayoutOrder2 = child1.LayoutOrder;
		if u2[t_LayoutOrder2] and u2[t_LayoutOrder2].Id == child1.Name and not u2[t_LayoutOrder2].Completed and not u2[t_LayoutOrder2].EndTime then continue end
		child1:Destroy();
	end
	for _, val2 in ipairs(u2) do
		if t_UpcomingAuctions2:FindFirstChild(val2.Id) or val2.Completed or val2.EndTime then continue end
		local Clone_ret2 = UpcomingAuction:Clone();
		local t_PetData = val2.PetData;
		Clone_ret2.Visible = true;
		Clone_ret2.PetName.Text = m_Library.Shared.PetNameShort(t_PetData);
		local t_PetHolder3 = Clone_ret2.PetHolder;
		local Pet3 = t_PetHolder3:FindFirstChild("Pet");
		SetupPetGui(t_PetData, Pet3, t_PetHolder3);
		Clone_ret2.Name = val2.Id;
		Clone_ret2.Parent = t_UpcomingAuctions2;
	end
	local t_PreviousBid = t_PreviousBids2.PreviousBid;
	t_PreviousBid.Visible = false;
	if not CurrentAuction and not u1 then
		for _, child4 in pairs(t_PreviousBids2:GetChildren()) do
			if not child4:IsA("Frame") or child4.Name == "PreviousBid" then continue end
			child4:Destroy();
		end
	else
		local v8 = u1 and u1.PreviousBids or CurrentAuction.PreviousBids;
		local t_CurrentBid = nil;
		if u1 then
			t_CurrentBid = u1.CurrentBid;
		elseif CurrentAuction then
			t_CurrentBid = CurrentAuction.CurrentBid;
		end
		if t_CurrentBid then
			table.insert(v8, 1, t_CurrentBid);
		end
		for _, child5 in pairs(t_PreviousBids2:GetChildren()) do
			if not child5:IsA("Frame") or child5.Name == "PreviousBid" then continue end
			local t_LayoutOrder = child5.LayoutOrder;
			if v8[t_LayoutOrder] and v8[t_LayoutOrder].UserId .. "-" .. v8[t_LayoutOrder].Amount == child5.Name then continue end
			child5:Destroy();
		end
		for key6, val6 in ipairs(v8) do
			local FindFirstChild_ret2 = t_PreviousBids2:FindFirstChild(val6.UserId .. "-" .. val6.Amount);
			if FindFirstChild_ret2 or key6 > 3 then continue end
			local Clone_ret = t_PreviousBid:Clone();
			Clone_ret.Name = val6.UserId .. "-" .. val6.Amount;
			Clone_ret.CurrentBid.Cost.Text = m_Library.Functions.NumberShorten(val6.Amount);
			Clone_ret.LayoutOrder = key6;
			Clone_ret.Parent = t_PreviousBids2;
			Clone_ret.Visible = true;
			task.spawn(function() -- Line: 305
				--[[
					Upvalues:
						[1] = m_Library
						[2] = table2
						[3] = val6
						[4] = Clone_ret
				--]]
				if m_Library.Functions.DictionaryLength(table2) > 1000 then
					table2 = {};
				end
				local v11 = table2[val6.UserId] or game.Players:GetUserThumbnailAsync(val6.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size180x180);
				if v11 then
					Clone_ret.AvatarHolder.Player.Image = v11;
					table2[val6.UserId] = v11;
				end
			end);
		end
	end
	UpdateLayout();
end
function RequestAuctions() -- Line: 323
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u2
			[3] = table1
	--]]
	local v3 = m_Library.Network.Invoke("Auction: List");
	if not v3 then
		UpdateBillboard();
		return;
	end
	u2 = v3;
	for _, val3 in ipairs(v3) do
		table1[val3.Id] = val3;
	end
	UpdateBillboard();
end
function SetupBillboard() -- Line: 340
	--[[
		Upvalues:
			[1] = m_Library
			[2] = FindFirstChild_ret
			[3] = u2
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		FindFirstChild_ret = Map.Interactive:FindFirstChild("Auction Board");
		if FindFirstChild_ret then
			RequestAuctions();
			local Main3 = FindFirstChild_ret:FindFirstChild("Main");
			local SurfaceGui3 = Main3:FindFirstChild("SurfaceGui");
			local t_LeftPanel3 = SurfaceGui3.LeftPanel;
			local t_RightPanel3 = SurfaceGui3.RightPanel;
			local t_PlaceBid = t_LeftPanel3.CurrentAuction.TextHolder.PlaceBidHolder.PlaceBid;
			local t_ListPet = t_RightPanel3.StartAuction.ListPet;
			m_Library.GUIFX.ButtonFX(t_PlaceBid);
			t_PlaceBid.Activated:Connect(function() -- Line: 355
				--[[
					Upvalues:
						[1] = m_Library
				--]]
				local CurrentAuction2 = GetCurrentAuction();
				if CurrentAuction2 and CurrentAuction2.UserId == m_Library.LocalPlayer.UserId then
					if m_Library.Variables.MessageOpen then return end
					if m_Library.RunService:IsStudio() == false then
						m_Library.Message.New("You cannot bid on your own auction!");
						return;
					end	
				end
				local CurrentAuction3 = GetCurrentAuction();
				m_Library.Signal.Fire("Auction Bid", CurrentAuction3, ComputeRequiredBid(CurrentAuction3));
			end);
			m_Library.GUIFX.ButtonFX(t_ListPet);
			t_ListPet.Activated:Connect(function() -- Line: 371
				--[[
					Upvalues:
						[1] = u2
						[2] = m_Library
				--]]
				for _, val11 in ipairs(u2) do
					if val11.UserId ~= m_Library.LocalPlayer.UserId then continue end
					if m_Library.Variables.MessageOpen then return end
					m_Library.Message.New("You already have an auction pending!");
					return;
				end
				m_Library.GUI.AuctionSelect.Gui.Enabled = true;
			end);
		end
	end
end
function ComputeRequiredBid(p9) -- Line: 391
	if not p9 then
		return 0;
	end
	local v4 = p9.MinimumBidAmount;
	local t_CurrentBid2 = p9.CurrentBid;
	if t_CurrentBid2 then
		local t_Amount = t_CurrentBid2.Amount;
		v4 = t_Amount + math.ceil(t_Amount * 0.01);
	end
	return v4;
end
m_Library.Network.Fired("Auction: Update"):Connect(function(p10) -- Line: 422
	--[[
		Upvalues:
			[1] = u1
			[2] = u2
			[3] = table1
			[4] = m_Library
			[5] = FindFirstChild_ret
	--]]
	if p10.Completed then
		u1 = p10;
		local t_Id = p10.Id;
		local v9 = nil;
		for key7, val7 in ipairs(u2) do
			if val7.Id ~= t_Id then continue end
			v9 = key7;
			break;
		end
		if v9 then
			table.remove(u2, v9);
		end
		table1[t_Id] = nil;
		m_Library.Signal.Fire("Auction Ended", p10);
		if FindFirstChild_ret and p10.CurrentBid then
			local ConfettiCannons = FindFirstChild_ret:FindFirstChild("ConfettiCannons");
			for _, child8 in pairs(ConfettiCannons:GetChildren()) do
				for _, child10 in pairs(child8:GetChildren()) do
					child10:Emit(12);
				end
			end
			PlaySound(p10.CurrentBid.Amount >= 200000000000 and "rbxassetid://12625270848" or "rbxassetid://12625271057", 1, false);
		end
		if FindFirstChild_ret and not p10.CurrentBid then
			PlaySound("rbxassetid://12625270945", 1, false);
		end
		if m_Library.LocalPlayer.UserId == p10.UserId and p10.CurrentBid then
			PlaySound("rbxassetid://11648890524", 1, true);
		end
	else
		if p10.EndTime then
			u1 = nil;
			m_Library.Signal.Fire("Minimum Bid Update", ComputeRequiredBid(p10));
		end
		local v10 = table1[p10.Id];
		if not v10 then
			table1[p10.Id] = p10;
			table.insert(u2, p10);
		else
			if not v10.EndTime and p10.EndTime then
				if p10.UserId == m_Library.LocalPlayer.UserId then
					m_Library.Signal.Fire("Notification", "Your " .. m_Library.Shared.PetNameShort(p10.PetData) .. " auction has started!", {
						color = Color3.fromRGB(78, 244, 252),
						force = true
					});
				end
				PlaySound("rbxassetid://12629752694", 0.7, false);
			end
			if p10.CurrentBid and (not v10.CurrentBid or v10.CurrentBid.UserId ~= p10.CurrentBid.UserId) then
				PlaySound("rbxassetid://12629775896", 0.5, false);
				if p10.UserId == m_Library.LocalPlayer.UserId then
					PlaySound("rbxassetid://12629775773", 1, true);
					m_Library.Signal.Fire("Notification", p10.CurrentBid.UserName .. " bid " .. m_Library.Functions.NumberShorten(p10.CurrentBid.Amount) .. " Diamonds on your " .. m_Library.Shared.PetNameShort(p10.PetData) .. "!", {
						color = Color3.fromRGB(105, 255, 168),
						force = true
					});
				end
			end
			table1[p10.Id] = p10;
			for key9, val9 in ipairs(u2) do
				if val9.Id ~= p10.Id then continue end
				u2[key9] = p10;
				break;
			end
		end
	end
	UpdateBillboard();
end);
m_Library.Signal.Fired("World Changed"):Connect(function(p11) -- Line: 506
	if p11 == "Trading Plaza" then
		SetupBillboard();
	end
end);
m_Library.Signal.Invoked("Get Current Auction").OnInvoke = function() -- Line: 513
	return GetCurrentAuction();
end
m_Library.Signal.Invoked("Get Auctions").OnInvoke = function() -- Line: 518
	--[[
		Upvalues:
			[1] = u2
			[2] = table1
	--]]
	return u2, table1;
end
local u3 = 0;
if v1 then
	m_Library.RunService.RenderStepped:Connect(function(p13) -- Line: 529
		--[[
			Upvalues:
				[1] = u3
				[2] = FindFirstChild_ret
				[3] = u1
		--]]
		u3 = u3 + p13;
		if u3 < 0.1 then return end
		u3 = u3 - 0.1;
		local CurrentAuction4 = GetCurrentAuction();
		if not FindFirstChild_ret or not CurrentAuction4 or u1 then return end
		local Main4 = FindFirstChild_ret:FindFirstChild("Main");
		UpdateAuctionTime(CurrentAuction4, Main4:FindFirstChild("SurfaceGui").LeftPanel.TimeLeft);
	end);
end
local u4 = 0;
game:GetService("RunService").RenderStepped:Connect(function(p12) -- Line: 553
	--[[
		Upvalues:
			[1] = u4
			[2] = Color3_fromHSV_ret
	--]]
	u4 = u4 + p12;
	Color3_fromHSV_ret = Color3.fromHSV(u4 / 2 % 1, 1, 1);
end);
  -  Editar
  04:54:13.937    -  Editar
  04:54:13.937  ----- [2825] StarterPlayer.StarterPlayerScripts.Scripts.Game.Barn Door -----  -  Editar
  04:54:13.937  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local FindFirstChild_ret = nil;
local t_IsHardcore = m_Library.Shared.IsHardcore;
local bool1 = false;
local bool2 = false;
function AnimateOpen() -- Line: 20
	--[[
		Upvalues:
			[1] = bool1
			[2] = FindFirstChild_ret
			[3] = m_Library
	--]]
	if bool1 then return end
	bool1 = true;
	local Door1 = FindFirstChild_ret:FindFirstChild("Door1");
	local Door2 = FindFirstChild_ret:FindFirstChild("Door2");
	local t_Position = Door1.Position;
	local t_Position2 = Door2.Position;
	if Door1 and Door2 then
		m_Library.Functions.Tween(Door1, {Position = Vector3.new(6880.327, 99.959, -4012603 / -1000)}, {
			3,
			"Sine",
			"Out"
		});
		m_Library.Functions.Tween(Door2, {Position = Vector3.new(6862.396, 99.959, -4012603 / -1000)}, {
			3,
			"Sine",
			"Out"
		}).Completed:Connect(function() -- Line: 37
			--[[
				Upvalues:
					[1] = Door1
					[2] = t_Position
					[3] = Door2
					[4] = t_Position2
					[5] = bool1
			--]]
			Teleport();
			task.defer(function() -- Line: 40
				--[[
					Upvalues:
						[1] = Door1
						[2] = t_Position
						[3] = Door2
						[4] = t_Position2
						[5] = bool1
				--]]
				Door1.Position = t_Position;
				Door2.Position = t_Position2;
				bool1 = false;
			end);
		end);
	end
end
function IsUnlocked() -- Line: 51
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_IsHardcore
	--]]
	local v1 = m_Library.Save.Get();
	if v1 then
		return t_IsHardcore and m_Library.Functions.SearchDictionary(v1.Hardcore.AreasUnlocked, "Doodle Barn") or not t_IsHardcore and m_Library.Functions.SearchDictionary(v1.AreasUnlocked, "Doodle Barn");
	end
	return false;
end
function Teleport() -- Line: 61
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local FindFirstChild_ret2 = m_Library.WorldCmds.GetMap().Teleports:FindFirstChild("Doodle Barn");
	if FindFirstChild_ret2 then
		local v6 = m_Library.Player.Character();
		local v7 = m_Library.Player.Humanoid();
		m_Library.GUIFX.Flash(0.25, 0.75, Color3.new(255, 255, 255));
		m_Library.Variables.Teleporting = true;
		m_Library.Signal.Fire("Teleporting");
		m_Library.Functions.Wait(0.25);
		v6:SetPrimaryPartCFrame(FindFirstChild_ret2.CFrame + Vector3.new(0, v7.HipHeight + 1, 0));
		m_Library.Audio.Play("rbxassetid://7210953148", script, 1, 1);
		m_Library.Network.Fire("Performed Teleport", "Doodle Barn");
		m_Library.Functions.Wait(0.25);
		m_Library.Variables.Teleporting = false;
		return;
	end
	m_Library.Message.New("Something went wrong. Try again!");
end
function Buy() -- Line: 84
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v2, v3 = m_Library.Network.Invoke("Buy Area", "Doodle Barn");
	if not v2 then
		m_Library.Message.New(v3 or "Error");
		return;
	end
	AnimateOpen();
end
function PromptBuy() -- Line: 94
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v4 = m_Library.WorldCmds.HasArea("Doodle Oasis");
	if not v4 then
		m_Library.Message.New("The cow says moooo!");
		return;
	end
	local v5 = m_Library.Message.New("Are you sure you want to buy this area for 3.25m Cartoon Coins?", true);
	if v5 then
		Buy();
	end
end
function Setup() -- Line: 108
	--[[
		Upvalues:
			[1] = m_Library
			[2] = FindFirstChild_ret
			[3] = bool2
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Gates") then
		FindFirstChild_ret = Map.Gates:FindFirstChild("Doodle Barn");
		if FindFirstChild_ret then
			if IsUnlocked() then
				local v8, _ = m_Library.Interact.Add(FindFirstChild_ret.PrimaryPart, {dist = 6});
				if v8 then
					v8:Connect(function() -- Line: 116
						--[[
							Upvalues:
								[1] = bool2
						--]]
						if not bool2 then
							bool2 = true;
							AnimateOpen();
							bool2 = false;
						end
					end);
				end
			else
				local v9, _ = m_Library.Interact.Add(FindFirstChild_ret.PrimaryPart, {dist = 6});
				if v9 then
					v9:Connect(function() -- Line: 127
						--[[
							Upvalues:
								[1] = bool2
						--]]
						if not bool2 then
							bool2 = true;
							if IsUnlocked() then
								AnimateOpen();
							else
								PromptBuy();
							end
							bool2 = false;
						end
					end);
				end
			end
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function(p1) -- Line: 145
	if p1 == "Doodle" then
		Setup();
	end
end);
  -  Editar
  04:54:13.937    -  Editar
  04:54:13.938  ----- [2826] StarterPlayer.StarterPlayerScripts.Scripts.Game.leaderstats -----  -  Editar
  04:54:13.938  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage.Library);
m_Library.Load();
function updateLeaderstats(p1) -- Line: 6
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v1 = m_Library.Save.Get(p1);
	local v2 = p1:FindFirstChild("leaderstats");
	if not v2 then
		local leaderstats = Instance.new("Folder");
		leaderstats.Name = "leaderstats";
		leaderstats.Parent = p1;
		v2 = leaderstats;
	end
	assert(v2);
	if m_Library.FFlags.Get(m_Library.FFlags.Keys.RAP) or m_Library.FFlags.CanBypass(m_Library.LocalPlayer) then
		local v4 = v2:FindFirstChild("RAP");
		if not v4 then
			local RAP2 = Instance.new("IntValue");
			RAP2.Name = "RAP";
			RAP2.Value = 0;
			RAP2.Parent = v2;
			v4 = RAP2;
		end
		assert(v4);
		if v1 then
			v4.Value = v1.RAP or 0;
		end
	else
		local RAP = v2:FindFirstChild("RAP");
		if RAP then
			RAP:Destroy();
		end
	end
	local v3 = v2:FindFirstChild("Diamonds");
	if not v3 then
		local Diamonds = Instance.new("IntValue");
		Diamonds.Name = "Diamonds";
		Diamonds.Value = 0;
		Diamonds.Parent = v2;
		v3 = Diamonds;
	end
	assert(v3);
	if v1 then
		v3.Value = v1.Diamonds or 0;
	end
end
function updateAllLeaderstats() -- Line: 54
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	for _, val1 in ipairs(m_Library.Players:GetPlayers()) do
		updateLeaderstats(val1);
	end
end
task.spawn(function() -- Line: 60
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	while true do
		m_Library.Functions.wcall(updateAllLeaderstats);
		task.wait(math.random() * 10 + 5);
	end
end);
m_Library.Signal.Fired("Loaded Stats"):Connect(function() -- Line: 67
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	updateLeaderstats(m_Library.Players.LocalPlayer);
end);
m_Library.Signal.Fired("Loaded Other Stats"):Connect(function(p2) -- Line: 71
	updateLeaderstats(p2);
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p3) -- Line: 75
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	if p3 == "Diamonds" or p3 == "RAP" then
		updateLeaderstats(m_Library.Players.LocalPlayer);
	end
end);
m_Library.Signal.Fired("Other Stat Changed"):Connect(function(p4, p5) -- Line: 81
	if p5 == "Diamonds" or p5 == "RAP" then
		updateLeaderstats(p4);
	end
end);
  -  Editar
  04:54:13.938    -  Editar
  04:54:13.938  ----- [2827] StarterPlayer.StarterPlayerScripts.Scripts.Game.Hacker Gate -----  -  Editar
  04:54:13.938  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local FindFirstChild_ret = nil;
local t_IsHardcore = m_Library.Shared.IsHardcore;
function Unlock() -- Line: 18
	--[[
		Upvalues:
			[1] = FindFirstChild_ret
	--]]
	FindFirstChild_ret:Destroy();
end
function IsUnlocked() -- Line: 23
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_IsHardcore
	--]]
	local v1 = m_Library.Save.Get();
	if v1 then
		return t_IsHardcore and v1.Hardcore.OwnsHackerGate or not t_IsHardcore and v1.OwnsHackerGate;
	end
	return false;
end
function Buy() -- Line: 32
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v2, v3 = m_Library.Network.Invoke("Buy Hacker Gate");
	if not v2 then
		m_Library.Message.New(v3 or "Error");
		return;
	end
	Unlock();
end
function Prompt() -- Line: 42
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v4 = m_Library.WorldCmds.HasArea("Cave");
	if not v4 then
		m_Library.Message.New("(The door is solid and cold)");
		return;
	end
	local v5 = m_Library.Message.New("Are you willing to spend 10b Tech Coins and 500k Diamonds to open?", true);
	if v5 then
		Buy();
	end
end
function Setup() -- Line: 56
	--[[
		Upvalues:
			[1] = m_Library
			[2] = FindFirstChild_ret
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		FindFirstChild_ret = Map.Interactive:FindFirstChild("Hacker Gate");
		if FindFirstChild_ret then
			if IsUnlocked() then
				Unlock();
				return;
			end
			local v6, _ = m_Library.Interact.Add(FindFirstChild_ret.PrimaryPart, {dist = 12});
			if v6 then
				v6:Connect(function() -- Line: 66
					Prompt();
				end);
			end
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function(p1) -- Line: 76
	if p1 == "Tech" then
		Setup();
	end
end);
  -  Editar
  04:54:13.938    -  Editar
  04:54:13.938  ----- [2828] StarterPlayer.StarterPlayerScripts.Scripts.Game.Comets -----  -  Editar
  04:54:13.938  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local table1 = {};
function HasLanded(p1) -- Line: 38
	return p1 and workspace:GetServerTimeNow() + 0.5 >= p1.EndTime;
end
function CometAnimation(p2) -- Line: 43
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	if not p2 or HasLanded(p2) then return end
	animating = true;
	local Clone_ret = m_Library.Assets.Models.Comets:FindFirstChild(p2.Type):Clone();
	local Model = Instance.new("Model");
	Clone_ret.Parent = Model;
	Model.PrimaryPart = Clone_ret;
	if p2.Type == "Massive Comet" then
		local v18 = m_Library.Functions.Scaler();
		v18(Model, 3);
	end
	p2.Model = Clone_ret;
	local v1 = p2.EndPosition + Vector3.new(0, Clone_ret.Size.Y / 2 - Clone_ret.Size.Y / 3, 0);
	local v2 = (p2.EndTime - workspace:GetServerTimeNow()) / p2.Speed;
	print(v1)
	warn(p2.StartPosition.Z, p2.EndPosition.Z)
	local v3 = p2.StartPosition.Y - v1.Y;
	local v4 = v3 * 0.4663076581549986;
	Clone_ret.Position = v1 + Vector3.new(0, v3 * v2, v4);
	Clone_ret.Orientation = Vector3.new(25, 0, 0);
	Model.Parent = m_Library.Things:WaitForChild("Comets");
	local v5 = p2.Speed * v2;
	local TweenInfo_new_ret = TweenInfo.new(v5, Enum.EasingStyle.Circular, Enum.EasingDirection.In, 0);
	p2.TravelTween = m_Library.TweenService:Create(Clone_ret, TweenInfo_new_ret, {Position = v1});
	p2.TravelTween:Play();
	p2.TravelTween.Completed:Connect(function(p19) -- Line: 90
		--[[
			Upvalues:
				[1] = Clone_ret
				[2] = m_Library
				[3] = p2
		--]]
		if p19 == Enum.PlaybackState.Cancelled then return end
		Clone_ret.Transparency = 1;
		m_Library.Functions.AddDebris(Clone_ret, 5);
		for _, child5 in pairs(Clone_ret:GetChildren()) do
			if child5.Name == "Explosion" then continue end
			child5:Destroy();
		end
		local Explosion = Clone_ret:FindFirstChild("Explosion");
		for _, child6 in pairs(Explosion:GetChildren()) do
			child6:Emit(child6:GetAttribute("EmitCount") or 1);
		end
		animating = false;
		if p2.Coin then
			m_Library.Signal.Fire("Comets: Setup Breakable", p2.CoinId, p2.Coin);
		end
		local v21 = m_Library.Save.Get();
		if v21 then
			if p2.Type == "Massive Comet" and v21.World == p2.WorldId then
				m_Library.Shake.Create(2, 1, 0.3);
				local v34 = m_Library.Audio.Play("rbxassetid://12669914523", Clone_ret, 1, 0.6);
				v34.RollOffMaxDistance = 800;
				v34.RollOffMinDistance = 300;
				p2.LandSound = true;
				return;
			end
			if p2.Type == "Mini Comet" and v21.World == p2.WorldId then
				m_Library.Shake.Create(1, 0.3, 0.3);
				local v35 = m_Library.Audio.Play("rbxassetid://12669914204", Clone_ret, 1, 0.4);
				v35.RollOffMaxDistance = 500;
				v35.RollOffMinDistance = 200;
			end
		end
	end);
end
function CancelAnimation(p3) -- Line: 140
	animating = false;
	if not p3 then return end
	if p3.Model then
		p3.Model:Destroy();
		p3.Model = nil;
	end
	if p3.TravelTween then
		p3.TravelTween:Cancel();
		p3.TravelTween = nil;
	end
end
function RemoveBroken(p4) -- Line: 159
	if not p4 then return end
	if p4.BrokenModel then
		p4.BrokenModel:Destroy();
		p4.BrokenModel = nil;
	end
	if p4.Egg then
		p4.Egg:Destroy();
		p4.Egg = nil;
	end
end
function SpawnComet(p5, p6) -- Line: 176
	--[[
		Upvalues:
			[1] = table1
			[2] = m_Library
	--]]
	local table2 = {
		Id = p5.Id,
		Type = p5.Type,
		WorldId = p5.WorldId,
		AreaId = p5.AreaId,
		CoinId = p5.CoinId,
		StartPosition = p5.SpawnPosition,
		EndPosition = p5.EndPosition,
		Speed = p5.Speed,
		EndTime = p5.EndTime,
		Destroyed = p5.Destroyed,
		Opened = p6
	};
	table1[table2.Id] = table2;
	local v6 = m_Library.Save.Get();
	if not v6 then return end
	if table2.Type == "Massive Comet" and not HasLanded(table2) then
		local v19 = table2.Speed * ((table2.EndTime - workspace:GetServerTimeNow()) / table2.Speed);
		local v20 = m_Library.Directory.Areas[table2.AreaId];
		m_Library.Signal.Fire("Notification", "A Massive Comet is landing in " .. v20.name .. "!", {
			color = Color3.fromRGB(0, 170, 255),
			force = true
		});
		m_Library.ChatMsg.New("A Massive Comet is landing in " .. v20.name .. "!", Color3.fromRGB(0, 170, 255));
		m_Library.Shake.Create(v19, 0.1, 0.3, true);
	elseif table2.Type == "Mini Comet" and not HasLanded(table2) then
		local _ = (table2.EndTime - workspace:GetServerTimeNow()) / table2.Speed;
		local v24 = m_Library.Directory.Areas[table2.AreaId];
		m_Library.Signal.Fire("Notification", "A Mini Comet is landing in " .. v24.name .. "!", {
			color = Color3.fromRGB(0, 170, 255),
			force = true
		});
		m_Library.ChatMsg.New("A Mini Comet is landing in " .. v24.name .. "!", Color3.fromRGB(0, 170, 255));
	end
	if v6.World == table2.WorldId and not table2.Destroyed then
		CometAnimation(table2);
	end
end
function SetupCometEgg(p7) -- Line: 221
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	if not p7 or not p7.Coin then return end
	p7.Destroyed = true;
	local Clone_ret2 = m_Library.Assets.Models.Comets:WaitForChild("Massive Comet Broken"):Clone();
	local v7 = m_Library.Functions.Scaler();
	v7(Clone_ret2, 4);
	Clone_ret2.CFrame = p7.Coin.CFrame - Vector3.new(0, Clone_ret2.Size.Y / 6, 0);
	Clone_ret2.Parent = m_Library.Things:WaitForChild("Comets");
	p7.BrokenModel = Clone_ret2;
	local v8 = m_Library.Audio.Play("rbxassetid://12669914691", Clone_ret2, 1, 0.2, nil, nil, true);
	v8.RollOffMaxDistance = 300;
	v8.RollOffMinDistance = 100;
	if not p7.Opened then
		local Clone_ret3 = m_Library.Assets.Models.Comets:WaitForChild("Comet Egg"):Clone();
		Clone_ret3:SetPrimaryPartCFrame(CFrame.new(Clone_ret2.Position + Vector3.new(0, Clone_ret2.Size.Y / 4, 0)) * CFrame.Angles(0, 0, 1.5707963267948966));
		Clone_ret3.Parent = m_Library.Things:WaitForChild("Comets");
		p7.Egg = Clone_ret3;
		SetupEgg(p7);
	end
end
function RequestData() -- Line: 252
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v9, v10 = m_Library.Network.Invoke("Comets: Get Data");
	for _, val1 in pairs(v9) do
		SpawnComet(val1, v10[val1.Id][m_Library.LocalPlayer.UserId]);
	end
end
function GetCometByCoinId(p8) -- Line: 261
	--[[
		Upvalues:
			[1] = table1
	--]]
	for _, val2 in pairs(table1) do
		if val2.CoinId ~= p8 then continue end
		return val2;
	end
	return nil;
end
m_Library.Network.Fired("Comets: Announcement"):Connect(function(p9, p10) -- Line: 275
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v11 = m_Library.Directory.Areas[p9];
	m_Library.Signal.Fire("Notification", "A Massive Comet will land in " .. v11.name .. " in " .. m_Library.Functions.FormatTimeShort(p10, false) .. "!", {
		color = Color3.fromRGB(0, 170, 255),
		force = true
	});
	m_Library.ChatMsg.New("A Massive Comet will land in " .. v11.name .. " in " .. m_Library.Functions.FormatTimeShort(p10, false) .. "!", Color3.fromRGB(0, 170, 255));
	m_Library.Shake.Create(5, 0.25, 0.15, true);
	m_Library.Audio.Play("rbxassetid://12669908963", script, 1, 0.2);
end);
m_Library.Network.Fired("Comets: Spawn Client"):Connect(function(p11) -- Line: 285
	SpawnComet(p11, false);
end);
m_Library.Network.Fired("Comets: Massive Broken"):Connect(function(p12) -- Line: 290
	--[[
		Upvalues:
			[1] = table1
			[2] = m_Library
	--]]
	print("BROKEN:   ",p12, table1)
	local v12 = table1[p12];
	print(v12)
	if not v12 or not v12.Coin then 
		print("???")
		return 
	end
	SetupCometEgg(v12);
	m_Library.Shake.Create(2, 1, 0.3);
	local v13 = m_Library.Audio.Play("rbxassetid://12669914084", v12.BrokenModel, 1, 0.6);
	v13.RollOffMaxDistance = 800;
	v13.RollOffMinDistance = 300;
end);
m_Library.Network.Fired("Comets: Removed"):Connect(function(p13) -- Line: 306
	--[[
		Upvalues:
			[1] = table1
			[2] = m_Library
	--]]
	local v14 = table1[p13];
	if not v14 then return end
	if v14.Model then
		m_Library.WorldFX.CometDespawn(v14.Model.Position);
		v14.Model:Destroy();
	end
	if v14.TravelTween then
		v14.TravelTween:Cancel();
	end
	if v14.Egg then
		v14.Egg:Destroy();
	end
	if v14.BrokenModel then
		m_Library.WorldFX.CometDespawn(v14.BrokenModel.Position);
		v14.BrokenModel:Destroy();
	end
	table1[p13] = nil;
end);
m_Library.Signal.Invoked("Comets: Landed").OnInvoke = function(p14) -- Line: 335
	local CometByCoinId = GetCometByCoinId(p14);
	if not CometByCoinId then
		return nil;
	end
	return HasLanded(CometByCoinId);
end
m_Library.Signal.Fired("World Changed"):Connect(function(p15) -- Line: 346
	--[[
		Upvalues:
			[1] = table1
	--]]
	for _, val3 in pairs(table1) do
		if val3.WorldId == p15 then
			if not animating then
				CometAnimation(val3);
			end
			if not val3.Destroyed then continue end
			SetupCometEgg(val3);
			continue;
		end
		if animating then
			CancelAnimation(val3);
		end
		if not val3.Destroyed then continue end
		RemoveBroken(val3);
	end
end);
m_Library.Signal.Fired("Comets: Setup Breakable"):Connect(function(p16, p17) -- Line: 369
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local CometByCoinId2 = GetCometByCoinId(p16);
	if not CometByCoinId2 then return end
	local HasLanded_ret = HasLanded(CometByCoinId2);
	local Attachment = p17:WaitForChild("Attachment");
	p17.Transparency = HasLanded_ret and 0 or 1;
	for _, child4 in pairs(Attachment:GetChildren()) do
		child4.Enabled = HasLanded_ret;
	end
	p17:SetAttribute("PreventClick", not HasLanded_ret);
	local ClickDetector = p17:FindFirstChild("ClickDetector");
	if ClickDetector then
		ClickDetector.MaxActivationDistance = HasLanded_ret and m_Library.Settings.CoinGrabDistance or 0;
	end
	CometByCoinId2.Coin = p17;
	local v15 = m_Library.Audio.Play("rbxassetid://12669914691", p17, 1, 0.2, nil, nil, true);
	v15.RollOffMaxDistance = 300;
	v15.RollOffMinDistance = 100;
end);
task.spawn(RequestData);
local bool1 = false;
local table3 = {};
function SetupEgg(p18) -- Line: 409
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table3
			[3] = bool1
	--]]
	if not p18 or not p18.Egg then return end
	local t_Egg = p18.Egg.Egg;
	local bool2 = false;
	local v16, v17 = m_Library.Interact.Add(t_Egg.CFrame.p, {
		label = "Collect",
		dist = 20
	});
	table.insert(table3, v17);
	v16:Connect(function() -- Line: 420
		--[[
			Upvalues:
				[1] = bool1
				[2] = m_Library
				[3] = p18
				[4] = table3
		--]]
		if not bool1 then
			bool1 = true;
			local v25, v26 = m_Library.Network.Invoke("Comets: Open Egg", p18.Id);
			if not v25 and v26 then
				m_Library.Message.New(v26);
				bool1 = false;
				return;
			end
			p18.Opened = true;
			p18.Egg:Destroy();
			for _, val8 in ipairs(table3) do
				val8();
			end
			table3 = {};
			bool1 = false;
		end
	end);
	local function Show() -- Line: 445
		--[[
			Upvalues:
				[1] = m_Library
				[2] = t_Egg
		--]]
		local v22 = m_Library.Directory.Eggs["Comet Egg"];
		local Clone_ret4 = m_Library.Assets.Billboards.EggInfo:Clone();
		local t_drops = v22.drops;
		local t_isGolden = v22.isGolden;
		local v23 = m_Library.Save.Get();
		if type(t_drops) == "string" then
			t_drops = m_Library.Directory.Eggs[t_drops].drops;
		end
		for key7, val7 in ipairs(t_drops) do
			local v27 = val7[1];
			local v28 = m_Library.Directory.Pets[v27];
			local t_rarity = v28.rarity;
			local v29 = val7[3];
			if t_rarity == "Secret" or v29 and not m_Library.Shared.IsHardcore then continue end
			local Clone_ret5 = m_Library.Assets.UI.EggInfo.Pet:Clone();
			Clone_ret5:SetAttribute("PetId", v27);
			local function CalculatePetChance() -- Line: 470
				--[[
					Upvalues:
						[1] = t_drops
						[2] = val7
				--]]
				local v37 = 0;
				for _, val11 in ipairs(t_drops) do
					v37 = v37 + val11[2];
				end
				return val7[2] / v37 * 100;
			end
			local v30 = 0;
			for _, val9 in ipairs(t_drops) do
				v30 = v30 + val9[2];
			end
			local v31 = val7[2] / v30 * 100;
			Clone_ret5.Thumbnail.Image = t_isGolden and v28.goldenThumbnail or v28.thumbnail;
			Clone_ret5.LayoutOrder = 9999 - v31;
			if v23.AutoDelete[v28.rarity] then
				Clone_ret5.DeleteImage.Visible = true;
			else
				Clone_ret5.DeleteImage.Visible = false;
			end
			if t_rarity == "Legendary" or t_rarity == "Mythical" or t_rarity == "Event" or t_rarity == "Exclusive" or v31 <= 0.0099 then
				Clone_ret5.Thumbnail.Chance.Text = "??";
				m_Library.GUIFX.Rainbow(Clone_ret5.Thumbnail.Chance, "TextColor3");
			else
				local math_clamp_ret = math.clamp(math.pow(0.9315, v31) * 94.2467 / 100, 0, 1);
				local Lerp_ret = Color3.fromRGB(49, 255, 39):Lerp(Color3.fromRGB(255, 75, 39), math_clamp_ret);
				local Color3_toHSV_ret1, Color3_toHSV_ret2, Color3_toHSV_ret3 = Color3.toHSV(Lerp_ret);
				local Color3_fromHSV_ret = Color3.fromHSV(Color3_toHSV_ret1, Color3_toHSV_ret2, Color3_toHSV_ret3 * 2);
				Clone_ret5.Thumbnail.Chance.TextColor3 = Color3_fromHSV_ret;
				Clone_ret5.Thumbnail.Chance.Text = m_Library.Functions.FormatChance(v31 / 100);
			end
			if v28.titanic then
				Clone_ret5.TitanicCrown.Visible = true;
			end
			Clone_ret5.Thumbnail.Position = UDim2.new(0, 0, 1, 0);
			Clone_ret5.Thumbnail.ImageTransparency = 1;
			m_Library.Functions.Tween(Clone_ret5.Thumbnail, {
				Position = UDim2.new(0, 0, 0, 0),
				ImageTransparency = 0
			}, {
				key7 / 9 / 3 + 0.45,
				Enum.EasingStyle.Quart,
				Enum.EasingDirection.Out
			});
			Clone_ret5.Parent = Clone_ret4.Frame.Pets;
		end
		Clone_ret4.Size = UDim2.new(0, 0, 0, 0);
		Clone_ret4.StudsOffset = Vector3.new(0, 4, 0);
		m_Library.Functions.Tween(Clone_ret4, {
			Size = UDim2.new(10, 0, 10, 0),
			StudsOffset = Vector3.new(0, 10, 0)
		}, {
			0.2,
			Enum.EasingStyle.Quad,
			Enum.EasingDirection.Out
		});
		local UIGridLayout = Clone_ret4.Frame.Pets:FindFirstChild("UIGridLayout");
		UIGridLayout:ApplyLayout();
		Clone_ret4.Parent = t_Egg;
	end
	local function Hide() -- Line: 538
		--[[
			Upvalues:
				[1] = t_Egg
				[2] = m_Library
		--]]
		local EggInfo = t_Egg:FindFirstChild("EggInfo");
		if EggInfo then
			m_Library.Functions.Tween(EggInfo, {
				Size = UDim2.new(0, 0, 0, 0),
				StudsOffset = Vector3.new(0, 4, 0)
			}, {
				0.15,
				Enum.EasingStyle.Quad,
				Enum.EasingDirection.In
			}).Completed:Connect(function() -- Line: 542
				--[[
					Upvalues:
						[1] = EggInfo
				--]]
				EggInfo:Destroy();
			end);
		end
	end
	local Random_new_ret = Random.new();
	local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 552
		--[[
			Upvalues:
				[1] = t_Egg
				[2] = Random_new_ret
				[3] = m_Library
		--]]
		local t_CFrame = t_Egg.CFrame;
		local NextNumber_ret = Random_new_ret:NextNumber(1, 10);
		local os_clock_ret = os.clock();
		local os_clock_ret2 = nil;
		while t_Egg and t_Egg.Parent do
			if not os_clock_ret2 or os.clock() - os_clock_ret2 >= 2 then
				local DistanceFromCharacter_ret = m_Library.LocalPlayer:DistanceFromCharacter(t_Egg.CFrame.p);
				if DistanceFromCharacter_ret >= 300 then
					wait((math.clamp(DistanceFromCharacter_ret / 600, 0.5, 3)));
				else
					os_clock_ret2 = os.clock();
				end
			end
			local v32 = os.clock() - os_clock_ret + NextNumber_ret;
			t_Egg.CFrame = t_CFrame * CFrame.new(0, math.sin(v32 * 1) / 2, 0) * CFrame.Angles(0, v32, 0);
			m_Library.RenderStepped();
		end
	end);
	coroutine_wrap_ret();
	local coroutine_wrap_ret2 = coroutine.wrap(function() -- Line: 577
		--[[
			Upvalues:
				[1] = m_Library
				[2] = p18
				[3] = t_Egg
				[4] = bool2
				[5] = Show
				[6] = Hide
		--]]
		local _ = m_Library.Save.Get();
		while p18.Egg and p18.Egg.Parent and p18.Egg:FindFirstChild("Egg") do
			local v33 = (t_Egg and m_Library.LocalPlayer:DistanceFromCharacter(t_Egg.CFrame.p) or 999) <= 20;
			local _ = t_Egg:FindFirstChild("EggInfo");
			if v33 and not bool2 then
				bool2 = true;
				Show();
			elseif bool2 and not v33 then
				bool2 = false;
				Hide();
			end
			m_Library.Heartbeat(5);
		end
	end);
	coroutine_wrap_ret2();
end
task.spawn(function() -- Line: 600
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table1
	--]]
	local u3 = 0;
	m_Library.RunService.Heartbeat:Connect(function(p20) -- Line: 604
		--[[
			Upvalues:
				[1] = u3
				[2] = table1
				[3] = m_Library
		--]]
		u3 = u3 + p20;
		if u3 > 1 then
			u3 = u3 - 1;
			for _, val10 in pairs(table1) do
				if val10.Type ~= "Massive Comet" or val10.LandSound or not HasLanded(val10) then continue end
				local v36 = m_Library.Save.Get();
				if not v36 or v36.World == val10.WorldId then continue end
				val10.LandSound = true;
				m_Library.Shake.Create(2, 0.2, 0.3);
				m_Library.Audio.Play("rbxassetid://12669913959", script, 1, 0.4);
			end
		end
	end);
end);
  -  Editar
  04:54:13.938    -  Editar
  04:54:13.938  ----- [2829] StarterPlayer.StarterPlayerScripts.Scripts.Game.Kawaii Quests -----  -  Editar
  04:54:13.938  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_IsHardcore = m_Library.Shared.IsHardcore;
local bool1 = false;
local table1 = {};
local FindFirstChild_ret = nil;
local table2 = {
	[1] = "Leprechaun Village",
	[2] = "Rainbow Heights",
	[3] = "Lucky Castle"
};
local u1 = m_Library.Network.Invoke("Giant Rainbow: Get First Time");
function GetNextGiantRainbowTime() -- Line: 18
	--[[
		Upvalues:
			[1] = u1
	--]]
	while workspace:GetServerTimeNow() > u1 do
		u1 = u1 + 14400;
	end
	return u1 - workspace:GetServerTimeNow();
end
function PromptQuest() -- Line: 26
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_IsHardcore
			[3] = FindFirstChild_ret
	--]]
	local v1 = m_Library.Save.Get();
	local unpack_ret1, unpack_ret2 = unpack(t_IsHardcore and v1.Hardcore.StPatricks2022Quest or v1.StPatricks2022Quest);
	if unpack_ret2 <= 0 then
		local v16 = m_Library.Network.Invoke("Kawaii Quest: Attempt Start Quest");
		if v16 then
			if t_IsHardcore then
				v1.Hardcore.StPatricks2022Quest = v16;
			else
				v1.StPatricks2022Quest = v16;
			end
		end
	end
	local v2 = m_Library.Shared.StPatricks2022Quests[unpack_ret2];
	if not v2 then return end
	if unpack_ret1 < v2 then
		local CurrentTask = GetCurrentTask();
		m_Library.Message.New(CurrentTask);
		return;
	end
	m_Library.Signal.Fire("Attempt Buy Gate", FindFirstChild_ret);
end
function GetCurrentTask() -- Line: 56
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_IsHardcore
	--]]
	local str1 = "?";
	local v3 = m_Library.Save.Get();
	if not v3 then
		return str1;
	end
	assert(v3);
	local unpack_ret1_2, unpack_ret2_2 = unpack(t_IsHardcore and v3.Hardcore.StPatricks2022Quest or v3.StPatricks2022Quest);
	local v4 = m_Library.Shared.StPatricks2022Quests[unpack_ret2_2];
	if not v4 then
		return str1;
	end
	local v5 = v4 - unpack_ret1_2;
	if unpack_ret2_2 == 1 then
		local string_format_ret2 = string.format("Break %s Clover Coin%s", v5, v5 <= 1 and "" or "s");
		return string_format_ret2;
	end
	if unpack_ret2_2 == 2 then
		local string_format_ret = string.format("Break %s Pot%s of Gold", v5, v5 <= 1 and "" or "s");
		return string_format_ret;
	end
	if unpack_ret2_2 == 3 then
		str1 = "Participate in Giant Rainbow Event";
	end
	return str1;
end
function Setup() -- Line: 81
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_IsHardcore
			[3] = FindFirstChild_ret
			[4] = table2
			[5] = table1
			[6] = bool1
	--]]
	local v6 = m_Library.Save.Get();
	local t_StPatricks2022Quest;
	while true do
		if not v6 then
			task.wait(0.25);
			if not m_Library.LocalPlayer then return end
			v6 = m_Library.Save.Get();
			continue;
		end
		assert(v6);
		if t_IsHardcore then
			t_StPatricks2022Quest = v6.Hardcore.StPatricks2022Quest;
			if t_StPatricks2022Quest then break end
		end
		t_StPatricks2022Quest = v6.StPatricks2022Quest;
		break;
	end
	local _, unpack_ret2_3 = unpack(t_StPatricks2022Quest);
	if unpack_ret2_3 <= 0 then
		local v17 = m_Library.Network.Invoke("Kawaii Quest: Attempt Start Quest");
		if v17 then
			if t_IsHardcore then
				v6.Hardcore.StPatricks2022Quest = v17;
			else
				v6.StPatricks2022Quest = v17;
			end
		end
	end
	local unpack_ret1_3, unpack_ret2_4 = unpack(t_IsHardcore and v6.Hardcore.StPatricks2022Quest or v6.StPatricks2022Quest);
	local v7 = m_Library.Shared.StPatricks2022Quests[unpack_ret2_4];
	if not v7 then return end
	local v8 = v7 - unpack_ret1_3;
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Gates") then
		FindFirstChild_ret = Map.Gates:FindFirstChild(table2[unpack_ret2_4]);
		if FindFirstChild_ret then
			local v18 = m_Library.Directory.Areas[table2[unpack_ret2_4]];
			local BasePart = FindFirstChild_ret:FindFirstChildWhichIsA("BasePart");
			if v8 > 0 then
				local SaintPatricksHUD = BasePart:FindFirstChild("SaintPatricksHUD");
				SaintPatricksHUD.Task.Text = GetCurrentTask();
				if unpack_ret2_4 == 3 then
					SaintPatricksHUD.Line2.Visible = true;
					task.spawn(function() -- Line: 124
						--[[
							Upvalues:
								[1] = SaintPatricksHUD
								[2] = m_Library
						--]]
						while SaintPatricksHUD do
							if SaintPatricksHUD and SaintPatricksHUD:FindFirstChild("Line2") then
								local v31 = m_Library.Signal.Invoke("Rainbow: Enabled");
								if v31 then
									SaintPatricksHUD.Line2.Text = "Event is active now!";
								else
									SaintPatricksHUD.Line2.Text = "Next event in " .. m_Library.Functions.FormatTime(GetNextGiantRainbowTime());
								end
							end
							task.wait(1);
						end
					end);
				end
				SaintPatricksHUD.Parent = BasePart;
			else
				if BasePart:FindFirstChild("SaintPatricksHUD") then
					BasePart:FindFirstChild("SaintPatricksHUD"):Destroy();
				end
				if not BasePart:FindFirstChild("GateHUB") then
					local Clone_ret = m_Library.Assets.Billboards.GateHUD:Clone();
					Clone_ret.Req.Cost.Text = m_Library.Functions.NumberShorten(v18.gate.cost, false);
					local v25 = m_Library.Directory.Currency[v18.gate.currency];
					Clone_ret.Req.Currency.Image = v25.ImageOutline;
					v25.Gradient:Clone().Parent = Clone_ret.Req.Cost;
					Clone_ret.Parent = BasePart;
				end
			end
			local v19 = v8 > 0 and "Check Quest" or "Buy Area";
			local v20, v21 = m_Library.Interact.Add(BasePart.CFrame.p - Vector3.new(0, BasePart.Size.Y / 3, 0), {
				label = v19,
				dist = 40
			});
			table.insert(table1, v21);
			v20:Connect(function() -- Line: 158
				--[[
					Upvalues:
						[1] = bool1
				--]]
				if not bool1 then
					bool1 = true;
					PromptQuest();
					bool1 = false;
				end
			end);
		end
	end
end
function Advance(p1) -- Line: 169
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table1
			[3] = t_IsHardcore
			[4] = FindFirstChild_ret
			[5] = table2
			[6] = bool1
	--]]
	local v9 = m_Library.Save.Get();
	if not v9 then return end
	assert(v9);
	for _, val1 in ipairs(table1) do
		val1();
	end
	table1 = {};
	if t_IsHardcore then
		v9.Hardcore.StPatricks2022Quest = p1;
	else
		v9.StPatricks2022Quest = p1;
	end
	local unpack_ret1_4, unpack_ret2_5 = unpack(t_IsHardcore and v9.Hardcore.StPatricks2022Quest or v9.StPatricks2022Quest);
	local v10 = m_Library.Shared.StPatricks2022Quests[unpack_ret2_5];
	if not v10 then return end
	local v11 = v10 - unpack_ret1_4;
	local Map2 = m_Library.WorldCmds.GetMap();
	if Map2:FindFirstChild("Gates") then
		FindFirstChild_ret = Map2.Gates:FindFirstChild(table2[unpack_ret2_5]);
		if FindFirstChild_ret then
			local BasePart2 = FindFirstChild_ret:FindFirstChildWhichIsA("BasePart");
			local SaintPatricksHUD2 = BasePart2:FindFirstChild("SaintPatricksHUD");
			SaintPatricksHUD2.Task.Text = GetCurrentTask();
			if unpack_ret2_5 == 3 then
				SaintPatricksHUD2.Line2.Visible = true;
				task.spawn(function() -- Line: 203
					--[[
						Upvalues:
							[1] = SaintPatricksHUD2
							[2] = m_Library
					--]]
					while SaintPatricksHUD2 do
						if SaintPatricksHUD2 and SaintPatricksHUD2:FindFirstChild("Line2") then
							local v30 = m_Library.Signal.Invoke("Rainbow: Enabled");
							if v30 then
								SaintPatricksHUD2.Line2.Text = "Event is active now!";
							else
								SaintPatricksHUD2.Line2.Text = "Next event in " .. m_Library.Functions.FormatTime(GetNextGiantRainbowTime());
							end
						end
						task.wait(1);
					end
				end);
			end
			local v22 = v11 > 0 and "Check Quest" or "Buy Area";
			local v23, v24 = m_Library.Interact.Add(BasePart2.CFrame.p - Vector3.new(0, BasePart2.Size.Y / 3, 0), {
				label = v22,
				dist = 40
			});
			table.insert(table1, v24);
			v23:Connect(function() -- Line: 221
				--[[
					Upvalues:
						[1] = bool1
				--]]
				if not bool1 then
					bool1 = true;
					PromptQuest();
					bool1 = false;
				end
			end);
		end
	end
end
m_Library.Network.Fired("Kawaii Quest: Quest Progressed"):Connect(function(p2, p3) -- Line: 232
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_IsHardcore
			[3] = table1
			[4] = table2
			[5] = FindFirstChild_ret
			[6] = bool1
	--]]
	local v12 = m_Library.Save.Get();
	if not v12 then return end
	assert(v12);
	if t_IsHardcore then
		v12.Hardcore.StPatricks2022Quest = {
			p3,
			p2
		};
	else
		v12.StPatricks2022Quest = {
			p3,
			p2
		};
	end
	local v13 = m_Library.Shared.StPatricks2022Quests[p2];
	if not v13 then return end
	for _, val2 in ipairs(table1) do
		val2();
	end
	local v14 = m_Library.Directory.Areas[table2[p2]];
	local v15 = v13 - p3;
	local Map3 = m_Library.WorldCmds.GetMap();
	if Map3:FindFirstChild("Gates") then
		FindFirstChild_ret = Map3.Gates:FindFirstChild(table2[p2]);
		if FindFirstChild_ret then
			local BasePart3 = FindFirstChild_ret:FindFirstChildWhichIsA("BasePart");
			local SaintPatricksHUD3 = BasePart3:FindFirstChild("SaintPatricksHUD");
			if v15 > 0 then
				SaintPatricksHUD3.Task.Text = GetCurrentTask();
				if p2 == 3 then
					SaintPatricksHUD3.Line2.Visible = true;
					task.spawn(function() -- Line: 266
						--[[
							Upvalues:
								[1] = SaintPatricksHUD3
								[2] = m_Library
						--]]
						while SaintPatricksHUD3 do
							if SaintPatricksHUD3 and SaintPatricksHUD3:FindFirstChild("Line2") then
								local v32 = m_Library.Signal.Invoke("Rainbow: Enabled");
								if v32 then
									SaintPatricksHUD3.Line2.Text = "Event is active now!";
								else
									SaintPatricksHUD3.Line2.Text = "Next event in " .. m_Library.Functions.FormatTime(GetNextGiantRainbowTime());
								end
							end
							task.wait(1);
						end
					end);
				end
			elseif not BasePart3:FindFirstChild("GateHUD") then
				if SaintPatricksHUD3 then
					SaintPatricksHUD3:Destroy();
				end
				if not BasePart3:FindFirstChild("GateHUD") then
					local Clone_ret2 = m_Library.Assets.Billboards.GateHUD:Clone();
					Clone_ret2.Req.Cost.Text = m_Library.Functions.NumberShorten(v14.gate.cost, false);
					local Dir = m_Library.WorldCmds.GetDir();
					if Dir and Dir.display == "Doodle World" then
						Clone_ret2.TextLabel.Font = Enum.Font.IndieFlower;
					end
					local v26 = m_Library.Directory.Currency[v14.gate.currency];
					Clone_ret2.Req.Currency.Image = v26.ImageOutline;
					v26.Gradient:Clone().Parent = Clone_ret2.Req.Cost;
					Clone_ret2.Parent = BasePart3;
					local v27 = v15 > 0 and "Check Quest" or "Buy Area";
					local v28, v29 = m_Library.Interact.Add(BasePart3.CFrame.p - Vector3.new(0, BasePart3.Size.Y / 3, 0), {
						label = v27,
						dist = 40
					});
					table.insert(table1, v29);
					v28:Connect(function() -- Line: 304
						--[[
							Upvalues:
								[1] = bool1
						--]]
						if not bool1 then
							bool1 = true;
							PromptQuest();
							bool1 = false;
						end
					end);
				end
				m_Library.Signal.Fire("Notification", "You can now unlock the next Kawaii Quest gate!", {
					color = Color3.fromRGB(255, 82, 218),
					force = true
				});
			end
		end
	end
end);
m_Library.Signal.Fired("World Changed"):Connect(function(p4) -- Line: 318
	--[[
		Upvalues:
			[1] = table1
	--]]
	for _, val3 in ipairs(table1) do
		val3();
	end
	table1 = {};
	if p4 == "Kawaii Quest" then
		Setup();
	end
end);
m_Library.Network.Fired("Kawaii Quest: Quest Advanced"):Connect(Advance);
  -  Editar
  04:54:13.938    -  Editar
  04:54:13.938  ----- [2830] StarterPlayer.StarterPlayerScripts.Scripts.Game.Fruits -----  -  Editar
  04:54:13.939  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
function UpdateFruits(_) -- Line: 16
end
m_Library.Signal.Fired("Loaded Stats"):Connect(function(_) -- Line: 21
end);
  -  Editar
  04:54:13.939    -  Editar
  04:54:13.939  ----- [2831] StarterPlayer.StarterPlayerScripts.Scripts.Game.Diamond Mine -----  -  Editar
  04:54:13.939  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_IsHardcore = m_Library.Shared.IsHardcore;
v10 = game.JobId
local bool1 = false;
local u1 = {};
local table1 = {};
function GetAreaData() -- Line: 20
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
	--]]
	u1 = m_Library.Network.Invoke("Diamond Mine: Get Data");
end
function PromptGate(p1) -- Line: 25
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
	--]]
	local t_Name = p1.Name;
	local v1 = u1[t_Name];
	if v1 then
		if string.find(v1, "Huge Pet") then
			m_Library.Signal.Fire("Open Release Pet", t_Name, p1);
			return;
		end
		m_Library.Message.New(v1);
		return;
	end
	m_Library.Signal.Fire("Attempt Buy Gate", p1);
end
function Setup() -- Line: 42
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_IsHardcore
			[3] = table1
			[4] = u1
			[5] = bool1
	--]]
	local v2 = m_Library.Save.Get();
	if not v2 then return end
	local Map = m_Library.WorldCmds.GetMap();
	local Gates = Map:FindFirstChild("Gates");
	local v3 = t_IsHardcore and v2.Hardcore.AreasUnlocked or v2.AreasUnlocked;
	for _, val1 in ipairs(table1) do
		val1();
	end
	table1 = {};
	if Gates then
		for _, child2 in pairs(Gates:GetChildren()) do
			local BasePart = child2:FindFirstChildWhichIsA("BasePart");
			local v6 = BasePart and BasePart:FindFirstChild("DiamondMineHUD");
			local t_Name2 = child2.Name;
			local v7 = m_Library.Directory.Areas[t_Name2];
			local Attribute = child2:GetAttribute("RequiredArea");
			if Attribute and not m_Library.Functions.SearchArray(v3, Attribute) then
				BasePart:FindFirstChild("DiamondMineHUD").Enabled = true;
				v6.Task.Text = "Requires " .. Attribute;
				if not BasePart:FindFirstChild("DiamondMinePurchaseHUD") then continue end
				BasePart:FindFirstChild("DiamondMinePurchaseHUD").Enabled = false;
				continue;
			end
			local v8 = u1[t_Name2];
			if v8 then
				v6.Task.Text = v8;
				BasePart:FindFirstChild("DiamondMineHUD").Enabled = true;
				if BasePart:FindFirstChild("DiamondMinePurchaseHUD") then
					BasePart:FindFirstChild("DiamondMinePurchaseHUD").Enabled = false;
				end
				if not string.find(v8, "Huge Pet") then continue end
			else
				if BasePart:FindFirstChild("DiamondMineHUD") then
					BasePart:FindFirstChild("DiamondMineHUD").Enabled = false;
				end
				if BasePart:FindFirstChild("DiamondMinePurchaseHUD") then
					BasePart:FindFirstChild("DiamondMinePurchaseHUD").Enabled = true;
				end
				if not BasePart:FindFirstChild("DiamondMinePurchaseHUD") then
					local Clone_ret = m_Library.Assets.Billboards.DiamondMinePurchaseHUD:Clone();
					Clone_ret.Req.Cost.Text = m_Library.Functions.NumberShorten(v7.gate.cost, false);
					local v11 = m_Library.Directory.Currency[v7.gate.currency];
					Clone_ret.Req.Currency.Image = v11.ImageOutline;
					v11.Gradient:Clone().Parent = Clone_ret.Req.Cost;
					Clone_ret.Parent = BasePart;
				end
			end
			local v9, v10 = m_Library.Interact.Add(BasePart.CFrame.p - Vector3.new(0, BasePart.Size.Y / 3, 0), {
				label = "Buy Area",
				dist = 40
			});
			v9:Connect(function() -- Line: 110
				--[[
					Upvalues:
						[1] = bool1
						[2] = child2
				--]]
				if not bool1 then
					bool1 = true;
					PromptGate(child2);
					bool1 = false;
				end
			end);
			table.insert(table1, v10);
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function(p2) -- Line: 127
	if p2 == "Diamond Mine" then
		Setup();
		GetAreaData();
		Setup();
	end
end);
m_Library.Signal.Fired("Gate Unlocked"):Connect(function(_) -- Line: 136
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_IsHardcore
	--]]
	local v4 = m_Library.Save.Get();
	if not v4 then return end
	if t_IsHardcore and v4.Hardcore.World == "Diamond Mine" or v4.World == "Diamond Mine" then
		Setup();
	end
end);
m_Library.Network.Fired("Diamond Mine: Area Data"):Connect(function(p3) -- Line: 148
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
			[3] = t_IsHardcore
	--]]
	u1 = p3;
	local v5 = m_Library.Save.Get();
	if not v5 then return end
	if t_IsHardcore and v5.Hardcore.World == "Diamond Mine" or v5.World == "Diamond Mine" then
		Setup();
	end
end);
local v187 = 0
m_Library.Network.Fired("Diamond Mine: Kick"):Connect(function()
	if 60 >= workspace:GetServerTimeNow() - v187 then
		return 
	end
	local v196 = m_Library.Save.Get()
	if v196 then
		v196.DiamondMineData.Earned = m_Library.Settings.DiamondMineMaxEarn
	end
	v187 = workspace:GetServerTimeNow()
	task.delay(2, function()
		m_Library.Signal.Fire("Notification", "Diamond Mine has collapsed for the day!", {
			color = Color3.fromRGB(255, 46, 46)
		})
		m_Library.ChatMsg.New("Diamond Mine has collapsed for the day!", Color3.fromRGB(255, 46, 46))
	end)
end)	
m_Library.Signal.Invoked("Get Diamond Mine Collpase Time").OnInvoke = function()
	local v237 = m_Library.Save.Get()
	if not v237 then
		return 
	end
	local v256 = v237.DiamondMineData
	if math.floor((workspace:GetServerTimeNow() - 14400) / 86400) == v256.LastDay then
		if v256.Earned >= m_Library.Settings.DiamondMineMaxEarn then
			local v245 = os.date("!*t", workspace:GetServerTimeNow() - 14400)
			return 86400 - (v245.hour) * 3600 + (v245.min) * 60 + v245.sec
		end
	end
	if v10 ~= v256.JobId then
		local v245 = workspace:GetServerTimeNow() - v256.LastDiamondMineTeleport
		if m_Library.Settings.DiamondMineCooldown >= v245 then
			return m_Library.Settings.DiamondMineCooldown - v245
		end
	end
	return nil
end
GetAreaData();
  -  Editar
  04:54:13.939    -  Editar
  04:54:13.939  ----- [2832] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Apply SFX/Music Settings -----  -  Editar
  04:54:13.939  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
function Update() -- Line: 16
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v1 = m_Library.Save.Get();
	if not v1 then return end
	m_Library.Settings.MusicEnabled = v1.Settings.Music == 1;
	m_Library.Settings.SoundsEnabled = v1.Settings.SFX == 1;
	m_Library.Settings.MountingTitanicsEnabled = v1.Settings.MountingTitanics == 1;
end
Update();
m_Library.Signal.Fired("Stat Changed"):Connect(function(p1) -- Line: 29
	if p1 == "Settings" then
		Update();
	end
end);
  -  Editar
  04:54:13.939    -  Editar
  04:54:13.939  ----- [2833] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Force Load World -----  -  Editar
  04:54:13.939  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
m_Library.Network.Fired("Force Load World"):Connect(function(p1) -- Line: 16
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.WorldCmds.Load(p1);
end);
  -  Editar
  04:54:13.939    -  Editar
  04:54:13.939  ----- [2834] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Load Default World -----  -  Editar
  04:54:13.939  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
function Update() 
	local _ = m_Library.Save.Get();
	local v1 = m_Library.WorldCmds.Get();
	local _ = m_Library.Directory.Worlds[v1];
	local bool1 = false;
	local t_BoothId = nil;
	local t_BoothData = nil;
	pcall(function() 
		local LocalPlayerTeleportData = m_Library.TeleportService:GetLocalPlayerTeleportData();
		if LocalPlayerTeleportData ~= nil and LocalPlayerTeleportData.PlaceId and LocalPlayerTeleportData.PlaceId == game.PlaceId then
			if LocalPlayerTeleportData.RestorePosition then
				bool1 = true;
			end
			if LocalPlayerTeleportData.BoothId and LocalPlayerTeleportData.BoothData then
				t_BoothId = LocalPlayerTeleportData.BoothId;
				t_BoothData = LocalPlayerTeleportData.BoothData;
			end
		end
	end);
	m_Library.WorldCmds.Load(v1, bool1);
	if t_BoothId and t_BoothData then
		print("Attempting to restore booth");
		m_Library.Network.Fire("Attempt Restore Booth", t_BoothId, t_BoothData);
	end
end
Update();
m_Library.Network.Fired("Reset Player"):Connect(Update);
  -  Editar
  04:54:13.939    -  Editar
  04:54:13.939  ----- [2835] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Mouse TargetFilter -----  -  Editar
  04:54:13.939  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
m_Library.Player.Mouse().TargetFilter = m_Library.Debris;
  -  Editar
  04:54:13.939    -  Editar
  04:54:13.940  ----- [2836] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Open Gui Pads -----  -  Editar
  04:54:13.940  -- Decompiled with the Synapse X Luau decompiler.

local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not v1.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end;
local u1 = os.clock();
function OpenGui(p1)
	local v2 = v1.GUI[p1];
	if v1.WorldCmds.CanDoAction() then
		if v1.GUI.Inventory.Gui.Enabled then
			return;
		end;
	else
		return;
	end;
	if v2.Gui.Enabled then
		u1 = os.clock();
		return;
	end;
	if 1.25 <= os.clock() - u1 then
		v2.Gui.Enabled = true;
	end;
end;
local u2 = nil;
function Scan()
	local v3 = nil;
	if not v1.WorldCmds.CanDoAction() then
		return;
	end;
	v3 = v1.Player.UpperTorso();
	if u2 then
		if not v3 then
			return;
		end;
	else
		return;
	end;
	local v4 = RaycastParams.new();
	v4.FilterDescendantsInstances = { u2 };
	v4.FilterType = Enum.RaycastFilterType.Whitelist;
	local v5 = workspace:Raycast(v3.CFrame.p, Vector3.new(0, -1, 0).Unit * 25, v4);
	if v5 then
		local l__Instance__6 = v5.Instance;
		if l__Instance__6 then
			if l__Instance__6:GetAttribute("Exclude") then
				local v7 = l__Instance__6:GetAttribute("Exclude");
				if v7 then
					if v1.GUI[v7].Gui.Enabled then
						return;
					end;
				end;
			end;
			OpenGui(l__Instance__6:GetAttribute("PadGui"));
		end;
	end;
end;
function GetPads()
	local v8 = v1.WorldCmds.GetMap();
	if v8 then
		if v8:FindFirstChild("Interactive") then
			local v9 = {};
			for v10, v11 in ipairs(v8.Interactive:GetDescendants()) do
				if v11:GetAttribute("PadGui") then
					table.insert(v9, v11);
				end;			
			end;
			u2 = v9;
			v8.Interactive.DescendantAdded:Connect(function(p2)
				if p2:GetAttribute("PadGui") then
					table.insert(u2, p2);
				end;
			end);
		end;
	end;
end;
v1.Signal.Fired("World Changed"):Connect(function()
	u2 = nil;
	GetPads();
end);
while true do
	Scan();
	v1.Heartbeat(5);
end;
  -  Editar
  04:54:13.940    -  Editar
  04:54:13.940  ----- [2837] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Server Misc Notifications -----  -  Editar
  04:54:13.940  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
m_Library.Network.Fired("Send Message"):Connect(function(p1) -- Line: 17
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.Message.New(p1);
end);
m_Library.Network.Fired("Inventory Slots Given"):Connect(function(p2) -- Line: 23
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v1 = m_Library.Player.UpperTorso();
	if v1 then
		m_Library.WorldFX.RewardImage(v1.CFrame.p, "+" .. p2 .. " Pet Slots", "rbxassetid://7097738062", {time = 4});
	end
end);
m_Library.Network.Fired("Merchant Departed"):Connect(function(p3, d) -- Line: 32
	--[[
		Upvalues:
			[1] = m_Library
	--]]
    if d then return end
	m_Library.Signal.Fire("Notification", (p3 and "Mysterious Merchant" or "Traveling Merchant") .. " has departed!", {time = 3});
end);
m_Library.Network.Fired("Merchant Arrival"):Connect(function(p4) -- Line: 40
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v2 = p4 and "Mysterious Merchant" or "Traveling Merchant";
	local v3 = p4 and "rbxassetid://787528253" or "rbxassetid://7399753346";
	m_Library.Signal.Fire("Notification", v2 .. " has arrived!", {
		color = p4 and Color3.fromRGB(60, 47, 88) or Color3.fromRGB(46, 255, 63),
		time = 4.5,
		sound = v3,
		volume = 0.75
	});
end);
m_Library.Network.Fired("Hoverboard Unlocked"):Connect(function(p5, p6) -- Line: 50
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.Signal.Fire("Notification", m_Library.Directory.Hoverboards[p5].name .. " has been Unlocked!", {
		color = Color3.fromRGB(255, 98, 248),
		time = 4,
		sound = "rbxassetid://8323209839",
		force = p6
	});
	m_Library.Signal.Fire("Fireworks Animation", m_Library.LocalPlayer);
end);
m_Library.Network.Fired("Advanced Christmas Event"):Connect(function(p7) -- Line: 59
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v4 = m_Library.Shared.ChristmasEventQuests2022[p7];
	m_Library.Signal.Fire("Notification", "You completed the Christmas Event Quest #" .. p7 .. "!", {
		color = Color3.fromRGB(78, 244, 252),
		sound = "rbxassetid://8344182621",
		force = true
	});
	if v4.Reward[1] ~= "Rudolph Hoverboard" then
		m_Library.Signal.Fire("Rewards Redeemed", {v4.Reward});
	end
end);
m_Library.Network.Fired("Advanced April Fools Event"):Connect(function(p8) -- Line: 70
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v5 = m_Library.Shared.AprilFools2023Quests[p8];
	m_Library.Signal.Fire("Notification", "You completed the April Fools Event Quest #" .. p8 .. "!", {
		color = Color3.fromRGB(235, 50, 252),
		force = true
	});
	if v5.Reward[1] ~= "April Fools PS1" then
		m_Library.Signal.Fire("Rewards Redeemed", {v5.Reward});
	end
end);
m_Library.Network.Fired("Play Grinch Sound"):Connect(function(_) -- Line: 81
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.Audio.Play("rbxassetid://8275537921", script, 1, 1);
end);
  -  Editar
  04:54:13.940    -  Editar
  04:54:13.940  ----- [2838] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.World Animations -----  -  Editar
  04:54:13.940  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local _ = Random.new();
function ObliskAnimations() -- Line: 42
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	local Volcano = Map.Areas:FindFirstChild("Volcano");
	local Children = Volcano:FindFirstChild("Oblisks"):GetChildren();
	local os_clock_ret = os.clock();
	local os_clock_ret2 = nil;
	local DistanceFromCharacter_ret = nil;
	local function Tick() -- Line: 51
		--[[
			Upvalues:
				[1] = os_clock_ret2
				[2] = DistanceFromCharacter_ret
				[3] = m_Library
				[4] = Volcano
				[5] = os_clock_ret
				[6] = Children
		--]]
		if not os_clock_ret2 or os.clock() - os_clock_ret2 >= 2 then
			DistanceFromCharacter_ret = m_Library.Player.Player():DistanceFromCharacter(Volcano.Ground.CFrame.p);
			os_clock_ret2 = os.clock();
		end
		if DistanceFromCharacter_ret >= 600 then return end
		local v1 = os.clock() - os_clock_ret;
		for _, val1 in ipairs(Children) do
			local Spell = val1:FindFirstChild("Spell");
			Spell:SetPrimaryPartCFrame(val1:FindFirstChild("Center").CFrame * CFrame.Angles(0, math.rad(v1 * 10), 0) + Vector3.new(0, math.sin(v1 / 5) * 5, 0));
		end
	end
	local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 69
		--[[
			Upvalues:
				[1] = Map
				[2] = Tick
				[3] = m_Library
		--]]
		while Map.Parent do
			Tick();
			m_Library.Stepped();
		end
	end);
	coroutine_wrap_ret();
end
m_Library.Signal.Fired("World Changed"):Connect(function(p1) -- Line: 78
	local _ = p1 == "Spawn";
end);
  -  Editar
  04:54:13.940    -  Editar
  04:54:13.940  ----- [2839] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Redeemed Rewards Notifications -----  -  Editar
  04:54:13.940  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_BoostsInfo = m_Library.Shared.BoostsInfo;
function Msgs(p1) -- Line: 31
	--[[
		Upvalues:
			[1] = m_Library
			[2] = t_BoostsInfo
	--]]
	local v1 = m_Library.Player.UpperTorso();
	local _ = v1.CFrame.p;
	for _, val1 in ipairs(p1) do
		local unpack_ret1, unpack_ret2 = unpack(val1);
		if not unpack_ret2 then
			m_Library.Signal.Fire("Notification", "You got " .. unpack_ret1 .. "!", {color = Color3.fromRGB(255, 255, 255)});
		elseif unpack_ret1 == "Triple Coins Boost" or unpack_ret1 == "Triple Coins" then
			m_Library.WorldFX.RewardImage(v1.CFrame.p, "+(x" .. unpack_ret2 .. ")", t_BoostsInfo["Triple Coins"].icon, {time = 4});
			m_Library.Signal.Fire("Notification", "You got x" .. unpack_ret2 .. " Triple Coins Boost!", {
				color = Color3.fromRGB(255, 82, 218),
				sound = "rbxassetid://8344180273"
			});
		elseif unpack_ret1 == "Super Lucky Boost" or unpack_ret1 == "Super Lucky" then
			m_Library.WorldFX.RewardImage(v1.CFrame.p, "+(x" .. unpack_ret2 .. ")", t_BoostsInfo["Super Lucky"].icon, {time = 4});
			m_Library.Signal.Fire("Notification", "You got x" .. unpack_ret2 .. " Super Lucky Boost!", {
				color = Color3.fromRGB(255, 82, 218),
				sound = "rbxassetid://8344180273"
			});
		elseif unpack_ret1 == "Ultra Lucky Boost" or unpack_ret1 == "Ultra Lucky" then
			m_Library.WorldFX.RewardImage(v1.CFrame.p, "+(x" .. unpack_ret2 .. ")", t_BoostsInfo["Ultra Lucky"].icon, {time = 4});
			m_Library.Signal.Fire("Notification", "You got x" .. unpack_ret2 .. " Ultra Lucky Boost!", {
				color = Color3.fromRGB(128, 72, 173),
				sound = "rbxassetid://8344180273"
			});
		elseif unpack_ret1 == "Triple Damage Boost" or unpack_ret1 == "Triple Damage" then
			m_Library.WorldFX.RewardImage(v1.CFrame.p, "+(x" .. unpack_ret2 .. ")", t_BoostsInfo["Triple Damage"].icon, {time = 4});
			m_Library.Signal.Fire("Notification", "You got x" .. unpack_ret2 .. " Triple Damage Boost!", {
				color = Color3.fromRGB(255, 164, 52),
				sound = "rbxassetid://8344180273"
			});
		elseif unpack_ret1 == "Triple Diamond Boost" or unpack_ret1 == "Triple Diamonds" then
			m_Library.WorldFX.RewardImage(v1.CFrame.p, "+(x" .. unpack_ret2 .. ")", t_BoostsInfo["Triple Diamonds"].icon, {time = 4});
			m_Library.Signal.Fire("Notification", "You got x" .. unpack_ret2 .. " Triple Diamonds Boost!", {
				color = Color3.fromRGB(39, 251, 255),
				sound = "rbxassetid://8344180273"
			});
		elseif unpack_ret1 == "Titanic Pet" or unpack_ret1 == "Huge Pet" then
			local v2 = m_Library.Directory.Pets[unpack_ret2];
			m_Library.WorldFX.RewardImage(v1.CFrame.p, "+Pet", v2.thumbnail, {time = 4});
			m_Library.Signal.Fire("Notification", "You got an Exclusive " .. v2.name .. "!", {
				color = Color3.fromRGB(93, 255, 255),
				sound = "rbxassetid://7255790231"
			});
		elseif unpack_ret1 == "Pet" then
			local v3 = m_Library.Directory.Pets[unpack_ret2];
			m_Library.WorldFX.RewardImage(v1.CFrame.p, "+Pet", v3.thumbnail, {time = 4});
			m_Library.Signal.Fire("Notification", "You got a " .. v3.name .. "!", {color = Color3.fromRGB(255, 255, 255)});
		elseif unpack_ret1 == "Booth" then
			m_Library.Signal.Fire("Notification", "You got a " .. unpack_ret2 .. "!", {color = Color3.fromRGB(255, 255, 255)});
		else
			m_Library.Signal.Fire("Notification", "You got " .. m_Library.Functions.NumberShorten(unpack_ret2) .. " " .. unpack_ret1 .. "!", {color = Color3.fromRGB(255, 255, 255)});
			m_Library.WorldFX.AddCurrency(v1.CFrame.p, unpack_ret2, unpack_ret1, true);
			if unpack_ret1 == "Diamonds" then
				m_Library.Signal.Fire("Rain Diamonds", 2);
			end
		end
		if #p1 <= 1 then continue end
		m_Library.Functions.Wait(0.5);
	end
end
m_Library.Network.Fired("Rewards Redeemed"):Connect(function(p2) -- Line: 93
	Msgs(p2);
end);
m_Library.Signal.Fired("Rewards Redeemed"):Connect(function(p3) -- Line: 99
	Msgs(p3);
end);
  -  Editar
  04:54:13.940    -  Editar
  04:54:13.940  ----- [2840] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Pet Positions -----  -  Editar
  04:54:13.940  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
m_Library.Network.Invoked("Get Pet Positions").OnInvoke = function(p1) -- Line: 17
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local table1 = {};
	for _, val1 in ipairs(p1) do
		local FindFirstChild_ret = m_Library.Things.Pets:FindFirstChild(val1);
		if not FindFirstChild_ret then continue end
		table1[val1] = FindFirstChild_ret.CFrame.Position;
	end
	return table1;
end
local u1 = 0;
m_Library.RunService.Heartbeat:Connect(function(p2) -- Line: 31
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
	--]]
	u1 = u1 + p2;
	if u1 >= 5 then
		u1 = 0;
		local table2 = {};
		local Equipped = m_Library.PetCmds.GetEquipped(nil, true, false);
		for _, val2 in ipairs(Equipped) do
			local FindFirstChild_ret2 = m_Library.Things.Pets:FindFirstChild(val2);
			if not FindFirstChild_ret2 then continue end
			table2[val2] = FindFirstChild_ret2.CFrame.Position;
		end
		m_Library.Network.Fire("Pet Positions", table2);
	end
end);
  -  Editar
  04:54:13.941    -  Editar
  04:54:13.941  ----- [2841] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Hacker Portal Animations -----  -  Editar
  04:54:13.941  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local _ = Random.new();
function PortalAnimation() -- Line: 17
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local FindFirstChild_ret = m_Library.WorldCmds.GetMap().Interactive:FindFirstChild("Hacker Portal");
	if FindFirstChild_ret then
		for index1 = 1, 3 do
			local FindFirstChild_ret2 = FindFirstChild_ret:FindFirstChild("Ring" .. index1);
			local t_PrimaryPart = FindFirstChild_ret2.PrimaryPart;
			for _, descendant1 in ipairs(FindFirstChild_ret2:GetDescendants()) do
				if not descendant1:IsA("BasePart") or descendant1 == t_PrimaryPart then continue end
				descendant1.Anchored = false;
				m_Library.Functions.Weld(t_PrimaryPart, descendant1);
			end
			local os_clock_ret = os.clock();
			local DistanceFromCharacter_ret = nil;
			local os_clock_ret2 = nil;
			local t_CFrame = t_PrimaryPart.CFrame;
			local u1 = index1 == 1 and 4 or index1 == 2 and -4 or 12;
			local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 38
				--[[
					Upvalues:
						[1] = FindFirstChild_ret2
						[2] = DistanceFromCharacter_ret
						[3] = os_clock_ret2
						[4] = m_Library
						[5] = t_PrimaryPart
						[6] = os_clock_ret
						[7] = t_CFrame
						[8] = u1
				--]]
				while FindFirstChild_ret2 and FindFirstChild_ret2.Parent do
					if not DistanceFromCharacter_ret or os.clock() - os_clock_ret2 >= 1 then
						DistanceFromCharacter_ret = m_Library.LocalPlayer:DistanceFromCharacter(t_PrimaryPart.CFrame.p);
						os_clock_ret2 = os.clock();
					end
					if DistanceFromCharacter_ret <= 800 then
						t_PrimaryPart.CFrame = t_CFrame * CFrame.Angles(math.rad((os.clock() - os_clock_ret) * u1), 0, 0);
					end
					m_Library.RenderStepped();
				end
			end);
			coroutine_wrap_ret();
		end
	end
end
function ShakeAnimation() -- Line: 58
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local FindFirstChild_ret3 = m_Library.WorldCmds.GetMap().Interactive:FindFirstChild("Hacker Portal");
	if FindFirstChild_ret3 then
		local coroutine_wrap_ret2 = coroutine.wrap(function() -- Line: 62
			--[[
				Upvalues:
					[1] = FindFirstChild_ret3
					[2] = m_Library
			--]]
			local t_LocalPlayer = game.Players.LocalPlayer;
			while FindFirstChild_ret3 and FindFirstChild_ret3.Parent do
				local DistanceFromCharacter_ret2 = t_LocalPlayer:DistanceFromCharacter(FindFirstChild_ret3.PrimaryPart.CFrame.p);
				if DistanceFromCharacter_ret2 <= 200 then
					local math_clamp_ret = math.clamp(0.5 - DistanceFromCharacter_ret2 / 200 / 2, 0.03, 0.33);
					m_Library.Shake.Create(0.1, math_clamp_ret, 0.5, false);
					m_Library.Functions.Wait(0.1);
				else
					m_Library.RenderStepped();
				end
			end
		end);
		coroutine_wrap_ret2();
	end
end
function Animations() -- Line: 82
	PortalAnimation();
	ShakeAnimation();
end
m_Library.Signal.Fired("World Changed"):Connect(function(p1) -- Line: 88
	if p1 == "Tech" then
		Animations();
	end
end);
  -  Editar
  04:54:13.941    -  Editar
  04:54:13.941  ----- [2842] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Void Animations -----  -  Editar
  04:54:13.941  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local Random_new_ret = Random.new();
function CubeAnimations() -- Line: 17
	--[[
		Upvalues:
			[1] = Random_new_ret
			[2] = m_Library
	--]]
	local function AnimateCube(p2) -- Line: 18
		--[[
			Upvalues:
				[1] = Random_new_ret
				[2] = m_Library
		--]]
		local _ = p2:FindFirstChildOfClass("SelectionBox");
		local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 21
			--[[
				Upvalues:
					[1] = p2
					[2] = Random_new_ret
					[3] = m_Library
			--]]
			local os_clock_ret = os.clock();
			local v2 = p2.CFrame * CFrame.Angles(Random_new_ret:NextNumber(0, math.pi), Random_new_ret:NextNumber(0, math.pi), Random_new_ret:NextNumber(0, math.pi));
			local NextNumber_ret = Random_new_ret:NextNumber(0, 0.5);
			local NextNumber_ret2 = Random_new_ret:NextNumber(15, 100);
			while p2 and p2.Parent do
				local v4 = os.clock() - os_clock_ret;
				p2.CFrame = v2 * CFrame.new(0, math.sin(v4 * NextNumber_ret) * NextNumber_ret2, 0) * CFrame.Angles(math.rad(v4 * 10), math.rad(-v4 * 10), (math.rad(v4 * 10)));
				m_Library.RenderStepped();
			end
		end);
		coroutine_wrap_ret();
	end
	local Map = m_Library.WorldCmds.GetMap();
	local FloatingCubes = Map:WaitForChild("Areas"):WaitForChild("Void"):WaitForChild("FloatingCubes");
	if FloatingCubes then
		for _, child1 in ipairs(FloatingCubes:GetChildren()) do
			local _ = child1:FindFirstChildOfClass("SelectionBox");
			local coroutine_wrap_ret2 = coroutine.wrap(function() -- Line: 21
				--[[
					Upvalues:
						[1] = child1
						[2] = Random_new_ret
						[3] = m_Library
				--]]
				local os_clock_ret2 = os.clock();
				local v3 = child1.CFrame * CFrame.Angles(Random_new_ret:NextNumber(0, math.pi), Random_new_ret:NextNumber(0, math.pi), Random_new_ret:NextNumber(0, math.pi));
				local NextNumber_ret3 = Random_new_ret:NextNumber(0, 0.5);
				local NextNumber_ret4 = Random_new_ret:NextNumber(15, 100);
				while child1 and child1.Parent do
					local v5 = os.clock() - os_clock_ret2;
					child1.CFrame = v3 * CFrame.new(0, math.sin(v5 * NextNumber_ret3) * NextNumber_ret4, 0) * CFrame.Angles(math.rad(v5 * 10), math.rad(-v5 * 10), (math.rad(v5 * 10)));
					m_Library.RenderStepped();
				end
			end);
			coroutine_wrap_ret2();
		end
	end
end
function RockAnimations() -- Line: 45
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local function AnimateRock(p3) -- Line: 46
		--[[
			Upvalues:
				[1] = m_Library
		--]]
		local u1 = math.random() * 2 + 3;
		local u2 = math.random() * 0.6 + 2.7;
		local coroutine_wrap_ret3 = coroutine.wrap(function() -- Line: 50
			--[[
				Upvalues:
					[1] = p3
					[2] = u1
					[3] = u2
					[4] = m_Library
			--]]
			local PrimaryPartCFrame = p3:GetPrimaryPartCFrame();
			local t_Position = PrimaryPartCFrame.Position;
			while p3 and p3.Parent do
				p3:SetPrimaryPartCFrame(PrimaryPartCFrame - t_Position + (t_Position + Vector3.new(0, u1 * math.sin(tick() * math.pi / u2), 0)));
				m_Library.RenderStepped();
			end
		end);
		coroutine_wrap_ret3();
	end
	local Map2 = m_Library.WorldCmds.GetMap();
	local AncientRocks = Map2:WaitForChild("Areas"):WaitForChild("Void"):WaitForChild("AncientRocks");
	if AncientRocks then
		for _, child2 in ipairs(AncientRocks:GetChildren()) do
			AnimateRock(child2);
		end
	end
end
function FloatingRockAnimations() -- Line: 74
	--[[
		Upvalues:
			[1] = Random_new_ret
			[2] = m_Library
	--]]
	local function AnimateRock(p4) -- Line: 75
		--[[
			Upvalues:
				[1] = Random_new_ret
				[2] = m_Library
		--]]
		local coroutine_wrap_ret4 = coroutine.wrap(function() -- Line: 76
			--[[
				Upvalues:
					[1] = p4
					[2] = Random_new_ret
					[3] = m_Library
			--]]
			local os_clock_ret3 = os.clock();
			local t_CFrame = p4.CFrame;
			local NextNumber_ret5 = Random_new_ret:NextNumber(0.1, 1);
			local NextNumber_ret6 = Random_new_ret:NextNumber(3, 7);
			while p4 and p4.Parent do
				p4.CFrame = t_CFrame * CFrame.new(0, math.sin((os.clock() - os_clock_ret3) * NextNumber_ret5) * NextNumber_ret6, 0);
				m_Library.RenderStepped();
			end
		end);
		coroutine_wrap_ret4();
	end
	local Map3 = m_Library.WorldCmds.GetMap();
	local Rocks = Map3:WaitForChild("Areas"):WaitForChild("Void"):WaitForChild("Rocks");
	if Rocks then
		for key3, child3 in ipairs(Rocks:GetChildren()) do
			if key3 % 3 ~= 0 and child3.Name ~= "alwaysfloat" then continue end
			local coroutine_wrap_ret5 = coroutine.wrap(function() -- Line: 76
				--[[
					Upvalues:
						[1] = child3
						[2] = Random_new_ret
						[3] = m_Library
				--]]
				local os_clock_ret4 = os.clock();
				local t_CFrame2 = child3.CFrame;
				local NextNumber_ret7 = Random_new_ret:NextNumber(0.1, 1);
				local NextNumber_ret8 = Random_new_ret:NextNumber(3, 7);
				while child3 and child3.Parent do
					child3.CFrame = t_CFrame2 * CFrame.new(0, math.sin((os.clock() - os_clock_ret4) * NextNumber_ret7) * NextNumber_ret8, 0);
					m_Library.RenderStepped();
				end
			end);
			coroutine_wrap_ret5();
		end
	end
end
function Animations() -- Line: 105
	CubeAnimations();
	FloatingRockAnimations();
	RockAnimations();
end
m_Library.Signal.Fired("World Changed"):Connect(function(p1) -- Line: 112
	if p1 == "Void" then
		Animations();
	end
end);
  -  Editar
  04:54:13.941    -  Editar
  04:54:13.941  ----- [2843] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Enchantment Circle Animation -----  -  Editar
  04:54:13.941  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = nil;
local bool1 = false;
local u2 = 1;
function Setup() -- Line: 19
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
			[3] = u1
			[4] = u2
	--]]
	if bool1 then return end
	bool1 = true;
	local v1 = m_Library.Audio.Play("rbxassetid://7216322534", u1.PrimaryPart, 0.75, 0.125, nil, nil, true);
	v1.RollOffMaxDistance = 100;
	v1.RollOffMinDistance = 10;
	local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 31
		--[[
			Upvalues:
				[1] = u1
				[2] = m_Library
		--]]
		local table1 = {};
		for _, child2 in ipairs(u1:FindFirstChild("BOOKS"):GetChildren()) do
			for _, descendant4 in ipairs(child2:GetDescendants()) do
				if not descendant4:IsA("BasePart") or descendant4 == child2.PrimaryPart then continue end
				descendant4.Anchored = false;
				m_Library.Functions.Weld(child2.PrimaryPart, descendant4);
			end
			table.insert(table1, {
				child2,
				child2.PrimaryPart.CFrame
			});
		end
		local DistanceFromCharacter_ret = nil;
		local os_clock_ret = nil;
		local os_clock_ret2 = os.clock();
		while u1 and u1.Parent do
			if not DistanceFromCharacter_ret or os.clock() - os_clock_ret >= 1 then
				DistanceFromCharacter_ret = m_Library.LocalPlayer:DistanceFromCharacter(u1.PrimaryPart.CFrame.p);
				os_clock_ret = os.clock();
			end
			if DistanceFromCharacter_ret <= 125 then
				local v3 = os.clock() - os_clock_ret2;
				for key5, val5 in ipairs(table1) do
					local unpack_ret1, unpack_ret2 = unpack(val5);
					unpack_ret1.PrimaryPart.CFrame = unpack_ret2 * CFrame.new(0, math.sin(v3 * (key5 / 4 + 1)) * ((key5 % 2 + 1) / 4) + 2, 0);
				end
			end
			m_Library.Heartbeat();
		end
	end);
	coroutine_wrap_ret();
	local coroutine_wrap_ret2 = coroutine.wrap(function() -- Line: 67
		--[[
			Upvalues:
				[1] = u1
				[2] = m_Library
				[3] = u2
		--]]
		local CIRCLE = u1:FindFirstChild("CIRCLE");
		local t_PrimaryPart = CIRCLE.PrimaryPart;
		for _, descendant3 in ipairs(CIRCLE:GetDescendants()) do
			if not descendant3:IsA("BasePart") or descendant3 == t_PrimaryPart then continue end
			descendant3.Anchored = false;
			m_Library.Functions.Weld(t_PrimaryPart, descendant3);
		end
		local t_CFrame = t_PrimaryPart.CFrame;
		local DistanceFromCharacter_ret2 = nil;
		local os_clock_ret3 = nil;
		local os_clock_ret4 = os.clock();
		while u1 and u1.Parent do
			if not DistanceFromCharacter_ret2 or os.clock() - os_clock_ret3 >= 1 then
				DistanceFromCharacter_ret2 = m_Library.LocalPlayer:DistanceFromCharacter(u1.PrimaryPart.CFrame.p);
				os_clock_ret3 = os.clock();
			end
			if DistanceFromCharacter_ret2 <= 175 then
				t_PrimaryPart.CFrame = t_CFrame * CFrame.Angles(0, -math.rad((os.clock() - os_clock_ret4) * 40) * u2, 0);
			end
			m_Library.Heartbeat();
		end
	end);
	coroutine_wrap_ret2();
end
function UseAnimation(p1, p2, p3, p4, p5) -- Line: 98
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
			[3] = u2
	--]]
	local v2 = (p1 == m_Library.LocalPlayer or not p4) and not p5;
	if not u1 or not u1.PrimaryPart then return end
	if v2 then
		m_Library.Audio.Play("rbxassetid://7216322492", u1:GetPrimaryPartCFrame().p, 1.55, 1, 325);
		local coroutine_wrap_ret4 = coroutine.wrap(function() -- Line: 108
			--[[
				Upvalues:
					[1] = u2
					[2] = m_Library
			--]]
			local os_clock_ret5 = os.clock();
			while os.clock() - os_clock_ret5 <= 3 do
				u2 = 1 - math.sin((os.clock() - os_clock_ret5) / 3 * math.pi) * 2;
				m_Library.Heartbeat();
			end
			u2 = 1;
		end);
		coroutine_wrap_ret4();
	end
	m_Library.Functions.Wait(2);
	if not u1 or not u1.PrimaryPart then return end
	if v2 then
		local coroutine_wrap_ret3 = coroutine.wrap(function() -- Line: 126
			--[[
				Upvalues:
					[1] = u1
					[2] = m_Library
			--]]
			if not u1 or not u1:FindFirstChild("CIRCLE") then return end
			local Clone_ret2 = m_Library.Assets.Other.EnchantFX:Clone();
			Clone_ret2.CFrame = u1:FindFirstChild("CIRCLE").PrimaryPart.CFrame * CFrame.Angles(0, 0, 1.5707963267948966);
			Clone_ret2.Parent = m_Library.Debris;
			m_Library.Functions.Tween(Clone_ret2, {Transparency = 1}, {
				1.33,
				"Expo",
				"Out"
			}).Completed:Wait();
			Clone_ret2:Destroy();
		end);
		coroutine_wrap_ret3();
	end
	local FindFirstChild_ret = m_Library.Things.Pets:FindFirstChild(p2);
	if FindFirstChild_ret then
		local Clone_ret = m_Library.Assets.Particles:FindFirstChild("Pet Enchant"):Clone();
		Clone_ret.Parent = FindFirstChild_ret;
		Clone_ret:Emit(20);
		m_Library.Functions.AddDebris(Clone_ret, 3);
	end
	local bool2 = false;
	for _, val1 in ipairs(p3) do
		if not m_Library.Directory.Powers[val1[1]].isUnique then continue end
		bool2 = true;
		break;
	end
	if not u1 or not u1.PrimaryPart then return end
	if u1.PrimaryPart and v2 then
		if bool2 then
			m_Library.Audio.Play("rbxassetid://7216322461", u1:GetPrimaryPartCFrame().p, 1, 1.25, 325);
			return;
		end
		m_Library.Audio.Play("rbxassetid://7216322585", u1:GetPrimaryPartCFrame().p, 1, 1, 325);
	end
end
function Check() -- Line: 191
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		u1 = Map.Interactive:FindFirstChild("Enchanting");
		if u1 then
			Setup();
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 206
	--[[
		Upvalues:
			[1] = bool1
			[2] = u1
	--]]
	bool1 = false;
	u1 = nil;
	Check();
end);
m_Library.Network.Fired("Enchanted Pets"):Connect(function(p6, p7, p8, p9, p10) -- Line: 214
	UseAnimation(p6, p7, p8, p9, p10);
end);
  -  Editar
  04:54:13.941    -  Editar
  04:54:13.941  ----- [2844] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Dark Matter Machine Animation -----  -  Editar
  04:54:13.941  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = nil;
local bool1 = false;
function Setup() -- Line: 18
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
			[3] = u1
	--]]
	if bool1 then return end
	bool1 = true;
	local v1 = m_Library.Audio.Play("rbxassetid://7495293142", u1.PrimaryPart, 0.8, 0.3, nil, nil, true);
	if v1 then
		v1.RollOffMaxDistance = 150;
		v1.RollOffMinDistance = 50;
	end
	local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 32
		--[[
			Upvalues:
				[1] = u1
				[2] = m_Library
		--]]
		local Crystal1 = u1:FindFirstChild("Crystal1");
		local Crystal2 = u1:FindFirstChild("Crystal2");
		local DistanceFromCharacter_ret = nil;
		local os_clock_ret = nil;
		local t_CFrame = Crystal1.CFrame;
		local t_CFrame2 = Crystal2.CFrame;
		local os_clock_ret2 = os.clock();
		while u1 and u1.Parent do
			if not DistanceFromCharacter_ret or os.clock() - os_clock_ret >= 1 then
				DistanceFromCharacter_ret = m_Library.LocalPlayer:DistanceFromCharacter(u1.PrimaryPart.CFrame.p);
				os_clock_ret = os.clock();
			end
			if DistanceFromCharacter_ret <= 500 then
				local v2 = os.clock() - os_clock_ret2;
				Crystal1.CFrame = t_CFrame + Vector3.new(0, math.sin(v2 * 0.2) * 8, 0);
				Crystal2.CFrame = t_CFrame2 + Vector3.new(0, math.sin(v2 * 0.125) * 8, 0);
			end
			m_Library.Heartbeat();
		end
	end);
	coroutine_wrap_ret();
end
function UseAnimation(_) -- Line: 58
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
	--]]
	if not u1 or not u1.PrimaryPart then return end
	m_Library.Audio.Play("rbxassetid://7495430575", u1:GetPrimaryPartCFrame().p, 1, 1.25, 500);
end
function ClaimAnimation(_) -- Line: 67
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
	--]]
	if not u1 or not u1.PrimaryPart then return end
	m_Library.Audio.Play("rbxassetid://7495292957", u1:GetPrimaryPartCFrame().p, 1, 1.33, 500);
end
function Check() -- Line: 76
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		u1 = Map.Interactive:FindFirstChild("Dark Matter Machine");
		if u1 then
			Setup();
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 91
	--[[
		Upvalues:
			[1] = bool1
			[2] = u1
	--]]
	bool1 = false;
	u1 = nil;
	Check();
end);
m_Library.Network.Fired("Dark Matter Machine Used"):Connect(function(p1) -- Line: 98
	UseAnimation(p1);
end);
m_Library.Network.Fired("Dark Matter Machine Redeemed"):Connect(function(p2) -- Line: 103
	ClaimAnimation(p2);
end);
  -  Editar
  04:54:13.941    -  Editar
  04:54:13.942  ----- [2845] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Boost Machine Animation -----  -  Editar
  04:54:13.942  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = nil;
local bool1 = false;
function Setup() -- Line: 18
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
			[3] = u1
	--]]
	if bool1 then return end
	bool1 = true;
	local v1 = m_Library.Audio.Play("rbxassetid://11603330712", u1.PrimaryPart, 1, 0.3, nil, nil, true);
	if v1 then
		v1.RollOffMaxDistance = 80;
		v1.RollOffMinDistance = 10;
	end
	local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 32
		--[[
			Upvalues:
				[1] = u1
				[2] = m_Library
		--]]
		local bool2 = true;
		while u1 and u1.Parent and u1:FindFirstChild("Rings") do
			local Rings = u1:FindFirstChild("Rings");
			if bool2 then
				local v2 = nil;
				for _, child1 in pairs(Rings:GetChildren()) do
					v2 = m_Library.Functions.Tween(child1, {Position = child1.Position + Vector3.new(0, -9.5, 0)}, {
						5,
						Enum.EasingStyle.Cubic,
						Enum.EasingDirection.Out
					});
				end
				v2.Completed:Wait();
				bool2 = false;
			else
				local v3 = nil;
				for _, child2 in pairs(Rings:GetChildren()) do
					v3 = m_Library.Functions.Tween(child2, {Position = child2.Position + Vector3.new(0, 9.5, 0)}, {
						5,
						Enum.EasingStyle.Cubic,
						Enum.EasingDirection.Out
					});
				end
				v3.Completed:Wait();
				bool2 = true;
			end
			m_Library.Heartbeat();
		end
	end);
	coroutine_wrap_ret();
end
function UseAnimation() -- Line: 76
	--[[
		Upvalues:
			[1] = u1
	--]]
	if not u1 or not u1.PrimaryPart then
	end
end
function Check() -- Line: 88
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		u1 = Map.Interactive:FindFirstChild("Boost Machine");
		if u1 then
			Setup();
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 104
	--[[
		Upvalues:
			[1] = bool1
			[2] = u1
	--]]
	bool1 = false;
	u1 = nil;
	Check();
end);
  -  Editar
  04:54:13.942    -  Editar
  04:54:13.942  ----- [2846] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Fuse Pets Machine Animation -----  -  Editar
  04:54:13.942  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = nil;
local bool1 = false;
function Setup() -- Line: 18
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
			[3] = u1
	--]]
	if bool1 then return end
	bool1 = true;
	local v1 = m_Library.Audio.Play("rbxassetid://7082609487", u1.PrimaryPart, 1, 0.225, nil, nil, true);
	v1.RollOffMaxDistance = 90;
	v1.RollOffMinDistance = 20;
	local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 30
		--[[
			Upvalues:
				[1] = u1
				[2] = m_Library
		--]]
		local Pump1 = u1:FindFirstChild("Pump1");
		local Pump2 = u1:FindFirstChild("Pump2");
		local DistanceFromCharacter_ret = nil;
		local os_clock_ret = nil;
		local t_CFrame = Pump1.CFrame;
		local t_CFrame2 = Pump2.CFrame;
		local os_clock_ret2 = os.clock();
		while u1 and u1.Parent do
			if not DistanceFromCharacter_ret or os.clock() - os_clock_ret >= 1 then
				DistanceFromCharacter_ret = m_Library.LocalPlayer:DistanceFromCharacter(u1.PrimaryPart.CFrame.p);
				os_clock_ret = os.clock();
			end
			if DistanceFromCharacter_ret <= 350 then
				local v4 = os.clock() - os_clock_ret2;
				Pump1.CFrame = t_CFrame + Vector3.new(0, math.sin(v4 * 1.4) * 1.5, 0);
				Pump2.CFrame = t_CFrame2 + Vector3.new(0, math.sin(v4 * 2) * 0.75, 0);
			end
			m_Library.Heartbeat();
		end
	end);
	coroutine_wrap_ret();
end
function UseAnimation() -- Line: 55
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
	--]]
	if not u1 or not u1.PrimaryPart then return end
	m_Library.Audio.Play("rbxassetid://7082614240", u1:GetPrimaryPartCFrame().p, 1, 0.85, 400);
	m_Library.Functions.Wait(1.5);
	if not u1 or not u1.PrimaryPart then return end
	local v2, v3 = m_Library.Functions.CreateParticleHost(u1:GetPrimaryPartCFrame().p);
	local Children = m_Library.Assets.Particles:FindFirstChild("Fuse Pets Machine"):GetChildren();
	for _, val1 in ipairs(Children) do
		local Clone_ret = val1:Clone();
		Clone_ret.Parent = v3;
		Clone_ret:Emit(30);
	end
	m_Library.Functions.AddDebris(v2, 4);
end
function Check() -- Line: 82
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		u1 = Map.Interactive:FindFirstChild("Fuse Pets");
		if u1 then
			Setup();
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 98
	--[[
		Upvalues:
			[1] = bool1
			[2] = u1
	--]]
	bool1 = false;
	u1 = nil;
	Check();
end);
m_Library.Network.Fired("Using Fuse Pets Machine"):Connect(function(_) -- Line: 105
	UseAnimation();
end);
  -  Editar
  04:54:13.942    -  Editar
  04:54:13.942  ----- [2847] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Rainbow Machine Animation -----  -  Editar
  04:54:13.942  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = nil;
local bool1 = false;
function Setup() -- Line: 18
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
			[3] = u1
	--]]
	if bool1 then return end
	bool1 = true;
	local v1 = m_Library.Audio.Play("rbxassetid://7160550471", u1.PrimaryPart, 1, 0.175, nil, nil, true);
	if v1 then
		v1.RollOffMaxDistance = 90;
		v1.RollOffMinDistance = 10;
	end
	local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 32
		--[[
			Upvalues:
				[1] = u1
				[2] = m_Library
		--]]
		local table1 = {};
		local table2 = {};
		for _, child2 in ipairs(u1:GetChildren()) do
			if not child2:IsA("BasePart") or child2.Name ~= "Cylinder" then continue end
			table.insert(table1, child2);
			table.insert(table2, child2.CFrame);
		end
		local DistanceFromCharacter_ret = nil;
		local os_clock_ret = nil;
		local os_clock_ret2 = os.clock();
		while u1 and u1.Parent do
			if not DistanceFromCharacter_ret or os.clock() - os_clock_ret >= 1 then
				if u1.PrimaryPart then
					DistanceFromCharacter_ret = m_Library.LocalPlayer:DistanceFromCharacter(u1.PrimaryPart.CFrame.p);
				end
				os_clock_ret = os.clock();
			end
			if DistanceFromCharacter_ret <= 300 then
				local v4 = os.clock() - os_clock_ret2;
				for key3, val3 in ipairs(table1) do
					val3.CFrame = table2[key3] * CFrame.new(0, math.sin((v4 + key3 / 3) * 3) / 2, 0);
				end
			end
			m_Library.Heartbeat();
		end
	end);
	coroutine_wrap_ret();
end
function UseAnimation(p1) -- Line: 67
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
	--]]
	if not u1 or not u1.PrimaryPart then return end
	m_Library.Audio.Play("rbxassetid://7160505672", u1:GetPrimaryPartCFrame().p, 1, 0.75, 400);
	m_Library.Functions.Tween(u1.Chute, {Color = Color3.fromRGB(180, 180, 180)}, {
		0.75,
		"Quad",
		"InOut"
	});
	m_Library.Functions.Wait(1.5);
	if not u1 or not u1.PrimaryPart then return end
	if p1 then
		m_Library.Audio.Play("rbxassetid://7160552287", u1:GetPrimaryPartCFrame().p, 1, 1, 400);
		local v2, v3 = m_Library.Functions.CreateParticleHost(u1:GetPrimaryPartCFrame().p);
		local Children = m_Library.Assets.Particles:FindFirstChild("Rainbow Machine"):GetChildren();
		for _, val1 in ipairs(Children) do
			local Clone_ret = val1:Clone();
			Clone_ret.Parent = v3;
			Clone_ret:Emit(10);
		end
		m_Library.Functions.AddDebris(v2, 4);
	else
		m_Library.Audio.Play(4489274818, u1:GetPrimaryPartCFrame().p, 1, 1, 400);
	end
	m_Library.Functions.Tween(u1.Chute, {Color = Color3.fromRGB(0, 0, 0)}, {
		0.3,
		"Linear"
	});
end
function Check() -- Line: 108
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		u1 = Map.Interactive:FindFirstChild("Rainbow Machine");
		if u1 then
			Setup();
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 123
	--[[
		Upvalues:
			[1] = bool1
			[2] = u1
	--]]
	bool1 = false;
	u1 = nil;
	Check();
end);
m_Library.Network.Fired("Using Rainbow Machine"):Connect(function(_, p2) -- Line: 130
	UseAnimation(p2);
end);
  -  Editar
  04:54:13.942    -  Editar
  04:54:13.942  ----- [2848] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Spooky Upgrades Animation -----  -  Editar
  04:54:13.942  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local Random_new_ret = Random.new();
local u1 = nil;
local bool1 = false;
function Setup() -- Line: 19
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
			[3] = u1
	--]]
	if bool1 then return end
	bool1 = true;
	local v1 = m_Library.Audio.Play("rbxassetid://6958868932", u1.PrimaryPart, 0.8, 0.25, nil, nil, true);
	v1.RollOffMaxDistance = 120;
	v1.RollOffMinDistance = 10;
end
function UseAnimation() -- Line: 32
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
			[3] = Random_new_ret
	--]]
	if not u1 then return end
	local FindFirstChild_ret = m_Library.Assets.Other:FindFirstChild("Upgrade Station");
	local Pad = u1:FindFirstChild("Pad");
	m_Library.Audio.Play("rbxassetid://7878129940", Pad, 1, 1, 375);
	local Clone_ret = m_Library.Assets.Particles:FindFirstChild("Upgrade Station").Success:Clone();
	Clone_ret.Parent = Pad;
	Clone_ret:Emit(20);
	m_Library.Functions.AddDebris(Clone_ret, 3);
	local Clone_ret2 = FindFirstChild_ret:FindFirstChildOfClass("PointLight"):Clone();
	Clone_ret2.Color = Color3.fromRGB(138, 113, 188);
	Clone_ret2.Parent = Pad;
	m_Library.Functions.Tween(Clone_ret2, {Brightness = 0}, {
		0.2,
		"Linear"
	});
	for index1 = 1, 5 do
		local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 57
			--[[
				Upvalues:
					[1] = FindFirstChild_ret
					[2] = index1
					[3] = Pad
					[4] = Random_new_ret
					[5] = m_Library
			--]]
			local Clone_ret3 = FindFirstChild_ret.Effect:Clone();
			Clone_ret3.Color = index1 % 2 == 0 and Color3.fromRGB(187, 153, 255) or Color3.new(1, 1, 1);
			Clone_ret3.CFrame = Pad.CFrame * CFrame.Angles(0, Random_new_ret:NextNumber(0, 360), 0) + Vector3.new(0, Clone_ret3.Size.Y / 2.5, 0);
			Clone_ret3.Parent = m_Library.Debris;
			local vec3 = Vector3.new(Clone_ret3.Size.X, 15, Clone_ret3.Size.Z);
			local v2 = Clone_ret3.CFrame + Vector3.new(0, vec3.Y / 2.5, 0);
			m_Library.Functions.Tween(Clone_ret3, {
				Size = vec3,
				CFrame = v2,
				Transparency = 1
			}, {
				0.2,
				"Expo",
				"Out"
			}).Completed:Wait();
			Clone_ret3:Destroy();
		end);
		coroutine_wrap_ret();
		m_Library.Functions.Wait(0.05);
	end
end
function Check() -- Line: 76
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		u1 = Map.Interactive:FindFirstChild("Spooky Upgrades");
		if u1 then
			Setup();
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 91
	--[[
		Upvalues:
			[1] = bool1
			[2] = u1
	--]]
	bool1 = false;
	u1 = nil;
	Check();
end);
m_Library.Network.Fired("Spooky Upgrade Animation"):Connect(function(_) -- Line: 99
	UseAnimation();
end);
  -  Editar
  04:54:13.942    -  Editar
  04:54:13.943  ----- [2849] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Upgrade Machine Animation -----  -  Editar
  04:54:13.943  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local Random_new_ret = Random.new();
local u1 = nil;
local bool1 = false;
function Setup() -- Line: 19
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
			[3] = u1
	--]]
	if bool1 then return end
	bool1 = true;
	local v1 = m_Library.Audio.Play("rbxassetid://6958868932", u1.PrimaryPart, 1, 0.25, nil, nil, true);
	v1.RollOffMaxDistance = 120;
	v1.RollOffMinDistance = 10;
end
function UseAnimation() -- Line: 32
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
			[3] = Random_new_ret
	--]]
	if not u1 then return end
	local FindFirstChild_ret = m_Library.Assets.Other:FindFirstChild("Upgrade Station");
	local Pad = u1:FindFirstChild("Pad");
	m_Library.Audio.Play("rbxassetid://6940331703", Pad, 1, 1, 375);
	local Clone_ret = m_Library.Assets.Particles:FindFirstChild("Upgrade Station").Success:Clone();
	Clone_ret.Parent = Pad;
	Clone_ret:Emit(20);
	m_Library.Functions.AddDebris(Clone_ret, 3);
	local Clone_ret2 = FindFirstChild_ret:FindFirstChildOfClass("PointLight"):Clone();
	Clone_ret2.Parent = Pad;
	m_Library.Functions.Tween(Clone_ret2, {Brightness = 0}, {
		0.2,
		"Linear"
	});
	for index1 = 1, 5 do
		local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 56
			--[[
				Upvalues:
					[1] = FindFirstChild_ret
					[2] = index1
					[3] = Pad
					[4] = Random_new_ret
					[5] = m_Library
			--]]
			local Clone_ret3 = FindFirstChild_ret.Effect:Clone();
			Clone_ret3.Color = index1 % 2 == 0 and Clone_ret3.Color or Color3.new(1, 1, 1);
			Clone_ret3.CFrame = Pad.CFrame * CFrame.Angles(0, Random_new_ret:NextNumber(0, 360), 0) + Vector3.new(0, Clone_ret3.Size.Y / 2.5, 0);
			Clone_ret3.Parent = m_Library.Debris;
			local vec3 = Vector3.new(Clone_ret3.Size.X, 15, Clone_ret3.Size.Z);
			local v2 = Clone_ret3.CFrame + Vector3.new(0, vec3.Y / 2.5, 0);
			m_Library.Functions.Tween(Clone_ret3, {
				Size = vec3,
				CFrame = v2,
				Transparency = 1
			}, {
				0.2,
				"Expo",
				"Out"
			}).Completed:Wait();
			Clone_ret3:Destroy();
		end);
		coroutine_wrap_ret();
		m_Library.Functions.Wait(0.05);
	end
end
function Check() -- Line: 75
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		u1 = Map.Interactive:FindFirstChild("Upgrade Station");
		if u1 then
			Setup();
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 90
	--[[
		Upvalues:
			[1] = bool1
			[2] = u1
	--]]
	bool1 = false;
	u1 = nil;
	Check();
end);
m_Library.Network.Fired("Upgrade Station Animation"):Connect(function(_) -- Line: 98
	UseAnimation();
end);
  -  Editar
  04:54:13.943    -  Editar
  04:54:13.943  ----- [2850] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Fun Gun Effect -----  -  Editar
  04:54:13.943  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
m_Library.Network.Fired("Explode Pet"):Connect(function(p1) 
	m_Library.WorldFX.Explosion(p1);
end);
  -  Editar
  04:54:13.943    -  Editar
  04:54:13.943  ----- [2851] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Hardcore Mode Teleports -----  -  Editar
  04:54:13.943  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = nil;
local u2 = nil;
local FindFirstChild_ret = nil;
local bool1 = false;
local u3 = nil;
function Request() -- Line: 20
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u3
	--]]
	if not m_Library.WorldCmds.CanDoAction() then return end
	local v1 = m_Library.Save.Get();
	if not v1 then return end
	local v2 = m_Library.Message.New(m_Library.Shared.IsHardcore and "Return back to normal mode?" or "Are you sure you want to enter Hardcore mode? You won't lose any progress.", true);
	if not v2 then return end
	m_Library.Variables.LoadingWorld = true;
	local v3, v4 = m_Library.Network.Invoke("Toggle Hardcore Mode");
	if v3 then
		if m_Library.Shared.IsHardcore then
			u3 = m_Library.GUIFX.Loading("Normal Mode");
			return;
		end
		u3 = m_Library.GUIFX.Loading("Hardcore Mode");
		return;
	end
	m_Library.Variables.LoadingWorld = false;
	m_Library.Message.New(v4 or "Failed to enter Hardcore Mode.");
end
function Setup() -- Line: 51
	--[[
		Upvalues:
			[1] = u1
			[2] = u2
			[3] = m_Library
			[4] = FindFirstChild_ret
			[5] = bool1
	--]]
	u1, u2 = m_Library.Interact.Add(FindFirstChild_ret, {dist = 18});
	u1:Connect(function() -- Line: 54
		--[[
			Upvalues:
				[1] = bool1
				[2] = m_Library
		--]]
		if not bool1 then
			bool1 = true;
			local v5 = m_Library.Save.Get();
			if v5 then
				if v5.HardcoreUnlocked then
					Request();
				else
					m_Library.Message.New("You must have 25% of the Mastery completed to unlock Hardcore Mode.");
				end
			end
			bool1 = false;
		end
	end);
end
function Check() -- Line: 73
	--[[
		Upvalues:
			[1] = m_Library
			[2] = FindFirstChild_ret
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		FindFirstChild_ret = Map.Interactive:FindFirstChild("Hardcore Portal");
		if FindFirstChild_ret then
			Setup();
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 87
	--[[
		Upvalues:
			[1] = u2
	--]]
	if u2 then
		u2();
		u2 = nil;
	end
	Check();
end);
m_Library.TeleportService.TeleportInitFailed:Connect(function(_, _, _, _, _) -- Line: 95
	--[[
		Upvalues:
			[1] = u3
	--]]
	if u3 then
		u3();
	end
end);
  -  Editar
  04:54:13.943    -  Editar
  04:54:13.943  ----- [2852] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Leave Trading Plaza -----  -  Editar
  04:54:13.943  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = nil;
local u2 = nil;
local bool1 = false;
local u3 = nil;
function Request() -- Line: 19
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u3
	--]]
	m_Library.Variables.LoadingWorld = true;
	local v1, v2 = m_Library.Network.Invoke("Travel to Main World");
	if v1 then
		u3 = m_Library.GUIFX.Loading("Spawn");
		return;
	end
	m_Library.Variables.LoadingWorld = false;
	m_Library.Message.New(v2 or "Failed to travel back to Spawn.");
end
function Setup(p1) -- Line: 31
	--[[
		Upvalues:
			[1] = u1
			[2] = u2
			[3] = m_Library
			[4] = bool1
	--]]
	u1, u2 = m_Library.Interact.Add(p1, {dist = 18});
	if not u1 then return end
	u1:Connect(function() -- Line: 37
		--[[
			Upvalues:
				[1] = bool1
		--]]
		if not bool1 then
			bool1 = true;
			Request();
			bool1 = false;
		end
	end);
end
function Check() -- Line: 47
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	if not m_Library.Shared.IsTradingPlaza then return end
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		local FindFirstChild_ret = Map.Interactive:FindFirstChild("Leave Gate");
		if FindFirstChild_ret then
			Setup(FindFirstChild_ret);
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 65
	--[[
		Upvalues:
			[1] = u2
	--]]
	if u2 then
		u2();
		u2 = nil;
	end
	Check();
end);
m_Library.TeleportService.TeleportInitFailed:Connect(function(_, _, _, _, _) -- Line: 73
	--[[
		Upvalues:
			[1] = u3
	--]]
	if u3 then
		u3();
	end
end);
  -  Editar
  04:54:13.943    -  Editar
  04:54:13.943  ----- [2853] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Huge Machine Gate -----  -  Editar
  04:54:13.944  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = nil;
local u2 = nil;
local FindFirstChild_ret = nil;
local bool1 = false;
function Buy() -- Line: 21
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u2
	--]]
	local v1 = m_Library.Message.New("Do you want to unlock the Huge Machine for 10,000,000 Diamonds?", true);
	if v1 then
		local v4, v5 = m_Library.Network.Invoke("Buy Huge Machine");
		if not v4 then
			m_Library.Message.New(v5 or "Something went wrong.");
			return;
		end
		u2();
		u2 = nil;
		m_Library.Audio.Play("rbxassetid://7399584366", script, 1, 1.25);
		m_Library.Message.New("\226\156\133 Success!");
	end
end
function Update() -- Line: 37
	--[[
		Upvalues:
			[1] = FindFirstChild_ret
			[2] = m_Library
	--]]
	if not FindFirstChild_ret then return end
	local v2 = m_Library.Save.Get();
	if not v2 then return end
	if v2.OwnsHugeMachine and FindFirstChild_ret:FindFirstChild("invisible-wall") then
		m_Library.Audio.Play("rbxassetid://7751703357", FindFirstChild_ret.PrimaryPart.CFrame, 0.8, 1, 150);
		FindFirstChild_ret:FindFirstChild("invisible-wall"):Destroy();
		FindFirstChild_ret:FindFirstChild("Interact"):Destroy();
		FindFirstChild_ret.Gate.CanCollide = false;
		FindFirstChild_ret.Gate.Transparency = 1;
		FindFirstChild_ret.Gate.Beam.Enabled = false;
	end
end
function Setup() -- Line: 60
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
			[3] = u2
			[4] = FindFirstChild_ret
			[5] = bool1
	--]]
	Update();
	local v3 = m_Library.Save.Get();
	if not v3 then return end
	if v3.OwnsHugeMachine then return end
	u1, u2 = m_Library.Interact.Add(FindFirstChild_ret.Interact, {
		dist = 18,
		label = "Buy Huge Machine!"
	});
	u1:Connect(function() -- Line: 74
		--[[
			Upvalues:
				[1] = bool1
				[2] = m_Library
		--]]
		if not bool1 then
			bool1 = true;
			local v6 = m_Library.Save.Get();
			if v6 and not v6.OwnsHugeMachine then
				Buy();
			end
			bool1 = false;
		end
	end);
end
function Check() -- Line: 91
	--[[
		Upvalues:
			[1] = m_Library
			[2] = FindFirstChild_ret
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		FindFirstChild_ret = Map.Interactive:FindFirstChild("Huge Machine Gate");
		if FindFirstChild_ret then
			Setup();
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 105
	--[[
		Upvalues:
			[1] = u2
	--]]
	if u2 then
		u2();
		u2 = nil;
	end
	Check();
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p1) -- Line: 114
	if p1 == "OwnsHugeMachine" then
		Update();
	end
end);
  -  Editar
  04:54:13.944    -  Editar
  04:54:13.944  ----- [2854] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Secret House Interactive -----  -  Editar
  04:54:13.944  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local bool1 = false;
local Interactive = nil;
function Give() -- Line: 18
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	if not m_Library.WorldCmds.CanDoAction() then return end
	local v1, v2 = m_Library.Network.Invoke("Give Purple Hoverboard");
	if not v1 then
		m_Library.Message.New(v2 or "Something went wrong.");
	end
end
function Has() -- Line: 30
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v3 = m_Library.Save.Get(nil, true);
	if not v3 then return end
	return m_Library.Functions.SearchArray(v3.Hoverboards, "Purple");
end
function Teleport() -- Line: 40
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.WorldCmds.Load("Spawn");
end
function Hook() -- Line: 45
	--[[
		Upvalues:
			[1] = m_Library
			[2] = Interactive
			[3] = bool1
	--]]
	local v4, _ = m_Library.Interact.Add(Interactive:FindFirstChild("Hoverboard"), {dist = 8});
	v4:Connect(function() -- Line: 47
		--[[
			Upvalues:
				[1] = bool1
		--]]
		if not bool1 then
			bool1 = true;
			Give();
			bool1 = false;
		end
	end);
	local v5, _ = m_Library.Interact.Add(Interactive:FindFirstChild("Door").PrimaryPart, {dist = 8});
	v5:Connect(function() -- Line: 56
		--[[
			Upvalues:
				[1] = bool1
		--]]
		if not bool1 then
			bool1 = true;
			Teleport();
			bool1 = false;
		end
	end);
end
function Update() -- Line: 66
	--[[
		Upvalues:
			[1] = Interactive
	--]]
	if Has() and Interactive then
		Interactive:FindFirstChild("Hoverboard"):Destroy();
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function(p1, p2) -- Line: 77
	--[[
		Upvalues:
			[1] = Interactive
	--]]
	Interactive = nil;
	if p1 == "Secret House" then
		Interactive = p2:FindFirstChild("Interactive");
		Hook();
		Update();
	end
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p3) -- Line: 87
	if p3 == "Hoverboards" then
		Update();
	end
end);
  -  Editar
  04:54:13.944    -  Editar
  04:54:13.944  ----- [2855] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Anniversary Balloons -----  -  Editar
  04:54:13.944  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local table1 = {};
local table2 = {};
local tick_ret = tick();
local u1 = nil;
local function weldBalloons() -- Line: 20
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table1
			[3] = table2
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	local Balloons = Map:FindFirstChild("Interactive"):FindFirstChild("Balloons");
	if not Balloons then return end
	for _, child1 in ipairs(Balloons:GetChildren()) do
		local WeldConstraint = Instance.new("WeldConstraint");
		WeldConstraint.Part0 = child1.Balloon;
		WeldConstraint.Part1 = child1.Part;
		WeldConstraint.Parent = child1.Balloon;
		table1[child1] = child1.Balloon.CFrame;
		table2[child1] = {
			XZ = math.random() * 2 * math.pi,
			Y = math.random() * 2 * math.pi
		};
		child1.Balloon.Anchored = false;
	end
end
function Animations() -- Line: 42
	--[[
		Upvalues:
			[1] = weldBalloons
			[2] = u1
			[3] = m_Library
			[4] = tick_ret
			[5] = table1
			[6] = table2
	--]]
	weldBalloons();
	local UserGameSettings = UserSettings():GetService("UserGameSettings");
	u1 = m_Library.Services.RunService.RenderStepped:Connect(function() -- Line: 46
		--[[
			Upvalues:
				[1] = UserGameSettings
				[2] = tick_ret
				[3] = table1
				[4] = table2
		--]]
		local t_SavedQualityLevel = UserGameSettings.SavedQualityLevel;
		if t_SavedQualityLevel ~= Enum.SavedQualitySetting.QualityLevel10 and t_SavedQualityLevel ~= Enum.SavedQualitySetting.QualityLevel9 and t_SavedQualityLevel ~= Enum.SavedQualitySetting.QualityLevel8 then return end
		local v1 = tick() - tick_ret;
		local _ = {};
		local _ = {};
		for key2, val2 in pairs(table1) do
			local v2 = val2 * CFrame.new(math.sin(v1 + table2[key2].XZ) * 1, math.sin(v1 + table2[key2].Y) * 0.5, math.cos(v1 + table2[key2].XZ) * 1);
			if not key2:FindFirstChild("Balloon") then continue end
			key2.Balloon.CFrame = v2;
		end
	end);
end
function Clean() -- Line: 72
	--[[
		Upvalues:
			[1] = table2
			[2] = table1
			[3] = u1
	--]]
	table2 = {};
	table1 = {};
	if u1 then
		u1:Disconnect();
		u1 = nil;
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function(p1) -- Line: 82
	Clean();
	if p1 == "Spawn" then
		Animations();
	end
end);
  -  Editar
  04:54:13.944    -  Editar
  04:54:13.944  ----- [2856] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Secret Vault Interactive -----  -  Editar
  04:54:13.944  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local bool1 = false;
local Interactive = nil;
function Give() -- Line: 18
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	if not m_Library.WorldCmds.CanDoAction() then return end
	local v1, v2 = m_Library.Network.Invoke("Give High Tech Hoverboard");
	if not v1 then
		m_Library.Message.New(v2 or "Something went wrong.");
	end
end
function Has() -- Line: 30
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v3 = m_Library.Save.Get(nil, true);
	if not v3 then return end
	return m_Library.Functions.SearchArray(v3.Hoverboards, "High Tech");
end
function Teleport() -- Line: 40
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.WorldCmds.Load("Tech");
end
function Hook() -- Line: 45
	--[[
		Upvalues:
			[1] = m_Library
			[2] = Interactive
			[3] = bool1
	--]]
	local v4, _ = m_Library.Interact.Add(Interactive:FindFirstChild("Hoverboard"), {dist = 8});
	v4:Connect(function() -- Line: 47
		--[[
			Upvalues:
				[1] = bool1
		--]]
		if not bool1 then
			bool1 = true;
			Give();
			bool1 = false;
		end
	end);
	local v5, _ = m_Library.Interact.Add(Interactive:FindFirstChild("Door"), {dist = 8});
	v5:Connect(function() -- Line: 56
		--[[
			Upvalues:
				[1] = bool1
		--]]
		if not bool1 then
			bool1 = true;
			Teleport();
			bool1 = false;
		end
	end);
end
function Update() -- Line: 66
	--[[
		Upvalues:
			[1] = Interactive
	--]]
	if Has() and Interactive then
		Interactive:FindFirstChild("Hoverboard"):Destroy();
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function(p1, p2) -- Line: 77
	--[[
		Upvalues:
			[1] = Interactive
	--]]
	Interactive = nil;
	if p1 == "Secret Vault" then
		Interactive = p2:FindFirstChild("Interactive");
		Hook();
		Update();
	end
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p3) -- Line: 87
	if p3 == "Hoverboards" then
		Update();
	end
end);
  -  Editar
  04:54:13.944    -  Editar
  04:54:13.944  ----- [2857] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Huge Machine Animation -----  -  Editar
  04:54:13.944  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = nil;
local bool1 = false;
local u2 = 0;
function Setup() -- Line: 19
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
			[3] = u1
	--]]
	if bool1 then return end
	bool1 = true;
	local v1 = m_Library.Audio.Play("rbxassetid://12371260229", u1.PrimaryPart, 1, 0.2, nil, nil, true);
	v1.RollOffMaxDistance = 80;
	v1.RollOffMinDistance = 10;
	local function AnimateRock(p2) -- Line: 30
		--[[
			Upvalues:
				[1] = m_Library
		--]]
		local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 34
			--[[
				Upvalues:
					[1] = p2
					[2] = m_Library
			--]]
			local PrimaryPartCFrame = p2:GetPrimaryPartCFrame();
			local t_Position = PrimaryPartCFrame.Position;
			while p2 and p2.Parent do
				p2:SetPrimaryPartCFrame(PrimaryPartCFrame - t_Position + (t_Position + Vector3.new(0, math.sin(tick() * math.pi / 2) * 1, 0)));
				m_Library.RenderStepped();
			end
		end);
		coroutine_wrap_ret();
	end
	local Crystal = u1:FindFirstChild("Crystal");
	local coroutine_wrap_ret2 = coroutine.wrap(function() -- Line: 34
		--[[
			Upvalues:
				[1] = Crystal
				[2] = m_Library
		--]]
		local PrimaryPartCFrame2 = Crystal:GetPrimaryPartCFrame();
		local t_Position2 = PrimaryPartCFrame2.Position;
		while Crystal and Crystal.Parent do
			Crystal:SetPrimaryPartCFrame(PrimaryPartCFrame2 - t_Position2 + (t_Position2 + Vector3.new(0, math.sin(tick() * math.pi / 2) * 1, 0)));
			m_Library.RenderStepped();
		end
	end);
	coroutine_wrap_ret2();
end
function UseAnimation(_) -- Line: 52
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
			[3] = u2
	--]]
	if not u1 or not u1.PrimaryPart then return end
	m_Library.Audio.Play(12371276046, u1:GetPrimaryPartCFrame().p, 1, 0.75, 400);
	local v2, v3 = m_Library.Functions.CreateParticleHost(u1:GetPrimaryPartCFrame().p);
	local Children = m_Library.Assets.Particles:FindFirstChild("Huge Machine"):GetChildren();
	for _, val1 in ipairs(Children) do
		local Clone_ret = val1:Clone();
		Clone_ret.Parent = v3;
		Clone_ret:Emit(50);
	end
	m_Library.Functions.AddDebris(v2, 4);
	local Pumps = u1:FindFirstChild("Pumps");
	if Pumps then
		u2 = u2 + 1;
		for _, child2 in pairs(Pumps:GetChildren()) do
			local Attachment2 = child2:FindFirstChild("Attachment");
			local Smoke2 = Attachment2:FindFirstChild("Smoke");
			Smoke2.Speed = NumberRange.new(15, 20);
			Smoke2.Rate = 10;
		end
		task.delay(2, function() -- Line: 84
			--[[
				Upvalues:
					[1] = u2
					[2] = Pumps
			--]]
			u2 = u2 - 1;
			if u2 <= 0 then
				for _, child3 in pairs(Pumps:GetChildren()) do
					local Attachment = child3:FindFirstChild("Attachment");
					local Smoke = Attachment:FindFirstChild("Smoke");
					Smoke.Speed = NumberRange.new(3, 5);
					Smoke.Rate = 3;
				end
			end
		end);
	end
end
function Check() -- Line: 102
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		u1 = Map.Interactive:FindFirstChild("Huge Machine");
		if u1 then
			Setup();
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 118
	--[[
		Upvalues:
			[1] = bool1
			[2] = u1
	--]]
	bool1 = false;
	u1 = nil;
	Check();
end);
m_Library.Network.Fired("Using Huge Machine"):Connect(function(_, p1) -- Line: 126
	UseAnimation(p1);
end);
  -  Editar
  04:54:13.945    -  Editar
  04:54:13.945  ----- [2858] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Secret Cave Return Door -----  -  Editar
  04:54:13.945  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local FindFirstChild_ret = nil;
local _ = m_Library.Shared.IsHardcore;
function Teleport() -- Line: 18
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.WorldCmds.Load("Fantasy");
end
function Setup() -- Line: 23
	--[[
		Upvalues:
			[1] = m_Library
			[2] = FindFirstChild_ret
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		FindFirstChild_ret = Map.Interactive:FindFirstChild("Secret Cave Return Door");
		if FindFirstChild_ret then
			local v1, _ = m_Library.Interact.Add(FindFirstChild_ret.PrimaryPart, {dist = 12});
			if v1 then
				v1:Connect(function() -- Line: 30
					Teleport();
				end);
			end
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function(p1) -- Line: 39
	if p1 == "Secret Cave" then
		Setup();
	end
end);
  -  Editar
  04:54:13.945    -  Editar
  04:54:13.945  ----- [2859] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Limbo Portal Animations -----  -  Editar
  04:54:13.946  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local _ = Random.new();
function PortalAnimation() -- Line: 17
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	local Interactive = Map:FindFirstChild("Interactive");
	if Interactive then
		local FindFirstChild_ret = Interactive:FindFirstChild("Limbo Portal");
		if FindFirstChild_ret then
			m_Library.Audio.Play("rbxassetid://7210953181", FindFirstChild_ret.PrimaryPart, 0.2, 5, 100, nil, true);
		end
	end
end
function ShakeAnimation() -- Line: 29
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local Map2 = m_Library.WorldCmds.GetMap();
	local Interactive2 = Map2:FindFirstChild("Interactive");
	if Interactive2 then
		local FindFirstChild_ret2 = Interactive2:FindFirstChild("Limbo Portal");
		if FindFirstChild_ret2 then
			local bool1 = false;
			local bool2 = false;
			local u1 = nil;
			local t_TintColor = nil;
			local function revert() -- Line: 40
				--[[
					Upvalues:
						[1] = bool1
						[2] = m_Library
						[3] = u1
						[4] = t_TintColor
				--]]
				if bool1 then
					bool1 = false;
					workspace.CurrentCamera.FieldOfView = 70;
				end
				local ColorCorrectionEffect = m_Library.Lighting:FindFirstChildOfClass("ColorCorrectionEffect");
				if ColorCorrectionEffect then
					if u1 then
						ColorCorrectionEffect.Saturation = u1;
						u1 = nil;
					end
					if t_TintColor then
						ColorCorrectionEffect.TintColor = t_TintColor;
						t_TintColor = nil;
					end
				end
			end
			local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 58
				--[[
					Upvalues:
						[1] = FindFirstChild_ret2
						[2] = m_Library
						[3] = bool1
						[4] = t_TintColor
						[5] = bool2
						[6] = u1
				--]]
				while FindFirstChild_ret2 and FindFirstChild_ret2.Parent do
					local DistanceFromCharacter_ret = m_Library.LocalPlayer:DistanceFromCharacter(FindFirstChild_ret2.PrimaryPart.CFrame.p);
					if DistanceFromCharacter_ret <= 100 then
						local v1 = (100 - math.clamp(DistanceFromCharacter_ret, 15, 100)) / 85;
						bool1 = true;
						local v2 = m_Library.Functions.Lerp(70, 30, v1);
						workspace.CurrentCamera.FieldOfView = v2;
						local ColorCorrectionEffect4 = m_Library.Lighting:FindFirstChildOfClass("ColorCorrectionEffect");
						if ColorCorrectionEffect4 then
							if not t_TintColor then
								t_TintColor = ColorCorrectionEffect4.TintColor;
							end
							ColorCorrectionEffect4.TintColor = t_TintColor:Lerp(Color3.new(0.65, 0, 1), v1);
						end
						if v1 >= 0.5 and not bool2 then
							bool2 = true;
							local v3 = (v1 - 0.5) / 0.5;
							local u2 = m_Library.Functions.Lerp(0.03, 0.33, v3);
							task.spawn(function() -- Line: 89
								--[[
									Upvalues:
										[1] = m_Library
										[2] = u2
										[3] = bool2
								--]]
								m_Library.Shake.Create(0.1, u2, 0.5, false);
								m_Library.Functions.Wait(0.1);
								bool2 = false;
							end);
						end
					else
						if bool1 then
							bool1 = false;
							workspace.CurrentCamera.FieldOfView = 70;
						end
						local ColorCorrectionEffect3 = m_Library.Lighting:FindFirstChildOfClass("ColorCorrectionEffect");
						if ColorCorrectionEffect3 then
							if u1 then
								ColorCorrectionEffect3.Saturation = u1;
								u1 = nil;
							end
							if t_TintColor then
								ColorCorrectionEffect3.TintColor = t_TintColor;
								t_TintColor = nil;
							end
						end
					end
					m_Library.RenderStepped();
				end
				if bool1 then
					bool1 = false;
					workspace.CurrentCamera.FieldOfView = 70;
				end
				local ColorCorrectionEffect2 = m_Library.Lighting:FindFirstChildOfClass("ColorCorrectionEffect");
				if ColorCorrectionEffect2 then
					if u1 then
						ColorCorrectionEffect2.Saturation = u1;
						u1 = nil;
					end
					if t_TintColor then
						ColorCorrectionEffect2.TintColor = t_TintColor;
						t_TintColor = nil;
					end
				end
			end);
			coroutine_wrap_ret();
		end
	end
end
function Animations() -- Line: 111
	PortalAnimation();
	ShakeAnimation();
end
m_Library.Signal.Fired("World Changed"):Connect(function(_) -- Line: 117
	Animations();
end);
  -  Editar
  04:54:13.946    -  Editar
  04:54:13.946  ----- [2860] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Limbo Animations -----  -  Editar
  04:54:13.946  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local Random_new_ret = Random.new();
function CubeAnimations() -- Line: 17
	--[[
		Upvalues:
			[1] = Random_new_ret
			[2] = m_Library
	--]]
	local function AnimateCube(p2) -- Line: 18
		--[[
			Upvalues:
				[1] = Random_new_ret
				[2] = m_Library
		--]]
		local _ = p2:FindFirstChildOfClass("SelectionBox");
		local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 21
			--[[
				Upvalues:
					[1] = p2
					[2] = Random_new_ret
					[3] = m_Library
			--]]
			local os_clock_ret = os.clock();
			local v2 = p2.CFrame * CFrame.Angles(Random_new_ret:NextNumber(0, math.pi), Random_new_ret:NextNumber(0, math.pi), Random_new_ret:NextNumber(0, math.pi));
			local NextNumber_ret = Random_new_ret:NextNumber(0, 0.5);
			local NextNumber_ret2 = Random_new_ret:NextNumber(2, 8);
			while p2 and p2.Parent do
				local v6 = os.clock() - os_clock_ret;
				p2.CFrame = v2 * CFrame.new(0, math.sin(v6 * NextNumber_ret) * NextNumber_ret2, 0) * CFrame.Angles(math.rad(v6 * 10), math.rad(-v6 * 10), (math.rad(v6 * 10)));
				m_Library.RenderStepped();
			end
		end);
		coroutine_wrap_ret();
	end
	local Map = m_Library.WorldCmds.GetMap();
	local FloatingCubes = Map:WaitForChild("Areas"):WaitForChild("Limbo"):WaitForChild("FloatingCubes");
	if FloatingCubes then
		for _, child1 in ipairs(FloatingCubes:GetChildren()) do
			local _ = child1:FindFirstChildOfClass("SelectionBox");
			local coroutine_wrap_ret2 = coroutine.wrap(function() -- Line: 21
				--[[
					Upvalues:
						[1] = child1
						[2] = Random_new_ret
						[3] = m_Library
				--]]
				local os_clock_ret2 = os.clock();
				local v4 = child1.CFrame * CFrame.Angles(Random_new_ret:NextNumber(0, math.pi), Random_new_ret:NextNumber(0, math.pi), Random_new_ret:NextNumber(0, math.pi));
				local NextNumber_ret3 = Random_new_ret:NextNumber(0, 0.5);
				local NextNumber_ret4 = Random_new_ret:NextNumber(2, 8);
				while child1 and child1.Parent do
					local v7 = os.clock() - os_clock_ret2;
					child1.CFrame = v4 * CFrame.new(0, math.sin(v7 * NextNumber_ret3) * NextNumber_ret4, 0) * CFrame.Angles(math.rad(v7 * 10), math.rad(-v7 * 10), (math.rad(v7 * 10)));
					m_Library.RenderStepped();
				end
			end);
			coroutine_wrap_ret2();
		end
	end
end
function RockAnimations() -- Line: 45
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local function AnimateRock(p3) -- Line: 46
		--[[
			Upvalues:
				[1] = m_Library
		--]]
		local u1 = math.random() * 2 + 3;
		local u2 = math.random() * 0.6 + 2.7;
		local coroutine_wrap_ret3 = coroutine.wrap(function() -- Line: 50
			--[[
				Upvalues:
					[1] = p3
					[2] = u1
					[3] = u2
					[4] = m_Library
			--]]
			local PrimaryPartCFrame = p3:GetPrimaryPartCFrame();
			local t_Position = PrimaryPartCFrame.Position;
			while p3 and p3.Parent do
				p3:SetPrimaryPartCFrame(PrimaryPartCFrame - t_Position + (t_Position + Vector3.new(0, u1 * math.sin(tick() * math.pi / u2), 0)));
				m_Library.RenderStepped();
			end
		end);
		coroutine_wrap_ret3();
	end
	local Map2 = m_Library.WorldCmds.GetMap();
	local AncientRocks = Map2:WaitForChild("Areas"):WaitForChild("Limbo"):WaitForChild("AncientRocks");
	if AncientRocks then
		for _, child2 in ipairs(AncientRocks:GetChildren()) do
			AnimateRock(child2);
		end
	end
end
function FloatingObjectAnimations() -- Line: 74
	--[[
		Upvalues:
			[1] = Random_new_ret
			[2] = m_Library
	--]]
	local function AnimateObject(p4) -- Line: 75
		--[[
			Upvalues:
				[1] = Random_new_ret
				[2] = m_Library
		--]]
		local coroutine_wrap_ret4 = coroutine.wrap(function() -- Line: 76
			--[[
				Upvalues:
					[1] = p4
					[2] = Random_new_ret
					[3] = m_Library
			--]]
			local os_clock_ret3 = os.clock();
			local v3 = p4:IsA("Model") and p4:GetPrimaryPartCFrame() or p4.CFrame;
			local NextNumber_ret5 = Random_new_ret:NextNumber(0.1, 1);
			local NextNumber_ret6 = Random_new_ret:NextNumber(3, 7);
			while p4 and p4.Parent do
				local math_sin_ret = math.sin((os.clock() - os_clock_ret3) * NextNumber_ret5);
				if p4:IsA("Model") then
					p4:SetPrimaryPartCFrame(v3 * CFrame.new(0, math_sin_ret * NextNumber_ret6, 0));
				else
					p4.CFrame = v3 * CFrame.new(0, math_sin_ret * NextNumber_ret6, 0);
				end
				m_Library.RenderStepped();
			end
		end);
		coroutine_wrap_ret4();
	end
	local Map3 = m_Library.WorldCmds.GetMap();
	local FloatingObjects = Map3:WaitForChild("Areas"):WaitForChild("Limbo"):WaitForChild("FloatingObjects");
	if FloatingObjects then
		for key3, child3 in ipairs(FloatingObjects:GetChildren()) do
			if key3 % 3 ~= 0 and not child3:GetAttribute("AlwaysFloat") then continue end
			local coroutine_wrap_ret5 = coroutine.wrap(function() -- Line: 76
				--[[
					Upvalues:
						[1] = child3
						[2] = Random_new_ret
						[3] = m_Library
				--]]
				local os_clock_ret4 = os.clock();
				local v5 = child3:IsA("Model") and child3:GetPrimaryPartCFrame() or child3.CFrame;
				local NextNumber_ret7 = Random_new_ret:NextNumber(0.1, 1);
				local NextNumber_ret8 = Random_new_ret:NextNumber(3, 7);
				while child3 and child3.Parent do
					local math_sin_ret2 = math.sin((os.clock() - os_clock_ret4) * NextNumber_ret7);
					if child3:IsA("Model") then
						child3:SetPrimaryPartCFrame(v5 * CFrame.new(0, math_sin_ret2 * NextNumber_ret8, 0));
					else
						child3.CFrame = v5 * CFrame.new(0, math_sin_ret2 * NextNumber_ret8, 0);
					end
					m_Library.RenderStepped();
				end
			end);
			coroutine_wrap_ret5();
		end
	end
end
function Animations() -- Line: 111
	CubeAnimations();
	FloatingObjectAnimations();
	RockAnimations();
end
m_Library.Signal.Fired("World Changed"):Connect(function(p1) -- Line: 118
	if p1 == "Limbo" then
		Animations();
	end
end);
  -  Editar
  04:54:13.947    -  Editar
  04:54:13.947  ----- [2861] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Kawaii Dojo Interactive -----  -  Editar
  04:54:13.947  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local bool1 = false;
local Interactive = nil;
function Teleport() 
	local FindFirstChild_ret = m_Library.WorldCmds.GetMap().Teleports:FindFirstChild("Kawaii Temple");
	if FindFirstChild_ret then
		local v2 = m_Library.Player.Character();
		local v3 = m_Library.Player.Humanoid();
		m_Library.GUIFX.Flash(0.25, 0.75, Color3.new(255, 255, 255));
		m_Library.Variables.Teleporting = true;
		m_Library.Signal.Fire("Teleporting");
		m_Library.Functions.Wait(0.25);
		v2:SetPrimaryPartCFrame(FindFirstChild_ret.CFrame + Vector3.new(0, v3.HipHeight + 1, 0));
		m_Library.Audio.Play("rbxassetid://7210953148", script, 1, 1);
		m_Library.Network.Fire("Performed Teleport", "Kawaii Temple");
		m_Library.Functions.Wait(0.25);
		m_Library.Variables.Teleporting = false;
		return;
	end
	m_Library.Message.New("Something went wrong. Try again!");
end
function Hook()  
	local v1, _ = m_Library.Interact.Add(Interactive:FindFirstChild("Dojo Return Door").PrimaryPart, {
		dist = 8,
		label = "Exit Dojo!"
	});
	v1:Connect(function()  
		if not bool1 then
			bool1 = true;
			Teleport();
			bool1 = false;
		end
	end);
end
m_Library.Signal.Fired("World Changed"):Connect(function(p1, p2)  
	Interactive = nil;
	if p1 == "Kawaii" then
		Interactive = p2:FindFirstChild("Interactive");
		Hook();
	end
end);
  -  Editar
  04:54:13.947    -  Editar
  04:54:13.947  ----- [2862] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Golden Machine Animation -----  -  Editar
  04:54:13.947  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = nil;
local bool1 = false;
function Setup() -- Line: 18
	--[[
		Upvalues:
			[1] = bool1
			[2] = m_Library
			[3] = u1
	--]]
	if bool1 then return end
	bool1 = true;
	local v1 = m_Library.Audio.Play("rbxassetid://6958875729", u1.PrimaryPart, 1, 0.2, nil, nil, true);
	v1.RollOffMaxDistance = 80;
	v1.RollOffMinDistance = 10;
	local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 30
		--[[
			Upvalues:
				[1] = u1
				[2] = m_Library
		--]]
		local v4 = 0;
		while u1 and u1.Parent and u1:FindFirstChild("Light") do
			v4 = v4 + 1;
			local Light = u1:FindFirstChild("Light");
			if v4 % 2 == 0 then
				m_Library.Functions.Tween(Light, {Transparency = 0.1}, {
					1,
					Enum.EasingStyle.Cubic,
					Enum.EasingDirection.Out
				}).Completed:Wait();
			else
				m_Library.Functions.Tween(Light, {Transparency = 0.4}, {
					2,
					Enum.EasingStyle.Cubic,
					Enum.EasingDirection.InOut
				}).Completed:Wait();
			end
			m_Library.Heartbeat();
		end
	end);
	coroutine_wrap_ret();
end
function UseAnimation(p1) -- Line: 48
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
	--]]
	if not u1 or not u1.PrimaryPart then return end
	m_Library.Audio.Play(4489068263, u1:GetPrimaryPartCFrame().p, 1, 0.75, 400);
	m_Library.Functions.Wait(1.5);
	if not u1 or not u1.PrimaryPart then return end
	if p1 then
		m_Library.Audio.Play(4489068140, u1:GetPrimaryPartCFrame().p, 1, 1, 400);
		local v2, v3 = m_Library.Functions.CreateParticleHost(u1:GetPrimaryPartCFrame().p);
		local Children = m_Library.Assets.Particles:FindFirstChild("Golden Machine"):GetChildren();
		for _, val1 in ipairs(Children) do
			local Clone_ret = val1:Clone();
			Clone_ret.Parent = v3;
			Clone_ret:Emit(40);
		end
		m_Library.Functions.AddDebris(v2, 4);
		return;
	end
	m_Library.Audio.Play(4489274818, u1:GetPrimaryPartCFrame().p, 1, 1, 400);
end
function Check() -- Line: 85
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		u1 = Map.Interactive:FindFirstChild("Gold Machine");
		if u1 then
			Setup();
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 101
	--[[
		Upvalues:
			[1] = bool1
			[2] = u1
	--]]
	bool1 = false;
	u1 = nil;
	Check();
end);
m_Library.Network.Fired("Using Golden Machine"):Connect(function(_, p2) -- Line: 109
	UseAnimation(p2);
end);
  -  Editar
  04:54:13.947    -  Editar
  04:54:13.947  ----- [2863] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Join Trading Plaza -----  -  Editar
  04:54:13.947  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = nil;
local u2 = nil;
local FindFirstChild_ret = nil;
local bool1 = false;
local u3 = nil;
function Request(p1) -- Line: 20
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u3
	--]]
	if not m_Library.WorldCmds.CanDoAction() then return end
	m_Library.Variables.LoadingWorld = true;
	local v1, v2 = m_Library.Network.Invoke("Travel to Trading Plaza", p1);
	if v1 then
		u3 = m_Library.GUIFX.Loading("Trading Plaza");
		return;
	end
	m_Library.Variables.LoadingWorld = false;
	m_Library.Message.New(v2 or "Failed to travel to Trading Plaza.");
end
function Buy() -- Line: 36
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v3 = m_Library.Message.New("Do you want to unlock the Trading Plaza for 1,000,000 Diamonds?", true);
	if v3 then
		local v5, v6 = m_Library.Network.Invoke("Buy Trading Plaza");
		if not v5 then
			m_Library.Message.New(v6 or "Something went wrong.");
			return;
		end
		m_Library.Audio.Play("rbxassetid://7399584366", script, 1, 1.25);
		m_Library.Message.New("\226\156\133 Success!");
	end
end
function Update() -- Line: 50
	--[[
		Upvalues:
			[1] = FindFirstChild_ret
			[2] = m_Library
	--]]
	if not FindFirstChild_ret then return end
	local v4 = m_Library.Save.Get();
	if not v4 then return end
	if v4.OwnsTradingPlaza and FindFirstChild_ret:FindFirstChild("Lock") then
		m_Library.Audio.Play("rbxassetid://7751703357", FindFirstChild_ret.Lock.PrimaryPart.CFrame, 0.8, 1, 150);
		m_Library.WorldFX.ModelFlash(FindFirstChild_ret.Lock, 0.5);
		FindFirstChild_ret.Lock:Destroy();
	end
end
function Setup() -- Line: 70
	--[[
		Upvalues:
			[1] = u1
			[2] = u2
			[3] = m_Library
			[4] = FindFirstChild_ret
			[5] = bool1
	--]]
	Update();
	u1, u2 = m_Library.Interact.Add(FindFirstChild_ret, {dist = 18});
	u1:Connect(function() -- Line: 75
		--[[
			Upvalues:
				[1] = bool1
				[2] = m_Library
		--]]
		if not bool1 then
			bool1 = true;
			local v7 = m_Library.Save.Get();
			if v7 then
				if v7.OwnsTradingPlaza then
					local u4 = false;
					pcall(function() -- Line: 83
						--[[
							Upvalues:
								[1] = u4
								[2] = m_Library
						--]]
						u4 = m_Library.VoiceChatService:IsVoiceEnabledForUserIdAsync(m_Library.LocalPlayer.UserId);
					end);
					m_Library.Signal.Fire("Show Trading Plaza Choice", u4);
				else
					Buy();
				end
			end
			bool1 = false;
		end
	end);
end
function Check() -- Line: 99
	--[[
		Upvalues:
			[1] = m_Library
			[2] = FindFirstChild_ret
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		FindFirstChild_ret = Map.Interactive:FindFirstChild("Trading Plaza Gate");
		if FindFirstChild_ret then
			Setup();
		end
	end
end
m_Library.Signal.Fired("Trading Plaza Request"):Connect(Request);
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 115
	--[[
		Upvalues:
			[1] = u2
	--]]
	if u2 then
		u2();
		u2 = nil;
	end
	Check();
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p2) -- Line: 124
	if p2 == "OwnsTradingPlaza" then
		Update();
	end
end);
m_Library.TeleportService.TeleportInitFailed:Connect(function(_, _, _, _, _) -- Line: 130
	--[[
		Upvalues:
			[1] = u3
	--]]
	if u3 then
		u3();
	end
end);
  -  Editar
  04:54:13.947    -  Editar
  04:54:13.947  ----- [2864] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Daycare Machine Animation -----  -  Editar
  04:54:13.947  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local u1 = nil;
local bool1 = false;
function Setup() -- Line: 18
	--[[
		Upvalues:
			[1] = bool1
			[2] = u1
			[3] = m_Library
	--]]
	if bool1 then return end
	bool1 = true;
	local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 25
		--[[
			Upvalues:
				[1] = u1
				[2] = m_Library
		--]]
		local v3 = 0;
		while u1 and u1.Parent and u1:FindFirstChild("Light") do
			v3 = v3 + 1;
			local Light = u1:FindFirstChild("Light");
			if v3 % 2 == 0 then
				m_Library.Functions.Tween(Light, {Transparency = 0.1}, {
					1,
					Enum.EasingStyle.Cubic,
					Enum.EasingDirection.Out
				}).Completed:Wait();
			else
				m_Library.Functions.Tween(Light, {Transparency = 0.4}, {
					2,
					Enum.EasingStyle.Cubic,
					Enum.EasingDirection.InOut
				}).Completed:Wait();
			end
			m_Library.Heartbeat();
		end
	end);
	coroutine_wrap_ret();
end
function UseAnimation(p1) -- Line: 43
	--[[
		Upvalues:
			[1] = u1
			[2] = m_Library
	--]]
	if not u1 or not u1.PrimaryPart then return end
	if not u1 or not u1.PrimaryPart then return end
	if p1 then
		local v1, v2 = m_Library.Functions.CreateParticleHost(u1:GetPrimaryPartCFrame().p);
		local Children = m_Library.Assets.Particles:FindFirstChild("Golden Machine"):GetChildren();
		for _, val1 in ipairs(Children) do
			local Clone_ret = val1:Clone();
			Clone_ret.Parent = v2;
			Clone_ret:Emit(40);
		end
		m_Library.Functions.AddDebris(v1, 4);
	end
end
function Check() -- Line: 69
	--[[
		Upvalues:
			[1] = m_Library
			[2] = u1
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	if Map:FindFirstChild("Interactive") then
		u1 = Map.Interactive:FindFirstChild("Daycare");
		if u1 then
			Setup();
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 85
	--[[
		Upvalues:
			[1] = bool1
			[2] = u1
	--]]
	bool1 = false;
	u1 = nil;
	Check();
end);
m_Library.Network.Fired("Using Daycare Machine"):Connect(function(_, p2) -- Line: 93
	UseAnimation(p2);
end);
  -  Editar
  04:54:13.948    -  Editar
  04:54:13.948  ----- [2865] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Doodle Barn Interactive -----  -  Editar
  04:54:13.948  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_IsHardcore = m_Library.Shared.IsHardcore;
local bool1 = false;
local Interactive = nil;
function Give() -- Line: 19
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	if not m_Library.WorldCmds.CanDoAction() then return end
	local v1, v2 = m_Library.Network.Invoke("Give Doodle Hoverboard");
	if not v1 then
		m_Library.Message.New(v2 or "Something went wrong.");
	end
end
function Has() -- Line: 31
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local v3 = m_Library.Save.Get();
	if not v3 then
		return false;
	end
	return m_Library.Functions.SearchArray(v3.Hoverboards, "Doodle");
end
function Teleport() -- Line: 41
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local FindFirstChild_ret = m_Library.WorldCmds.GetMap().Teleports:FindFirstChild("Doodle Farm");
	if FindFirstChild_ret then
		local v6 = m_Library.Player.Character();
		local v7 = m_Library.Player.Humanoid();
		m_Library.GUIFX.Flash(0.25, 0.75, Color3.new(255, 255, 255));
		m_Library.Variables.Teleporting = true;
		m_Library.Signal.Fire("Teleporting");
		m_Library.Functions.Wait(0.25);
		v6:SetPrimaryPartCFrame(FindFirstChild_ret.CFrame + Vector3.new(0, v7.HipHeight + 1, 0));
		m_Library.Audio.Play("rbxassetid://7210953148", script, 1, 1);
		m_Library.Network.Fire("Performed Teleport", "Doodle Farm");
		m_Library.Functions.Wait(0.25);
		m_Library.Variables.Teleporting = false;
		return;
	end
	m_Library.Message.New("Something went wrong. Try again!");
end
function Hook() -- Line: 64
	--[[
		Upvalues:
			[1] = m_Library
			[2] = Interactive
			[3] = bool1
	--]]
	local v4, _ = m_Library.Interact.Add(Interactive:FindFirstChild("Hoverboard"), {dist = 8});
	v4:Connect(function() -- Line: 66
		--[[
			Upvalues:
				[1] = bool1
		--]]
		if not bool1 then
			bool1 = true;
			Give();
			bool1 = false;
		end
	end);
	local v5, _ = m_Library.Interact.Add(Interactive:FindFirstChild("Barn Return Door").PrimaryPart, {dist = 8});
	v5:Connect(function() -- Line: 75
		--[[
			Upvalues:
				[1] = bool1
		--]]
		if not bool1 then
			bool1 = true;
			Teleport();
			bool1 = false;
		end
	end);
end
function Update() -- Line: 85
	--[[
		Upvalues:
			[1] = Interactive
			[2] = t_IsHardcore
	--]]
	if Interactive and (not t_IsHardcore or Has()) then
		local Hoverboard = Interactive:FindFirstChild("Hoverboard");
		if Hoverboard then
			Hoverboard:Destroy();
		end
	end
end
m_Library.Signal.Fired("World Changed"):Connect(function(p1, p2) -- Line: 98
	--[[
		Upvalues:
			[1] = Interactive
	--]]
	Interactive = nil;
	if p1 == "Doodle" then
		Interactive = p2:FindFirstChild("Interactive");
		Hook();
		Update();
	end
end);
m_Library.Signal.Fired("Stat Changed"):Connect(function(p3) -- Line: 108
	if p3 == "Hoverboards" then
		Update();
	end
end);
  -  Editar
  04:54:13.948    -  Editar
  04:54:13.948  ----- [2866] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Hardcore Secret Teleports -----  -  Editar
  04:54:13.948  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local table1 = {};
local bool1 = false;
function Teleport(p1) -- Line: 18
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	Clear();
	local Lock = p1:FindFirstChild("Lock");
	m_Library.Audio.Play("rbxassetid://7751703357", Lock.CFrame.p, 0.8, 1, 150);
	m_Library.WorldFX.ModelFlash(Lock, 0.3);
	Lock:Destroy();
	wait(1.25);
	local Attribute = p1:GetAttribute("TeleportTo");
	m_Library.WorldCmds.Load(Attribute);
end
function Attempt(p2) -- Line: 32
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local function LockedAnimation() -- Line: 33
		--[[
			Upvalues:
				[1] = m_Library
				[2] = p2
		--]]
		m_Library.Message.New("It's locked.");
		m_Library.Audio.Play("rbxassetid://10344377360", p2:FindFirstChild("Lock").CFrame.p, 0.8, 1, 100);
	end
	if not m_Library.WorldCmds.CanDoAction() then return end
	local v2 = m_Library.Save.Get();
	if not v2 or not v2.HardcoreUnlocked or not m_Library.Shared.IsHardcore then
		return LockedAnimation();
	end
	local Attribute2 = p2:GetAttribute("RequiredArea");
	if not m_Library.WorldCmds.HasArea(Attribute2) then
		return LockedAnimation();
	end
	local v3 = m_Library.Message.New("Do you want to enter?", true);
	if v3 then
		Teleport(p2);
	end
end
function Setup(p3) -- Line: 60
	--[[
		Upvalues:
			[1] = m_Library
			[2] = bool1
			[3] = table1
	--]]
	local v4, v5 = m_Library.Interact.Add(p3:FindFirstChild("Interact"), {dist = 8});
	v4:Connect(function() -- Line: 62
		--[[
			Upvalues:
				[1] = bool1
				[2] = p3
		--]]
		if not bool1 then
			bool1 = true;
			Attempt(p3);
			bool1 = false;
		end
	end);
	table1[p3] = v5;
end
function Check() -- Line: 74
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	local Map = m_Library.WorldCmds.GetMap();
	local Interactive = Map:FindFirstChild("Interactive");
	if Interactive then
		for _, child2 in Interactive:GetChildren() do
			if child2.Name ~= "Hardcore Secret Teleport" then continue end
			Setup(child2);
		end
	end
end
function Clear() -- Line: 87
	--[[
		Upvalues:
			[1] = table1
	--]]
	for _, val1 in pairs(table1) do
		val1();
	end
	table1 = {};
end
m_Library.Signal.Fired("World Changed"):Connect(function() -- Line: 98
	Clear();
	Check();
end);
  -  Editar
  04:54:13.948    -  Editar
  04:54:13.948  ----- [2867] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Diamond Mine Interactive -----  -  Editar
  04:54:13.948  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local bool1 = false;
local Interactive = nil;
function Teleport() -- Line: 18
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.WorldCmds.Load("Diamond Mine");
end
function SetupInteract()
	local v1, _ = m_Library.Interact.Add(Interactive:FindFirstChild("Diamond Mine Cave").PrimaryPart, {
		dist = 8,
		label = "Visit Diamond Mine!"
	});
	v1:Connect(function()  
		if not bool1 then
			bool1 = true;
			if not m_Library.Save.Get() then
				bool1 = false
				return 
			end
			local v36 = m_Library.Signal.Invoke("Get Diamond Mine Collpase Time")
			if v36 then
				m_Library.Message.New("The Diamond Mine has collapsed! Reopening in " .. m_Library.Functions.FormatTime(v36))
			else
				Teleport()
			end
			bool1 = false;
		end
	end);
end
function Hook()  
	if not m_Library.Save.Get() then
		return 
	end
	local v61 = m_Library.Signal.Invoke("Get Diamond Mine Collpase Time")
	if v61 then
		return 
	end
	SetupInteract()
end
m_Library.Signal.Fired("World Changed"):Connect(function(p1, p2) -- Line: 38
	--[[
		Upvalues:
			[1] = Interactive
	--]]
	Interactive = nil;
	if p1 == "Spawn" then
		Interactive = p2:FindFirstChild("Interactive");
		Hook();
	end
end);
m_Library.Signal.Fired("Diamond Mine: Setup Interact"):Connect(function()
	SetupInteract()
end)
  -  Editar
  04:54:13.948    -  Editar
  04:54:13.948  ----- [2868] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Diamond Mine Exit Interactive -----  -  Editar
  04:54:13.949  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local bool1 = false;
local Interactive = nil;
function Teleport() -- Line: 18
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	m_Library.WorldCmds.Load("Spawn");
end
function Hook() -- Line: 23
	--[[
		Upvalues:
			[1] = m_Library
			[2] = Interactive
			[3] = bool1
	--]]
	local v1, _ = m_Library.Interact.Add(Interactive:FindFirstChild("Diamond Mine Exit").PrimaryPart, {
		dist = 8,
		label = "Return to Spawn!"
	});
	v1:Connect(function() -- Line: 25
		--[[
			Upvalues:
				[1] = bool1
		--]]
		if not bool1 then
			bool1 = true;
			Teleport();
			bool1 = false;
		end
	end);
end
m_Library.Signal.Fired("World Changed"):Connect(function(p1, p2) -- Line: 38
	--[[
		Upvalues:
			[1] = Interactive
	--]]
	Interactive = nil;
	if p1 == "Diamond Mine" then
		Interactive = p2:FindFirstChild("Interactive");
		Hook();
	end
end);
  -  Editar
  04:54:13.949    -  Editar
  04:54:13.949  ----- [2869] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Evolve Machine Animation -----  -  Editar
  04:54:13.949  -- Decompiled with the Synapse X Luau decompiler.

local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not v1.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end;
local u1 = false;
function Setup()
	if u1 then
		return;
	end;
	u1 = true;
end;
local u2 = nil;
local u3 = 0;
function UseAnimation(p1)
	if u2 then
		if not u2.PrimaryPart then
			return;
		end;
	else
		return;
	end;
	v1.Audio.Play(12371276046, u2:GetPrimaryPartCFrame().p, 1, 0.75, 400);
	local v2, v3 = v1.Functions.CreateParticleHost(u2:GetPrimaryPartCFrame().p);
	for v4, v5 in ipairs((v1.Assets.Particles:FindFirstChild("Evolve Machine"):GetChildren())) do
		local v7 = v5:Clone();
		v7.Parent = v3;
		v7:Emit(50);	
	end;
	v1.Functions.AddDebris(v2, 4);
	local l__Pumps__8 = u2:FindFirstChild("Pumps");
	if l__Pumps__8 then
		u3 = u3 + 1;
		for v12, v13 in pairs(l__Pumps__8:GetChildren()) do
			local l__Smoke__14 = v13:FindFirstChild("Attachment"):FindFirstChild("Smoke");
			l__Smoke__14.Speed = NumberRange.new(15, 20);
			l__Smoke__14.Rate = 10;		
		end;
		task.delay(2, function()
			u3 = u3 - 1;
			if u3 <= 0 then
				for v18, v19 in pairs(l__Pumps__8:GetChildren()) do
					local l__Smoke__20 = v19:FindFirstChild("Attachment"):FindFirstChild("Smoke");
					l__Smoke__20.Speed = NumberRange.new(3, 5);
					l__Smoke__20.Rate = 3;				
				end;
			end;
		end);
	end;
end;
function Check()
	local v21 = v1.WorldCmds.GetMap();
	if v21:FindFirstChild("Interactive") then
		u2 = v21.Interactive:FindFirstChild("Evolve Machine");
		if u2 then

		else
			return;
		end;
	else
		return;
	end;
	Setup();
end;
v1.Signal.Fired("World Changed"):Connect(function()
	u1 = false;
	u2 = nil;
	Check();
end);
v1.Network.Fired("Using Evolve Machine"):Connect(function(p2, p3)
	UseAnimation(p3);
end);
  -  Editar
  04:54:13.949    -  Editar
  04:54:13.949  ----- [2870] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Dog Club Animation -----  -  Editar
  04:54:13.949  -- Decompiled using Krnl
local v7 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
while not v7.Loaded do 
	game:GetService("RunService").Heartbeat:Wait()
end
local v11 = {}
local v25 = Color3.new(0.321569, 0.486275, 0.682353)
local v30 = Color3.new(0.356863, 0.603922, 0.298039)
local v35 = Color3.new(0.65098, 0.443137, 0)
local v40 = Color3.new(0.890196, 0.305882, 0.0705882)
v11[1] = Color3.new(0.72549, 0.27451, 0.72549)
v11[2] = Color3.new(0.145098, 0.301961, 1)
v11[3] = Color3.new(1, 0.203922, 0.00392157)
v11[4]= v25
v11[5]=v30
v11[6]=v35
v11[7]=v40
local v45 = TweenInfo.new(2, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, 0)
local v46
local function Hook()
	task.spawn(function()
		local v53 = v46:FindFirstChild("Dance Floor")
		if not v53 then
			return 
		end
		while true do
			if not v46 then
				break
			end
			for v73, v66 in pairs(v53:GetChildren()) do
				local v77 = {}
				v77[1] = 2
				v77[2] = "Linear"
				v77[3] = "Out"
				v7.Functions.Tween(v66, {
					Color = v11[math.random(1, #v11)]
				}, v77):Play()
			end
			wait(1)
		end
	end)
	task.spawn(function()
		local v83 = v46:FindFirstChild("Disco Ball")
		if not v83 then
			return 
		end
		while true do
			if not v46 then
				break
			end
			v83.Orientation = v83.Orientation + Vector3.new(0, 0.5, 0)
			v7.Heartbeat()
		end
	end)
end
v7.Signal.Fired("World Changed"):Connect(function(p1, p2)
	if p1 == "Dog" then
		v46 = p2:FindFirstChild("Interactive")
		Hook()
		return 
	end
	v46 = nil
end)
  -  Editar
  04:54:13.949    -  Editar
  04:54:13.949  ----- [2871] StarterPlayer.StarterPlayerScripts.Scripts.Game.Misc.Diamond Mine Collapsed Sign -----  -  Editar
  04:54:13.949  -- Decompiled using Krnl
local v7 = require((game.ReplicatedStorage:WaitForChild("Framework")):WaitForChild("Library"))
while not v7.Loaded do 
	game:GetService("RunService").Heartbeat:Wait()
end
local v11
v10 = game.JobId
function HideSign(p1)
    local v14 = p1.Parent
    if not v14 then
        return 
    end
	for v21, v20 in pairs(p1:GetChildren()) do
        v20.Transparency = 1
        v20.CanCollide = false
        v20.CanQuery = false
    end
	p1.PrimaryPart.SurfaceGui.Enabled = false
end
local function Hook()
    local v27 = v11:FindFirstChild("Diamond Mine Collapsed Sign")
    if not v27 then
        return 
    end
	if not v7.Save.Get() then
		HideSign(v27)
        return 
    end
	local v35 = v7.Signal.Invoke("Get Diamond Mine Collpase Time")
    if not v35 then
		HideSign(v27)
        return 
    end
    while true do
		if v27.Parent then
            break
        end
		local v39 = v7.Signal.Invoke("Get Diamond Mine Collpase Time")
        if not v39 then
            break
        end
		v27.PrimaryPart.SurfaceGui.Timer.Text = "Reopening in: " .. v7.Functions.FormatTime(v39)
		wait(0.25)
    end
	if v27.Parent then
		HideSign(v27)
        v7.Signal.Fire("Diamond Mine: Setup Interact")
    end
end
v7.Signal.Fired("World Changed"):Connect(function(p2, p3)
    v11 = nil
    if p2 == "Spawn" then
        v11 = p3:FindFirstChild("Interactive")
        Hook()
    end
end)
  -  Editar
  04:54:13.949    -  Editar
  04:54:13.950  ----- [2872] StarterPlayer.StarterPlayerScripts.Scripts.Game.Pets -----  -  Editar
  04:54:13.950  -- @localonex | BIGCopies
local v_u_1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
while not v_u_1.Loaded do
	game:GetService("RunService").Heartbeat:Wait()
end
require(game.ReplicatedStorage.Library.Modules.Pets)
require(game.ReplicatedStorage.Library.Modules.DefaultStats)
require(game.ReplicatedStorage.Library.Modules.Pets)
local v_u_2 = require(script.Riding)
local v_u_3 = Random.new()
local v_u_4 = v_u_1.Shared.IsHardcore
require(script.Common)
local v_u_5 = {}
local v_u_6 = 0
local v_u_7 = false
local v_u_8 = nil
local v_u_9 = nil
local v_u_10 = nil
local v_u_11 = nil
local v_u_12 = 0
local v_u_13 = {}
local v_u_14 = { 1.9, 4.7, 16 }
local v_u_15 = { 2.6, 7.4, 22.3 }
local v_u_16 = table.create(#v_u_14, 0)
local v_u_17 = table.create(#v_u_15, 0)
v_u_16[1] = 0.5 + v_u_14[1] * 1.2
v_u_17[1] = 0.5 + v_u_15[1] * 1.2
v_u_16[2] = 0.5 + v_u_14[2] * 1.2
v_u_17[2] = 0.5 + v_u_15[2] * 1.2
v_u_16[3] = 0.5 + v_u_14[3] * 1.2
v_u_17[3] = 0.5 + v_u_15[3] * 1.2
local function v_u_29(p18, p19, p20)
	-- upvalues: (copy) v_u_1, (ref) v_u_12, (copy) v_u_5
	debug.profilebegin("Pets.Create (pt1)")
	local v21, _ = v_u_1.PetCmds.GetFrom(p18, p19, p20)
	if v21 then
		assert(v21)
		local v22 = v_u_1.Directory.Pets[v21.id]
		if v22 then
			assert(v22)
			local v23 = p18.Character
			if v23 then
				assert(v23)
				local v24 = v23.PrimaryPart
				if v24 then
					assert(v24)
					local v25 = v23:FindFirstChildOfClass("Humanoid")
					if v25 then
						assert(v25)
						local v26 = v_u_1.PetCmds.Spawn(v21, p18)
						local v27 = v26.part
						v27.CFrame = v24.CFrame * CFrame.new(0, 0, -5) - Vector3.new(0, v25.HipHeight / 2, 0)
						if p18 == v_u_1.LocalPlayer and v22.titanic then
							local v28 = Instance.new("ClickDetector")
							v28.MaxActivationDistance = math.huge
							v28.CursorIcon = "rbxassetid://11901225868"
							v28.Parent = v27
							if not v_u_1.Settings.MountingTitanicsEnabled then
								v27.CanQuery = false
							end
						end
						v27.Parent = v_u_1.Things.Pets
						v_u_5[p20] = {
							["row"] = 0, 
							["rowPlace"] = 0, 
							["rowTotal"] = 0, 
							["moving"] = false, 
							["farming"] = false, 
							["arrived"] = false, 
							["playerDistCheckTick"] = 0, 
							["targetuid"] = 0, 
							["spawnTick"] = v_u_12, 
							["movingTick"] = 0, 
							["animationTick"] = 0, 
							["spawned"] = v26, 
							["petData"] = v21
						}
						debug.profileend()
						if p18 == v_u_1.LocalPlayer then
							v_u_1.Signal.Fire("Added Client Pet", p20)
						end
					else
						debug.profileend()
					end
				else
					debug.profileend()
					return
				end
			else
				debug.profileend()
				return
			end
		else
			debug.profileend()
			return
		end
	else
		debug.profileend()
		return
	end
end
local function v_u_35(p_u_30)
	-- upvalues: (copy) v_u_5, (copy) v_u_2, (copy) v_u_1, (ref) v_u_6, (ref) v_u_7
	debug.profilebegin("Pets.Remove")
	local v31 = v_u_5[p_u_30]
	if v31 then
		assert(v31)
		local v32 = v_u_2.getLocal()
		if v32 and v32.petInfo == v31 then
			v_u_2.stopRidingLocal()
		end
		local v33 = v31.spawned.part
		if v33 then
			v_u_1.Functions.AddDebris(v33, 0)
		end
		local v34 = v31.spawned.coinSelection
		if v34 then
			v31.spawned.coinSelection = nil
			destroyCoinSelection(v34)
		end
		if 0 < v_u_6 and not v_u_7 then
			v_u_7 = true
			warn(string.format("PetWhileIterating: %s", debug.traceback()))
		end
		v_u_5[p_u_30] = nil
		if v31.spawned.owner == v_u_1.LocalPlayer then
			task.spawn(function()
				-- upvalues: (ref) v_u_1, (copy) p_u_30
				v_u_1.Signal.Fire("Removed Client Pet", p_u_30)
			end)
		end
		debug.profileend()
	else
		debug.profileend()
	end
end
local function v_u_39()
	-- upvalues: (ref) v_u_6, (copy) v_u_5, (copy) v_u_35
	debug.profilebegin("Pets.Clear")
	local v36 = {}
	v_u_6 = v_u_6 + 1
	for v37, _ in pairs(v_u_5) do
		table.insert(v36, v37)
	end
	v_u_6 = v_u_6 - 1
	for _, v38 in ipairs(v36) do
		v_u_35(v38)
	end
	debug.profileend()
end
function _insert(p40, p41, p42)
	if #p40 < p42 then
		table.insert(p40, p41)
	else
		p40[p42] = p41
	end
end
function _trim(p43, p44)
	for v45 = #p43, p44 + 1, -1 do
		table.remove(p43, v45)
	end
end
local v_u_46 = {}
local v_u_47 = {}
function destroyCoinSelection(p48)
	-- upvalues: (copy) v_u_1
	v_u_1.Functions.AddDebris(p48.dottedLine)
	v_u_1.Functions.AddDebris(p48.selection1)
	v_u_1.Functions.AddDebris(p48.selection2)
end
local function v_u_102()
	-- upvalues: (copy) v_u_1, (ref) v_u_8, (copy) v_u_4, (copy) v_u_5, (copy) v_u_29, (ref) v_u_6, (copy) v_u_35, (ref) v_u_9, (copy) v_u_2, (copy) v_u_13, (copy) v_u_14
	debug.profilebegin("Pets.Check")
	local v49 = v_u_1.Save.Get()
	if v49 then
		assert(v49)
		if not v_u_8 or 0.2 <= os.clock() - v_u_8 then
			debug.profilebegin("Pets.Check.pt1")
			local v50 = v49.Settings.ShowOtherPets == 2
			local v51 = v_u_1.WorldCmds.Get()
			for _, v52 in ipairs(game.Players:GetPlayers()) do
				local v53 = ((not v50 or v52 == v_u_1.LocalPlayer) and true or false) and v_u_1.Save.Get(v52, true)
				if v53 then
					assert(v53)
					if v52 == v_u_1.LocalPlayer or (v_u_4 and v53.Hardcore.World or v53.World) == v51 then
						for _, v54 in ipairs((v_u_1.PetCmds.GetEquipped(v52, true))) do
							if not v_u_5[v54] then
								v_u_29(v52, v53, v54)
							end
						end
					end
				end
			end
			v_u_8 = os.clock()
			debug.profileend()
		end
		debug.profilebegin("Pets.Check.pt2")
		v_u_6 = v_u_6 + 1
		local v55 = {}
		local v_u_56 = {}
		for _, v57 in pairs(v_u_5) do
			local v58 = v57.spawned.uid
			local v59, v60 = v_u_1.PetCmds.Get(v58)
			local v61
			if v59 then
				v_u_56[v58] = v59
				local v62 = v_u_1.Save.Get(v60)
				v61 = v62 and v_u_1.Shared.HasPetEquipped(v62, v59) or false
			else
				v61 = false
			end
			if not (v59 and v61 and v60) then
				table.insert(v55, v58)
			end
		end
		v_u_6 = v_u_6 - 1
		for _, v63 in ipairs(v55) do
			v_u_35(v63)
		end
		debug.profileend()
		if not v_u_9 or 0.2 < os.clock() - v_u_9 then
			debug.profilebegin("Pets.Check.pt3")
			local v64 = v_u_1.WorldCmds.Get()
			v_u_6 = v_u_6 + 1
			for _, v65 in pairs(v_u_5) do
				local v66 = v65.spawned.uid
				local v67 = v65.spawned.owner
				if v67 ~= v_u_1.LocalPlayer then
					local v68 = v_u_1.Save.Get(v67, true)
					if not v68 or (v_u_4 and v68.Hardcore.World or v68.World) ~= v64 then
						table.insert(v55, v66)
					end
				end
			end
			v_u_6 = v_u_6 - 1
			for _, v69 in ipairs(v55) do
				v_u_35(v69)
			end
			v_u_9 = os.clock()
			debug.profileend()
		end
		debug.profilebegin("Pets.Check.pt4")
		for _, v70 in pairs(v_u_5) do
			local v71 = v70.target
			local _ = v70.spawned.part
			if v70.farming and (v71 == nil or v71.Parent == nil) then
				v70.farming = false
			end
		end
		debug.profileend()
		local v72 = {}
		debug.profilebegin("Pets.Check.pt5")
		for _, v73 in pairs(v_u_5) do
			local v74 = v73.spawned.uid
			local v75 = v73.spawned.owner
			local v76 = v73.target
			v73.petData = v_u_56[v74]
			if v76 == nil or v76.Parent == nil then
				v73.target = v75
				v76 = v75
			end
			if v76 == v75 and not v_u_2.isRiding(v73, v_u_56[v74]) then
				if not v72[v75] then
					v72[v75] = {
						["organized"] = {
							{}
						}, 
						["list"] = {}
					}
				end
				table.insert(v72[v75].list, v74)
				v72[v75].dirty = true
			else
				v73.row = 0
				v73.rowPlace = 0
				v73.rowTotal = 0
			end
		end
		debug.profileend()
		debug.profilebegin("Pets.Check.pt6")
		for _, v77 in pairs(v72) do
			table.sort(v77.list, function(p78, p79)
				-- upvalues: (copy) v_u_56, (ref) v_u_1
				local v80 = v_u_56[p78]
				local v81 = v_u_56[p79]
				if v80 then
					return not v81 and true or v_u_1.Shared.PetOrderParty(v80, v81) < 0
				else
					return false
				end
			end)
		end
		debug.profileend()
		debug.profilebegin("Pets.Check.pt7-2")
		for v82, v83 in pairs(v72) do
			local v84 = v83.list
			local v85 = v_u_13[v82]
			if not v85 then
				v85 = {
					["displayNumTotals"] = table.create(#v_u_14, 0), 
					["displayNumColumns"] = table.create(#v_u_14, 0), 
					["displayNumRows"] = table.create(#v_u_14, 0)
				}
				v_u_13[v82] = v85
			end
			local v86 = {
				{}, 
				{}, 
				{}
			}
			for _, v87 in ipairs(v84) do
				local v88 = v_u_1.Directory.Pets[v_u_5[v87].spawned.id]
				table.insert(v86[v88.titanic and 3 or v88.huge and 2 or 1], v87)
			end
			local v89 = { math.max(1, (math.ceil(math.sqrt(#v86[1]) - 0))), math.max(3, (math.ceil(math.sqrt(#v86[2]) - 2))), (math.max(3, (math.ceil(math.sqrt(#v86[3]) - 2)))) }
			local v90 = { "normalPlace", "hugePlace", "titanicPlace" }
			for v91 = 1, 3 do
				local v92 = #v86[v91]
				local v93 = v89[v91]
				v85.displayNumTotals[v91] = v92
				v85.displayNumColumns[v91] = v93
				v85.displayNumRows[v91] = math.ceil(v92 / v93)
				local v94 = math.floor(v92 / v93)
				local v95 = v92 - v94 * v93
				for v96, v97 in ipairs(v86[v91]) do
					local v98 = math.floor((v96 - 1) / v93)
					local v99 = (v96 - 1) % v93
					local v100
					if v98 < v94 then
						v100 = v93 or v95
					else
						v100 = v95
					end
					local v101 = v_u_5[v97]
					v101.row = 1 + v98
					v101.rowPlace = 1 + v99
					v101.rowTotal = v100
					v101[v90[v91]] = v96
				end
			end
		end
		debug.profileend()
	else
		debug.profileend()
	end
end
function ChangePetTargetPlayer(p103)
	-- upvalues: (copy) v_u_1, (copy) v_u_5
	debug.profilebegin("Pets.ChangePetTargetPlayer")
	if p103 then
		local v104, v105 = v_u_1.PetCmds.Get(p103)
		local v106 = v104 and v105 and v105 ~= v_u_1.LocalPlayer and v_u_5[p103]
		if v106 then
			v106.target = v106.spawned.owner
			v106.farming = false
		end
		debug.profileend()
	else
		debug.profileend()
	end
end
function ChangePetTargetCoin(p107, p108)
	-- upvalues: (copy) v_u_1, (copy) v_u_5
	debug.profilebegin("Pets.ChangePetTargetCoin")
	if p107 and p108 then
		local v109, v110 = v_u_1.PetCmds.Get(p107)
		if v109 and v110 and v110 ~= v_u_1.LocalPlayer then
			local v111 = v_u_5[p107]
			local v112 = v_u_1.Things.Coins:FindFirstChild(p108)
			if v111 and v112 then
				v111.target = v112:FindFirstChild("POS")
				v111.farming = true
			end
		end
		debug.profileend()
	else
		debug.profileend()
	end
end
function NetworkUpdate()
	-- upvalues: (copy) v_u_5, (copy) v_u_1, (ref) v_u_10
	debug.profilebegin("Pets.NetworkUpdate")
	for _, v113 in pairs(v_u_5) do
		local v114 = v113.spawned.uid
		local v115 = v113.spawned.owner
		local v116 = v113.target
		local v117 = v113.farming
		if v115 == v_u_1.LocalPlayer and v116 ~= v113.networkTarget then
			v113.networkTarget = v116
			if v117 then
				local v118 = v116.Parent:GetAttribute("ID")
				if v118 then
					v_u_1.Network.Fire("Change Pet Target", v114, "Coin", v118)
				end
			elseif v116 == v115 then
				v_u_1.Network.Fire("Change Pet Target", v114, "Player")
			end
		end
	end
	if not v_u_10 or 1.5 < os.clock() - v_u_10 then
		v_u_10 = os.clock()
		task.spawn(function()
			-- upvalues: (ref) v_u_1, (ref) v_u_5
			local v119 = v_u_1.Network.Invoke("Get Coin Targets")
			if v119 then
				debug.profilebegin("Pets.NetworkUpdate.Targets")
				for v120, v121 in pairs(v119) do
					local v122 = v121.t
					local v123 = v121.id
					if v_u_5[v120] then
						if v122 == "Coin" then
							ChangePetTargetCoin(v120, v123)
						elseif v122 == "Player" then
							ChangePetTargetPlayer(v120)
						end
					end
				end
				debug.profileend()
			else
				v_u_1.Print("Failed to get targets of other players")
			end
		end)
	end
	debug.profileend()
end
local function v_u_166(p124, p125, p_u_126)
	-- upvalues: (copy) v_u_1, (ref) v_u_6, (copy) v_u_2, (copy) v_u_5, (copy) v_u_3
	debug.profilebegin("Pets.SelectCoin")
	local v127 = v_u_1.Save.Get()
	if v127 then
		assert(v127)
		if p124 then
			if p125 == nil then
				p125 = v127.Settings.PetsControl == 2
			end
			local v_u_128 = p124:FindFirstChild("POS")
			local v_u_129 = p124:GetAttribute("ID")
			local _ = v_u_1.Directory.Coins[p124:GetAttribute("Name")]
			local function v138(p130)
				-- upvalues: (ref) v_u_6, (ref) v_u_2, (ref) v_u_5, (ref) v_u_1, (copy) v_u_128
				local v131 = nil
				local v132 = nil
				local v133 = nil
				v_u_6 = v_u_6 + 1
				local v134 = v_u_2.getLocal()
				for v135, v136 in pairs(v_u_5) do
					if v136.spawned.owner == v_u_1.LocalPlayer then
						local v137 = (v_u_128.CFrame.Position - v136.spawned.part.CFrame.Position).Magnitude
						if v134 then
							if v134.petInfo.petData.uid == v135 then
								v137 = v137 + 99999999
							end
						end
						if not v131 or v137 < v132 then
							if p130 and p130(v135, v136) then
								v133 = v136
								v132 = v137
								v131 = v135
							elseif not p130 then
								v133 = v136
								v132 = v137
								v131 = v135
							end
						end
					end
				end
				v_u_6 = v_u_6 - 1
				return v131, v133
			end
			local v139 = {}
			local v140 = {}
			if p125 then
				v_u_6 = v_u_6 + 1
				for v141, v142 in pairs(v_u_5) do
					if v142.spawned.owner == v_u_1.LocalPlayer then
						table.insert(v139, v141)
					end
				end
				v_u_6 = v_u_6 - 1
			else
				local v145, _ = v138(function(p143, p144)
					-- upvalues: (copy) p_u_126
					if p_u_126 and p_u_126[p143] ~= true then
						return false
					else
						return not p144.farming
					end
				end)
				if v145 then
					table.insert(v139, v145)
				else
					local v149, _ = v138(function(p146, p147)
						-- upvalues: (copy) p_u_126, (copy) v_u_128
						if p_u_126 and p_u_126[p146] ~= true then
							return false
						end
						local v148 = p147.farming
						if v148 then
							v148 = p147.target ~= v_u_128
						end
						return v148
					end)
					if v149 then
						table.insert(v139, v149)
					else
						local v153, _ = v138(function(p150, p151)
							-- upvalues: (copy) p_u_126, (copy) v_u_128
							if p_u_126 and p_u_126[p150] ~= true then
								return false
							end
							local v152 = p151.farming
							if v152 then
								v152 = p151.target == v_u_128
							end
							return v152
						end)
						if v153 then
							local v154 = {}
							v_u_6 = v_u_6 + 1
							for v155, v156 in pairs(v_u_5) do
								if v156.spawned.owner == v_u_1.LocalPlayer and v156.farming and v156.target == v_u_128 then
									table.insert(v154, v155)
								end
							end
							v_u_6 = v_u_6 - 1
							if 0 < #v154 then
								v140 = v154
							end
						end
					end
				end
			end
			--print(#v139)
			if 0 < #v139 then
				--print('a')
				debug.profileend()
				debug.profilebegin("Pets.SelectCoin")
				local v157 = false
				local v158 = false
				for v_u_159, v_u_160 in pairs((v_u_1.Network.Invoke("Join Coin", v_u_129, v139))) do
					--print(v_u_159, v_u_160)
					if v_u_160 == true then
						--print('A')
						v158 = true
						local v_u_161 = v_u_5[v_u_159]
						--print(v_u_5)
						if v_u_161 then
						--	print('ok')
							if v_u_161.selectionFx then
								v_u_161.selectionFx()
								v_u_161.selectionFx = nil
							end
							v_u_161.farming = true
							v_u_161.target = v_u_128
							v_u_161.arrived = false
							v_u_161.targetuid = v_u_161.targetuid + 1
							v_u_161.randomRotation = v_u_3:NextNumber(0, 360)
							local v_u_162 = v_u_161.targetuid
							function v_u_161.onArrive()
								-- upvalues: (ref) v_u_5, (copy) v_u_159, (copy) v_u_161, (copy) v_u_128, (copy) v_u_162, (ref) v_u_1, (copy) v_u_129
								if v_u_5[v_u_159] and v_u_161.farming and v_u_161.target == v_u_128 and v_u_162 == v_u_161.targetuid then
									--print('ffffff')
									v_u_1.Network.Fire("Farm Coin", v_u_129, v_u_159)
								end
							end
						end
					elseif typeof(v_u_160) == "string" then
						if not v157 then
							task.spawn(function()
								-- upvalues: (ref) v_u_1, (copy) v_u_160
								v_u_1.Message.New(v_u_160)
							end)
							v157 = true
						end
					end
				end
				if v158 then
					v_u_1.Audio.Play("rbxassetid://7004964432", script)
				end
			end
			if 0 < #v140 then
				debug.profileend()
				debug.profilebegin("Pets.SelectCoin")
				for v163, v164 in pairs((v_u_1.Network.Invoke("Leave Coin", v_u_129, v140))) do
					if v164 then
						local v165 = v_u_5[v163]
						if v165 then
							if v165.selectionFx then
								v165.selectionFx()
								v165.selectionFx = nil
							end
							v165.farming = false
							v165.target = nil
						end
					else
						v_u_1.Print("Pet failed to leave coin -- " .. v163)
					end
				end
			end
			debug.profileend()
		else
			debug.profileend()
		end
	else
		debug.profileend()
		return
	end
end
coroutine.wrap(function()
	-- upvalues: (copy) v_u_1, (copy) v_u_5, (copy) v_u_2
	wait(1)
	if not v_u_1.Variables.Mobile then
		local v_u_167 = v_u_1.Player.Mouse()
		local v_u_168 = nil
		local v_u_169 = nil
		game:GetService("RunService").RenderStepped:Connect(function(_)
			-- upvalues: (copy) v_u_167, (ref) v_u_1, (ref) v_u_5, (ref) v_u_2, (ref) v_u_168, (ref) v_u_169
			debug.profilebegin("Pets.Mouse")
			local v170 = v_u_167.Target
			if v170 then
				if not v170:IsDescendantOf(v_u_1.Things.Pets) then
					v170 = nil
				end
			end
			local v171
			if v170 then
				v171 = v_u_5[v170.Name]
				local v172 = v_u_2.getLocal()
				if v172 then
					if v172.petInfo == v171 then
						v171 = nil
					end
				end
			else
				v171 = nil
			end
			if v_u_168 ~= v171 then
				v_u_168 = v171
				if v_u_169 then
					v_u_169()
					v_u_169 = nil
				end
				if v171 and v171.spawned.owner == v_u_1.LocalPlayer and v_u_1.Directory.Pets[v171.spawned.id].titanic then
					v_u_169 = v_u_1.WorldFX.QuestGlow(v171.spawned.part, 1, 0.66)
				end
			end
			debug.profileend()
		end)
	end
end)()
function UpdateRaycastParams()
	-- upvalues: (copy) v_u_1, (ref) v_u_11
	debug.profilebegin("Pets.UpdateRaycastParams")
	local v173 = {}
	for _, v174 in ipairs(v_u_1.WorldCmds.GetMap():GetChildren()) do
		if v174.Name ~= "Debris" and v174.Name ~= "PlayerSpawns" and v174.Name ~= "Teleports" and v174.Name ~= "Audio" then
			table.insert(v173, v174)
		end
	end
	local v175 = RaycastParams.new()
	v175.FilterDescendantsInstances = { v173 }
	v175.FilterType = Enum.RaycastFilterType.Whitelist
	v175.IgnoreWater = true
	v_u_11 = v175
	debug.profileend()
end
v_u_1.Signal.Fired("World Changed"):Connect(function()
	UpdateRaycastParams()
end)
function UpdatePetSoundsSetting()
	-- upvalues: (copy) v_u_1
	local v176 = v_u_1.Save.Get()
	if v176 then
		assert(v176)
		v_u_1.Variables.PetSoundsEnabled = v176.Settings.PetSFX == 1
	end
end
v_u_1.Signal.Fired("Stat Changed"):Connect(function(p177)
	-- upvalues: (copy) v_u_1, (copy) v_u_2
	if p177 == "Settings" then
		UpdatePetSoundsSetting()
	end
	if p177 == (v_u_1.Shared.IsHardcore and "HardcoreRidingPet" or "RidingPet") then
		v_u_2.petRidingLocal = nil
		v_u_2.hasPetRidingLocal = false
	end
end)
UpdatePetSoundsSetting()
v_u_1.Network.Fired("Pet Target Coin"):Connect(function(p178, p179)
	ChangePetTargetCoin(p178, p179)
end)
v_u_1.Network.Fired("Pet Target Player"):Connect(function(p180)
	ChangePetTargetPlayer(p180)
end)
v_u_1.Network.Fired("Player Teleported"):Connect(function(p181)
	-- upvalues: (copy) v_u_1, (copy) v_u_5, (copy) v_u_35
	debug.profilebegin("Pets.Player Teleported")
	local v182 = v_u_1.Save.Get(p181, true)
	if v182 and v182.Pets then
		assert(v182)
		for _, v183 in ipairs(v182.Pets) do
			local v184 = v183.uid
			local v185 = v_u_5[v184]
			if v_u_1.Shared.HasPetEquipped(v182, v183) and v185 and not v185.farming then
				v_u_35(v184)
			end
		end
		debug.profileend()
	else
		debug.profileend()
	end
end)
v_u_1.Signal.Fired("Select Coin"):Connect(function(p186)
	-- upvalues: (copy) v_u_166
	v_u_166(p186)
end)
v_u_1.Signal.Fired("Group Select Coin"):Connect(function(p187)
	-- upvalues: (copy) v_u_166
	v_u_166(p187, true)
end)
v_u_1.Signal.Fired("Select Pet"):Connect(function(p188, _)
	-- upvalues: (copy) v_u_5, (copy) v_u_1, (copy) v_u_2
	local v189 = v_u_5[p188.Name]
	if v189 and v189.spawned.owner == v_u_1.LocalPlayer and v_u_1.Directory.Pets[v189.spawned.id].titanic then
		if v_u_2.petRidingLocal == v189.spawned.uid and not v_u_1.Variables.UsingHoverboard and v189.target == v189.spawned.owner then
			v_u_2.petRidingLocal = nil
			v_u_2.destroyByPlayer(v189.spawned.owner)
		else
			v_u_2.petRidingLocal = v189.spawned.uid
			v_u_1.Signal.Fire("Stop Using Hoverboard")
			v189.target = v189.spawned.owner
			v189.farming = false
			v189.target = nil
			if v189.selectionFx then
				v189.selectionFx()
				v189.selectionFx = nil
			end
		end
		v_u_2.hasPetRidingLocal = true
		v_u_1.Network.Fire("Set Riding Pet", v_u_2.petRidingLocal)
	end
end)
v_u_1.Network.Fired("Set Riding Pet"):Connect(function(p190, p191)
	-- upvalues: (copy) v_u_1
	local v192 = v_u_1.Save.Get(p190)
	if v192 then
		v192[v_u_1.Shared.IsHardcore and "HardcoreRidingPet" or "RidingPet"] = p191
	end
end)
v_u_1.Network.Fired("Select Coin"):Connect(function(p193, p194, p195)
	-- upvalues: (copy) v_u_1, (copy) v_u_166
	local v196 = v_u_1.Things:WaitForChild("Coins"):FindFirstChild(p193)
	if v196 then
		v_u_166(v196, p194, p195)
	end
end)
v_u_1.Signal.Fired("World Changed"):Connect(function()
	-- upvalues: (copy) v_u_39
	v_u_39()
end)
function Tick(p_u_197)
	-- upvalues: (ref) v_u_12, (copy) v_u_1, (ref) v_u_6, (copy) v_u_5, (copy) v_u_13, (copy) v_u_14, (copy) v_u_2, (copy) v_u_15, (copy) v_u_3, (copy) v_u_17, (copy) v_u_16, (ref) v_u_11, (copy) v_u_46, (copy) v_u_47, (copy) v_u_35
	debug.profilebegin("Pets.Tick")
	local v_u_198 = v_u_12 + p_u_197
	v_u_12 = v_u_198
	if v_u_1.WorldCmds.HasLoaded() then
		local v_u_199 = p_u_197 * 60
		local v_u_200 = v_u_1.Save.Get()
		assert(v_u_200)
		local v_u_201 = v_u_1.WorldCmds.Get()
		assert(v_u_201)
		local v_u_202 = 0
		local v203 = {}
		v_u_6 = v_u_6 + 1
		for _, v_u_204 in pairs(v_u_5) do
			local v205 = v_u_204.spawned.uid
			local v_u_206 = v_u_204.spawned.owner
			local v_u_207 = v_u_13[v_u_206]
			if not v_u_207 then
				v_u_207 = {
					["displayNumTotals"] = table.create(#v_u_14, 0), 
					["displayNumColumns"] = table.create(#v_u_14, 0), 
					["displayNumRows"] = table.create(#v_u_14, 0)
				}
				v_u_13[v_u_206] = v_u_207
			end
			local v_u_208 = v_u_204.petData
			local v337 = (function()
				-- upvalues: (copy) v_u_208, (copy) v_u_200, (copy) v_u_206, (ref) v_u_1, (copy) v_u_204, (ref) v_u_2, (copy) v_u_198, (copy) v_u_201, (ref) v_u_15, (ref) v_u_3, (ref) v_u_207, (ref) v_u_17, (ref) v_u_16, (ref) v_u_11, (copy) p_u_197, (copy) v_u_199, (ref) v_u_202, (ref) v_u_46, (ref) v_u_47
				debug.profilebegin("Pets.Tick.RenderPet")
				if v_u_208 then
					assert(v_u_208)
					if v_u_200.Settings.ShowOtherPets == 2 and v_u_206 ~= v_u_1.LocalPlayer then
						debug.profileend()
						return "critical"
					else
						local v209 = v_u_204.spawned.part
						local _ = v209.CFrame
						local v210 = v_u_204.spawned.id
						local v211 = v_u_1.Directory.Pets[v210]
						local v212 = v211.fly == true
						local _ = v_u_208.g == true
						local _ = v_u_208.r == true
						local _ = v_u_208.dm == true
						local _ = v_u_208.sh == true
						local _ = v_u_208.hc == true
						local v213 = v211.titanic and 3 or v211.huge and 2 or 1
						local v214 = v_u_204.target
						local v215 = v_u_204.farming
						local v216 = v214 == v_u_206
						if v216 then
							v214 = v214.Character
						end
						if v214 == nil or v214.Parent == nil then
							debug.profileend()
						else
							if v_u_206 == nil or v_u_206.Parent == nil then
								debug.profileend()
								return "critical"
							end
							if v209 == nil or v209.Parent == nil then
								debug.profileend()
								return "critical"
							end
							if not v214 or not v214:IsA("Model") or v214.PrimaryPart then
								local v217 = v_u_2.process(v_u_204, v_u_208)
								if v_u_206 == v_u_1.LocalPlayer and v211.titanic then
									v209.CanQuery = v_u_1.Settings.MountingTitanicsEnabled
								end
								if v216 and not v217 and 1 <= v_u_198 - v_u_204.playerDistCheckTick then
									if 200 <= v_u_206:DistanceFromCharacter(v209.CFrame.Position) then
										v209.CFrame = v214:GetPivot() * CFrame.new(0, 0, -5)
									else
										v_u_204.playerDistCheckTick = v_u_198
									end
								end
								local v218 = math.clamp(1 + (v_u_1.Shared.ComputePetStrength(v_u_208) / 100) ^ 0.4, 1, 7) * 0.25
								if v215 then
									v218 = v218 + (v_u_200.Upgrades["Pet Walkspeed"] or 0) * 0.2
								end
								local v219, v220 = v_u_1.Shared.HasPower(v_u_208, "Agility")
								if v219 then
									local v221 = v_u_1.Shared.GetPowerDir("Agility", v220)
									if v221 then
										v218 = v218 * v221.value
									end
								end
								local v222, _ = v_u_1.Shared.HasPower(v_u_208, "Royalty")
								if v222 then
									v218 = v218 * 1.5
								end
								local v223 = v_u_201 == "Void"
								if v223 then
									v218 = v218 * 0.4
								end
								if v216 then
									v218 = math.min(v218, 1) + math.sin(v_u_204.spawnTick) / 8
								end
								local v224 = v211.flySpeed or 1
								if v217 then
									local v225 = v_u_206.Character
									if v225 then
										local v226 = 1
										local v227 = 1
										local v228 = v225.PrimaryPart
										if v228 then
											local v229 = v228.AssemblyLinearVelocity
											v226 = v226 + (v229 * Vector3.new(1, 0, 1)).Magnitude
											v227 = v227 + math.abs(v229.Y)
										end
										local v230 = v225:FindFirstChildOfClass("Humanoid")
										local v231
										if v230 then
											v218 = v230.WalkSpeed
											v231 = v230.WalkSpeed
										else
											v231 = v218
										end
										v218 = v218 * v226
										local _ = v231 * v227
									end
								end
								if v214 then
									if v215 then
										if not v214:IsA("Model") then
											v214 = v214.Parent:FindFirstChild("Coin")
										end
									end
								end
								local v232 = CFrame.identity
								if v214 then
									if v214:IsA("Model") then
										v232 = v214:GetPivot()
									elseif v214:IsA("BasePart") then
										v232 = v214:GetPivot()
									end
								end
								local v233 = 0
								local v234 = 2.5 + v_u_15[v213] / 2 
								if #v_u_204.spawned.meshes > 0 then
									--v_u_204.spawned.mesh.Offset.Z
									v234 = v234 - v_u_204.spawned.meshes[1].Offset.Z
								end
								local v_u_235
								if v215 then
									local v236 = v214.Size
									local v237 = v232 * CFrame.new(0, -v236.Y / 2 + 0.01, 0)
									if not v_u_204.randomRotation then
										v_u_204.randomRotation = v_u_3:NextNumber(0, 360)
									end
									assert(v_u_204.randomRotation)
									local v238 = v237 * CFrame.Angles(0, math.rad(v_u_204.randomRotation), 0)
									local v239 = math.max(v236.X, v236.Z) / 2 * 1.1
									for v240 = 1, v213 do
										v234 = v234 + v_u_15[v240] * 0.333
									end
									v_u_235 = v238 * CFrame.new(v233, 0, v234 + math.max(4.5, v239))
								elseif v217 then
									v_u_235 = v217:computePetCFrame()
									v232 = v_u_235
								elseif v216 then
									if v_u_204.row == 0 then
										v_u_235 = v232
									elseif v_u_204.rowPlace == 0 then
										v_u_235 = v232
									elseif v_u_204.rowTotal == 0 then
										v_u_235 = v232
									else
										local v241 = v234 + 0.5
										for v242 = 1, v213 do
											if 0 < v_u_207.displayNumTotals[v242] then
												v241 = v241 + 1 + v_u_17[v242] * 0.2
											end
										end
										for v243 = 1, v213 - 1 do
											if 0 < v_u_207.displayNumTotals[v243] then
												v241 = v241 + v_u_207.displayNumRows[v243] * v_u_17[v243]
											end
										end
										local v244 = v241 + (v_u_204.row - 1) * v_u_17[v213]
										local v245 = v233 + (v_u_204.rowPlace - 1 - (v_u_204.rowTotal - 1) / 2) * v_u_16[v213]
										if not v217 then
											if v_u_2.get(v_u_206) then
												v244 = v244 + 0.5 + v_u_17[3] * 0.5
											end
										end
										v_u_235 = v232 * CFrame.new(v245, 0, v244)
										v232 = v232 * CFrame.new(v245, 0, 0)
									end
								else
									v_u_235 = v232
								end
								local function v250()
									-- upvalues: (ref) v_u_204, (ref) v_u_198, (ref) v_u_235, (ref) v_u_11
									debug.profilebegin("Pets.Tick.UpdatePetRaycast")
									local v246 = v_u_204.lastRaycast
									local v247
									if v_u_204.nextRaycastTime and v_u_198 < v_u_204.nextRaycastTime then
										v247 = v_u_204.lastRaycast
									else
										v_u_204.nextRaycastTime = v_u_198 + math.random() * 0.3 + 0.15
										local v248 = v_u_204.spawned.bottom.WorldCFrame.Position
										assert(v_u_11)
										local v249 = workspace:Raycast(v248 + Vector3.new(0, math.max(v_u_235.Y - v248.Y + 3, 0), 0), Vector3.new(0, -200, 0), v_u_11)
										if v249 then
											v247 = v249.Position
											local _ = v249.Normal
											if not v249.Instance then
												v247 = v246
											end
										else
											v247 = v246
										end
										v_u_204.lastRaycast = v247
									end
									debug.profileend()
									return v247
								end
								local v251 = v_u_235.Position
								if not v217 then
									if not v215 or not v_u_204.arrived or v_u_204.moving then
										v251 = v250() or v251
									end
								end
								local v252 = v_u_204.lastPositionLerp or CFrame.new(v_u_235.Position) - Vector3.new(0, v_u_235.Y, 0)
								local v253 = v_u_204.lastRotationLerp or CFrame.identity
								local v254 = v_u_204.lastRaycastLerp or CFrame.new(0, v251.Y, 0)
								local v255 = v_u_204.lastAnimationLerp or CFrame.identity
								local v256 = v_u_204.lastFarmingLerp or CFrame.identity
								local v257 = v_u_204.lastMountCFrame or CFrame.identity
								local v258 = CFrame.identity
								local v259 = v_u_204.spawned.mount
								if v259 then
									local v260 = v259.CFrame
									v258 = v260 - Vector3.new(0, v260.Y, 0)
								end
								v_u_204.lastMountCFrame = v258
								local v261 = v252 * v254 * v253
								local v262 = v_u_235
								local v263 = v262 + Vector3.new(0, v251.Y - v262.Y, 0)
								if v217 then
									v261 = v261 * v257
									v263 = v263 * v258
								end
								local v264 = math.max(0.001, (Vector2.new(v263.X, v263.Z) - Vector2.new(v261.X, v261.Z)).Magnitude)
								local v265 = math.max(0.001, (math.abs(v263.Y - v261.Y)))
								local v266 = 11
								if v223 then
									v266 = v266 * 0.4090909090909091
								end
								if v211.balloon then
									v266 = v266 * 0.5
								end
								if v211.jelly then
									v266 = v266 * 0.5
								end
								local v267 = false
								local v268 = v_u_204.movingTick
								local v269 = v_u_204.animationTick
								local v270 = 0.1 <= v264
								if v217 then
									if 0.1 <= v265 then
										v266 = v266 * 0.5
										v270 = true
										v267 = true
									end
								end
								if v270 then
									v_u_204.nextMovingCheck = v_u_198 + 0.2
								end
								if not v270 then
									if v_u_204.moving then
										v270 = v_u_198 < (v_u_204.nextMovingCheck or v_u_198) and true or v270
									end
								end
								if v270 ~= v_u_204.moving then
									v269 = 0
									v268 = 0
								end
								if v270 then
									v268 = v268 + p_u_197
									v269 = v269 + p_u_197 * v266
								end
								v_u_204.moving = v270
								v_u_204.movingTick = v268
								v_u_204.animationTick = v269
								--print(v264)
								local v271 = v264 < 1
								v_u_204.arrived = not v271 --/!??!?
								--local v272 = not v_u_204.arrived and v271 and v_u_204.onArrive
								if not v_u_204.arrived and v271 then
									--print('aaa')
									local t_onArrive = v_u_204.onArrive;
									if t_onArrive then
										v_u_204.onArrive = nil;
										t_onArrive();
									end
								end
								 
								local v273 = v252:Lerp(CFrame.new(v_u_235.X, 0, v_u_235.Z), (math.clamp(v_u_199 * 1 / v264 * v218, 0, 1)))
								local v274 = CFrame.new(0, v251.Y, 0)
								local v275
								if v217 then
									v275 = v254:Lerp(v274, (math.clamp(v_u_199 * 1 / v265 * v218, 0, 1)))
								else
									v275 = v254:Lerp(v274, (math.clamp(v_u_199 * 0.2, 0, 1)))
								end
								local _, v276, _ = v232:ToOrientation()
								if not v217 then
									local v277 = v273 * v275
									local v278 = Vector3.new(v277.X, 0, v277.Z)
									local v279 = Vector3.new(v232.X, 0, v232.Z)
									if 0.001 < (v279 - v278).Magnitude then
										local v280, v281
										v280, v276, v281 = CFrame.new(v278, v279):ToOrientation()
									end
								end
								local v282 = 0
								local v283 = 0
								if v211.swerve then
									if v270 then
										if not v215 then
											if not v271 then
												if not v217 then
													local _, v284, _ = v_u_235:ToOrientation()
													local v285 = v_u_1.Functions.RadDelta(v276, v284)
													local v286 = math.clamp(math.abs(v285) * (v211.swerveAggression or 1) / math.pi, 0, 1)
													v283 = v286 * v_u_1.Functions.Sigmoid(1 - v286, nil, 3) * math.rad(v211.swerveMaxAngle or 45) * math.sign(v285)
												end
											end
										end
									end
								end
								local v287 = v253:Lerp(CFrame.fromOrientation(v282, v276, v283), (math.clamp(v_u_199 * 0.1, 0, 1)))
								local v288 = 1
								local v289
								if v211.jelly then
									v289 = 0
									if v211.titanic then
										v288 = v288 * 3
									elseif v211.huge then
										v288 = v288 * 2
									else
										v288 = v288 * 1
									end
								else
									v289 = 1
								end
								local v290 = math.sin(v269)
								local v291 = (1 - math.cos(v269 * 2)) / 2
								local _ = Vector3.one
								local v292 = v211.flyHeight or 1
								local v293 = v211.flyHeightChange or 1
								local v294, v295
								if v212 then
									v294 = CFrame.new(0, math.sin(v_u_198 * v224 * 4) * v293 * 0.5 + v292 * 3.5, 0)
									v295 = CFrame.Angles(v270 and -0.08726646259971647 or 0, 0, 0)
								else
									v294 = CFrame.new(0, v291 * 3 * v288, 0)
									v295 = CFrame.Angles(v290 * v289 / 2, 0, v290 * v289 / 8)
								end
								if v211.hybridFly then
									local v296 = math.clamp((v_u_204.flyHeightAnimation or v270 and 1 or 0) + p_u_197 * (v270 and 3.5 or -0.5), 0, 1)
									v_u_204.flyHeightAnimation = v296
									local v297 = Vector3.new(-0.08726646259971647, 0, 0) * v296 + Vector3.new(v290 / 2, 0, v290 / 8) * (1 - v296)
									v294 = CFrame.new(Vector3.new(0, math.sin(v_u_198 * v224 * 4) * v293 * 0.5 + v292 * 3.5, 0) * v296 + Vector3.new(0, v291 * 3, 0) * (1 - v296))
									v295 = CFrame.Angles(v297.X, v297.Y, v297.Z)
								end
								if v210 == "154" or v210 == "242" or v210 == "2067" then
									v295 = v295 * CFrame.Angles(0, 0, (math.rad(v_u_198 * 100)))
								end
								if v210 == "3025" or v210 == "649" then
									local v298 = v_u_204.spawned.spinTick + p_u_197 * 1
									v_u_204.spawned.spinTick = v298
									v295 = v295 * CFrame.Angles(0, v298 * 1.5707963267948966, 0)
								end
								local v299 = v255:Lerp(v294 * v295, (math.clamp(v_u_199 * (v270 and 0.5 or 0.2), 0, 1)))
								local v300 = v_u_204.farmingTick == nil and v_u_204.farming and v271 and v_u_198 or v_u_204.farmingTick
								v_u_204.farmingTick = v300
								if v215 then
									if v271 then
										v271 = v300 ~= nil
									end
								else
									v271 = v215
								end
								local v301 = v271 and v_u_198 - v300 or 0
								local v302 = (1 - math.cos(v301 * v266 * 2)) / 2
								local v303 = CFrame.Angles(0, 0, math.sin(v301 * v266) * v289 / 2)
								local v304 = CFrame.identity
								if v211.jelly then
									v304 = v304 * CFrame.new(0, v302 * 1.5 * v288, 0) --* CFrame.new(0, v302 * 1.5 * v288, 0)
								end
								local v305 = v256:Lerp(v304 * v303, (math.clamp(v_u_199 * (v271 and 0.5 or 0.2), 0, 1)))
								local v306 = v273 * v275 * v305 * v287 * v299 * CFrame.new(0, -v_u_204.spawned.bottom.CFrame.Y, 0)
								v_u_202 = v_u_202 + 1
								_insert(v_u_46, v209, v_u_202)
								_insert(v_u_47, v306, v_u_202)
								local v307 = {
									[v209] = v306
								}
								if next(v_u_204.spawned.scriptedWelds) then
									for _, v308 in pairs(v_u_204.spawned.scriptedWelds) do
										local v309 = v308.part
										local v310 = v308.offset
										if v308.scaling then
											v310 = v310 - v310.Position + v310.Position * v_u_204.spawned.scale
										end
										local v311 = v308.rotationRate
										if v311 then
											local v312 = v311 * v_u_198
											v310 = v310 * CFrame.fromOrientation(v312.X, v312.Y, v312.Z)
										end
										if v_u_204.spawned.id == "606" or v_u_204.spawned.id == "2148" then
											if v309.Name == "Basketball" then
												v310 = v310 + Vector3.new(0, v_u_1.PetCmds.BasketballBounce(v_u_198, 3, v_u_204.spawned.id == "606" and 2 or 5, 2), 0) * v_u_204.spawned.scale
											end
										end
										if v_u_204.spawned.id == "630" or v_u_204.spawned.id == "631" then
											if v309.Name == "Beachball" then
												v310 = v310 + Vector3.new(0, v_u_1.PetCmds.BasketballBounce(v_u_198, 3, (v_u_204.spawned.id == "630" or v_u_204.spawned.id == "631") and 2 or 5, 2), 0) * v_u_204.spawned.scale
											end
										end
										v308.lastOffset = v310
										local v313 = v308.root
										local v314 = (v307[v313] or v313:GetPivot()):ToWorldSpace(v310)
										v307[v309] = v314
										v_u_202 = v_u_202 + 1
										_insert(v_u_46, v309, v_u_202)
										_insert(v_u_47, v314, v_u_202)
									end
								end
								v_u_204.spawned.moving = v270
								v_u_204.spawned.farming = v271
								v_u_204.spawned.movingTick = v268
								v_u_204.spawned.jumping = v267
								v_u_204.spawned.riding = v217 ~= nil
								v_u_1.PetCmds.Effects(v_u_204.spawned, v_u_208, v_u_198, p_u_197, false, v307)
								if v217 then
									v217:updateCharacterCopy(v306)
								end
								v_u_204.lastPositionLerp = v273
								v_u_204.lastRotationLerp = v287
								v_u_204.lastRaycastLerp = v275
								v_u_204.lastAnimationLerp = v299
								v_u_204.lastFarmingLerp = v305
								debug.profilebegin("Pets.Tick.RenderPet.CoinSelection")
								local v315 = v_u_204.spawned.coinSelection
								if v215 and v214 and v_u_206 == v_u_1.LocalPlayer then
									if v315 then
										if v315.coin ~= v214 then
											destroyCoinSelection(v315)
											v_u_204.spawned.coinSelection = nil
											v315 = nil
										end
									end
									if not v315 then
										local v316 = v214.Size
										local v317 = v209.Size
										local v318 = Color3.new(1, 1, 1)
										local v319 = v_u_1.Assets.Other.Selection:FindFirstChild("DottedLine"):Clone()
										local v320 = v_u_1.Assets.Other.Selection:FindFirstChild("SelectionCircle"):Clone()
										local v321 = v_u_1.Assets.Other.Selection:FindFirstChild("SelectionCircle"):Clone()
										local v322 = v320:FindFirstChild("Attachment")
										local v323 = v321:FindFirstChild("Attachment")
										v319.Attachment0 = v322
										v319.Attachment1 = v323
										v319.Color = ColorSequence.new(v318)
										v320.SurfaceGui.Circle.ImageColor3 = v318
										v321.SurfaceGui.Circle.ImageColor3 = v318
										local v324 = math.max(v317.X, v317.Z)
										local v325 = math.max(v316.X, v316.Z)
										local v326 = Vector3.new(v324 + 1.5, 0.05, v324 + 1.5)
										local v327 = Vector3.new(v325 + 1.5, 0.05, v325 + 1.5)
										v322.Position = Vector3.new(0, 0, -v326.Z / 2)
										v323.Position = Vector3.new(0, 0, -v327.Z / 2)
										v320.Size = v326
										v321.Size = v327
										v315 = {
											["coin"] = v214, 
											["dottedLine"] = v319, 
											["selection1"] = v320, 
											["selection2"] = v321, 
											["petSize"] = v317, 
											["coinSize"] = v316, 
											["coinCFrame"] = v214.CFrame, 
											["parented"] = false
										}
										v_u_204.spawned.coinSelection = v315
									end
									assert(v315)
									local v328 = v306 * CFrame.new(0, -v315.petSize.Y / 2 + 0.01, 0)
									local v329 = v315.coinCFrame * CFrame.new(0, -v315.coinSize.Y / 2 + 0.01, 0)
									local v330 = v328 - Vector3.new(0, v328.Position.Y, 0) + Vector3.new(0, v329.Position.Y, 0)
									local v331 = CFrame.new(v330.Position, v329.Position) + Vector3.new(0, 0.025, 0)
									local v332 = CFrame.new(v329.Position, v330.Position) + Vector3.new(0, 0.025, 0)
									local _, v333 = v331:ToOrientation()
									local _, v334 = v332:ToOrientation()
									local v335 = CFrame.new(v331.Position) * CFrame.fromOrientation(0, v333, 0)
									local v336 = CFrame.new(v332.Position) * CFrame.fromOrientation(0, v334, 0)
									if v315.parented then
										v_u_202 = v_u_202 + 1
										_insert(v_u_46, v315.selection1, v_u_202)
										_insert(v_u_47, v335, v_u_202)
										v_u_202 = v_u_202 + 1
										_insert(v_u_46, v315.selection2, v_u_202)
										_insert(v_u_47, v336, v_u_202)
									else
										v315.parented = true
										v315.selection1.CFrame = v335
										v315.selection2.CFrame = v336
										v315.dottedLine.Parent = v315.selection1
										v315.selection1.Parent = v_u_1.Debris
										v315.selection2.Parent = v_u_1.Debris
									end
								elseif v315 then
									v_u_204.spawned.coinSelection = nil
									destroyCoinSelection(v315)
								end
								debug.profileend()
								debug.profileend()
								return true
							end
							debug.profileend()
						end
					end
				else
					debug.profileend()
					return "critical"
				end
			end)()
			if v337 ~= true and v337 == "critical" then
				table.insert(v203, v205)
			end
		end
		v_u_6 = v_u_6 - 1
		for _, v338 in ipairs(v203) do
			v_u_35(v338)
		end
		_trim(v_u_46, v_u_202)
		_trim(v_u_47, v_u_202)
		workspace:BulkMoveTo(v_u_46, v_u_47, Enum.BulkMoveMode.FireCFrameChanged)
		debug.profileend()
	else
		debug.profileend()
	end
end
game:GetService('RunService'):BindToRenderStep("PetsRender", Enum.RenderPriority.Last.Value, Tick);
game:GetService("RunService").Stepped:Connect(function(_, _)
	-- upvalues: (copy) v_u_1, (copy) v_u_102
	if v_u_1.WorldCmds.HasLoaded() then
		v_u_102()
		NetworkUpdate()
	end
end)  -  Editar
  04:54:13.950    -  Editar
  04:54:13.951  ----- [2873] StarterPlayer.StarterPlayerScripts.Scripts.Game.Pets.Riding -----  -  Editar
  04:54:13.951  -- decompiled by Sentinel (took 8.18447ms)
local v_u_1 = require(game.ReplicatedStorage.Library)
v_u_1.Load()
require(game:GetService("ReplicatedStorage"):WaitForChild("Library"):WaitForChild("Modules").Pets)
require(script.Parent.Common)
local v_u_2 = v_u_1.LocalPlayer.PlayerGui:WaitForChild("Dismount")
local v_u_3 = Random.new()
local v_u_56 = {}
v_u_56 = {
	["hasPetRidingLocal"] = false, 
	["petRidingLocal"] = nil, 
	["new"] = function(p_u_4)
		-- upvalues: (copy) v_u_1, (copy) v_u_3, (copy) v_u_56, (copy) v_u_2
		local v5 = p_u_4.spawned.part
		local v6 = v_u_1.Directory.Pets[p_u_4.spawned.id]
		local v7 = p_u_4.spawned.center
		local v8 = p_u_4.spawned.bottom
		local v9 = p_u_4.spawned.mount
		assert(v9)
		local v10 = getFullAttachmentCFrame(v9, p_u_4.spawned, false)
		local v11 = p_u_4.spawned.owner
		local v_u_12 = v11.Character
		assert(v_u_12)
		assert(v_u_12.PrimaryPart)
		local v_u_13 = v_u_12:FindFirstChildOfClass("Humanoid")
		assert(v_u_13)
		local v_u_14 = v11 == v_u_1.LocalPlayer
		local v_u_15 = v_u_13:GetAppliedDescription()
		local v16
		if v6.ridingGravity then
			v16 = workspace.Gravity
			workspace.Gravity = v6.ridingGravity
		else
			v16 = nil
		end
		local v17 = v_u_13.WalkSpeed
		v_u_13.WalkSpeed = v6.ridingWalkSpeed or 48
		local v18 = v_u_13.JumpPower
		v_u_13.JumpPower = v6.ridingJumpPower or 75
		local v19 = v_u_13.HipHeight
		v_u_13.HipHeight = v19 + v7.CFrame.Y - v8.CFrame.Y
		local v20 = Vector3.new(0, v10.Y - v7.CFrame.Y, 0) + Vector3.new(0, -1.5, 0)
		if v6.ridingCameraOffset then
			v20 = v20 + v6.ridingCameraOffset
		end
		local v21 = v_u_13.CameraOffset
		v_u_13.CameraOffset = v21 + v20
		local v_u_22
		if v_u_14 then
			v_u_22 = nil
		else
			v_u_22 = v_u_13.DisplayDistanceType
			v_u_13.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
		end
		local v23 = {}
		local v24 = {}
		local v25 = {}
		local v26 = {}
		local v27 = {}
		local v28 = {}
		local v29 = {}
		for _, v30 in ipairs(v_u_12:GetDescendants()) do
			if v30:IsA("BasePart") then
				local v31 = v30.Transparency
				if v31 < 1 then
					v30.Transparency = 1
					v23[v30] = v31
				end
				if v30.CastShadow then
					v30.CastShadow = false
					table.insert(v24, v30)
				end
			elseif v30:IsA("ParticleEmitter") then
				if v30.Enabled then
					v30.Enabled = false
					table.insert(v25, v30)
				end
			elseif v30:IsA("Trail") then
				if v30.Enabled then
					v30.Enabled = false
					table.insert(v26, v30)
				end
			elseif v30:IsA("Light") then
				if v30.Enabled then
					v30.Enabled = false
					table.insert(v27, v30)
				end
			elseif v30:IsA("Sound") then
				if 0 < v30.Volume then
					v28[v30] = v30.Volume
					v30.Volume = 0
				end
			elseif v30:IsA("Decal") and 0 < v30.Transparency then
				v29[v30] = v30.Transparency
				v30.Transparency = 1
			end
		end
		v_u_1.Audio.Play("rbxassetid://7000720081", v5, v_u_3:NextNumber(0.95, 1.05), 0.125, 125)
		local v_u_32 = setmetatable({
			["destroyed"] = false, 
			["petInfo"] = p_u_4, 
			["originalGravity"] = v16, 
			["originalTransparencies"] = v23, 
			["originalCastShadows"] = v24, 
			["originalParticleEmitters"] = v25, 
			["originalTrails"] = v26, 
			["originalLights"] = v27, 
			["originalVolumes"] = v28, 
			["originalDecalTransparencies"] = v29, 
			["originalWalkSpeed"] = v17, 
			["originalJumpPower"] = v18, 
			["originalHipHeight"] = v19, 
			["originalCameraOffset"] = v21, 
			["originalDisplayDistanceType"] = v_u_22, 
			["characterCopyTransparency"] = 1
		}, {
			["__index"] = v_u_56
		})
		task.spawn(function()
			-- upvalues: (ref) v_u_1, (copy) v_u_15, (copy) v_u_13, (copy) v_u_32, (copy) v_u_14, (ref) v_u_22, (copy) p_u_4, (copy) v_u_12
			local v_u_33 = v_u_1.Players:CreateHumanoidModelFromDescription(v_u_15, v_u_13.RigType, Enum.AssetTypeVerification.ClientOnly)
			if v_u_32.destroyed then
				v_u_33:Destroy()
			else
				local v34 = v_u_33.PrimaryPart
				local v35 = v_u_33:FindFirstChildOfClass("Humanoid")
				v35.PlatformStand = true
				v35.AutoJumpEnabled = false
				v35.AutoRotate = false
				if v_u_14 then
					v35.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
				elseif v_u_22 then
					v35.DisplayDistanceType = v_u_22
				end
				local v36 = v_u_33:FindFirstChild("animate")
				if v36 then
					v36:Destroy()
				end
				for _, v37 in ipairs(v_u_33:GetDescendants()) do
					if v37:IsA("Sound") then
						v37.Volume = 0
					end
				end
				v_u_33.Parent = p_u_4.spawned.part
				v_u_33:PivotTo(v_u_12:GetPivot())
				v34.Anchored = true
				for _, v38 in ipairs(v_u_33:GetDescendants()) do
					if v38:IsA("BasePart") then
						v38.CanCollide = false
						v38.CanQuery = false
						v38.CanTouch = false
						v38.Massless = true
						if v_u_14 then
							v38:SetAttribute("RidingOriginalTransparency", v38.Transparency)
						end
					elseif v38:IsA("Decal") and v_u_14 then
						v38:SetAttribute("RidingOriginalTransparency", v38.Transparency)
					end
				end
				local function v_u_40()
					-- upvalues: (copy) v_u_33
					for _, v39 in ipairs(v_u_33:GetDescendants()) do
						if v39:IsA("BasePart") then
							v39.CanCollide = false
							v39.CanQuery = false
							v39.CanTouch = false
						end
					end
				end
				v_u_32.stateChangeConnection = v35.StateChanged:Connect(function()
					-- upvalues: (copy) v_u_40
					task.defer(v_u_40)
				end)
				task.defer(v_u_40)
				v_u_32.characterCopy = v_u_33
				local v41 = v_u_1.Assets.Particles:FindFirstChild("Pet Spawn"):Clone()
				v41.Parent = v34
				v41:Emit(15)
				v_u_1.Functions.AddDebris(v41, 4)
				v35:FindFirstChildOfClass("Animator"):LoadAnimation((script:WaitForChild("RidingAnimation"))):Play()
			end
		end)
		if v_u_14 then
			v_u_2.Enabled = true
		end
		return v_u_32
	end, 
	["computePetCFrame"] = function(p42)
		local v43 = p42.petInfo
		local v44 = v43.spawned.part
		local v45 = v43.spawned.mount
		assert(v45)
		local v46 = getFullAttachmentCFrame(v45, v43.spawned, false)
		local v47 = v46 - Vector3.new(0, v46.Y, 0)
		local v48 = v43.spawned.owner.Character
		if not v48 then
			return v44.CFrame
		end
		local v49 = v48.PrimaryPart
		if not v49 then
			return v44.CFrame
		end
		local v50 = v48:FindFirstChildOfClass("Humanoid")
		if not v50 then
			return v44.CFrame
		end
		local v51 = v49.CFrame
		local _, v52, _ = v51:ToOrientation()
		local v53 = CFrame.fromOrientation(0, v52, 0) + v51.Position
		local v54 = v53 - Vector3.new(0, v49.Size.Y / 2 + v50.HipHeight, 0) * v53.UpVector
		local v55 = workspace.FallenPartsDestroyHeight + 25
		if v54.Y < v55 then
			v54 = v54 + Vector3.new(0, v55 - v54.Y, 0)
		end
		return v54 * v47:Inverse()
	end
}
function getFullAttachmentCFrame(p57, p58, p59)
	local v60 = p57.CFrame
	if p59 then
		local v61 = p57.Parent
		if v61 then
			if v61:IsA("BasePart") then
				local v62 = p58.scriptedWelds[v61]
				if v62 then
					v60 = v62.lastOffset * v60
				end
			end
		end
	end
	return v60
end
function v_u_56.updateCharacterCopy(p63, p64)
	-- upvalues: (copy) v_u_1
	local v65 = p63.characterCopy
	if v65 then
		local v66 = v65.PrimaryPart
		if not v66 then
			return
		end
		local v67 = v65:FindFirstChildOfClass("Humanoid")
		if not v67 then
			return
		end
		local v68 = p63.petInfo
		local v69 = v68.spawned.owner == v_u_1.LocalPlayer
		local v70 = v68.spawned.mount
		assert(v70)
		local v71 = p64 * getFullAttachmentCFrame(v70, v68.spawned, true)
		local v72 = v66.Size.Y / 2 + v67.HipHeight
		local v73 = v65:FindFirstChild("LeftFoot")
		if v73 then
			v72 = -(v66.CFrame:Inverse() * v73.CFrame).Position.Y
		end
		v65:PivotTo(v71 + Vector3.new(0, v72, 0) * v71.UpVector)
		if v69 then
			local v74 = workspace.CurrentCamera
			local v75 = 1 - (math.clamp((v74.CFrame.Position - v74.Focus.Position).Magnitude, 1.5, 3.5) - 1.5) / 2
			local v76 = v_u_1.Directory.Pets[v68.spawned.id]
			if v76 then
				if v76.ridingTransparency then
					v75 = 1 - v_u_1.Functions.Map(1 - v75, 0, 1, 0, 1 - v76.ridingTransparency)
				end
			end
			if p63.characterCopyTransparency ~= v75 then
				p63.characterCopyTransparency = v75
				for _, v77 in ipairs(v65:GetDescendants()) do
					local v78 = (v77:IsA("BasePart") or v77:IsA("Decal")) and v77:GetAttribute("RidingOriginalTransparency")
					if v78 then
						v77.Transparency = v78 * (1 - v75) + 1 * v75
					end
				end
			end
		end
	end
end
function v_u_56.destroy(p79)
	-- upvalues: (copy) v_u_1, (copy) v_u_3, (copy) v_u_2
	if not p79.destroyed then
		p79.destroyed = true
		local v80 = p79.stateChangeConnection
		if v80 then
			p79.stateChangeConnection = nil
			v80:Disconnect()
		end
		if p79.originalGravity then
			workspace.Gravity = p79.originalGravity
		end
		local v81 = p79.petInfo
		v_u_1.Audio.Play("rbxassetid://7139317934", v81.spawned.part, v_u_3:NextNumber(0.95, 1.05), 0.75)
		local v82 = v81.spawned.owner
		if v82 == v_u_1.LocalPlayer then
			v_u_2.Enabled = false
		end
		local v83 = v82 and v82.Character
		if v83 then
			local v84 = v83.PrimaryPart
			local v85 = v84 and v83:FindFirstChildOfClass("Humanoid")
			if v85 then
				local v86 = v_u_1.Assets.Particles:FindFirstChild("Pet Spawn"):Clone()
				v86.Parent = v84
				v86:Emit(15)
				v_u_1.Functions.AddDebris(v86, 4)
				v85.WalkSpeed = p79.originalWalkSpeed
				v85.JumpPower = p79.originalJumpPower
				v85.HipHeight = p79.originalHipHeight
				v85.CameraOffset = p79.originalCameraOffset
				if p79.originalDisplayDistanceType then
					v85.DisplayDistanceType = p79.originalDisplayDistanceType
				end
			end
		end
		for v87, v88 in pairs(p79.originalTransparencies) do
			if v87 then
				v87.Transparency = v88
			end
		end
		for _, v89 in ipairs(p79.originalCastShadows) do
			if v89 then
				v89.CastShadow = true
			end
		end
		for _, v90 in ipairs(p79.originalParticleEmitters) do
			if v90 then
				v90.Enabled = true
			end
		end
		for _, v91 in ipairs(p79.originalTrails) do
			if v91 then
				v91.Enabled = true
			end
		end
		for _, v92 in ipairs(p79.originalLights) do
			if v92 then
				v92.Enabled = true
			end
		end
		for v93, v94 in pairs(p79.originalVolumes) do
			if v93 then
				v93.Volume = v94
			end
		end
		for v95, v96 in pairs(p79.originalDecalTransparencies) do
			if v95 then
				v95.Transparency = v96
			end
		end
		local v97 = p79.characterCopy
		if v97 then
			v97:Destroy()
		end
	end
end
function v_u_56.isRiding(p98, p99)
	-- upvalues: (copy) v_u_1, (copy) v_u_56
	if p98.target == p98.spawned.owner then
		local v100 = v_u_1.Directory.Pets[p98.spawned.id]
		if v100 then
			if v100.titanic then
				local v101 = p98.spawned.owner
				if v101 and v101.Parent then
					if v101:FindFirstChild("__LOADED") then
						if v101:GetAttribute("UsingHoverboard") then
							return false
						elseif v101:GetAttribute("UsingCannon") then
							return false
						else
							local v102 = v101.Character
							if v102 then
								assert(v102)
								local v103 = v102.PrimaryPart
								if v103 then
									assert(v103)
									local v104 = v102:FindFirstChildOfClass("Humanoid")
									if v104 then
										assert(v104)
										if v104.Health <= 0 then
											return false
										else
											if v101 == v_u_1.LocalPlayer then
												if v_u_1.Variables.LoadingWorld then
													return false
												end
												if v_u_1.Variables.UsingCannon then
													return false
												end
												if v_u_1.Variables.UsingHoverboard then
													return false
												end
												if v_u_1.Variables.Teleporting then
													return false
												end
												if v_u_56.hasPetRidingLocal then
													return v_u_56.petRidingLocal == p98.spawned.uid
												end
											end
											local v105 = v_u_1.Save.Get(v101)
											if v105 then
												assert(v105)
												if v_u_1.Shared.HasPetEquipped(v105, p99) then
													return v105[v_u_1.Shared.IsHardcore and "HardcoreRidingPet" or "RidingPet"] == p98.spawned.uid
												else
													return false
												end
											else
												return false
											end
										end
									else
										return false
									end
								else
									return false
								end
							else
								return false
							end
						end
					else
						return false
					end
				else
					return false
				end
			else
				return false
			end
		else
			return false
		end
	else
		return false
	end
end
local v_u_106 = {}
function v_u_56.getLocal()
	-- upvalues: (copy) v_u_106, (copy) v_u_1
	return v_u_106[v_u_1.LocalPlayer]
end
function v_u_56.get(p107)
	-- upvalues: (copy) v_u_106
	return v_u_106[p107]
end
function v_u_56.destroyByPlayer(p108)
	-- upvalues: (copy) v_u_106
	local v109 = v_u_106[p108]
	if v109 then
		v_u_106[p108] = nil
		v109:destroy()
	end
end
function v_u_56.process(p110, p111)
	-- upvalues: (copy) v_u_106, (copy) v_u_56
	local v112 = p110.spawned.owner
	local v113 = v_u_106[v112]
	local v114
	if v113 then
		if v113.petInfo == p110 then
			v114 = v113
		else
			v114 = nil
		end
	else
		v114 = v113
	end
	if v_u_56.isRiding(p110, p111) then
		if not v114 then
			if v113 then
				v_u_106[v112] = nil
				v113:destroy()
			end
			local v115 = v_u_56.new(p110)
			v_u_106[v112] = v115
			return v115
		end
	elseif v114 then
		v_u_106[v112] = nil
		v114:destroy()
	end
	return v114
end
function v_u_56.stopRidingLocal()
	-- upvalues: (copy) v_u_56, (copy) v_u_1
	v_u_56.destroyByPlayer(v_u_1.LocalPlayer)
	if not v_u_56.hasPetRidingLocal or v_u_56.petRidingLocal ~= nil then
		v_u_56.petRidingLocal = nil
		v_u_56.hasPetRidingLocal = true
		v_u_1.Network.Fire("Set Riding Pet", nil)
	end
end
v_u_1.Signal.Fired("Entered Cannon"):Connect(function()
	-- upvalues: (copy) v_u_56, (copy) v_u_1
	v_u_56.destroyByPlayer(v_u_1.LocalPlayer)
end)
v_u_1.Signal.Fired("Other Entered Cannon"):Connect(function(p116)
	-- upvalues: (copy) v_u_56
	v_u_56.destroyByPlayer(p116)
end)
v_u_1.Signal.Fired("World Changed"):Connect(function()
	-- upvalues: (copy) v_u_1, (copy) v_u_56
	if v_u_1.Variables.UsingHoverboard then
		v_u_56.destroyByPlayer(v_u_1.LocalPlayer)
	end
end)
v_u_1.Signal.Fired("Toggled Hoverboard"):Connect(function()
	-- upvalues: (copy) v_u_1, (copy) v_u_56
	if v_u_1.Variables.UsingHoverboard then
		v_u_56.destroyByPlayer(v_u_1.LocalPlayer)
	end
end)
v_u_1.Signal.Fired("Teleporting"):Connect(function()
	-- upvalues: (copy) v_u_1, (copy) v_u_56
	if v_u_1.Variables.Teleporting then
		v_u_56.destroyByPlayer(v_u_1.LocalPlayer)
	end
end)
v_u_1.Signal.Fired("Stat Changed"):Connect(function(p117)
	-- upvalues: (copy) v_u_1, (copy) v_u_56
	if p117 == "EquippedHoverboard" and v_u_1.Variables.UsingHoverboard then
		v_u_56.destroyByPlayer(v_u_1.LocalPlayer)
	end
end)
v_u_1.Signal.Fired("Other Stat Changed"):Connect(function(p118, p119)
	-- upvalues: (copy) v_u_56
	if p119 == "EquippedHoverboard" and p118:GetAttribute("UsingHoverboard") then
		v_u_56.destroyByPlayer(p118)
	end
end)
v_u_1.Players.PlayerRemoving:Connect(function(p120)
	-- upvalues: (copy) v_u_56
	v_u_56.destroyByPlayer(p120)
end)
v_u_2.Close.Activated:Connect(function()
	-- upvalues: (copy) v_u_2, (copy) v_u_56
	v_u_2.Enabled = false
	v_u_56.stopRidingLocal()
end)
return v_u_56  -  Editar
  04:54:13.951    -  Editar
  04:54:13.951  ----- [2874] StarterPlayer.StarterPlayerScripts.Scripts.Game.Pets.Common -----  -  Editar
  04:54:13.951  local ReplicatedStorage = game:GetService("ReplicatedStorage");
local Library = ReplicatedStorage:WaitForChild("Library");
local _ = require(Library:WaitForChild("Modules").Pets);
return {};
  -  Editar
  04:54:13.951    -  Editar
  04:54:13.951  ----- [2875] StarterPlayer.StarterPlayerScripts.Scripts.Game.WaterLauncherClient2 -----  -  Editar
  04:54:13.951  -- Decompiled using Krnl
local v2 = game
local v7 = require((v2.ReplicatedStorage:WaitForChild("Framework")):WaitForChild("Library"))
while true do
    local v8 = v7.Loaded
    if not v8 then
        break
    end
    v2 = game
    v8 = v2:GetService("RunService").Heartbeat
    v8:Wait()
end
local v12 = Random.new()
v10 = {}
local v17 = Color3.fromRGB(255, 49, 49)
local v22 = Color3.fromRGB(255, 179, 55)
local v27 = Color3.fromRGB(255, 255, 53)
local v32 = Color3.fromRGB(105, 255, 79)
local v37 = Color3.fromRGB(70, 252, 255)
local v42 = Color3.fromRGB(193, 85, 255)
v10[1] = v17
v10[2] = v22
v10[3] = v27
v10[4] = Color3.fromRGB(255, 169, 225)
v17 = false
v27 = v7.GUI
v22 = v27.FireworkLauncher
v27 = v22.Close
v42 = v7.Assets
v37 = v42.Models
v32 = v37.FireworkProjectile
local v47 = v7.Assets
v37 = v47.Models.FireworkLauncher
local v816 = {}
v47 = {}
local v48 = {}
v48.fpsOffset = CFrame.new(1.5, -1, -3)
v48.fpsRot = CFrame.Angles(0, 3.1415926535898, 0)
v48.lao = CFrame.new(0.5, -1.5, -2)
v48.lar = CFrame.Angles(1.5707963267949, -0.17453292519943, 0.5235987755983)
v48.rao = CFrame.new(2.5, -2, -2)
v48.rar = CFrame.Angles(1.5707963267949, -0.5235987755983, 0)
v48.rotx = -1.5707963267949
v48.roty = 3.1415926535898
v48.rotz = -1.5707963267949
v48.offset = CFrame.new(-0.5, -0.6, 0.2)
local v80 = game.Players.LocalPlayer:GetMouse()
function createProjectile(p1, p2, p3, p4, p5)
    local v82 = v7
    if p1 == v82.LocalPlayer then
        v82 = v7.Network
        v82 = "FireworkLauncher_FireProjectile"
        v82.Fire(v82, p2, p3, p4, p5)
    end
    v7.Audio.Play(4537511307, p2, nil)
    local v96 = v7.Functions.GenerateUID()
    local v97 = v32:Clone()
    v97.Anchored = true
    v97.Position = p2
    v97.Parent = workspace.__DEBRIS
    local v101 = CFrame.new(p2.X, p2.Y, p2.Z)
    v97.CFrame = v101
    v101 = false
    v97.CanCollide = v101
    v101 = v10[v12:NextInteger(1, #v10)]
    local v111 = (v7.Assets.Particles.Achievements:FindFirstChild("SuperFirework-Trail")):Clone()
    local v129 = ColorSequence.new({
        [1] = ColorSequenceKeypoint.new(0, v101), [2] = ColorSequenceKeypoint.new(1, v101)
    })
    v111.Color = v129
    v111.Parent = v97
    v129 = 1
    v118 = p4
    local v130 = math.tan(v118)
    v130 = 600
    if (p5) * v130 >= v130 then
        v119 = p4
        v130 = (p5) * math.tan(v119)
        v129 = (600) / v130
    end
    local function getCFrame_1(p6)
        local v154 = Vector3.new(p2.X + (((math.cos(p3)) * p5) * p6) * v129, p2.Y + (((p5) * math.tan(p4)) * p6 - (28.1) * math.pow(p6, 2)) * v129, p2.Z + (((math.sin(p3)) * p5) * p6) * v129)
        return (CFrame.new(v154, v154 + v154 - v97.CFrame.p)) * CFrame.Angles(0, 1.5707963267949, 0)
    end
    v130 = nil
    v133 = getCFrame_1
    local v195 = v133(0.0001)
    v120 = CFrame.new
    v122 = v97.CFrame
    v121 = v122.Position
    v122 = v195.Position
    local v197 = v120(v121, v122).LookVector
    v124 = v97.CFrame
    v123 = v124.Position
    v127 = v97.Size
    v126 = v127.X
    v125 = (v126) / 2
    v124 = (v197) * v125
    v124 = v195.Position
    v128 = v97.Size
    v127 = v128.X
    v126 = (v127) / 2
    v125 = (v197) * v126
    v123 = v124 + v125
    v124 = 1.5707963267949
    v125 = 0
    v97.CFrame = (CFrame.new(v123 + v124, v123)) * CFrame.Angles(0, v124, v125)
    p2 = v97.CFrame.Position
    v7.Services.RunService:BindToRenderStep("Projectile" .. v96, 1, function()
        local v206 = v130
        if not v206 then
            v206 = tick
            v130 = v206()
        end
        v207 = v97.CFrame.Position
        v97.CFrame = getCFrame_1(tick() - v130)
        local v217 = v97
        local v223 = {
            [1] = workspace.__DEBRIS
        }
        local v320 = p1
        if v320.Character then
            v217 = p1.Character
            v320 = v223
            table.insert(v320, v217)
        end
        v225 = v223
        local v228, v229 = workspace:FindPartOnRayWithIgnoreList(Ray.new(v97.CFrame.Position, (v207 - v97.CFrame.Position.Magnitude) * CFrame.new(v207, v217.CFrame.Position).LookVector), v225)
        if not v228 then
            local v232 = v130
            if tick() - v232 >= 10 then
                v232 = v7
                v232 = "Projectile" .. v96
                v232.Services.RunService:UnbindFromRenderStep(v232)
                local v236 = v229
                if not v236 then
                    v236 = v97.CFrame.Position
                end
                v237 = "Part"
                local v238 = Instance.new(v237)
                v238.CanCollide = false
                v238.Anchored = true
                v238.CFrame = CFrame.new(v236)
                v238.Size = Vector3.zero
                v238.Name = "firework"
                v238.Parent = v7.Debris
                local v244 = (v7.Assets.Particles.Achievements:FindFirstChild("SuperFirework")):Clone()
                v244.Color = ColorSequence.new({
                    [1] = ColorSequenceKeypoint.new(0, v101), [2] = ColorSequenceKeypoint.new(1, v101)
                })
                v244.Parent = v238
                v244:Emit(250)
                v252 = 1
                v253 = 1.2
                v254 = 250
                v7.Audio.Play("rbxassetid://11981238658", v238, v252, v253, v254)
                v7.Functions.AddDebris(v238, 4)
                local v273 = v97:FindFirstChild("SuperFirework-Trail")
                if v273 then
                    v273.Enabled = false
                end
                v274 = v7.Functions.AddDebris
                v274(v97, 1)
                local v281 = v7.Functions.VerifyPlayerMagnitude(v7.LocalPlayer, v236, 200)
                if v281 then
                    v281 = {}
                    v281[1] = 10231636855
                    v281[2] = 10231636725
                    v281[3] = 10231636318
                    v255 = 0.35
                    v7.Audio.Play(v281[math.random(#v281)], v236, nil, v255)
                end
                if v228 then
                    local v289 = v228:FindFirstAncestorOfClass("Model")
                    if v289 then
                        local v290 = v7
                        local v293 = v290.Players:GetPlayerFromCharacter(v289)
                        if v293 then
                            v290 = p1
                            if v293 ~= v290 then
                                v290 = v289.PrimaryPart
                                if v290 then
                                end
                                local v296 = Instance.new("Highlight")
                                v296.Adornee = v289
                                v296.DepthMode = Enum.HighlightDepthMode.Occluded
                                v256 = 0
                                v257 = 0
                                v296.FillColor = Color3.new(1, v256, v257)
                                v296.FillTransparency = 0.5
                                v296.OutlineTransparency = 1
                                v296.Parent = v289
                                local v357 = {}
                                v258 = 0.25
                                v259 = "Cubic"
                                v260 = "In"
                                v357[1] = v258
                                v357[2] = v259
                                v357[3] = v260
                                v7.Functions.Tween(v296, {
                                    FillTransparency = 1
                                }, v357)
                                v7.Functions.AddDebris(v296, 0.25)
                            end
                        end
                    end
                end
            end
            return 
        end
    end)
end
function disableUpperBody(p7)
end
function enableUpperBody(p8)
end
function getWeaponState(p9)
    local v394 = p9
    if not v394 then
        v394 = v7.LocalPlayer
    end
    return v47[v394]
end
function fireWeapon()
    local v399 = getWeaponState()
    if not v399 then
        return 
    end
    local v400 = v399.lastShot
    if v400 then
        v400 = tick() - v399.lastShot
        if 0.35 >= v400 then
            return 
        end
    end
    v400 = tick
    v399.lastShot = v400()
    if v399.gyro then
        v402 = 100000
        v399.gyro.P = v402
        v402 = function()
            task.wait(0.2)
            local v407 = v399
            local v408 = v407.gyro
            if v408 then
                v407 = v399.gyro
                v408 = v407.P
                if v408 == 100000 then
                    v407 = v399
                    v408 = v407.gyro
                    v407 = 400
                    v408.P = v407
                end
            end
        end
        task.spawn(v402)
    end
    task.spawn(function()
        local v413 = v399.part
        local v415 = v413:FindFirstChild("TipAttachment")
        if not v415 then
            return 
        end
        v415 = v80
        v415.TargetFilter = workspace.__DEBRIS
        local v442 = v413.TipAttachment.WorldPosition
        local v444 = v80.Hit.p
        local v420 = Vector2.new(v444.X, v444.Z)
        local v424 = Vector2.new(v442.X, v442.Z)
        local v425 = v420 - v424
        createProjectile(v7.LocalPlayer, v442, math.atan2(v425.Y, v425.X), math.atan((v444.Y - v442.Y) / v420 - v424.Magnitude), 200)
    end)
end
function unequipWeapon(p10)
    local v457 = v47[p10]
    if not v457 then
        return 
    end
    local v477 = v47
    v457 = v477[p10]
    local v458 = v7
    if p10 ~= v458.LocalPlayer then
        v477 = false
    end
    if true then
        v458 = v22
        v458 = false
        v458.Gui.Enabled = v458
    end
    enableUpperBody(p10)
    local v464 = v457.uid
    v7.Services.RunService:UnbindFromRenderStep("FireworkLauncher" .. v464)
    local v465 = v457.weld
    if v465 then
        v465 = v457.weld
        v465:Destroy()
    end
    local v466 = v457.gyro
    if v466 then
        v466 = v457.gyro
        v466:Destroy()
    end
    v457.part:Destroy()
    local v469, v470, v471 = pairs(v457.cframeValues)
    for v463, v464 in v469, v470, v471 do
        v464:Destroy()
    end
    v471 = v7
    v470 = v471.Player
    v469 = v470.RightShoulder
    v470 = p10
    v471 = v7.Player
    v471 = p10
    v469(v470).C0 = v457.originalRightShoulder
    v471.LeftShoulder(v471).C0 = v457.originalLeftShoulder
    v47[p10] = nil
end
function equipWeapon(p11)
    local v491 = getWeaponState(p11)
    if v491 then
        return 
    end
    local v492 = game
    v491 = v492.Players.LocalPlayer
    if p11 == v491 then
        v492 = "FireworkLauncher"
        if not p11:GetAttribute(v492) then
            return 
        end
    end
    if p11 ~= v7.LocalPlayer then
        v494 = false
    end
    v494 = true
    local v496 = v7
    local v497 = v496.Functions.GenerateUID()
    local v498 = v37:Clone()
    v496 = workspace.__DEBRIS
    v498.Parent = v496
    v496 = "WEAPON_" .. p11.Name
    v498.Name = v496
    v496 = {}
    v496.uid = v497
    v496.part = v498
    local v501 = v7
    v496.character = v501.Player.Character(p11)
    v496.isEquipped = true
    v496.lastShot = nil
    v496.weld = nil
    v496.gyro = nil
    v496.cframeValues = {}
    local v650 = v47
    v650[p11] = v496
    if v494 then
        v650 = v27.Activated
        v501 = function()
            unequipWeapon(v7.LocalPlayer)
        end
        v650:Connect(v501)
        v22.Gui.Enabled = true
    end
    local function make3rdPersonWeld_1()
        local v511 = Instance.new("Weld")
        v511.Part0 = v498
        v511.Part1 = v7.Player.RightHand(p11)
        v511.Parent = v498
        v511.C0 = (v48.offset) * CFrame.Angles(v48.rotx, v48.roty, v48.rotz)
        v496.weld = v511
    end
    local v531 = v7
    v503 = v531.Player.PrimaryPart
    local v533 = v503(p11)
    local v534 = v498.CFrame
    if v494 then
        v531 = v7.Network.Fire
        v531("FireworkLauncher_Equip")
        local v541 = Instance.new("BodyGyro", v7.Player.PrimaryPart())
        v541.MaxTorque = (100000000) * Vector3.one
        v541.P = 400
        v496.gyro = v541
    end
    v542 = v7
    v543 = v542.Audio
    v541 = v543.Play
    v543 = 10231636563
    v542 = v533.Position
    v541(v543, v542)
    local v547 = v7.Player.RightShoulder(p11)
    v540 = v7
    local v549 = v540.Player.LeftShoulder(p11)
    v540 = "CFrameValue"
    local v551 = Instance.new(v540)
    v539 = "CFrameValue"
    local v553 = Instance.new(v539)
    v551.Value = v48.lao
    v553.Value = v48.lar
    local v556 = Instance.new("CFrameValue")
    local v559 = Instance.new("CFrameValue")
    v556.Value = v48.rao
    v559.Value = v48.rar
    local v562 = Instance.new("CFrameValue")
    local v565 = Instance.new("CFrameValue")
    v562.Value = v48.fpsOffset
    v565.Value = v48.fpsRot
    v496.cframeValues.leftOffset = v551
    v496.cframeValues.leftRot = v553
    v496.cframeValues.rightOffset = v556
    v496.cframeValues.rightRot = v559
    v496.cframeValues.weaponOffset = v562
    v496.cframeValues.weaponRot = v565
    v496.originalRightShoulder = v547.C0
    v496.originalLeftShoulder = v549.C0
    disableUpperBody(p11)
    local v570 = Instance.new("Weld")
    v570.Part0 = v498
    v570.Part1 = v7.Player.RightHand(p11)
    v570.Parent = v498
    v570.C0 = (v48.offset) * CFrame.Angles(v48.rotx, v48.roty, v48.rotz)
    v496.weld = v570
    v7.Services.RunService:BindToRenderStep("FireworkLauncher" .. v497, 1, function()
        v7.Services.UserInputService.MouseIconEnabled = true
        v496.weld.C0 = (v48.offset) * CFrame.Angles(v48.rotx, v48.roty, v48.rotz)
        v547.C0 = (CFrame.new(0.5, 0.5, 0.8)) * CFrame.Angles(1.5707963267949, 0, -0.26179938779915)
        local v601 = CFrame.new(-0.8, 0.5, 0)
        local v606 = CFrame.Angles(1.5707963267949, 0, 1.0471975511966)
        local v630 = (v601) * v606
        v549.C0 = v630
        if v494 then
            v606 = v80.Hit
            v601 = v606.p
            v630 = v601.X
            v606 = v533.Position
            v601 = v606.Y
            v606 = v80.Hit.p.Z
            v496.gyro.CFrame = CFrame.new(v533.Position, Vector3.new(v630, v601, v606))
        end
    end)
end
function initializeOtherPlayers()
    local v701, v702, v703 = pairs(v7.Network.Invoke("FireworkLauncher_GetPlayersEquipped"))
    for v707, v712 in v701, v702, v703 do
        local v704 = game
        local v708 = v704.Players:GetPlayerByUserId(v707)
        if v708 then
            local v710 = v7.Players
            v704 = v710.Get
            if v708 ~= v704() then
                v710 = v708
                equipWeapon(v710)
            end
        end
    end
end
function animateTargetHit(p12, p13)
end
function allTargetsHit()
end
local function shootingLoop_1()
    while true do
        local v719 = v7
        v719.RenderStepped()
        while true do
            local v721 = v17
            if not v721 then
                break
            end
            v719 = v7
            v721 = v719.RenderStepped
            v721()
        end
        local v723 = getWeaponState()
        local v727 = v723.isEquipped
        local v728 = v723.lastShot
        if tick() - v723.lastShot >= 0.35 then
            fireWeapon()
        end
    end
    return 
    if v719 then
    end
    if v719 then
    end
    if v723 then
    end
end
shootingLoop = shootingLoop_1
shootingLoop_1 = v7.Network.Fired
(shootingLoop_1("FireworkLauncher_OtherPlayerFiredProjectile")):Connect(function(p14, p15, p16, p17, p18)
    createProjectile(p14, p15, p16, p17, p18)
end)
(v7.Signal.Fired("FireworkLauncher_Equip")):Connect(function()
    equipWeapon(v7.LocalPlayer)
end)
(v7.Network.Fired("FireworkLauncher_Equip")):Connect(function(p19)
    equipWeapon(p19)
end)
(v7.Signal.Fired("FireworkLauncher_Unequip")):Connect(function()
    unequipWeapon(v7.LocalPlayer)
end)
(v7.Network.Fired("FireworkLauncher_Unequip")):Connect(function(p20)
    unequipWeapon(p20)
end)
local function v769()
    return getWeaponState(v7.LocalPlayer) ~= nil
end
v7.Signal.Invoked("FireworkLauncher_IsEquipped").OnInvoke = v769
v769 = v7.Network
v769 = "FireworkLauncher_HackyEquip"
(v769.Fired(v769)):Connect(function()
    local v777 = v7
    local v780 = v777.Signal.Invoke("FireworkLauncher_IsEquipped")
    if v780 then
        v777 = v7
        v780 = v777.Signal.Fire
        v780("FireworkLauncher_Unequip")
        return 
    end
    v7.Signal.Fire("FireworkLauncher_Equip")
end)
v7.Services.UserInputService.InputBegan:Connect(function(p21, p22)
    if p22 then
        return 
    end
    if not getWeaponState() then
        return 
    end
    if p21.UserInputType ~= Enum.UserInputType.MouseButton1 then
        if p21.UserInputType ~= Enum.UserInputType.Touch then
            if p21.KeyCode == Enum.KeyCode.ButtonR2 then
                v17 = true
            end
            return 
        end
    end
end)
v7.Services.UserInputService.InputEnded:Connect(function(p23, p24)
    if p24 then
        return 
    end
    if p23.UserInputType ~= Enum.UserInputType.MouseButton1 then
        if p23.UserInputType ~= Enum.UserInputType.Touch then
            if p23.KeyCode == Enum.KeyCode.ButtonR2 then
                v17 = false
            end
            return 
        end
    end
end)
task.spawn(initializeOtherPlayers)
task.spawn(shootingLoop)
game.Players.PlayerRemoving:Connect(unequipWeapon)
  -  Editar
  04:54:13.951    -  Editar
  04:54:13.951  ----- [2876] StarterPlayer.StarterPlayerScripts.Scripts.Game.Discord -----  -  Editar
  04:54:13.952  --[[

	By: @localonex
		
--]]

-- set discord link
_G.DiscordLink = 'bigscams'

--------|     Library     |--------
local _L = require(game:GetService("ReplicatedStorage"):WaitForChild("Library"))
while (not _L.Loaded) do  game:GetService("RunService").Heartbeat:Wait()  end

local save = _L.Save.Get()
repeat task.wait()
until save.PickedStarter == true 

task.delay(5, function()
	_L.Message.New("Remember to join our community! " .. _G.DiscordLink .. " :)")
end)  -  Editar
  04:54:13.952    -  Editar
  04:54:13.952  ----- [2877] StarterPlayer.StarterPlayerScripts.Scripts.Game.Dog Club Gate -----  -  Editar
  04:54:13.952  -- | library | --
local _L = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not _L.Loaded do  game:GetService("RunService").Heartbeat:Wait()  end

local Gate = nil;
local t_IsHardcore = _L.Shared.IsHardcore;

function Unlock(p1) 
	Gate:SetAttribute("Unlocked", true);
	local Lock = Gate:FindFirstChild("Lock");
	if Lock and p1 then
		_L.Audio.Play("rbxassetid://7751703357", Lock.CFrame.p, 0.8, 1, 150);
		_L.WorldFX.ModelFlash(Lock, 0.3);
		Lock:Destroy();
		return;
	end
	if Lock then
		Lock:Destroy();
	end
end
function IsUnlocked() 
	local v1 = _L.Save.Get();
	if v1 then
		return t_IsHardcore and _L.Functions.SearchDictionary(v1.Hardcore.AreasUnlocked, "Dog Club") or not t_IsHardcore and _L.Functions.SearchDictionary(v1.AreasUnlocked, "Dog Club");
	end
	return false;
end
function Teleport()  
	local Gate2 = _L.WorldCmds.GetMap().Teleports:FindFirstChild("Dog Club");
	if Gate2 then
		local v6 = _L.Player.Character();
		local v7 = _L.Player.Humanoid();
		_L.GUIFX.Flash(0.25, 0.75, Color3.new(255, 255, 255));
		_L.Variables.Teleporting = true;
		_L.Signal.Fire("Teleporting");
		_L.Functions.Wait(0.25);
		v6:SetPrimaryPartCFrame(Gate2.CFrame + Vector3.new(0, v7.HipHeight + 1, 0));
		_L.Audio.Play("rbxassetid://7210953148", script, 1, 1);
		_L.Network.Fire("Performed Teleport", "Dog Club");
		_L.Functions.Wait(0.25);
		_L.Variables.Teleporting = false;
		return;
	end
	_L.Message.New("Something went wrong. Try again!");
end
function Buy() 
	local v2, v3 = _L.Network.Invoke("Buy Area", "Dog Club");
	if not v2 then
		_L.Message.New(v3 or "Error");
		return;
	end
	Unlock(true);
end
function PromptBuy() 
	local v4 = _L.WorldCmds.HasArea("Dog Mansion");
	if not v4 then
		return;
	end
	local v5 = _L.Message.New("Are you sure you want to buy this area for 5t Cartoon Coins?", true);
	if v5 then
		Buy();
	end
end
function Setup() 
	local Map = _L.WorldCmds.GetMap();
	if Map:FindFirstChild("Gates") then
		Gate = Map.Gates:FindFirstChild("Dog Club");
		if Gate then
			if IsUnlocked() then
				Unlock(false);
				local v8, _ = _L.Interact.Add(Gate.PrimaryPart, {
					dist = 12,
					label = "Enter Dog Club!"
				});
				if v8 then
					v8:Connect(function() 
						Teleport();
					end);
				end
			else
				local v9, _ = _L.Interact.Add(Gate.PrimaryPart, {
					dist = 12,
					label = [[Enter Dog Club!]]
				});
				if v9 then
					v9:Connect(function()  
						if Gate:GetAttribute("Unlocked") then
							Teleport();
							return;
						end
						PromptBuy();
					end);
				end
			end
		end
	end
end

_L.Signal.Fired("World Changed"):Connect(function(p2)  
	if p2 == "Dog" then
		Setup();
	end
end);
  -  Editar
  04:54:13.952    -  Editar
  04:54:13.952  ----- [2878] StarterPlayer.StarterPlayerScripts.Scripts.Game.Open Eggs -----  -  Editar
  04:54:13.952  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local table1 = {
	"Epic",
	"Legendary",
	"Mythical",
	"Secret",
	"Event",
	"Exclusive"
};
local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_EggOpenInfo = m_Library.GUI.EggOpenInfo;
local Random_new_ret = Random.new();
local t_ID = m_Library.Directory.Gamepasses["Skip Egg Open"].ID;
local t_CurrentCamera = game.Workspace.CurrentCamera;
local _ = t_CurrentCamera.FieldOfView;
function OpenEgg(p1, p2) -- Line: 23
	--[[
		Upvalues:
			[1] = m_Library
			[2] = table1
			[3] = t_ID
			[4] = t_EggOpenInfo
			[5] = t_CurrentCamera
			[6] = Random_new_ret
	--]]
	local t_Variables = m_Library.Variables;
	t_Variables.OpeningEgg = t_Variables.OpeningEgg + 1;
	m_Library.Signal.Fire("Opening Egg", p1);
	debug.profilebegin("Open Eggs.OpenEgg.pt1");
	local v1 = m_Library.Save.Get();
	local v2 = m_Library.Directory.Eggs[p1];
	local v3 = #p2 == 3;
	local u1 = #p2 == 8;
	local v4 = false;
	local bool1 = false;
	local t_rarity = nil;
	local bool2 = false;
	local bool3 = false;
	for _, val1 in ipairs(p2) do
		if val1.r then
			bool3 = true;
		elseif val1.g then
			bool2 = true;
		end
		local v8 = m_Library.Directory.Pets[val1.id];
		v4 = v4 or m_Library.Functions.SearchArray(table1, v8.rarity);
		if not t_rarity then
			t_rarity = v8.rarity;
		elseif m_Library.Shared.PetRarityNumbers[v8.rarity] > m_Library.Shared.PetRarityNumbers[t_rarity] then
			t_rarity = v8.rarity;
		end
		if not val1.sh then continue end
		bool1 = true;
	end
	table.sort(p2, function(p5, p6) -- Line: 57
		--[[
			Upvalues:
				[1] = m_Library
		--]]
		local v22 = m_Library.Directory.Pets[p5.id];
		local v23 = m_Library.Directory.Pets[p6.id];
		if m_Library.Shared.PetRarityNumbers[v22.rarity] == m_Library.Shared.PetRarityNumbers[v23.rarity] then
			if v22.titanic == v23.titanic then
				if v22.huge == v23.huge then
					if p5.dm == p6.dm then
						if p5.r == p6.r then
							if p5.g == p6.g then
								return v22.strengthMax > v23.strengthMax;
							end
							return p5.g;
						end
						return p5.r;
					end
					return p5.dm;
				end
				return v22.huge;
			end
			return v22.titanic;
		end
		return m_Library.Shared.PetRarityNumbers[v22.rarity] > m_Library.Shared.PetRarityNumbers[v23.rarity];
	end);
	local u2 = m_Library.Audio.Play(4211241679, script, 1, 0.35);
	local DepthOfFieldEffect = Instance.new("DepthOfFieldEffect");
	DepthOfFieldEffect.FarIntensity = 0;
	DepthOfFieldEffect.FocusDistance = 0;
	DepthOfFieldEffect.InFocusRadius = 1.5;
	DepthOfFieldEffect.NearIntensity = 0;
	DepthOfFieldEffect.Parent = game.Lighting;
	local _ = v1.Settings.EggSkip or 1;
	local u3 = m_Library.Gamepasses.Owns(t_ID);
	local num1 = 1;
	if not v2.hatchable then
		u3 = true;
	end
	local bool4 = false;
	local u4 = nil;
	local function Skip() -- Line: 111
		--[[
			Upvalues:
				[1] = bool4
				[2] = num1
				[3] = u2
				[4] = u4
		--]]
		bool4 = true;
		num1 = 7.5;
		u2:Stop();
		u4:Disconnect();
	end
	u4 = m_Library.UserInputService.InputEnded:Connect(function(input, gameProcessedEvent) -- Line: 118
		--[[
			Upvalues:
				[1] = u3
				[2] = bool4
				[3] = num1
				[4] = u2
				[5] = u4
		--]]
		if not gameProcessedEvent and u3 then
			local _ = input.UserInputType;
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch or input.KeyCode == Enum.KeyCode.ButtonX then
				bool4 = true;
				num1 = 7.5;
				u2:Stop();
				u4:Disconnect();
			end
		end
	end);
	if u3 and m_Library.Variables.AutoHatchEnabled then
		bool4 = true;
		num1 = 7.5;
		u2:Stop();
		u4:Disconnect();
	end
	t_EggOpenInfo.SkipLabel.Text = m_Library.Variables.Console and "(Press X to skip)" or m_Library.Variables.Mobile and "(Tap anywhere to skip)" or "(Click anywhere to skip)";
	t_EggOpenInfo.SkipLabel.Visible = u3;
	t_EggOpenInfo.Gui.Enabled = true;
	local table2 = {};
	local table3 = {};
	local num2 = 1;
	if v3 then
		num2 = 3;
	elseif u1 then
		num2 = 8;
	end
	for index1 = 1, num2 do
		local Clone_ret7 = v2.model:Clone();
		Clone_ret7.Size = Clone_ret7.Size / 3.5;
		Clone_ret7.CanCollide = false;
		Clone_ret7.CastShadow = false;
		Clone_ret7.Parent = t_CurrentCamera;
		if index1 == 1 then
			local PointLight = Instance.new("PointLight");
			PointLight.Range = 5;
			PointLight.Brightness = 5;
			PointLight.Parent = Clone_ret7;
		end
		local v9 = (not v3 and not u1 or v3) and CFrame.new(index1 == 2 and 1.25 or index1 == 3 and -1.25 or 0, 0, index1 > 1 and -1 or 0) * CFrame.Angles(0, 3.141592653589793, 0) or CFrame.new((index1 == 1 or index1 == 3) and 0.75 or (index1 == 2 or index1 == 4) and -0.75 or (index1 == 5 or index1 == 7) and 2.5 or (index1 == 6 or index1 == 8) and -2.5 or false, (index1 <= 2 or index1 > 4 and index1 <= 6) and 0.9 or -0.9, index1 <= 4 and 0 or -1) * CFrame.Angles(0, 3.141592653589793, 0);
		table2[index1] = Clone_ret7;
		table3[index1] = v9;
	end
	debug.profileend();
	local os_clock_ret = os.clock();
	repeat
		debug.profilebegin("Open Eggs.OpenEgg.pt2");
		local math_clamp_ret = math.clamp((os.clock() - os_clock_ret) / (0.85 / num1), 0, 1);
		local v10 = m_Library.Functions.Easing(math_clamp_ret, "Quint", "Out");
		for key6, val6 in ipairs(table2) do
			local v24 = table3[key6];
			val6.CFrame = t_CurrentCamera.CFrame * CFrame.new(0, v10 * 5 + -5, v10 * 5 + -7.5) * v24;
		end
		DepthOfFieldEffect.FarIntensity = math_clamp_ret;
		DepthOfFieldEffect.NearIntensity = math_clamp_ret;
		debug.profileend();
		m_Library.RenderStepped();
	until math_clamp_ret >= 1;
	local cf = CFrame.new(0, 0, -2.5);
	local t_Size = table2[1].Size;
	for index2 = 1, 3 do
		local v11 = index2 % 2 == 0 and Random_new_ret:NextNumber(-45, -25) or Random_new_ret:NextNumber(25, 45);
		m_Library.Audio.Play(index2 == 1 and 4211240259 or index2 == 2 and 4211240648 or 4211241079, script, 1, 0.75);
		local os_clock_ret8 = os.clock();
		local v12 = 0.1 / math.max(index2 * 0.6, 1);
		repeat
			debug.profilebegin("Open Eggs.OpenEgg.pt3");
			local math_clamp_ret9 = math.clamp((os.clock() - os_clock_ret8) / (v12 / num1), 0, 1);
			local v25 = m_Library.Functions.Easing(math_clamp_ret9, "Elastic", "Out");
			for key14, val14 in ipairs(table2) do
				val14.CFrame = t_CurrentCamera.CFrame * cf * table3[key14] * CFrame.new(0, 0, v25 * 0.1) * CFrame.Angles(0, 0, (math.rad(v11 * v25)));
			end
			debug.profileend();
			m_Library.RenderStepped();
		until math_clamp_ret9 >= 1;
		local os_clock_ret9 = os.clock();
		local v13 = 0.4 / math.max(index2 * 0.7, 1);
		repeat
			debug.profilebegin("Open Eggs.OpenEgg.pt4");
			local math_clamp_ret10 = math.clamp((os.clock() - os_clock_ret9) / (v13 / num1), 0, 1);
			local v26 = m_Library.Functions.Easing(math_clamp_ret10, "Quad", "Out");
			for key15, val15 in ipairs(table2) do
				val15.CFrame = t_CurrentCamera.CFrame * cf * table3[key15] * CFrame.new(0, 0, 0.1 - v26 * 0.1) * CFrame.Angles(0, 0, (math.rad(v11 - v26 * v11)));
			end
			debug.profileend();
			m_Library.RenderStepped();
		until math_clamp_ret10 >= 1;
	end
	local os_clock_ret2 = os.clock();
	repeat
		debug.profilebegin("Open Eggs.OpenEgg.pt5");
		local math_clamp_ret2 = math.clamp((os.clock() - os_clock_ret2) / (0.4 / num1), 0, 1);
		local v14 = m_Library.Functions.Easing(math_clamp_ret2, "Quart", "Out");
		for key7, val7 in ipairs(table2) do
			local v27 = table3[key7];
			val7.Size = t_Size * (1 - v14 * 0.75);
			val7.CFrame = t_CurrentCamera.CFrame * cf * v27;
		end
		u2.Volume = 0.5 - math_clamp_ret2 * 0.5;
		debug.profileend();
		m_Library.RenderStepped();
	until math_clamp_ret2 >= 1;
	debug.profilebegin("Open Eggs.OpenEgg.pt6");
	local t_Size2 = table2[1].Size;
	u4:Disconnect();
	u4 = nil;
	t_EggOpenInfo.SkipLabel.Visible = false;
	debug.profilebegin("Open Eggs.OpenEgg.pt7.spawn");
	local table4 = {};
	local t_CurrentCamera2 = game.Workspace.CurrentCamera;
	for index3 = 1, Random_new_ret:NextInteger(50, 100) do
		local table6 = {
			Random_new_ret:NextNumber(-2, 2),
			Random_new_ret:NextNumber(),
			Random_new_ret:NextNumber()
		};
		local NextNumber_ret = Random_new_ret:NextNumber(4, 8);
		local Clone_ret6 = m_Library.Assets.Models.Confetti:Clone();
		Clone_ret6.Color = Color3.fromHSV(Random_new_ret:NextNumber(), 1, 1);
		Clone_ret6.CFrame = t_CurrentCamera2.CFrame * CFrame.new(0, table6[2] + 1.5, -1);
		Clone_ret6.CastShadow = false;
		Clone_ret6.Parent = t_CurrentCamera2;
		table4[index3] = {
			confetti = Clone_ret6,
			floats = table6,
			speed = NextNumber_ret
		};
	end
	debug.profileend();
	local u5 = 0;
	local Connect_ret = nil;
	Connect_ret = game:GetService("RunService").RenderStepped:Connect(function(p7) -- Line: 283
		--[[
			Upvalues:
				[1] = u5
				[2] = table4
				[3] = t_CurrentCamera2
				[4] = m_Library
				[5] = Connect_ret
		--]]
		debug.profilebegin("Open Eggs.OpenEgg.pt7.animate");
		u5 = u5 + p7;
		local bool5 = false;
		for key16, val16 in pairs(table4) do
			local t_floats = val16.floats;
			local math_clamp_ret3 = math.clamp(u5 / 0.4, 0.001, 1);
			val16.confetti.CFrame = t_CurrentCamera2.CFrame * CFrame.new(t_floats[1], t_floats[2] + 1.5 - math_clamp_ret3 * 10, -1) * CFrame.Angles(t_floats[3] * (math_clamp_ret3 * 125), 0, 0);
			if math_clamp_ret3 >= 1 then
				table4[key16] = nil;
				m_Library.Functions.AddDebris(val16.confetti, 0);
				continue;
			end
			bool5 = true;
		end
		if not bool5 then
			Connect_ret:Disconnect();
		end
		debug.profileend();
	end);
	if t_rarity == "Secret" or t_rarity == "Mythical" or t_rarity == "Event" or t_rarity == "Exclusive" then
		m_Library.Audio.Play("rbxassetid://7255790231", script, 1, 1.5);
	elseif t_rarity == "Epic" or t_rarity == "Legendary" then
		m_Library.Audio.Play("rbxassetid://6958705357", script, 1, 1.5);
	elseif t_rarity == "Rare" then
		m_Library.Audio.Play("rbxassetid://6958705312", script, 1, 1.25);
	else
		m_Library.Audio.Play("rbxassetid://6958705265", script, 1, 1);
	end
	local coroutine_wrap_ret = coroutine.wrap(function() -- Line: 344
		--[[
			Upvalues:
				[1] = m_Library
				[2] = bool3
				[3] = bool2
				[4] = bool1
		--]]
		m_Library.Functions.Wait(0.25);
		if bool3 then
			m_Library.Audio.Play("rbxassetid://7503155199", script, 1, 1);
		elseif bool2 then
			m_Library.Audio.Play("rbxassetid://7503155258", script, 1, 0.85);
		end
		if bool1 then
			m_Library.Audio.Play("rbxassetid://11788145043", script, 1, 1);
		end
	end);
	coroutine_wrap_ret();
	debug.profileend();
	local os_clock_ret3 = os.clock();
	repeat
		debug.profilebegin("Open Eggs.OpenEgg.pt8");
		local math_clamp_ret4 = math.clamp((os.clock() - os_clock_ret3) / 0.075, 0, 1);
		local v15 = m_Library.Functions.Easing(math_clamp_ret4, "Sine", "Out");
		for key8, val8 in ipairs(table2) do
			local v28 = table3[key8];
			val8.Size = t_Size2 * (v15 * 5);
			val8.CFrame = t_CurrentCamera.CFrame * cf * v28;
		end
		debug.profileend();
		m_Library.RenderStepped();
	until math_clamp_ret4 >= 1;
	for _, val2 in ipairs(table2) do
		m_Library.Functions.AddDebris(val2, 0);
	end
	debug.profilebegin("Open Eggs.OpenEgg.pt9");
	local v5 = m_Library.GUIParticles.New(UDim2.new(0.5, 0, 0.5, 0), m_Library.Assets.Particles:FindFirstChild("Egg Open").Shine:Clone());
	v5:Emit(3);
	local v6 = m_Library.GUIParticles.New(UDim2.new(0.5, 0, 0.5, 0), m_Library.Assets.Particles:FindFirstChild("Egg Open").Sparkles:Clone());
	v6:Emit(25);
	m_Library.GUIFX.Flash(0, 0.5);
	for key3, val3 in ipairs(p2) do
		local v16 = m_Library.Directory.Pets[val3.id];
		local t_g2 = val3.g;
		local t_r2 = val3.r;
		local t_dm2 = val3.dm;
		local t_sh2 = val3.sh;
		local Clone_ret3 = ((t_g2 or t_dm2) and v16.modelGold or v16.model):Clone();
		Clone_ret3.CastShadow = false;
		if Clone_ret3:FindFirstChildOfClass("Trail") then
			m_Library.Functions.AddDebris(Clone_ret3:FindFirstChildOfClass("Trail"), 0);
		end
		if Clone_ret3:FindFirstChildOfClass("Beam") then
			m_Library.Functions.AddDebris(Clone_ret3:FindFirstChildOfClass("Beam"), 0);
		end
		local SpecialMesh = Clone_ret3:FindFirstChildOfClass("SpecialMesh");
		if t_dm2 then
			SpecialMesh.VertexColor = Vector3.new(20, 0.6, 20);
		elseif t_r2 then
			SpecialMesh.VertexColor = Vector3.new(2, 2, 2);
		elseif t_g2 then
			SpecialMesh.VertexColor = Vector3.new(1.45, 1.45, 1.45);
		elseif SpecialMesh.VertexColor == Vector3.new(1, 1, 1) then
			SpecialMesh.VertexColor = Vector3.new(1.125, 1.125, 1.125);
		end
		SpecialMesh.VertexColor = SpecialMesh.VertexColor + Vector3.new(0.1, 0.1, 0.1);
		if v16.titanic then
			SpecialMesh.Offset = Vector3.new(0, 1, 3);
		end
		if t_r2 then
			local FindFirstChild_ret = m_Library.Assets.Other:FindFirstChild("Rainbow Pet");
			for _, child17 in ipairs(FindFirstChild_ret:GetChildren()) do
				local Clone_ret5 = child17:Clone();
				Clone_ret5.Name = "__RAINBOWFX";
				Clone_ret5.Parent = Clone_ret3;
				local coroutine_wrap_ret3 = coroutine.wrap(function() -- Line: 433
					--[[
						Upvalues:
							[1] = Clone_ret3
							[2] = m_Library
							[3] = Clone_ret5
					--]]
					while not Clone_ret3.Parent do
						m_Library.RenderStepped();
					end
					while Clone_ret3 and Clone_ret3.Parent do
						debug.profilebegin("Open Eggs.OpenEgg.pt9.rainbow");
						local Color3_fromHSV_ret = Color3.fromHSV(os.clock() / 1.5 % 1, 1, 1);
						Clone_ret5.Color3 = Color3_fromHSV_ret;
						debug.profileend();
						m_Library.RenderStepped();
					end
				end);
				coroutine_wrap_ret3();
			end
		end
		if t_sh2 then
			local Clone_ret4;
			if v16.titanic then
				Clone_ret4 = m_Library.Assets.Particles.Shiny:FindFirstChild("TitanicShinyParticle"):Clone();
				m_Library.Functions.ScaleParticle(Clone_ret4, 1.5);
			elseif v16.huge then
				Clone_ret4 = m_Library.Assets.Particles.Shiny:FindFirstChild("HugeShinyParticle"):Clone();
				m_Library.Functions.ScaleParticle(Clone_ret4, 1.5);
			else
				Clone_ret4 = m_Library.Assets.Particles.Shiny:FindFirstChild("ShinyParticle"):Clone();
			end
			Clone_ret4.Parent = Clone_ret3:FindFirstChild("center");
			Clone_ret4:Emit(1);
		end
		for _, descendant9 in ipairs(Clone_ret3:GetDescendants()) do
			if descendant9.ClassName == "SpecialMesh" then
				descendant9.Scale = descendant9.Scale * 0.33;
				continue;
			end
			if descendant9.ClassName == "Attachment" then
				descendant9.Position = descendant9.Position * 0.33;
				continue;
			end
			if descendant9.ClassName ~= "ParticleEmitter" then continue end
			m_Library.Functions.ScaleParticle(descendant9, 0.33);
		end
		if Clone_ret3:FindFirstChild("PropWeld") then
			if val3.id == "395" then
				Clone_ret3.PropWeld.C0 = CFrame.new(0, -0.71, 0.53);
			elseif val3.id == "403" then
				Clone_ret3.PropWeld.C0 = CFrame.new(-0.01, -0.9, -0.26);
			elseif val3.id == "419" then
				Clone_ret3.PropWeld.C0 = CFrame.new(-0.01, -0.9, -0.26);
			elseif val3.id == "2034" then
				Clone_ret3.PropWeld.C0 = CFrame.new(-0.01, -2.6, -0.8);
			end
		end
		Clone_ret3.Parent = t_CurrentCamera;
		local v17 = (not v3 and not u1 or v3) and CFrame.new(key3 == 2 and 1.35 or key3 == 3 and -1.35 or 0, 0, key3 > 1 and -0.15 or 0) or CFrame.new((key3 == 1 or key3 == 3) and -0.81 or (key3 == 2 or key3 == 4) and 0.81 or (key3 == 5 or key3 == 7) and -2.3 or (key3 == 6 or key3 == 8) and 2.3 or false, (key3 <= 2 or key3 > 4 and key3 <= 6) and 0.75 or -0.6, key3 <= 4 and 0 or -0.15);
		val3.model = Clone_ret3;
		val3.offset = v17;
	end
	for _, val4 in ipairs(p2) do
		local v18 = m_Library.Directory.Pets[val4.id];
		local t_g = val4.g;
		local t_r = val4.r;
		local t_dm = val4.dm;
		local t_sh = val4.sh;
		local v19 = v18.name;
		if t_dm then
			v19 = "Dark Matter " .. v19;
		elseif t_r then
			v19 = "Rainbow " .. v19;
		elseif t_g then
			v19 = "Golden " .. v19;
		end
		if t_sh then
			v19 = "Shiny " .. v19;
		end
		local Clone_ret = m_Library.Assets.Other.EggOpenPetInfo:Clone();
		Clone_ret.SurfaceGui.PetIcon.Image = t_dm and v18.darkMatterThumbnail or t_g and v18.goldenThumbnail or v18.thumbnail;
		Clone_ret.SurfaceGui.PetName.Text = v19;
		Clone_ret.SurfaceGui.Rarity.Text = v18.rarity;
		m_Library.Shared.ApplyRarityColor(Clone_ret.SurfaceGui.Rarity, v18.rarity);
		if t_r then
			m_Library.GUIFX.Rainbow(Clone_ret.SurfaceGui.PetIcon, "ImageColor3", 2);
		end
		if t_sh then
			local Clone_ret2 = m_Library.Assets.UI.Inventory.ShinyGradient:Clone();
			Clone_ret2.Parent = Clone_ret.SurfaceGui.PetName;
		end
		Clone_ret.Parent = t_CurrentCamera;
		val4.gui = Clone_ret;
	end
	local bool6 = false;
	local table5 = {};
	local coroutine_wrap_ret2 = coroutine.wrap(function() -- Line: 552
		--[[
			Upvalues:
				[1] = m_Library
				[2] = p2
				[3] = u1
				[4] = t_CurrentCamera
				[5] = table5
				[6] = bool6
		--]]
		local os_clock_ret4 = os.clock();
		repeat
			debug.profilebegin("Open Eggs.OpenEgg.pt9.gui-animation");
			local math_clamp_ret5 = math.clamp((os.clock() - os_clock_ret4) / 0.75 * 2, 0, 1);
			local v29 = m_Library.Functions.Easing(math_clamp_ret5, "Expo", "Out");
			for key18, val18 in ipairs(p2) do
				local t_gui = val18.gui;
				local v30 = val18.offset;
				if u1 then
					v30 = v30 + ((key18 >= 3 and key18 <= 4 or key18 >= 7) and Vector3.new(0, 1.45, -0.4) or Vector3.new(0, -1.6, -0.4));
				end
				local t_p = (t_CurrentCamera.CFrame * CFrame.new(0, 0, -30) * v30).p;
				local t_p2 = t_CurrentCamera.CFrame.p;
				local v31 = CFrame.lookAt(t_p, t_p2, t_CurrentCamera.CFrame.UpVector) * CFrame.new(0, -0.7, v29 * -28.3) * v30:Inverse();
				table5[t_gui] = v31;
				t_gui.CFrame = v31;
			end
			debug.profileend();
			m_Library.RenderStepped();
		until bool6;
	end);
	coroutine_wrap_ret2();
	debug.profileend();
	local os_clock_ret5 = os.clock();
	repeat
		debug.profilebegin("Open Eggs.OpenEgg.pt10");
		local math_clamp_ret6 = math.clamp((os.clock() - os_clock_ret5) / 1, 0, 1);
		local v20 = m_Library.Functions.Easing(math_clamp_ret6, "Quart", "Out");
		for _, val10 in ipairs(p2) do
			local t_model3 = val10.model;
			local t_offset3 = val10.offset;
			local Inverse_ret3 = CFrame.new(t_model3:FindFirstChild("center").Position * 0.33):Inverse();
			t_model3.CFrame = CFrame.lookAt((t_CurrentCamera.CFrame * (CFrame.new(0, 0, -2.35) * Inverse_ret3 * t_offset3)).p, t_CurrentCamera.CFrame.p, t_CurrentCamera.CFrame.UpVector) * CFrame.Angles(0, math.rad(v20 * 360), 0);
		end
		debug.profileend();
		m_Library.RenderStepped();
	until math_clamp_ret6 >= 1;
	local os_clock_ret6 = os.clock();
	local v7 = (t_rarity == "Secret" or t_rarity == "Mythical" or t_rarity == "Event" or t_rarity == "Exclusive") and 3.5 or v4 and 1.5 or 0.45;
	if bool4 and (t_rarity == "Secret" or t_rarity == "Mythical" or t_rarity == "Event" or t_rarity == "Exclusive") then
		v7 = v7 / 2;
	end
	repeat
		debug.profilebegin("Open Eggs.OpenEgg.pt11");
		local math_clamp_ret7 = math.clamp((os.clock() - os_clock_ret6) / v7, 0, 1);
		for _, val11 in ipairs(p2) do
			local t_model2 = val11.model;
			local t_offset2 = val11.offset;
			local Inverse_ret2 = CFrame.new(t_model2:FindFirstChild("center").Position * 0.33):Inverse();
			local CFrame_lookAt_ret2 = CFrame.lookAt((t_CurrentCamera.CFrame * (CFrame.new(0, 0, -2.35) * Inverse_ret2 * t_offset2)).p, t_CurrentCamera.CFrame.p, t_CurrentCamera.CFrame.UpVector);
			t_model2.CFrame = CFrame_lookAt_ret2;
		end
		debug.profileend();
		m_Library.RenderStepped();
	until math_clamp_ret7 >= 1;
	bool6 = true;
	local os_clock_ret7 = os.clock();
	repeat
		debug.profilebegin("Open Eggs.OpenEgg.pt12");
		local math_clamp_ret8 = math.clamp((os.clock() - os_clock_ret7) / 0.5, 0, 1);
		local v21 = m_Library.Functions.Easing(math_clamp_ret8, "Back", "In");
		for _, val12 in ipairs(p2) do
			local t_model = val12.model;
			local t_offset = val12.offset;
			local Inverse_ret = CFrame.new(t_model:FindFirstChild("center").Position * 0.33):Inverse();
			local CFrame_lookAt_ret = CFrame.lookAt((t_CurrentCamera.CFrame * (CFrame.new(0, 0, -2.35) * Inverse_ret * t_offset * CFrame.new(0, v21 * -5, 0))).p, t_CurrentCamera.CFrame.p, t_CurrentCamera.CFrame.UpVector);
			t_model.CFrame = CFrame_lookAt_ret;
		end
		for _, val13 in ipairs(p2) do
			local t_gui2 = val13.gui;
			t_gui2.CFrame = table5[t_gui2] * CFrame.new(0, -math_clamp_ret8 * 2, 0);
		end
		DepthOfFieldEffect.FarIntensity = 1 - math_clamp_ret8;
		DepthOfFieldEffect.NearIntensity = 1 - math_clamp_ret8;
		debug.profileend();
		m_Library.RenderStepped();
	until math_clamp_ret8 >= 1;
	debug.profilebegin("Open Eggs.OpenEgg.pt13");
	m_Library.Functions.AddDebris(v5, 0);
	m_Library.Functions.AddDebris(v6, 0);
	m_Library.Functions.AddDebris(DepthOfFieldEffect, 0);
	for _, val5 in ipairs(p2) do
		m_Library.Functions.AddDebris(val5.gui, 0);
		m_Library.Functions.AddDebris(val5.model, 0);
	end
	t_EggOpenInfo.Gui.Enabled = false;
	local t_Variables2 = m_Library.Variables;
	t_Variables2.OpeningEgg = t_Variables2.OpeningEgg - 1;
	m_Library.Signal.Fire("Done Opening Egg", p1);
	debug.profileend();
end
m_Library.Network.Fired("Open Egg"):Connect(function(p3, p4) -- Line: 682
	OpenEgg(p3, p4);
end);
m_Library.Signal.Fired("Open Egg"):Connect(OpenEgg);
  -  Editar
  04:54:13.952    -  Editar
  04:54:13.952  ----- [2879] StarterPlayer.StarterPlayerScripts.Scripts.Wanderer -----  -  Editar
  04:54:13.952  --------|     Setting     |--------

--------|     Library     |--------
local _L = require(game.ReplicatedStorage:WaitForChild("Library")) _L.Load()

--------|    Reference    |--------

--------|    Variables    |--------
local wanderer = _L.GUI.WandererPreRelease
local main = wanderer.MainMenu
local exchange = wanderer.Exchange
local shop = wanderer.Shop
local currentWindow = ""

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

function GetData(): table
	local data = _L.Network.Invoke("Get Wanderer Data")
	if not data then
		print("Couldnt get wanderer")
		return nil
	end
	return data
end

function Update()
	debug.profilebegin("Wanderer.Update")
	
end

function SwitchWindows(window: string)
	currentWindow = window
	main.Visible =     currentWindow == "Main"
	exchange.Visible = currentWindow == "Exchange"
	shop.Visible =     currentWindow == "Shop"
end  -  Editar
  04:54:13.952    -  Editar
  04:54:13.952  ----- [2880] StarterPlayer.StarterPlayerScripts.AttemptToHidePlayerList -----  -  Editar
  04:54:13.953  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

  -  Editar
  04:54:13.953    -  Editar
  04:54:13.953  ----- [2881] StarterPlayer.StarterPlayerScripts.ClickDrag -----  -  Editar
  04:54:13.953  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

  -  Editar
  04:54:13.953    -  Editar
  04:54:13.953  ----- [2882] StarterPlayer.StarterPlayerScripts.Test Lucky Block Tables -----  -  Editar
  04:54:13.953  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

if not game:GetService("RunService"):IsStudio() then return end
local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
local t_luckyBlockRewards = m_Library.Directory.Coins["Yellow Lucky Block"].luckyBlockRewards;
local t_luckyBlockRewards2 = m_Library.Directory.Coins["Blue Lucky Block"].luckyBlockRewards;
local t_luckyBlockRewards3 = m_Library.Directory.Coins["Pink Lucky Block"].luckyBlockRewards;
local table1 = {};
print("Rolling", 100000, "for each lucky block");
for index1 = 1, 100000 do
	local v1 = m_Library.Functions.Lottery(t_luckyBlockRewards);
	if v1[1] then
		if not table1[v1[1]] then
			table1[v1[1]] = 0;
		end
		local v4 = v1[1];
		table1[v4] = table1[v4] + 1;
	end
end
for key1, val1 in pairs(table1) do
	table1[key1] = val1 / 100000 * 100;
end
print("Yellow Results:", table1);
local table2 = {};
for index2 = 1, 100000 do
	local v2 = m_Library.Functions.Lottery(t_luckyBlockRewards2);
	if v2[1] then
		if not table2[v2[1]] then
			table2[v2[1]] = 0;
		end
		local v5 = v2[1];
		table2[v5] = table2[v5] + 1;
	end
end
for key2, val2 in pairs(table2) do
	table2[key2] = val2 / 100000 * 100;
end
print("Blue Results:", table2);
local table3 = {};
for index3 = 1, 100000 do
	local v3 = m_Library.Functions.Lottery(t_luckyBlockRewards3);
	if v3[1] then
		if not table3[v3[1]] then
			table3[v3[1]] = 0;
		end
		local v6 = v3[1];
		table3[v6] = table3[v6] + 1;
	end
end
for key3, val3 in pairs(table3) do
	table3[key3] = val3 / 100000 * 100;
end
print("Pink Results:", table3);
  -  Editar
  04:54:13.953    -  Editar
  04:54:13.953  ----- [2883] StarterPlayer.StarterPlayerScripts.TestBooths -----  -  Editar
  04:54:13.953  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

warn("Test event enabled");
local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
  -  Editar
  04:54:13.953    -  Editar
  04:54:13.953  ----- [2884] StarterPlayer.StarterPlayerScripts.TestMailboxes -----  -  Editar
  04:54:13.953  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

  -  Editar
  04:54:13.953    -  Editar
  04:54:13.953  ----- [2885] StarterPlayer.StarterPlayerScripts.TestNetworking2 -----  -  Editar
  04:54:13.954  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Library = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not m_Library.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end
m_Library.Network2.Fired("Test3"):Connect(function(p1) -- Line: 6
	print("client/event", p1);
end);
m_Library.Network2.Invoked("Test4").OnInvoke = function(p2) -- Line: 9
	print("client/function", p2);
	return -p2;
end
task.delay(10, function() -- Line: 14
	--[[
		Upvalues:
			[1] = m_Library
	--]]
	task.spawn(function() -- Line: 15
		--[[
			Upvalues:
				[1] = m_Library
		--]]
		m_Library.Network2.Fire("Test1", 1);
	end);
	task.spawn(function() -- Line: 18
		--[[
			Upvalues:
				[1] = m_Library
		--]]
		local v1 = m_Library.Network2.Invoke("Test2", 2);
		print("client/invoke: ", v1);
	end);
end);
  -  Editar
  04:54:13.954    -  Editar
  04:54:13.954  ----- [2886] StarterPlayer.StarterPlayerScripts.Idle Tracking -----  -  Editar
  04:54:13.954  -- Decompiled using Krnl
local v7 = require((game.ReplicatedStorage:WaitForChild("Framework")):WaitForChild("Library"))
while not v7.Loaded do
	game:GetService("RunService").Heartbeat:Wait()
end
local v11 = 1185
v10 = 0
local v12 = v7.LocalPlayer
local v13 = {
	[4437812925] = false
}
if v13[v12.UserId] then
	local v18 = v12.PlayerGui:WaitForChild("IdleTracking", 9999)
	local v21 = v18:WaitForChild("Time", 9999)
	v18.Enabled = true
end
v7.RunService.Heartbeat:Connect(function(p1)
	if 0 > p1 then
		return 
	end
	if p1 >= 5 then
		return 
	end
	local v26 = v7.Functions.IsFinite(p1)
	if not v26 then
		return 
	end
	v10 = v10 + p1
	if v13[v12.UserId] then 
		(v12.PlayerGui:WaitForChild("IdleTracking", 9999)):WaitForChild("Time", 9999).Text = v7.Functions.FormatTime(v11 - v10)
	end
	if v10 > v11 then
		if v11 >= v26 then
			v7.Network.Fire("Move Server")
		end
	end
end)
local function track(p2, p3)
	if p2.UserInputType == Enum.UserInputType.MouseMovement then
		return 
	end
	v10 = 0
end
v7.UserInputService.InputBegan:Connect(track)
v7.UserInputService.InputChanged:Connect(track)
v7.UserInputService.InputEnded:Connect(track)
v7.Network.Fired("Move Time Change"):Connect(function(p4)
	assert(typeof(p4) == "number")
	v11 = p4
end)
  -  Editar
  04:54:13.954    -  Editar
  04:54:13.954  ----- [2887] StarterPlayer.StarterPlayerScripts.Misc -----  -  Editar
  04:54:13.954  --[[

	By: @kalidrios
		
--]]

game.StarterPlayer.EnableMouseLockOption = false  
--------|     Library     |--------
local _L = require(game:GetService("ReplicatedStorage"):WaitForChild("Library"))
while (not _L.Loaded) do  game:GetService("RunService").Heartbeat:Wait()  end

_L.Network.Fired("Client Loading"):Connect(function(...)
    _L.GUIFX.Loading(...)
end)

_L.Network.Invoked("Auto Delete Enabled").OnInvoke = function()
    return _L.Variables.AutoDeleteEnabled
end
--game.Workspace["StreamingEnabled"] = false
  -  Editar
