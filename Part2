  04:54:13.588  ----- [1669] ReplicatedStorage.__DIRECTORY.Pets.514 - Love Lamb.Pet Data (Love Lamb) -----  -  Editar
  04:54:13.588  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Love Lamb", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12508414016", 
	goldenThumbnail = "rbxassetid://12508414200", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	hidden = true, 
	companionEnchantLevel = 1, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.588    -  Editar
  04:54:13.588  ----- [1670] ReplicatedStorage.__DIRECTORY.Pets.2074 - Huge Safari Cat.Pet Data (Huge Safari Cat) -----  -  Editar
  04:54:13.588  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Safari Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://12447133368", 
	goldenThumbnail = "rbxassetid://12447133527", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.588    -  Editar
  04:54:13.588  ----- [1671] ReplicatedStorage.__DIRECTORY.Pets.2075 - Huge Love Lamb.Pet Data (Huge Love Lamb) -----  -  Editar
  04:54:13.588  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Love Lamb", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	huge = true, 
	thumbnail = "rbxassetid://12508416371", 
	goldenThumbnail = "rbxassetid://12508416619", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.588    -  Editar
  04:54:13.588  ----- [1672] ReplicatedStorage.__DIRECTORY.Pets.3008 - Titanic Lucki.Pet Data (Titanic Lucki) -----  -  Editar
  04:54:13.588  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Titanic Lucki", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	titanic = true, 
	thumbnail = "rbxassetid://12588829816", 
	goldenThumbnail = "rbxassetid://12588830122", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = true, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.589    -  Editar
  04:54:13.589  ----- [1673] ReplicatedStorage.__DIRECTORY.Pets.3009 - Titanic Capybara.Pet Data (Titanic Capybara) -----  -  Editar
  04:54:13.589  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Titanic Capybara", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	titanic = true, 
	thumbnail = "rbxassetid://12588895997", 
	goldenThumbnail = "rbxassetid://12588896255", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = true, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.589    -  Editar
  04:54:13.589  ----- [1674] ReplicatedStorage.__DIRECTORY.Pets.515 - Diamond Cat.Pet Data (Diamond Cat) -----  -  Editar
  04:54:13.589  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Diamond Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12588016231", 
	goldenThumbnail = "rbxassetid://12588016386", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	companionEnchantLevel = 3, 
	guarenteedEnchants = { { "Diamond Bag Luck", 1, 3 } }, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.589    -  Editar
  04:54:13.589  ----- [1675] ReplicatedStorage.__DIRECTORY.Pets.2076 - Huge Meebo in a Spaceship.Pet Data (Huge Meebo in a Spaceship) -----  -  Editar
  04:54:13.589  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Meebo in a Spaceship", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	huge = true, 
	thumbnail = "rbxassetid://12519273158", 
	goldenThumbnail = "rbxassetid://12519273454", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.589    -  Editar
  04:54:13.589  ----- [1676] ReplicatedStorage.__DIRECTORY.Pets.516 - Bluey Chihuahua .Pet Data (Bluey Chihuahua) -----  -  Editar
  04:54:13.589  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Goober", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478157336, 4478159184 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12645167160", 
	goldenThumbnail = "rbxassetid://12645167302", 
	darkMatterThumbnail = "rbxassetid://12645167421", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	hidden = true, 
	companionEnchantLevel = 3, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.589    -  Editar
  04:54:13.589  ----- [1677] ReplicatedStorage.__DIRECTORY.Pets.517 - Spiffy Cat .Pet Data (Spiffy Cat) -----  -  Editar
  04:54:13.589  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Spiffy Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12645313947", 
	goldenThumbnail = "rbxassetid://12645314091", 
	darkMatterThumbnail = "rbxassetid://12645314227", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	hidden = true, 
	companionEnchantLevel = 3, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.590    -  Editar
  04:54:13.590  ----- [1678] ReplicatedStorage.__DIRECTORY.Pets.3010 - Titanic Dominus Astra.Pet Data (Titanic Dominus Astra) -----  -  Editar
  04:54:13.590  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Titanic Dominus Astra", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	titanic = true, 
	thumbnail = "rbxassetid://12673715051", 
	goldenThumbnail = "rbxassetid://12673736121", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = true, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.590    -  Editar
  04:54:13.590  ----- [1679] ReplicatedStorage.__DIRECTORY.Pets.518 - Comet Agony.Pet Data (Comet Agony) -----  -  Editar
  04:54:13.590  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Comet Agony", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	thumbnail = "rbxassetid://12663012977", 
	goldenThumbnail = "rbxassetid://12653917510", 
	darkMatterThumbnail = "", 
	rarity = "Event", 
	isPremium = false, 
	tradeable = true, 
	companionEnchantLevel = 1, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.590    -  Editar
  04:54:13.590  ----- [1680] ReplicatedStorage.__DIRECTORY.Pets.519 - Comet Cyclops.Pet Data (Comet Cyclops) -----  -  Editar
  04:54:13.590  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Comet Cyclops", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	thumbnail = "rbxassetid://12663012890", 
	goldenThumbnail = "rbxassetid://12654613507", 
	darkMatterThumbnail = "", 
	rarity = "Event", 
	isPremium = false, 
	tradeable = true, 
	companionEnchantLevel = 1, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.590    -  Editar
  04:54:13.590  ----- [1681] ReplicatedStorage.__DIRECTORY.Pets.520 - Empyrean Dominus.Pet Data (Empyrean Dominus) -----  -  Editar
  04:54:13.590  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Empyrean Dominus", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12673812359", 
	goldenThumbnail = "rbxassetid://12673812608", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	companionEnchantLevel = 2, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.590    -  Editar
  04:54:13.590  ----- [1682] ReplicatedStorage.__DIRECTORY.Pets.2078 - Huge Diamond Cat.Pet Data (Huge Diamond Cat) -----  -  Editar
  04:54:13.591  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Diamond Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://12589094700", 
	goldenThumbnail = "rbxassetid://12589095033", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	guarenteedEnchants = { { "Diamond Bag Master", 1, 1 } }, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.591    -  Editar
  04:54:13.591  ----- [1683] ReplicatedStorage.__DIRECTORY.Pets.2079 - Huge Comet Cyclops.Pet Data (Huge Comet Cyclops) -----  -  Editar
  04:54:13.591  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Comet Cyclops", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	huge = true, 
	thumbnail = "rbxassetid://12663076240", 
	goldenThumbnail = "rbxassetid://12663076305", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.591    -  Editar
  04:54:13.591  ----- [1684] ReplicatedStorage.__DIRECTORY.Pets.521 - Inferno Dominus.Pet Data (Inferno Dominus) -----  -  Editar
  04:54:13.591  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Inferno Dominus", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12673284340", 
	goldenThumbnail = "rbxassetid://12673284515", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	companionEnchantLevel = 3, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.591    -  Editar
  04:54:13.591  ----- [1685] ReplicatedStorage.__DIRECTORY.Pets.522 - Storm Dominus.Pet Data (Storm Dominus) -----  -  Editar
  04:54:13.591  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Storm Dominus", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12673284024", 
	goldenThumbnail = "rbxassetid://12673284178", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	companionEnchantLevel = 1, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.591    -  Editar
  04:54:13.591  ----- [1686] ReplicatedStorage.__DIRECTORY.Pets.1021 - Exclusive Egg 9.Exclusive Egg 9 -----  -  Editar
  04:54:13.592  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Exclusive Egg 9", 
	isGift = true, 
	giftEggId = "Exclusive Egg 9", 
	giftCallback = function(p1, p2)

	end, 
	thumbnail = "rbxassetid://12444268861", 
	rarity = "Exclusive", 
	isPremium = true, 
	canAuction = true, 
	tradeable = true
};
  -  Editar
  04:54:13.592    -  Editar
  04:54:13.592  ----- [1687] ReplicatedStorage.__DIRECTORY.Pets.2080 - Huge Comet Agony.Pet Data (Huge Comet Agony) -----  -  Editar
  04:54:13.592  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Comet Agony", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	huge = true, 
	thumbnail = "rbxassetid://12663058675", 
	goldenThumbnail = "rbxassetid://12663058788", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.592    -  Editar
  04:54:13.592  ----- [1688] ReplicatedStorage.__DIRECTORY.Pets.2081 - Huge Storm Dominus.Pet Data (Huge Storm Dominus) -----  -  Editar
  04:54:13.592  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Storm Dominus", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://12673284674", 
	goldenThumbnail = "rbxassetid://12673284826", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.592    -  Editar
  04:54:13.592  ----- [1689] ReplicatedStorage.__DIRECTORY.Pets.3011 - Titanic Blobfish.Pet Data (Titanic Blobfish) -----  -  Editar
  04:54:13.592  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Titanic Blobfish", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	titanic = true, 
	thumbnail = "rbxassetid://12787490461", 
	goldenThumbnail = "rbxassetid://12787490552", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = true, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.592    -  Editar
  04:54:13.592  ----- [1690] ReplicatedStorage.__DIRECTORY.Pets.523 - Leprechaun Cat.Pet Data (Leprechaun Cat) -----  -  Editar
  04:54:13.593  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Leprechaun Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12725008965", 
	goldenThumbnail = "rbxassetid://12725009073", 
	darkMatterThumbnail = "rbxassetid://12725012717", 
	rarity = "Rare", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 100000000000000, 
	strengthMax = 102000000000000
};
  -  Editar
  04:54:13.593    -  Editar
  04:54:13.593  ----- [1691] ReplicatedStorage.__DIRECTORY.Pets.524 - Irish Corgi.Pet Data (Irish Corgi) -----  -  Editar
  04:54:13.593  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Irish Corgi", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12726347253", 
	goldenThumbnail = "rbxassetid://12726347384", 
	darkMatterThumbnail = "rbxassetid://12726349795", 
	rarity = "Epic", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 170000000000000, 
	strengthMax = 175000000000000
};
  -  Editar
  04:54:13.593    -  Editar
  04:54:13.593  ----- [1692] ReplicatedStorage.__DIRECTORY.Pets.525 - Clover Fairy.Pet Data (Clover Fairy) -----  -  Editar
  04:54:13.593  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Clover Fairy", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	thumbnail = "rbxassetid://12744819403", 
	goldenThumbnail = "rbxassetid://12726379888", 
	darkMatterThumbnail = "rbxassetid://12726381415", 
	rarity = "Legendary", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 310000000000000, 
	strengthMax = 315000000000000
};
  -  Editar
  04:54:13.593    -  Editar
  04:54:13.593  ----- [1693] ReplicatedStorage.__DIRECTORY.Pets.526 - Clover Axolotl.Pet Data (Clover Axolotl) -----  -  Editar
  04:54:13.593  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Clover Axolotl", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12744829033", 
	goldenThumbnail = "rbxassetid://12726405730", 
	darkMatterThumbnail = "rbxassetid://12726409751", 
	rarity = "Mythical", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 1250000000000000, 
	strengthMax = 1300000000000000
};
  -  Editar
  04:54:13.593    -  Editar
  04:54:13.594  ----- [1694] ReplicatedStorage.__DIRECTORY.Pets.527 - Clover Unicorn.Pet Data (Clover Unicorn) -----  -  Editar
  04:54:13.594  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Clover Unicorn", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12744835745", 
	goldenThumbnail = "rbxassetid://12726437127", 
	darkMatterThumbnail = "rbxassetid://12726439083", 
	rarity = "Secret", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2000000000000000, 
	strengthMax = 2100000000000000
};
  -  Editar
  04:54:13.594    -  Editar
  04:54:13.594  ----- [1695] ReplicatedStorage.__DIRECTORY.Pets.528 - Clover Dragon.Pet Data (Clover Dragon) -----  -  Editar
  04:54:13.594  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Clover Dragon", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	thumbnail = "rbxassetid://12744841793", 
	goldenThumbnail = "rbxassetid://12726466587", 
	darkMatterThumbnail = "rbxassetid://12726468183", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	hidden = true, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.594    -  Editar
  04:54:13.594  ----- [1696] ReplicatedStorage.__DIRECTORY.Pets.2082 - Huge Inferno Dominus.Pet Data (Huge Inferno Dominus) -----  -  Editar
  04:54:13.594  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Inferno Dominus", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://12673284961", 
	goldenThumbnail = "rbxassetid://12673285092", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.594    -  Editar
  04:54:13.594  ----- [1697] ReplicatedStorage.__DIRECTORY.Pets.2083 - Huge Leprechaun Cat.Pet Data (Huge Leprechaun Cat) -----  -  Editar
  04:54:13.594  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Leprechaun Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://12742226188", 
	goldenThumbnail = "rbxassetid://12742226374", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.594    -  Editar
  04:54:13.594  ----- [1698] ReplicatedStorage.__DIRECTORY.Pets.2084 - Huge Clover Unicorn.Pet Data (Huge Clover Unicorn) -----  -  Editar
  04:54:13.595  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Clover Unicorn", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://12744869999", 
	goldenThumbnail = "rbxassetid://12742297880", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.595    -  Editar
  04:54:13.595  ----- [1699] ReplicatedStorage.__DIRECTORY.Pets.529 - Kawaii Cat.Pet Data (Kawaii Cat) -----  -  Editar
  04:54:13.595  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Kawaii Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12797370515", 
	goldenThumbnail = "rbxassetid://12797370688", 
	darkMatterThumbnail = "rbxassetid://12797377448", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 52100000000000, 
	strengthMax = 52200000000000
};
  -  Editar
  04:54:13.595    -  Editar
  04:54:13.595  ----- [1700] ReplicatedStorage.__DIRECTORY.Pets.2088 - Huge Pastel Sock Dragon.Pet Data (Huge Pastel Sock Dragon) -----  -  Editar
  04:54:13.595  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Pastel Sock Dragon", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	huge = true, 
	thumbnail = "rbxassetid://12817859664", 
	goldenThumbnail = "rbxassetid://12817859756", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.595    -  Editar
  04:54:13.595  ----- [1701] ReplicatedStorage.__DIRECTORY.Pets.530 - Cupcake Unicorn.Pet Data (Cupcake Unicorn) -----  -  Editar
  04:54:13.595  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cupcake Unicorn", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12814138512", 
	goldenThumbnail = "rbxassetid://12814138618", 
	darkMatterThumbnail = "rbxassetid://12814138825", 
	rarity = "Mythical", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2500000000000000, 
	strengthMax = 2550000000000000
};
  -  Editar
  04:54:13.595    -  Editar
  04:54:13.595  ----- [1702] ReplicatedStorage.__DIRECTORY.Pets.531 - Strawberry Cow.Pet Data (Strawberry Cow) -----  -  Editar
  04:54:13.595  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Strawberry Cow", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12814134725", 
	goldenThumbnail = "rbxassetid://12814134907", 
	darkMatterThumbnail = "rbxassetid://12814135135", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 63000000000000, 
	strengthMax = 63100000000000
};
  -  Editar
  04:54:13.596    -  Editar
  04:54:13.596  ----- [1703] ReplicatedStorage.__DIRECTORY.Pets.532 - Bread Shiba.Pet Data (Bread Shiba) -----  -  Editar
  04:54:13.596  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Bread Shiba", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478157336, 4478159184 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12814139937", 
	goldenThumbnail = "rbxassetid://12814140084", 
	darkMatterThumbnail = "rbxassetid://12814140309", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 92500000000000, 
	strengthMax = 92600000000000
};
  -  Editar
  04:54:13.596    -  Editar
  04:54:13.596  ----- [1704] ReplicatedStorage.__DIRECTORY.Pets.533 - Flower Panda.Pet Data (Flower Panda) -----  -  Editar
  04:54:13.596  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Flower Panda", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12814137839", 
	goldenThumbnail = "rbxassetid://12814137948", 
	darkMatterThumbnail = "rbxassetid://12814138023", 
	rarity = "Epic", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 180000000000000, 
	strengthMax = 181000000000000
};
  -  Editar
  04:54:13.596    -  Editar
  04:54:13.596  ----- [1705] ReplicatedStorage.__DIRECTORY.Pets.534 - Sailor Narwhal.Pet Data (Sailor Narwhal) -----  -  Editar
  04:54:13.596  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Sailor Narwhal", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12814135762", 
	goldenThumbnail = "rbxassetid://12814135866", 
	darkMatterThumbnail = "rbxassetid://12814136006", 
	rarity = "Epic", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 335000000000000, 
	strengthMax = 336000000000000
};
  -  Editar
  04:54:13.596    -  Editar
  04:54:13.596  ----- [1706] ReplicatedStorage.__DIRECTORY.Pets.535 - Mushroom Fox.Pet Data (Mushroom Fox) -----  -  Editar
  04:54:13.596  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Mushroom Fox", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12814136491", 
	goldenThumbnail = "rbxassetid://12814136599", 
	darkMatterThumbnail = "rbxassetid://12814136765", 
	rarity = "Rare", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 105000000000000, 
	strengthMax = 106000000000000
};
  -  Editar
  04:54:13.596    -  Editar
  04:54:13.596  ----- [1707] ReplicatedStorage.__DIRECTORY.Pets.536 - Playful Seal.Pet Data (Playful Seal) -----  -  Editar
  04:54:13.597  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Playful Seal", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12814136116", 
	goldenThumbnail = "rbxassetid://12814136236", 
	darkMatterThumbnail = "rbxassetid://12814136370", 
	rarity = "Rare", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 160000000000000, 
	strengthMax = 161000000000000
};
  -  Editar
  04:54:13.597    -  Editar
  04:54:13.597  ----- [1708] ReplicatedStorage.__DIRECTORY.Pets.537 - Dino Bear.Pet Data (Dino Bear) -----  -  Editar
  04:54:13.597  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Dino Bear", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12814138132", 
	goldenThumbnail = "rbxassetid://12814138248", 
	darkMatterThumbnail = "rbxassetid://12814138386", 
	rarity = "Legendary", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 330000000000000, 
	strengthMax = 331000000000000
};
  -  Editar
  04:54:13.597    -  Editar
  04:54:13.597  ----- [1709] ReplicatedStorage.__DIRECTORY.Pets.538 - Seedling Squirrel.Pet Data (Seedling Squirrel) -----  -  Editar
  04:54:13.597  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Seedling Squirrel", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12814135339", 
	goldenThumbnail = "rbxassetid://12814135464", 
	darkMatterThumbnail = "rbxassetid://12814135599", 
	rarity = "Epic", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 215000000000000, 
	strengthMax = 216000000000000
};
  -  Editar
  04:54:13.597    -  Editar
  04:54:13.597  ----- [1710] ReplicatedStorage.__DIRECTORY.Pets.539 - Chef Monkey.Pet Data (Chef Monkey) -----  -  Editar
  04:54:13.597  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Chef Monkey", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12814139018", 
	goldenThumbnail = "rbxassetid://12814139130", 
	darkMatterThumbnail = "rbxassetid://12814139239", 
	rarity = "Legendary", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 605000000000000, 
	strengthMax = 606000000000000
};
  -  Editar
  04:54:13.597    -  Editar
  04:54:13.597  ----- [1711] ReplicatedStorage.__DIRECTORY.Pets.540 - Masked Owl.Pet Data (Masked Owl) -----  -  Editar
  04:54:13.597  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Masked Owl", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	thumbnail = "rbxassetid://12814136976", 
	goldenThumbnail = "rbxassetid://12814137124", 
	darkMatterThumbnail = "rbxassetid://12814137287", 
	rarity = "Secret", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 6250000000000000, 
	strengthMax = 6300000000000000
};
  -  Editar
  04:54:13.598    -  Editar
  04:54:13.598  ----- [1712] ReplicatedStorage.__DIRECTORY.Pets.541 - Butterfly Llama.Pet Data (Butterfly Llama) -----  -  Editar
  04:54:13.598  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Butterfly Llama", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	thumbnail = "rbxassetid://12814139415", 
	goldenThumbnail = "rbxassetid://12814139561", 
	darkMatterThumbnail = "rbxassetid://12814139785", 
	rarity = "Epic", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 280000000000000, 
	strengthMax = 281000000000000
};
  -  Editar
  04:54:13.598    -  Editar
  04:54:13.598  ----- [1713] ReplicatedStorage.__DIRECTORY.Pets.2086 - Huge Kawaii Cat.Pet Data (Huge Kawaii Cat) -----  -  Editar
  04:54:13.598  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Kawaii Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://12797370793", 
	goldenThumbnail = "rbxassetid://12797370894", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.598    -  Editar
  04:54:13.598  ----- [1714] ReplicatedStorage.__DIRECTORY.Pets.542 - Purple Marshmellow Chick.Pet Data (Purple Marshmellow Chick) -----  -  Editar
  04:54:13.598  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Purple Marshmallow Chick", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12820625500", 
	goldenThumbnail = "rbxassetid://9387941243", 
	darkMatterThumbnail = "rbxassetid://9387986799", 
	rarity = "Event", 
	isPremium = false, 
	tradeable = true, 
	companionEnchantLevel = 1, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.598    -  Editar
  04:54:13.598  ----- [1715] ReplicatedStorage.__DIRECTORY.Pets.2087 - Huge Bread Shiba.Pet Data (Huge Bread Shiba) -----  -  Editar
  04:54:13.598  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Bread Shiba", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478157336, 4478159184 }
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://12814137514", 
	goldenThumbnail = "rbxassetid://12814137682", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.599    -  Editar
  04:54:13.599  ----- [1716] ReplicatedStorage.__DIRECTORY.Pets.2089 - Huge Pink Marshmellow Chick.Pet Data (Huge Pink Marshmellow Chick) -----  -  Editar
  04:54:13.599  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Pink Marshmallow Chick", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://12817974256", 
	goldenThumbnail = "rbxassetid://12817974350", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.599    -  Editar
  04:54:13.599  ----- [1717] ReplicatedStorage.__DIRECTORY.Pets.2090 - Huge Gleebo The Alien.Pet Data (Huge Gleebo The Alien) -----  -  Editar
  04:54:13.600  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Gleebo The Alien", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://12838091135", 
	goldenThumbnail = "rbxassetid://12838095109", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	hidden = false, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.600    -  Editar
  04:54:13.600  ----- [1718] ReplicatedStorage.__DIRECTORY.Pets.543 - Hologram Cat.Pet Data (Hologram Cat) -----  -  Editar
  04:54:13.600  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Hologram Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = true, 
	weld = true, 
	flyHeightChange = 0, 
	thumbnail = "rbxassetid://12889609628", 
	goldenThumbnail = "rbxassetid://12889609739", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	hidden = true, 
	companionEnchantLevel = 3, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.600    -  Editar
  04:54:13.600  ----- [1719] ReplicatedStorage.__DIRECTORY.Pets.544 - Hologram Tiger.Pet Data (Hologram Tiger) -----  -  Editar
  04:54:13.600  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Hologram Tiger", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	weld = true, 
	flyHeightChange = 0, 
	thumbnail = "rbxassetid://12889609074", 
	goldenThumbnail = "rbxassetid://12889609217", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	companionEnchantLevel = 2, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.600    -  Editar
  04:54:13.601  ----- [1720] ReplicatedStorage.__DIRECTORY.Pets.545 - Hologram Axolotl.Pet Data (Hologram Axolotl) -----  -  Editar
  04:54:13.601  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Hologram Axolotl", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	weld = true, 
	flyHeightChange = 0, 
	thumbnail = "rbxassetid://12889609841", 
	goldenThumbnail = "rbxassetid://12889610030", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	companionEnchantLevel = 3, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.601    -  Editar
  04:54:13.601  ----- [1721] ReplicatedStorage.__DIRECTORY.Pets.546 - Hologram Shark.Pet Data (Hologram Shark) -----  -  Editar
  04:54:13.601  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Hologram Shark", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	weld = true, 
	flyHeightChange = 0, 
	thumbnail = "rbxassetid://12889609351", 
	goldenThumbnail = "rbxassetid://12889609499", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	companionEnchantLevel = 1, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.601    -  Editar
  04:54:13.601  ----- [1722] ReplicatedStorage.__DIRECTORY.Pets.1004 - Season 1 Legendary Gift.Season 1 Legendary Gift -----  -  Editar
  04:54:13.602  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Season 1 Legendary Gift", 
	isGift = true, 
	giftEggId = "Season 1 Legendary Gift", 
	giftCallback = function(p1, p2)
		local l__Library__1 = game:GetService("ServerScriptService"):WaitForChild("Library");
		local v2 = require(game:GetService("ReplicatedStorage"):WaitForChild("Library").Functions);
		local v3 = require(l__Library__1.Give);
		require(l__Library__1.Achievements).Add(p1, "Open Giftboxes", 1);
		v3.GiveCurrency(p1, "Diamonds", v2.Lottery({ { 250000, 100 }, { 325000, 60 }, { 400000, 40 }, { 600000, 30 } }), "gift");
	end, 
	thumbnail = "rbxassetid://10015952124", 
	rarity = "Exclusive", 
	isPremium = true, 
	canAuction = true, 
	tradeable = true
};
  -  Editar
  04:54:13.602    -  Editar
  04:54:13.602  ----- [1723] ReplicatedStorage.__DIRECTORY.Pets.1006 - Exclusive Egg 1.Exclusive Egg 1 -----  -  Editar
  04:54:13.602  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Exclusive Egg 1", 
	isGift = true, 
	giftEggId = "Exclusive Egg 1", 
	giftCallback = function(p1, p2)

	end, 
	thumbnail = "rbxassetid://10015968055", 
	rarity = "Exclusive", 
	isPremium = true, 
	canAuction = true, 
	tradeable = true
};
  -  Editar
  04:54:13.602    -  Editar
  04:54:13.602  ----- [1724] ReplicatedStorage.__DIRECTORY.Pets.1005 - Season 1 Mythical Gift.Season 1 Mythical Gift -----  -  Editar
  04:54:13.602  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Season 1 Mythical Gift", 
	isGift = true, 
	giftEggId = "Season 1 Mythical Gift", 
	giftCallback = function(p1, p2)
		local l__Library__1 = game:GetService("ServerScriptService"):WaitForChild("Library");
		local v2 = require(game:GetService("ReplicatedStorage"):WaitForChild("Library").Functions);
		local v3 = require(l__Library__1.Give);
		require(l__Library__1.Achievements).Add(p1, "Open Giftboxes", 1);
		v3.GiveCurrency(p1, "Diamonds", v2.Lottery({ { 375000, 100 }, { 600000, 60 }, { 750000, 40 }, { 1000000, 30 } }), "gift");
	end, 
	thumbnail = "rbxassetid://10015952468", 
	rarity = "Exclusive", 
	isPremium = true, 
	canAuction = true, 
	tradeable = true
};
  -  Editar
  04:54:13.602    -  Editar
  04:54:13.603  ----- [1725] ReplicatedStorage.__DIRECTORY.Pets.3012 - Titanic Hologram Cat.Pet Data (Titanic Hologram Cat) -----  -  Editar
  04:54:13.603  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Titanic Hologram Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = true, 
	weld = true, 
	titanic = true, 
	ridingTransparency = 0.75, 
	flyHeightChange = 0, 
	flyHeight = 2, 
	thumbnail = "rbxassetid://12889774106", 
	goldenThumbnail = "rbxassetid://12889774227", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = true, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.604    -  Editar
  04:54:13.604  ----- [1726] ReplicatedStorage.__DIRECTORY.Pets.1026 - Quest Egg 1.Quest Egg 1 -----  -  Editar
  04:54:13.604  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Quest Egg 1", 
	isGift = true, 
	giftEggId = "Quest Egg 1", 
	giftCallback = function(p1, p2)

	end, 
	thumbnail = "rbxassetid://13179251444", 
	rarity = "Exclusive", 
	isPremium = true, 
	canAuction = true, 
	tradeable = true
};
  -  Editar
  04:54:13.604    -  Editar
  04:54:13.604  ----- [1727] ReplicatedStorage.__DIRECTORY.Pets.547 - Chef Cat.Pet Data (Chef Cat) -----  -  Editar
  04:54:13.604  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Chef Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	thumbnail = "rbxassetid://12888238307", 
	goldenThumbnail = "rbxassetid://12888238439", 
	darkMatterThumbnail = "rbxassetid://12888238621", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	hidden = true, 
	companionEnchantLevel = 3, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.604    -  Editar
  04:54:13.604  ----- [1728] ReplicatedStorage.__DIRECTORY.Pets.548 - Kawaii Dragon.Pet Data (Kawaii Dragon) -----  -  Editar
  04:54:13.605  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Kawaii Dragon", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	thumbnail = "rbxassetid://12888236907", 
	goldenThumbnail = "rbxassetid://12888237047", 
	darkMatterThumbnail = "rbxassetid://12888237200", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	hidden = true, 
	companionEnchantLevel = 3, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.605    -  Editar
  04:54:13.605  ----- [1729] ReplicatedStorage.__DIRECTORY.Pets.549 - Ninja Axolotl.Pet Data (Ninja Axolotl) -----  -  Editar
  04:54:13.605  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Ninja Axolotl", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	thumbnail = "rbxassetid://12888236683", 
	goldenThumbnail = "rbxassetid://12888236770", 
	darkMatterThumbnail = "rbxassetid://12888236838", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	hidden = true, 
	companionEnchantLevel = 3, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.605    -  Editar
  04:54:13.605  ----- [1730] ReplicatedStorage.__DIRECTORY.Pets.1003 - Season 1 Epic Gift.Season 1 Epic Gift -----  -  Editar
  04:54:13.605  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Season 1 Epic Gift", 
	isGift = true, 
	giftEggId = "Season 1 Epic Gift", 
	giftCallback = function(p1, p2)
		local l__Library__1 = game:GetService("ServerScriptService"):WaitForChild("Library");
		local v2 = require(game:GetService("ReplicatedStorage"):WaitForChild("Library").Functions);
		local v3 = require(l__Library__1.Give);
		require(l__Library__1.Achievements).Add(p1, "Open Giftboxes", 1);
		v3.GiveCurrency(p1, "Diamonds", v2.Lottery({ { 150000, 100 }, { 200000, 60 }, { 250000, 40 }, { 300000, 30 } }), "gift");
	end, 
	thumbnail = "rbxassetid://10015951835", 
	rarity = "Exclusive", 
	isPremium = true, 
	canAuction = true, 
	tradeable = true
};
  -  Editar
  04:54:13.605    -  Editar
  04:54:13.605  ----- [1731] ReplicatedStorage.__DIRECTORY.Pets.2182 - Huge Cosmic Axolotl.Pet Data (Huge Cosmic Axolotl) -----  -  Editar
  04:54:13.605  -- Decompiled using Krnl
local function ToVec_1(p1)
	return Vector3.new(p1.R, p1.G, p1.B)
end
ToVec = ToVec_1
ToVec_1 = {}
ToVec_1.name = "Huge Cosmic Axolotl"
ToVec_1.sounds = {
	random = {}
}
ToVec_1.fly = false
ToVec_1.huge = true
ToVec_1.weld = true
local v47 = {}
local v48 = {
	TextureId = "rbxassetid://14150093826", FixedScale = (Vector3.one) * 2, Brightness = (Vector3.one) * 3, Transparency = 0.5, ZIndex = 1, LogScale = 0.01, CameraDirection = (Vector3.one) * -0.4, AnimSpeed = (Vector3.new(-1, 1, 0)) * 0.5
}
local v59 = {}
v59[1] = (ToVec(Color3.new(1, 0.25, 0.25))) * 0.25
v59[2] = (ToVec(Color3.new(0.5, 0.3, 1))) * 2
v48.BrightnessNoiseRange = v59
v48.TransparencyNoiseRange = {
	[1] = 0, [2] = 1
}
local v65 = {}
v65.TextureId = "rbxassetid://14150093974"
v65.FixedScale = (Vector3.one) * 2
v65.Brightness = (Vector3.one) * 2
v65.Transparency = 0.5
v65.ZIndex = 2
v65.LogScale = 0.01
v65.CameraDirection = (Vector3.one) * 0.4
v65.AnimSpeed = (Vector3.new(1, 1, 0)) * 0.5
v65.BrightnessNoiseRange = {
	[1] = (ToVec(Color3.new(1, 1, 1))) * 0.25, [2] = (ToVec(Color3.new(1, 1, 1))) * 2
}
local v82 = {}
v82[1] = 0
v82[2] = 1
v65.TransparencyNoiseRange = v82
v47[1] = v48
v47[2] = v65
ToVec_1.parralax = v47
ToVec_1.thumbnail = "rbxassetid://14152147718"
ToVec_1.goldenThumbnail = ""
ToVec_1.darkMatterThumbnail = ""
ToVec_1.rarity = "Exclusive"
ToVec_1.isPremium = true
ToVec_1.tradeable = true
ToVec_1.strengthMin = 2
ToVec_1.strengthMax = 3
return ToVec_1
  -  Editar
  04:54:13.605    -  Editar
  04:54:13.606  ----- [1732] ReplicatedStorage.__DIRECTORY.Pets.2095 - Huge Ninja Axolotl.Pet Data (Huge Ninja Axolotl) -----  -  Editar
  04:54:13.606  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Ninja Axolotl", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://12895058944", 
	goldenThumbnail = "rbxassetid://12895059248", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.606    -  Editar
  04:54:13.606  ----- [1733] ReplicatedStorage.__DIRECTORY.Pets.370 - Huge Tiedye Cat.Pet Data (Huge Tiedye Cat) -----  -  Editar
  04:54:13.606  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Tiedye Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://9910580866", 
	goldenThumbnail = "rbxassetid://9910581155", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = true, 
	tradeable = true, 
	isVanity = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.606    -  Editar
  04:54:13.606  ----- [1734] ReplicatedStorage.__DIRECTORY.Pets.2180 - Huge Wild Fire Agony.Pet Data (Huge Wild Fire Agony) -----  -  Editar
  04:54:13.606  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2180 - Huge Wild Fire Agony.Pet Data (Huge Wild Fire Agony)
return {name = "Huge Wild Fire Agony", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, huge = true, thumbnail = "rbxassetid://14134386279", goldenThumbnail = "rbxassetid://14134386530", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.606    -  Editar
  04:54:13.606  ----- [1735] ReplicatedStorage.__DIRECTORY.Pets.2181 - Huge Stunt Unicorn.Pet Data (Huge Stunt Unicorn) -----  -  Editar
  04:54:13.606  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2181 - Huge Stunt Unicorn.Pet Data (Huge Stunt Unicorn)
return {name = "Huge Stunt Unicorn", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, huge = true, thumbnail = "rbxassetid://14138225946", goldenThumbnail = "rbxassetid://14138225946", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.606    -  Editar
  04:54:13.606  ----- [1736] ReplicatedStorage.__DIRECTORY.Pets.550 - Monkey Bro.Pet Data (Monkey Bro) -----  -  Editar
  04:54:13.606  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Monkey Bro", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12956522686", 
	goldenThumbnail = "rbxassetid://12956522830", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	companionEnchantLevel = 3, 
	hidden = true, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.607    -  Editar
  04:54:13.607  ----- [1737] ReplicatedStorage.__DIRECTORY.Pets.551 - Error Dog.Pet Data (Error Dog) -----  -  Editar
  04:54:13.607  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Error Dog", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12959759125", 
	goldenThumbnail = "rbxassetid://12959759422", 
	darkMatterThumbnail = "rbxassetid://12959761677", 
	rarity = "Epic", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 300000000000000, 
	strengthMax = 301000000000000
};
  -  Editar
  04:54:13.607    -  Editar
  04:54:13.607  ----- [1738] ReplicatedStorage.__DIRECTORY.Pets.552 - Error Axolotl.Pet Data (Error Axolotl) -----  -  Editar
  04:54:13.607  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Error Axolotl", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://12959775485", 
	goldenThumbnail = "rbxassetid://12959775587", 
	darkMatterThumbnail = "rbxassetid://12959778980", 
	rarity = "Legendary", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 590000000000000, 
	strengthMax = 591000000000000
};
  -  Editar
  04:54:13.607    -  Editar
  04:54:13.607  ----- [1739] ReplicatedStorage.__DIRECTORY.Pets.553 - Error Dragon.Pet Data (Error Dragon) -----  -  Editar
  04:54:13.607  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Error Dragon", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	thumbnail = "rbxassetid://12959820066", 
	goldenThumbnail = "rbxassetid://12959820165", 
	darkMatterThumbnail = "rbxassetid://12959822250", 
	rarity = "Mythical", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2600000000000000, 
	strengthMax = 2650000000000000
};
  -  Editar
  04:54:13.607    -  Editar
  04:54:13.607  ----- [1740] ReplicatedStorage.__DIRECTORY.Pets.554 - Spring Bee.Pet Data (Spring Bee) -----  -  Editar
  04:54:13.607  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Spring Bee", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	thumbnail = "rbxassetid://13022882540", 
	goldenThumbnail = "rbxassetid://13022882684", 
	darkMatterThumbnail = "rbxassetid://13022886956", 
	rarity = "Legendary", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 608000000000000, 
	strengthMax = 609000000000000
};
  -  Editar
  04:54:13.607    -  Editar
  04:54:13.608  ----- [1741] ReplicatedStorage.__DIRECTORY.Pets.555 - Easter Yeti.Pet Data (Easter Yeti) -----  -  Editar
  04:54:13.608  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Easter Yeti", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://13022890349", 
	goldenThumbnail = "rbxassetid://13022890593", 
	darkMatterThumbnail = "rbxassetid://13022893440", 
	rarity = "Mythical", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2650000000000000, 
	strengthMax = 2700000000000000
};
  -  Editar
  04:54:13.608    -  Editar
  04:54:13.608  ----- [1742] ReplicatedStorage.__DIRECTORY.Pets.556 - Easter Angelus.Pet Data (Easter Angelus) -----  -  Editar
  04:54:13.608  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Easter Angelus", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	thumbnail = "rbxassetid://13023667910", 
	goldenThumbnail = "rbxassetid://13023668098", 
	darkMatterThumbnail = "rbxassetid://13023665786", 
	rarity = "Secret", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 6550000000000000, 
	strengthMax = 6550000000000000
};
  -  Editar
  04:54:13.608    -  Editar
  04:54:13.608  ----- [1743] ReplicatedStorage.__DIRECTORY.Pets.3013 - Titanic Banana.Pet Data (Titanic Banana) -----  -  Editar
  04:54:13.608  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Titanic Banana", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	titanic = true, 
	thumbnail = "rbxassetid://13119407147", 
	goldenThumbnail = "", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = true, 
	tradeable = false, 
	ugc = true, 
	hidden = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.608    -  Editar
  04:54:13.608  ----- [1744] ReplicatedStorage.__DIRECTORY.Pets.557 - Egg Chick.Pet Data (Egg Chick) -----  -  Editar
  04:54:13.608  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Egg Chick", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://13022926728", 
	goldenThumbnail = "rbxassetid://13022926878", 
	darkMatterThumbnail = "rbxassetid://13022929838", 
	rarity = "Epic", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 345000000000000, 
	strengthMax = 346000000000000
};
  -  Editar
  04:54:13.608    -  Editar
  04:54:13.608  ----- [1745] ReplicatedStorage.__DIRECTORY.Pets.558 - Basket Bunny.Pet Data (Basket Bunny) -----  -  Editar
  04:54:13.609  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Basket Bunny", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://13022958478", 
	goldenThumbnail = "rbxassetid://13022955166", 
	darkMatterThumbnail = "rbxassetid://13022973616", 
	rarity = "Epic", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 340000000000000, 
	strengthMax = 341000000000000
};
  -  Editar
  04:54:13.609    -  Editar
  04:54:13.609  ----- [1746] ReplicatedStorage.__DIRECTORY.Pets.559 - Easter Axolotl.Pet Data (Easter Axolotl) -----  -  Editar
  04:54:13.609  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Easter Axolotl", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://13023010347", 
	goldenThumbnail = "rbxassetid://13023010522", 
	darkMatterThumbnail = "rbxassetid://13023021304", 
	rarity = "Legendary", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 610000000000000, 
	strengthMax = 611000000000000
};
  -  Editar
  04:54:13.609    -  Editar
  04:54:13.609  ----- [1747] ReplicatedStorage.__DIRECTORY.Pets.560 - Painted Cat.Pet Data (Painted Cat) -----  -  Editar
  04:54:13.609  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Painted Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "", 
	goldenThumbnail = "", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	hidden = true, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.609    -  Editar
  04:54:13.609  ----- [1748] ReplicatedStorage.__DIRECTORY.Pets.1024 - Easter 2023 Gift.Easter 2023 Gift -----  -  Editar
  04:54:13.609  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Easter 2023 Gift", 
	isGift = true, 
	giftEggId = "Easter 2023 Gift", 
	giftCallback = function(p1, p2)

	end, 
	thumbnail = "rbxassetid://13023959009", 
	rarity = "Exclusive", 
	isPremium = true, 
	canAuction = true, 
	tradeable = true
};
  -  Editar
  04:54:13.609    -  Editar
  04:54:13.610  ----- [1749] ReplicatedStorage.__DIRECTORY.Pets.561 - Easter Dominus.Pet Data (Easter Dominus) -----  -  Editar
  04:54:13.610  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Easter Dominus", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://13023764292", 
	goldenThumbnail = "rbxassetid://13023764387", 
	darkMatterThumbnail = "", 
	rarity = "Event", 
	isPremium = false, 
	tradeable = true, 
	companionEnchantLevel = 1, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.610    -  Editar
  04:54:13.610  ----- [1750] ReplicatedStorage.__DIRECTORY.Pets.562 - Marshmellow Agony.Pet Data (Marshmellow Agony) -----  -  Editar
  04:54:13.610  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Marshmallow Agony", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	thumbnail = "rbxassetid://13023463974", 
	goldenThumbnail = "rbxassetid://13023464132", 
	darkMatterThumbnail = "", 
	rarity = "Event", 
	isPremium = false, 
	tradeable = true, 
	companionEnchantLevel = 1, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.610    -  Editar
  04:54:13.610  ----- [1751] ReplicatedStorage.__DIRECTORY.Pets.563 - Spring Griffin.Pet Data (Spring Griffin) -----  -  Editar
  04:54:13.610  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Spring Griffin", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	thumbnail = "rbxassetid://13023555360", 
	goldenThumbnail = "rbxassetid://13023555462", 
	darkMatterThumbnail = "rbxassetid://13023559014", 
	rarity = "Mythical", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2750000000000000, 
	strengthMax = 2800000000000000
};
  -  Editar
  04:54:13.610    -  Editar
  04:54:13.610  ----- [1752] ReplicatedStorage.__DIRECTORY.Pets.2183 - Huge Cosmic Agony.Pet Data (Huge Cosmic Agony) -----  -  Editar
  04:54:13.610  -- Decompiled using Krnl
local function ToVec_1(p1)
	return Vector3.new(p1.R, p1.G, p1.B)
end
ToVec = ToVec_1
ToVec_1 = {}
ToVec_1.name = "Huge Cosmic Agony"
ToVec_1.sounds = {
	random = {}
}
ToVec_1.fly = true
ToVec_1.huge = true
ToVec_1.weld = true
local v47 = {}
local v48 = {
	TextureId = "rbxassetid://14150094108", FixedScale = (Vector3.one) * 2, Brightness = (Vector3.one) * 3, Transparency = 0.5, ZIndex = 1, LogScale = 0.01, CameraDirection = (Vector3.one) * -0.4, AnimSpeed = (Vector3.new(-1, 1, 0)) * 0.5
}
local v59 = {}
v59[1] = (ToVec(Color3.new(1, 0.25, 0.25))) * 0.25
v59[2] = (ToVec(Color3.new(0.5, 0.3, 1))) * 2
v48.BrightnessNoiseRange = v59
v48.TransparencyNoiseRange = {
	[1] = 0, [2] = 1
}
local v65 = {}
v65.TextureId = "rbxassetid://14150094328"
v65.FixedScale = (Vector3.one) * 2
v65.Brightness = (Vector3.one) * 2
v65.Transparency = 0.5
v65.ZIndex = 2
v65.LogScale = 0.01
v65.CameraDirection = (Vector3.one) * 0.4
v65.AnimSpeed = (Vector3.new(1, 1, 0)) * 0.5
v65.BrightnessNoiseRange = {
	[1] = (ToVec(Color3.new(1, 1, 1))) * 0.25, [2] = (ToVec(Color3.new(1, 1, 1))) * 2
}
local v82 = {}
v82[1] = 0
v82[2] = 1
v65.TransparencyNoiseRange = v82
v47[1] = v48
v47[2] = v65
ToVec_1.parralax = v47
ToVec_1.thumbnail = "rbxassetid://14152122412"
ToVec_1.goldenThumbnail = ""
ToVec_1.darkMatterThumbnail = ""
ToVec_1.rarity = "Exclusive"
ToVec_1.isPremium = true
ToVec_1.tradeable = true
ToVec_1.strengthMin = 2
ToVec_1.strengthMax = 3
return ToVec_1
  -  Editar
  04:54:13.610    -  Editar
  04:54:13.610  ----- [1753] ReplicatedStorage.__DIRECTORY.Pets.686 - Fireball Cat.Pet Data (Fireball Cat) -----  -  Editar
  04:54:13.610  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.686 - Fireball Cat.Pet Data (Fireball Cat)
return {name = "Fireball Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478156278, 4478156615}}, fly = true, weld = true, thumbnail = "rbxassetid://14134159227", goldenThumbnail = "rbxassetid://14134159415", darkMatterThumbnail = "rbxassetid://14134159572", rarity = "Mythical", isPremium = false, tradeable = true, yeetPower = 35000000, strengthMin = 1.5e+16, strengthMax = 1.55e+16}  -  Editar
  04:54:13.611    -  Editar
  04:54:13.611  ----- [1754] ReplicatedStorage.__DIRECTORY.Pets.689 - Cosmic Dragon.Pet Data (Cosmic Dragon) -----  -  Editar
  04:54:13.611  -- Decompiled using Krnl
local function ToVec_1(p1)
	return Vector3.new(p1.R, p1.G, p1.B)
end
ToVec = ToVec_1
ToVec_1 = {}
ToVec_1.name = "Cosmic Dragon"
ToVec_1.sounds = {
	random = {}
}
ToVec_1.fly = true
ToVec_1.weld = true
local v31 = {}
local v32 = {
	TextureId = "rbxassetid://14155237344", FixedScale = (Vector3.one) * 2, Brightness = (Vector3.one) * 3, Transparency = 0.5, ZIndex = 2, LogScale = 0.01, CameraDirection = (Vector3.one) * 0.4, AnimSpeed = (Vector3.new(1, 1, 0)) * 0.25
}
local v43 = {}
v43[1] = (ToVec(Color3.new(1, 1, 1))) * 0.25
v43[2] = (ToVec(Color3.new(1, 1, 1))) * 2
v32.BrightnessNoiseRange = v43
v32.TransparencyNoiseRange = {
	[1] = 0, [2] = 1
}
v31[1] = v32
ToVec_1.parralax = v31
ToVec_1.thumbnail = "rbxassetid://14151728154"
ToVec_1.goldenThumbnail = ""
ToVec_1.darkMatterThumbnail = ""
ToVec_1.rarity = "Exclusive"
ToVec_1.isPremium = false
ToVec_1.tradeable = true
ToVec_1.companionEnchantLevel = 2
ToVec_1.strengthMin = 0
ToVec_1.strengthMax = 0
return ToVec_1
  -  Editar
  04:54:13.611    -  Editar
  04:54:13.611  ----- [1755] ReplicatedStorage.__DIRECTORY.Pets.688 - Cosmic Axolotl.Pet Data (Cosmic Axolotl) -----  -  Editar
  04:54:13.611  -- Decompiled using Krnl
local function ToVec_1(p1)
	return Vector3.new(p1.R, p1.G, p1.B)
end
ToVec = ToVec_1
ToVec_1 = {}
ToVec_1.name = "Cosmic Axolotl"
ToVec_1.sounds = {
	random = {}
}
ToVec_1.fly = false
ToVec_1.weld = true
local v31 = {}
local v32 = {
	TextureId = "rbxassetid://14155237545", FixedScale = (Vector3.one) * 2, Brightness = (Vector3.one) * 3, Transparency = 0.5, ZIndex = 2, LogScale = 0.01, CameraDirection = (Vector3.one) * 0.4, AnimSpeed = (Vector3.new(1, 1, 0)) * 0.25
}
local v43 = {}
v43[1] = (ToVec(Color3.new(1, 1, 1))) * 0.25
v43[2] = (ToVec(Color3.new(1, 1, 1))) * 2
v32.BrightnessNoiseRange = v43
v32.TransparencyNoiseRange = {
	[1] = 0, [2] = 1
}
v31[1] = v32
ToVec_1.parralax = v31
ToVec_1.thumbnail = "rbxassetid://14151728294"
ToVec_1.goldenThumbnail = ""
ToVec_1.darkMatterThumbnail = ""
ToVec_1.rarity = "Exclusive"
ToVec_1.isPremium = false
ToVec_1.tradeable = true
ToVec_1.companionEnchantLevel = 1
ToVec_1.strengthMin = 0
ToVec_1.strengthMax = 0
return ToVec_1
  -  Editar
  04:54:13.611    -  Editar
  04:54:13.611  ----- [1756] ReplicatedStorage.__DIRECTORY.Pets.1043 - Anniversary Gift 2.Anniversary Gift 2 -----  -  Editar
  04:54:13.611  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.1043 - Anniversary Gift 2.Anniversary Gift 2
return {name = "Anniversary Gift 2023", isGift = true, giftEggId = "Anniversary Gift 2", giftCallback = (function(a1, a2) -- giftCallback

end), thumbnail = "rbxassetid://14125223265", rarity = "Exclusive", isPremium = true, canAuction = true, tradeable = true}  -  Editar
  04:54:13.611    -  Editar
  04:54:13.611  ----- [1757] ReplicatedStorage.__DIRECTORY.Pets.690 - Cosmic Agony.Pet Data (Cosmic Agony) -----  -  Editar
  04:54:13.611  -- Decompiled using Krnl
local function ToVec_1(p1)
	return Vector3.new(p1.R, p1.G, p1.B)
end
ToVec = ToVec_1
ToVec_1 = {}
ToVec_1.name = "Cosmic Agony"
ToVec_1.sounds = {
	random = {}
}
ToVec_1.fly = true
ToVec_1.weld = true
local v31 = {}
local v32 = {
	TextureId = "rbxassetid://14155237705", FixedScale = (Vector3.one) * 2, Brightness = (Vector3.one) * 3, Transparency = 0.5, ZIndex = 2, LogScale = 0.01, CameraDirection = (Vector3.one) * 0.4, AnimSpeed = (Vector3.new(1, 1, 0)) * 0.25
}
local v43 = {}
v43[1] = (ToVec(Color3.new(1, 1, 1))) * 0.25
v43[2] = (ToVec(Color3.new(1, 1, 1))) * 2
v32.BrightnessNoiseRange = v43
v32.TransparencyNoiseRange = {
	[1] = 0, [2] = 1
}
v31[1] = v32
ToVec_1.parralax = v31
ToVec_1.thumbnail = "rbxassetid://14151728461"
ToVec_1.goldenThumbnail = ""
ToVec_1.darkMatterThumbnail = ""
ToVec_1.rarity = "Exclusive"
ToVec_1.isPremium = false
ToVec_1.tradeable = true
ToVec_1.companionEnchantLevel = 3
ToVec_1.strengthMin = 0
ToVec_1.strengthMax = 0
return ToVec_1
  -  Editar
  04:54:13.611    -  Editar
  04:54:13.611  ----- [1758] ReplicatedStorage.__DIRECTORY.Pets.564 - Redstone Cat.Pet Data (Redstone Cat) -----  -  Editar
  04:54:13.612  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Redstone Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://13132850614", 
	goldenThumbnail = "rbxassetid://13132850821", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	companionEnchantLevel = 1, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.612    -  Editar
  04:54:13.612  ----- [1759] ReplicatedStorage.__DIRECTORY.Pets.565 - Emerald Monkey.Pet Data (Emerald Monkey) -----  -  Editar
  04:54:13.612  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Emerald Monkey", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://13132866594", 
	goldenThumbnail = "rbxassetid://13132866708", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	companionEnchantLevel = 2, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.612    -  Editar
  04:54:13.612  ----- [1760] ReplicatedStorage.__DIRECTORY.Pets.566 - Amethyst Dragon.Pet Data (Amethyst Dragon) -----  -  Editar
  04:54:13.612  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Amethyst Dragon", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	thumbnail = "rbxassetid://13132881933", 
	goldenThumbnail = "rbxassetid://13132882071", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	companionEnchantLevel = 3, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.612    -  Editar
  04:54:13.612  ----- [1761] ReplicatedStorage.__DIRECTORY.Pets.567 - Mystic Corgi.Pet Data (Mystic Corgi) -----  -  Editar
  04:54:13.612  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Mystic Corgi", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://13132897147", 
	goldenThumbnail = "rbxassetid://13132897298", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	hidden = true, 
	companionEnchantLevel = 3, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.612    -  Editar
  04:54:13.612  ----- [1762] ReplicatedStorage.__DIRECTORY.Pets.2179 - Huge Party Monkey.Pet Data (Huge Party Monkey) -----  -  Editar
  04:54:13.612  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2179 - Huge Party Monkey.Pet Data (Huge Party Monkey)
return {name = "Huge Party Monkey", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, huge = true, thumbnail = "rbxassetid://14134345478", goldenThumbnail = "rbxassetid://14134345615", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.613    -  Editar
  04:54:13.613  ----- [1763] ReplicatedStorage.__DIRECTORY.Pets.3014 - Titanic Mystic Corgi.Pet Data (Titanic Mystic Corgi) -----  -  Editar
  04:54:13.613  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Titanic Mystic Corgi", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478157336, 4478159184 }
	}, 
	fly = false, 
	titanic = true, 
	thumbnail = "rbxassetid://13132980374", 
	goldenThumbnail = "rbxassetid://13132980507", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = true, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.613    -  Editar
  04:54:13.613  ----- [1764] ReplicatedStorage.__DIRECTORY.Pets.1023 - Exclusive Egg 11.Exclusive Egg 11 -----  -  Editar
  04:54:13.613  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Exclusive Egg 11", 
	isGift = true, 
	giftEggId = "Exclusive Egg 11", 
	giftCallback = function(p1, p2)

	end, 
	thumbnail = "rbxassetid://12887279401", 
	rarity = "Exclusive", 
	isPremium = true, 
	canAuction = true, 
	tradeable = true
};
  -  Editar
  04:54:13.613    -  Editar
  04:54:13.613  ----- [1765] ReplicatedStorage.__DIRECTORY.Pets.687 - Party Monkey.Pet Data (Party Monkey) -----  -  Editar
  04:54:13.613  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.687 - Party Monkey.Pet Data (Party Monkey)
return {name = "Party Monkey", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://14134156650", goldenThumbnail = "rbxassetid://14134156822", darkMatterThumbnail = "rbxassetid://14134156968", rarity = "Event", isPremium = false, tradeable = true, companionEnchantLevel = 1, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.613    -  Editar
  04:54:13.613  ----- [1766] ReplicatedStorage.__DIRECTORY.Pets.1027 - Huge Machine Egg 2.Huge Machine Egg 2 -----  -  Editar
  04:54:13.613  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Machine Egg 2", 
	isGift = true, 
	giftEggId = "Huge Machine Egg 2", 
	giftCallback = function(p1, p2)

	end, 
	thumbnail = "rbxassetid://13179252322", 
	rarity = "Exclusive", 
	isPremium = true, 
	canAuction = true, 
	tradeable = true
};
  -  Editar
  04:54:13.613    -  Editar
  04:54:13.613  ----- [1767] ReplicatedStorage.__DIRECTORY.Pets.1028 - Exclusive Chroma Egg 1.Exclusive Chroma Egg 1 -----  -  Editar
  04:54:13.614  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Exclusive Chroma Egg 1", 
	isGift = true, 
	giftEggId = "Exclusive Chroma Egg 1", 
	giftCallback = function(p1, p2)

	end, 
	thumbnail = "rbxassetid://13565854247", 
	rarity = "Exclusive", 
	isPremium = true, 
	canAuction = true, 
	tradeable = true
};
  -  Editar
  04:54:13.614    -  Editar
  04:54:13.614  ----- [1768] ReplicatedStorage.__DIRECTORY.Pets.568 - M-10 PROTOTYPE.Pet Data (M-10 PROTOTYPE) -----  -  Editar
  04:54:13.614  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "M-10 PROTOTYPE", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { "rbxassetid://7503171384", "rbxassetid://7503171323", "rbxassetid://7503171418" }
	}, 
	fly = true, 
	thumbnail = "rbxassetid://13180150466", 
	goldenThumbnail = "rbxassetid://7487685420", 
	darkMatterThumbnail = "rbxassetid://7487686770", 
	rarity = "Event", 
	isPremium = false, 
	tradeable = true, 
	companionEnchantLevel = 1, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.614    -  Editar
  04:54:13.614  ----- [1769] ReplicatedStorage.__DIRECTORY.Pets.2110 - Huge Evolved Hell Rock.Pet Data (Huge Evolved Hell Rock) -----  -  Editar
  04:54:13.614  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Evolved Hell Rock", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://13234733029", 
	goldenThumbnail = "rbxassetid://10305178762", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	evolved = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.614    -  Editar
  04:54:13.614  ----- [1770] ReplicatedStorage.__DIRECTORY.Pets.2109 - Huge M-10 PROTOTYPE.Pet Data (Huge M-10 PROTOTYPE) -----  -  Editar
  04:54:13.614  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge M-10 PROTOTYPE", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { "rbxassetid://7503171384", "rbxassetid://7503171323", "rbxassetid://7503171418" }
	}, 
	fly = true, 
	huge = true, 
	thumbnail = "rbxassetid://13180177609", 
	goldenThumbnail = "rbxassetid://13180177772", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.614    -  Editar
  04:54:13.614  ----- [1771] ReplicatedStorage.__DIRECTORY.Pets.569 - Safari Dog.Pet Data (Safari Dog) -----  -  Editar
  04:54:13.614  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Safari Dog", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478157336, 4478159184 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://13283392266", 
	goldenThumbnail = "rbxassetid://13283392353", 
	darkMatterThumbnail = "", 
	rarity = "Event", 
	isPremium = false, 
	tradeable = true, 
	companionEnchantLevel = 1, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.614    -  Editar
  04:54:13.614  ----- [1772] ReplicatedStorage.__DIRECTORY.Pets.2115 - Huge Evolved Cupcake.Pet Data (Huge Evolved Cupcake) -----  -  Editar
  04:54:13.615  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Evolved Cupcake", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://13272246160", 
	goldenThumbnail = "rbxassetid://8997767062", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	evolved = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.615    -  Editar
  04:54:13.615  ----- [1773] ReplicatedStorage.__DIRECTORY.Pets.2029 - Huge White Balloon Cat.Pet Data (Huge White Balloon Cat) -----  -  Editar
  04:54:13.615  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge White Balloon Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { "rbxassetid://11604085784", "rbxassetid://11604085865" }
	}, 
	fly = true, 
	huge = true, 
	balloon = true, 
	thumbnail = "rbxassetid://11603933622", 
	goldenThumbnail = "", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = true, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.615    -  Editar
  04:54:13.615  ----- [1774] ReplicatedStorage.__DIRECTORY.Pets.570 - Pinata Cat.Pet Data (Pinata Cat) -----  -  Editar
  04:54:13.615  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Pi\195\177ata Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://13273238521", 
	goldenThumbnail = "rbxassetid://13273631190", 
	darkMatterThumbnail = "rbxassetid://13273636003", 
	rarity = "Rare", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 210000000000000, 
	strengthMax = 211000000000000
};
  -  Editar
  04:54:13.615    -  Editar
  04:54:13.615  ----- [1775] ReplicatedStorage.__DIRECTORY.Pets.571 - Pinata Dog.Pet Data (Pinata Dog) -----  -  Editar
  04:54:13.615  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Pi\195\177ata Dog", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478157336, 4478159184 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://13273254333", 
	goldenThumbnail = "rbxassetid://13273254401", 
	darkMatterThumbnail = "rbxassetid://13273256275", 
	rarity = "Epic", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 355000000000000, 
	strengthMax = 356000000000000
};
  -  Editar
  04:54:13.616    -  Editar
  04:54:13.616  ----- [1776] ReplicatedStorage.__DIRECTORY.Pets.572 - Chroma Balloon Dragon.Pet Data (Chroma Balloon Dragon) -----  -  Editar
  04:54:13.616  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Chroma Balloon Dragon", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { "rbxassetid://11604085784", "rbxassetid://11604085865" }
	}, 
	fly = true, 
	balloon = true, 
	thumbnail = "rbxassetid://13264077466", 
	goldenThumbnail = "", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = true, 
	tradeable = true, 
	hidden = true, 
	companionEnchantLevel = 1, 
	vertexColorGenerator = require(game:GetService("ReplicatedStorage"):WaitForChild("Assets"):WaitForChild("Chroma")["Exclusive Chroma Egg 1"]).randomColor, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.616    -  Editar
  04:54:13.616  ----- [1777] ReplicatedStorage.__DIRECTORY.Pets.573 - Chroma Balloon Corgi.Pet Data (Chroma Balloon Corgi) -----  -  Editar
  04:54:13.616  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Chroma Balloon Corgi", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { "rbxassetid://11604085784", "rbxassetid://11604085865" }
	}, 
	fly = true, 
	balloon = true, 
	thumbnail = "rbxassetid://13264077512", 
	goldenThumbnail = "", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = true, 
	tradeable = true, 
	hidden = true, 
	companionEnchantLevel = 2, 
	vertexColorGenerator = require(game:GetService("ReplicatedStorage"):WaitForChild("Assets"):WaitForChild("Chroma")["Exclusive Chroma Egg 1"]).randomColor, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.616    -  Editar
  04:54:13.616  ----- [1778] ReplicatedStorage.__DIRECTORY.Pets.574 - Chroma Balloon Axolotl.Pet Data (Chroma Balloon Axolotl) -----  -  Editar
  04:54:13.616  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Chroma Balloon Axolotl", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { "rbxassetid://11604085784", "rbxassetid://11604085865" }
	}, 
	fly = true, 
	balloon = true, 
	thumbnail = "rbxassetid://13264077585", 
	goldenThumbnail = "", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = true, 
	tradeable = true, 
	hidden = true, 
	companionEnchantLevel = 3, 
	vertexColorGenerator = require(game:GetService("ReplicatedStorage"):WaitForChild("Assets"):WaitForChild("Chroma")["Exclusive Chroma Egg 1"]).randomColor, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.616    -  Editar
  04:54:13.616  ----- [1779] ReplicatedStorage.__DIRECTORY.Pets.2049 - Huge Balloon Dragon.Pet Data (Huge Balloon Dragon) -----  -  Editar
  04:54:13.616  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Balloon Dragon", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { "rbxassetid://11604085784", "rbxassetid://11604085865" }
	}, 
	fly = true, 
	huge = true, 
	balloon = true, 
	thumbnail = "rbxassetid://11980287647", 
	goldenThumbnail = "rbxassetid://11967443005", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = true, 
	tradeable = true, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.616    -  Editar
  04:54:13.617  ----- [1780] ReplicatedStorage.__DIRECTORY.Pets.2114 - Huge Chroma Balloon Axolotl.Pet Data (Huge Chroma Balloon Axolotl) -----  -  Editar
  04:54:13.617  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Chroma Balloon Axolotl", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { "rbxassetid://11604085784", "rbxassetid://11604085865" }
	}, 
	fly = true, 
	huge = true, 
	balloon = true, 
	thumbnail = "rbxassetid://13264077944", 
	goldenThumbnail = "", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = true, 
	tradeable = true, 
	hidden = true, 
	vertexColorGenerator = require(game:GetService("ReplicatedStorage"):WaitForChild("Assets"):WaitForChild("Chroma")["Exclusive Chroma Egg 1"]).randomColor, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.617    -  Editar
  04:54:13.617  ----- [1781] ReplicatedStorage.__DIRECTORY.Pets.3015 - Titanic Chroma Balloon Monkey.Pet Data (Titanic Chroma Balloon Monkey) -----  -  Editar
  04:54:13.617  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Titanic Chroma Balloon Monkey", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { "rbxassetid://11604085784", "rbxassetid://11604085865" }
	}, 
	fly = true, 
	petFlyHeight = 1, 
	titanic = true, 
	balloon = true, 
	ridingGravity = 65.3346, 
	ridingJumpPower = 52.5, 
	ridingCameraOffset = Vector3.new(0, 4, 0), 
	thumbnail = "rbxassetid://13264077659", 
	goldenThumbnail = "", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = true, 
	tradeable = true, 
	hidden = true, 
	vertexColorGenerator = require(game:GetService("ReplicatedStorage"):WaitForChild("Assets"):WaitForChild("Chroma")["Exclusive Chroma Egg 1"]).randomColor, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.617    -  Editar
  04:54:13.617  ----- [1782] ReplicatedStorage.__DIRECTORY.Pets.1039 - Pirate Egg.Pirate Egg -----  -  Editar
  04:54:13.617  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.1039 - Pirate Egg.Pirate Egg
return {name = "Pirate Egg", isGift = true, giftEggId = "Pirate Egg", giftCallback = (function(a1, a2) -- giftCallback

end), thumbnail = "rbxassetid://13708864943", rarity = "Exclusive", isPremium = true, canAuction = true, tradeable = true}  -  Editar
  04:54:13.617    -  Editar
  04:54:13.617  ----- [1783] ReplicatedStorage.__DIRECTORY.Pets.575 - Sombrero Cat.Pet Data (Sombrero Cat) -----  -  Editar
  04:54:13.617  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Sombrero Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://13273268205", 
	goldenThumbnail = "rbxassetid://13273268282", 
	darkMatterThumbnail = "rbxassetid://13273270048", 
	rarity = "Legendary", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 620000000000000, 
	strengthMax = 630000000000000
};
  -  Editar
  04:54:13.617    -  Editar
  04:54:13.617  ----- [1784] ReplicatedStorage.__DIRECTORY.Pets.576 - Sombrero Chihuahua.Pet Data (Sombrero Chihuahua) -----  -  Editar
  04:54:13.618  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Sombrero Chihuahua", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478157336, 4478159184 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://13273278444", 
	goldenThumbnail = "rbxassetid://13273278506", 
	darkMatterThumbnail = "rbxassetid://13273279838", 
	rarity = "Mythical", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2900000000000000, 
	strengthMax = 2950000000000000
};
  -  Editar
  04:54:13.618    -  Editar
  04:54:13.618  ----- [1785] ReplicatedStorage.__DIRECTORY.Pets.2111 - Huge Safari Dog.Pet Data (Huge Safari Dog) -----  -  Editar
  04:54:13.618  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Safari Dog", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478157336, 4478159184 }
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://13283431239", 
	goldenThumbnail = "rbxassetid://13283431239", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.618    -  Editar
  04:54:13.618  ----- [1786] ReplicatedStorage.__DIRECTORY.Pets.2117 - Huge Evolved Pixel Cat.Pet Data (Huge Evolved Pixel Cat) -----  -  Editar
  04:54:13.618  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Evolved Pixel Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://13272245687", 
	goldenThumbnail = "rbxassetid://9201154001", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	evolved = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.618    -  Editar
  04:54:13.618  ----- [1787] ReplicatedStorage.__DIRECTORY.Pets.2116 - Huge Evolved Hacked Cat.Pet Data (Huge Evolved Hacked Cat) -----  -  Editar
  04:54:13.618  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Evolved Hacked Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://13272246018", 
	goldenThumbnail = "rbxassetid://8997767062", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	evolved = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.618    -  Editar
  04:54:13.618  ----- [1788] ReplicatedStorage.__DIRECTORY.Pets.2118 - Huge Evolved Pterodactyl.Pet Data (Huge Evolved Pterodactyl) -----  -  Editar
  04:54:13.618  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Evolved Pterodactyl", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	huge = true, 
	thumbnail = "rbxassetid://13272245568", 
	goldenThumbnail = "rbxassetid://12341796088", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	evolved = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.618    -  Editar
  04:54:13.618  ----- [1789] ReplicatedStorage.__DIRECTORY.Pets.2119 - Huge Evolved Peacock.Pet Data (Huge Evolved Peacock) -----  -  Editar
  04:54:13.619  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Evolved Peacock", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://13272245790", 
	goldenThumbnail = "rbxassetid://12343087245", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	evolved = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.619    -  Editar
  04:54:13.619  ----- [1790] ReplicatedStorage.__DIRECTORY.Pets.2124 - Huge Jelly Piggy.Pet Data (Huge Jelly Piggy) -----  -  Editar
  04:54:13.619  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2124 - Huge Jelly Piggy.Pet Data (Huge Jelly Piggy)

local v2 = {
	[1] = {
		title = "Jelly",
		desc = "Comes with a Coin inside! <font color=\"rgb(120, 120, 120)\">(50%)</font>",
		isUnique = true,
		dst = script:WaitForChild("Coin")
	},
	[2] = {
		title = "Jelly",
		desc = "Comes with Diamonds inside! <font color=\"rgb(120, 120, 120)\">(20%)</font>",
		isUnique = true,
		dst = script:WaitForChild("Diamonds")
	},
	[3] = {
		title = "Jelly",
		desc = "Comes with a Chest inside! <font color=\"rgb(120, 120, 120)\">(15%)</font>",
		isUnique = true,
		dst = script:WaitForChild("Chest")
	},
	[4] = {
		title = "Jelly",
		desc = "Comes with a Lucky Block inside! <font color=\"rgb(120, 120, 120)\">(10%)</font>",
		isUnique = true,
		dst = script:WaitForChild("LuckyBlock")
	},
	[5] = {
		title = "Jelly",
		desc = "Comes with a Maskot Pet inside! <font color=\"rgb(120, 120, 120)\">(5%)</font>",
		isUnique = true,
		dst = script:WaitForChild("Maskot")
	}
}
return {
	name = "Huge Jelly Piggy",
	model = script.Parent:FindFirstChild("Pet"),
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {random = {}}, 
	huge = true,
	weld = true, 
	jelly = true, 
	thumbnail = "rbxassetid://13352826989", 
	goldenThumbnail = "", 
	darkMatterThumbnail = "",
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3, 
	replacements = v2,
	replacementPool = v2
}  -  Editar
  04:54:13.619    -  Editar
  04:54:13.619  ----- [1791] ReplicatedStorage.__DIRECTORY.Pets.1019 - Huge Machine Egg 1.Huge Machine Egg 1 -----  -  Editar
  04:54:13.619  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Machine Egg 1", 
	isGift = true, 
	giftEggId = "Huge Machine Egg 1", 
	giftCallback = function(p1, p2)

	end, 
	thumbnail = "rbxassetid://12371662386", 
	rarity = "Exclusive", 
	isPremium = true, 
	canAuction = true, 
	tradeable = true
};
  -  Editar
  04:54:13.619    -  Editar
  04:54:13.619  ----- [1792] ReplicatedStorage.__DIRECTORY.Pets.2120 - Huge Evolved King Cobra.Pet Data (Huge Evolved King Cobra) -----  -  Editar
  04:54:13.619  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Evolved King Cobra", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://13272245877", 
	goldenThumbnail = "rbxassetid://12341921594", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	evolved = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.619    -  Editar
  04:54:13.619  ----- [1793] ReplicatedStorage.__DIRECTORY.Pets.577 - Cool Cat.Pet Data (Cool Cat) -----  -  Editar
  04:54:13.619  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cool Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://13280941470", 
	goldenThumbnail = "rbxassetid://13280941548", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	companionEnchantLevel = 1, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.619    -  Editar
  04:54:13.620  ----- [1794] ReplicatedStorage.__DIRECTORY.Pets.578 - Cool Corgi.Pet Data (Cool Corgi) -----  -  Editar
  04:54:13.620  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cool Corgi", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478157336, 4478159184 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://13281007187", 
	goldenThumbnail = "rbxassetid://13281007279", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	companionEnchantLevel = 2, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.620    -  Editar
  04:54:13.620  ----- [1795] ReplicatedStorage.__DIRECTORY.Pets.579 - Cool Dragon.Pet Data (Cool Dragon) -----  -  Editar
  04:54:13.620  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cool Dragon", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	thumbnail = "rbxassetid://13280961381", 
	goldenThumbnail = "rbxassetid://13280961524", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	companionEnchantLevel = 3, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.620    -  Editar
  04:54:13.620  ----- [1796] ReplicatedStorage.__DIRECTORY.Pets.315 - Storm Agony.Pet Data (Storm Agony) -----  -  Editar
  04:54:13.620  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Storm Agony", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	thumbnail = "rbxassetid://9200515520", 
	goldenThumbnail = "rbxassetid://11980500898", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = true, 
	tradeable = true, 
	convertPoints = 4, 
	strengthMin = 4500000000000, 
	strengthMax = 4500000000000
};
  -  Editar
  04:54:13.620    -  Editar
  04:54:13.620  ----- [1797] ReplicatedStorage.__DIRECTORY.Pets.580 - Jelly Cat.Pet Data (Jelly Cat) -----  -  Editar
  04:54:13.620  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.580 - Jelly Cat.Pet Data (Jelly Cat)
return {name = "Jelly Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, weld = true, jelly = true, thumbnail = "rbxassetid://13347540792", goldenThumbnail = "", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, hidden = true, companionEnchantLevel = 3, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.620    -  Editar
  04:54:13.620  ----- [1798] ReplicatedStorage.__DIRECTORY.Pets.581 - Jelly Corgi.Pet Data (Jelly Corgi) -----  -  Editar
  04:54:13.621  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.581 - Jelly Corgi.Pet Data (Jelly Corgi)
return {name = "Jelly Corgi", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, weld = true, jelly = true, thumbnail = "rbxassetid://13347540756", goldenThumbnail = "", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, companionEnchantLevel = 1, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.621    -  Editar
  04:54:13.621  ----- [1799] ReplicatedStorage.__DIRECTORY.Pets.582 - Jelly Panda.Pet Data (Jelly Panda) -----  -  Editar
  04:54:13.621  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.582 - Jelly Panda.Pet Data (Jelly Panda)
return {name = "Jelly Panda", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, weld = true, jelly = true, thumbnail = "rbxassetid://13347540705", goldenThumbnail = "", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, companionEnchantLevel = 2, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.621    -  Editar
  04:54:13.621  ----- [1800] ReplicatedStorage.__DIRECTORY.Pets.583 - Jelly Piggy.Pet Data (Jelly Piggy) -----  -  Editar
  04:54:13.621  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.583 - Jelly Piggy.Pet Data (Jelly Piggy)
return {name = "Jelly Piggy", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, weld = true, jelly = true, thumbnail = "rbxassetid://13347540607", goldenThumbnail = "", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, companionEnchantLevel = 3, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.621    -  Editar
  04:54:13.621  ----- [1801] ReplicatedStorage.__DIRECTORY.Pets.2125 - Huge Sombrero Chihuahua.Pet Data (Huge Sombrero Chihuahua) -----  -  Editar
  04:54:13.621  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2125 - Huge Sombrero Chihuahua.Pet Data (Huge Sombrero Chihuahua)
return {name = "Huge Sombrero Chihuahua", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = false, huge = true, thumbnail = "rbxassetid://13355287376", goldenThumbnail = "rbxassetid://13355287486", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.621    -  Editar
  04:54:13.621  ----- [1802] ReplicatedStorage.__DIRECTORY.Pets.3016 - Titanic Jelly Cat.Pet Data (Titanic Jelly Cat) -----  -  Editar
  04:54:13.622  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.3016 - Titanic Jelly Cat.Pet Data (Titanic Jelly Cat)
local v1 = {
	[1] = {
		title = "Jelly",
		desc = "Comes with a Coin inside! <font color=\"rgb(120, 120, 120)\">(50%)</font>",
		isUnique = true,
		dst = script:WaitForChild("Coin")
	},
	[2] = {
		title = "Jelly",
		desc = "Comes with Diamonds inside! <font color=\"rgb(120, 120, 120)\">(20%)</font>",
		isUnique = true,
		dst = script:WaitForChild("Diamonds")
	},
	[3] = {
		title = "Jelly",
		desc = "Comes with a Chest inside! <font color=\"rgb(120, 120, 120)\">(15%)</font>",
		isUnique = true,
		dst = script:WaitForChild("Chest")
	},
	[4] = {
		title = "Jelly",
		desc = "Comes with a Lucky Block inside! <font color=\"rgb(120, 120, 120)\">(10%)</font>",
		isUnique = true,
		dst = script:WaitForChild("LuckyBlock")
	},
	[5] = {
		title = "Jelly",
		desc = "Comes with a Maskot Pet inside! <font color=\"rgb(120, 120, 120)\">(4%)</font>",
		isUnique = true,
		dst = script:WaitForChild("Maskot")
	},
	[6] = {
		title = "Jelly",
		desc = "Comes with Preston inside! <font color=\"rgb(120, 120, 120)\">(1%)</font>",
		isUnique = true,
		dst = script:WaitForChild("BuildIntoGames")
	}
}
return {
	name = "Titanic Jelly Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"),
	sounds = {random = {}},
	titanic = true,
	weld = true,
	jelly = true, 
	thumbnail = "rbxassetid://13362439386",
	goldenThumbnail = "", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = true,
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3,
	replacements = v1,
	replacementPool = v1
}  -  Editar
  04:54:13.622    -  Editar
  04:54:13.622  ----- [1803] ReplicatedStorage.__DIRECTORY.Pets.584 - Sombrero Corgi.Pet Data (Sombrero Corgi) -----  -  Editar
  04:54:13.622  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.584 - Sombrero Corgi.Pet Data (Sombrero Corgi)
return {name = "Sombrero Corgi", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = false, thumbnail = "rbxassetid://13352907459", goldenThumbnail = "rbxassetid://13352907693", darkMatterThumbnail = "rbxassetid://13352910491", rarity = "Mythical", isPremium = false, tradeable = true, strengthMin = 3e+15, strengthMax = 3.05e+15}  -  Editar
  04:54:13.622    -  Editar
  04:54:13.622  ----- [1804] ReplicatedStorage.__DIRECTORY.Pets.585 - Sombrero Axolotl.Pet Data (Sombrero Axolotl) -----  -  Editar
  04:54:13.622  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.585 - Sombrero Axolotl.Pet Data (Sombrero Axolotl)
return {name = "Sombrero Axolotl", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13352926201", goldenThumbnail = "rbxassetid://13352926330", darkMatterThumbnail = "rbxassetid://13352929146", rarity = "Secret", isPremium = false, tradeable = true, strengthMin = 7.4e+15, strengthMax = 7.43e+15}  -  Editar
  04:54:13.622    -  Editar
  04:54:13.622  ----- [1805] ReplicatedStorage.__DIRECTORY.Pets.586 - Pinata Monkey.Pet Data (Pinata Monkey) -----  -  Editar
  04:54:13.622  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.586 - Pinata Monkey.Pet Data (Pinata Monkey)
return {name = "Pi00�00�ata Monkey", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13358658583", goldenThumbnail = "rbxassetid://13358658859", darkMatterThumbnail = "rbxassetid://13358664445", rarity = "Legendary", isPremium = false, tradeable = true, strengthMin = 6.3e+14, strengthMax = 6.4e+14}  -  Editar
  04:54:13.622    -  Editar
  04:54:13.622  ----- [1806] ReplicatedStorage.__DIRECTORY.Pets.2123 - Huge Jelly Corgi.Pet Data (Huge Jelly Corgi) -----  -  Editar
  04:54:13.622  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2123 - Huge Jelly Corgi.Pet Data (Huge Jelly Corgi)
local v2 = {
	[1] = {
		title = "Jelly",
		desc = "Comes with a Coin inside! <font color=\"rgb(120, 120, 120)\">(50%)</font>",
		isUnique = true,
		dst = script:WaitForChild("Coin")
	},
	[2] = {
		title = "Jelly",
		desc = "Comes with Diamonds inside! <font color=\"rgb(120, 120, 120)\">(20%)</font>",
		isUnique = true,
		dst = script:WaitForChild("Diamonds")
	},
	[3] = {
		title = "Jelly",
		desc = "Comes with a Chest inside! <font color=\"rgb(120, 120, 120)\">(15%)</font>",
		isUnique = true,
		dst = script:WaitForChild("Chest")
	},
	[4] = {
		title = "Jelly",
		desc = "Comes with a Lucky Block inside! <font color=\"rgb(120, 120, 120)\">(10%)</font>",
		isUnique = true,
		dst = script:WaitForChild("LuckyBlock")
	},
	[5] = {
		title = "Jelly",
		desc = "Comes with a Maskot Pet inside! <font color=\"rgb(120, 120, 120)\">(5%)</font>",
		isUnique = true,
		dst = script:WaitForChild("Maskot")
	}
}

return {
	name = "Huge Jelly Corgi",
	model = script.Parent:FindFirstChild("Pet"),
	modelGold = script.Parent:FindFirstChild("Golden"),
	sounds = {random = {}}, 
	huge = true, 
	weld = true, 
	jelly = true,
	thumbnail = "rbxassetid://13352827202",
	goldenThumbnail = "", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3, 
	replacements = v2,
	replacementPool = v2
}  -  Editar
  04:54:13.623    -  Editar
  04:54:13.623  ----- [1807] ReplicatedStorage.__DIRECTORY.Pets.2122 - Huge Cool Cat.Pet Data (Huge Cool Cat) -----  -  Editar
  04:54:13.623  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Cool Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://13281027288", 
	goldenThumbnail = "rbxassetid://13281027413", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.623    -  Editar
  04:54:13.623  ----- [1808] ReplicatedStorage.__DIRECTORY.Pets.1025 - Exclusive Egg 12.Exclusive Egg 12 -----  -  Editar
  04:54:13.623  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Exclusive Egg 12", 
	isGift = true, 
	giftEggId = "Exclusive Egg 12", 
	giftCallback = function(p1, p2)

	end, 
	thumbnail = "rbxassetid://13133002135", 
	rarity = "Exclusive", 
	isPremium = true, 
	canAuction = true, 
	tradeable = true
};
  -  Editar
  04:54:13.623    -  Editar
  04:54:13.623  ----- [1809] ReplicatedStorage.__DIRECTORY.Pets.2127 - Huge Party Penguin.Pet Data (Huge Party Penguin) -----  -  Editar
  04:54:13.623  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2127 - Huge Party Penguin.Pet Data (Huge Party Penguin)
return {name = "Huge Party Penguin", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, huge = true, thumbnail = "rbxassetid://13406411635", goldenThumbnail = "rbxassetid://13406057617", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.623    -  Editar
  04:54:13.623  ----- [1810] ReplicatedStorage.__DIRECTORY.Pets.3017 - Titanic Tiedye Cat.Pet Data (Titanic Tiedye Cat) -----  -  Editar
  04:54:13.623  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.3017 - Titanic Tiedye Cat.Pet Data (Titanic Tiedye Cat)
return {name = "Titanic Tiedye Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478156278, 4478156615}}, fly = false, titanic = true, thumbnail = "rbxassetid://13406316622", goldenThumbnail = "rbxassetid://13406316693", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.623    -  Editar
  04:54:13.623  ----- [1811] ReplicatedStorage.__DIRECTORY.Pets.3018 - Titanic Tiedye Dragon.Pet Data (Titanic Tiedye Dragon) -----  -  Editar
  04:54:13.624  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.3018 - Titanic Tiedye Dragon.Pet Data (Titanic Tiedye Dragon)
return {name = "Titanic Tiedye Dragon", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, titanic = true, thumbnail = "rbxassetid://13406316369", goldenThumbnail = "rbxassetid://13406316497", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.624    -  Editar
  04:54:13.624  ----- [1812] ReplicatedStorage.__DIRECTORY.Pets.587 - Stealth Dragon.Pet Data (Stealth Dragon) -----  -  Editar
  04:54:13.624  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.587 - Stealth Dragon.Pet Data (Stealth Dragon)
return {name = "Stealth Dragon", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, thumbnail = "rbxassetid://13406056213", goldenThumbnail = "rbxassetid://13406056353", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, hidden = true, companionEnchantLevel = 3, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.624    -  Editar
  04:54:13.624  ----- [1813] ReplicatedStorage.__DIRECTORY.Pets.588 - Stealth Bobcat.Pet Data (Stealth Bobcat) -----  -  Editar
  04:54:13.624  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.588 - Stealth Bobcat.Pet Data (Stealth Bobcat)
return {name = "Stealth Bobcat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13406056543", goldenThumbnail = "rbxassetid://13406056646", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, hidden = true, companionEnchantLevel = 3, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.624    -  Editar
  04:54:13.624  ----- [1814] ReplicatedStorage.__DIRECTORY.Pets.589 - Stealth Cat.Pet Data (Stealth Cat) -----  -  Editar
  04:54:13.624  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.589 - Stealth Cat.Pet Data (Stealth Cat)
return {name = "Stealth Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478156278, 4478156615}}, fly = false, thumbnail = "rbxassetid://13406056420", goldenThumbnail = "rbxassetid://13406056473", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, hidden = true, companionEnchantLevel = 3, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.625    -  Editar
  04:54:13.625  ----- [1815] ReplicatedStorage.__DIRECTORY.Pets.590 - Exquisite Cat.Pet Data (Exquisite Cat) -----  -  Editar
  04:54:13.625  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.590 - Exquisite Cat.Pet Data (Exquisite Cat)
return {name = "Exquisite Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478156278, 4478156615}}, fly = false, thumbnail = "rbxassetid://13406058141", goldenThumbnail = "rbxassetid://13406058302", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, hidden = true, companionEnchantLevel = 3, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.625    -  Editar
  04:54:13.625  ----- [1816] ReplicatedStorage.__DIRECTORY.Pets.591 - Exquisite Elephant.Pet Data (Exquisite Elephant) -----  -  Editar
  04:54:13.625  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.591 - Exquisite Elephant.Pet Data (Exquisite Elephant)
return {name = "Exquisite Elephant", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13406057868", goldenThumbnail = "rbxassetid://13406058027", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, hidden = true, companionEnchantLevel = 3, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.625    -  Editar
  04:54:13.625  ----- [1817] ReplicatedStorage.__DIRECTORY.Pets.592 - Exquisite Parrot.Pet Data (Exquisite Parrot) -----  -  Editar
  04:54:13.625  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.592 - Exquisite Parrot.Pet Data (Exquisite Parrot)
return {name = "Exquisite Parrot", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, thumbnail = "rbxassetid://13406057684", goldenThumbnail = "rbxassetid://13406057755", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, hidden = true, companionEnchantLevel = 3, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.625    -  Editar
  04:54:13.625  ----- [1818] ReplicatedStorage.__DIRECTORY.Pets.593 - Party Shark.Pet Data (Party Shark) -----  -  Editar
  04:54:13.626  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.593 - Party Shark.Pet Data (Party Shark)
return {name = "Party Shark", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13406057032", goldenThumbnail = "rbxassetid://13406057126", darkMatterThumbnail = "", rarity = "Event", isPremium = false, tradeable = true, companionEnchantLevel = 3, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.626    -  Editar
  04:54:13.626  ----- [1819] ReplicatedStorage.__DIRECTORY.Pets.594 - Party Penguin.Pet Data (Party Penguin) -----  -  Editar
  04:54:13.626  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.594 - Party Penguin.Pet Data (Party Penguin)
return {name = "Party Penguin", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13406057241", goldenThumbnail = "rbxassetid://13406057408", darkMatterThumbnail = "", rarity = "Event", isPremium = false, tradeable = true, companionEnchantLevel = 1, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.626    -  Editar
  04:54:13.626  ----- [1820] ReplicatedStorage.__DIRECTORY.Pets.595 - Party Squirrel.Pet Data (Party Squirrel) -----  -  Editar
  04:54:13.626  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.595 - Party Squirrel.Pet Data (Party Squirrel)
return {name = "Party Squirrel", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13406056789", goldenThumbnail = "rbxassetid://13406056916", darkMatterThumbnail = "", rarity = "Event", isPremium = false, tradeable = true, companionEnchantLevel = 2, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.626    -  Editar
  04:54:13.626  ----- [1821] ReplicatedStorage.__DIRECTORY.Pets.2126 - Huge BIG Maskot.Pet Data (Huge BIG Maskot) -----  -  Editar
  04:54:13.626  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2126 - Huge BIG Maskot.Pet Data (Huge BIG Maskot)
return {name = "Huge BIG Maskot", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, huge = true, thumbnail = "rbxassetid://13362710810", goldenThumbnail = "", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.626    -  Editar
  04:54:13.626  ----- [1822] ReplicatedStorage.__DIRECTORY.Pets.1031 - Hype Gift 3.Hype Gift 3 -----  -  Editar
  04:54:13.627  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.1031 - Hype Gift 3.Hype Gift 3
return {name = "Update Hype Gift", isGift = true, giftEggId = "Hype Gift 3", giftCallback = (function(a1, a2) -- giftCallback

end), thumbnail = "rbxassetid://13405676662", rarity = "Exclusive", isPremium = true, tradeable = true}  -  Editar
  04:54:13.627    -  Editar
  04:54:13.627  ----- [1823] ReplicatedStorage.__DIRECTORY.Pets.2128 - Huge Stealth Dragon.Pet Data (Huge Stealth Dragon) -----  -  Editar
  04:54:13.627  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2128 - Huge Stealth Dragon.Pet Data (Huge Stealth Dragon)
return {name = "Huge Stealth Dragon", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, huge = true, thumbnail = "rbxassetid://13542475432", goldenThumbnail = "rbxassetid://13542475493", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.627    -  Editar
  04:54:13.627  ----- [1824] ReplicatedStorage.__DIRECTORY.Pets.2129 - Huge Exquisite Cat.Pet Data (Huge Exquisite Cat) -----  -  Editar
  04:54:13.627  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2129 - Huge Exquisite Cat.Pet Data (Huge Exquisite Cat)
return {name = "Huge Exquisite Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478156278, 4478156615}}, fly = false, huge = true, thumbnail = "rbxassetid://13542475704", goldenThumbnail = "rbxassetid://13542475806", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.627    -  Editar
  04:54:13.627  ----- [1825] ReplicatedStorage.__DIRECTORY.Pets.2130 - Huge Exquisite Parrot .Pet Data (Huge Exquisite Parrot) -----  -  Editar
  04:54:13.627  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2130 - Huge Exquisite Parrot .Pet Data (Huge Exquisite Parrot)
return {name = "Huge Exquisite Parrot", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, huge = true, thumbnail = "rbxassetid://13542475572", goldenThumbnail = "rbxassetid://13542475626", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.627    -  Editar
  04:54:13.628  ----- [1826] ReplicatedStorage.__DIRECTORY.Pets.596 - Kawaii Tiger.Pet Data (Kawaii Tiger) -----  -  Editar
  04:54:13.628  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.596 - Kawaii Tiger.Pet Data (Kawaii Tiger)
return {name = "Kawaii Tiger", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13406444336", goldenThumbnail = "rbxassetid://13406444424", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, hidden = true, companionEnchantLevel = 2, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.628    -  Editar
  04:54:13.628  ----- [1827] ReplicatedStorage.__DIRECTORY.Pets.597 - Lucki Cat.Pet Data (Lucki Cat) -----  -  Editar
  04:54:13.628  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.597 - Lucki Cat.Pet Data (Lucki Cat)
return {name = "Lucki Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478156278, 4478156615}}, fly = true, thumbnail = "rbxassetid://13426858135", goldenThumbnail = "rbxassetid://13426858261", darkMatterThumbnail = "rbxassetid://13426858367", rarity = "Epic", isPremium = false, tradeable = true, strengthMin = 3.75e+14, strengthMax = 3.76e+14}  -  Editar
  04:54:13.628    -  Editar
  04:54:13.628  ----- [1828] ReplicatedStorage.__DIRECTORY.Pets.598 - Lucki Monkey.Pet Data (Lucki Monkey) -----  -  Editar
  04:54:13.628  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.598 - Lucki Monkey.Pet Data (Lucki Monkey)
return {name = "Lucki Monkey", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, thumbnail = "rbxassetid://13426857548", goldenThumbnail = "rbxassetid://13426857781", darkMatterThumbnail = "rbxassetid://13426857979", rarity = "Legendary", isPremium = false, tradeable = true, strengthMin = 6.6e+14, strengthMax = 6.7e+14}  -  Editar
  04:54:13.628    -  Editar
  04:54:13.628  ----- [1829] ReplicatedStorage.__DIRECTORY.Pets.2131 - Huge Chroma Lucki.Pet Data (Huge Chroma Lucki) -----  -  Editar
  04:54:13.628  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2131 - Huge Chroma Lucki.Pet Data (Huge Chroma Lucki)
local v1 = {
	[1] = {Name = "Yellow", Color = Color3.fromRGB(255, 221, 60), Magnitude = 1, Weight = 35},
	[2] = {Name = "Pink", Color = Color3.fromRGB(239, 124, 239), Magnitude = 1, Weight = 30},
	[3] = {Name = "Blue", Color = Color3.fromRGB(0, 132, 255), Magnitude = 1, Weight = 20},
	[4] = {Name = "Orange", Color = Color3.fromRGB(255, 123, 0), Magnitude = 1, Weight = 10},
	[5] = {Name = "Red", Color = Color3.fromRGB(255, 83, 83), Magnitude = 1, Weight = 4},
	[6] = {Name = "Purple", Color = Color3.fromRGB(170, 63, 255), Magnitude = 1, Weight = 1}
}

for v10,v11 in pairs(v1) do
	local v12 = v11.Weight
	if 0 < v12 then
		v11.Id = v10
		v11.Name = v11.Name
		v11.Color = v11.Color
		v11.Magnitude = 1 * v11.Magnitude or 1
		v11.Chance = v11.Weight
		v1[v10] = v11
	end
end

return {
	name = "Huge Chroma Lucki",
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {random = {}},
	fly = true,
	huge = true,
	thumbnail = "rbxassetid://14258625994",
	goldenThumbnail = "",
	darkMatterThumbnail = "",
	rarity = "Exclusive",
	isPremium = false, 
	tradeable = true, 
	thumbnailOverlay = "rbxassetid://14258625994",
	colorVariants = v1,
	preventGolden = true,
	strengthMin = 2,
	strengthMax = 3,
	colorReplacements = {
		[1] = {
			title = "Chroma",
			desc = "Comes in a Yellow color! (35%)",
			isUnique = true
		},
		[2] = {
			title = "Chroma",
			desc = "Comes in a Pink color! (30%)",
			isUnique = true
		},
		[3] = {
			title = "Chroma",
			desc = "Comes in a Blue color! (20%)",
			isUnique = true
		},
		[4] = {
			title = "Chroma",
			desc = "Comes in a Orange color! (10%)",
			isUnique = true
		},
		[5] = {
			title = "Chroma",
			desc = "Comes in a Red color! (4%)",
			isUnique = true
		},
		[6] = {
			title = "Chroma",
			desc = "Comes in a Purple color! (1%)",
			isUnique = true
		}
	}
}

  -  Editar
  04:54:13.628    -  Editar
  04:54:13.628  ----- [1830] ReplicatedStorage.__DIRECTORY.Pets.2132 - Huge Chroma Lucky Block Mimic.Pet Data (Huge Chroma Lucky Block Mimic) -----  -  Editar
  04:54:13.629  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2131 - Huge Chroma Lucki.Pet Data (Huge Chroma Lucki)
local v1 = {
	[1] = {Name = "Yellow", Color = Color3.fromRGB(255, 221, 60), Magnitude = 1, Weight = 35},
	[2] = {Name = "Pink", Color = Color3.fromRGB(239, 124, 239), Magnitude = 1, Weight = 30},
	[3] = {Name = "Blue", Color = Color3.fromRGB(0, 132, 255), Magnitude = 1, Weight = 20},
	[4] = {Name = "Orange", Color = Color3.fromRGB(255, 123, 0), Magnitude = 1, Weight = 10},
	[5] = {Name = "Red", Color = Color3.fromRGB(255, 83, 83), Magnitude = 1, Weight = 4},
	[6] = {Name = "Purple", Color = Color3.fromRGB(170, 63, 255), Magnitude = 1, Weight = 1}
}

for v10,v11 in pairs(v1) do
	local v12 = v11.Weight
	if 0 < v12 then
		v11.Id = v10
		v11.Name = v11.Name
		v11.Color = v11.Color
		v11.Magnitude = 1 * v11.Magnitude or 1
		v11.Chance = v11.Weight
		v1[v10] = v11
	end
end

return {
	name = "Huge Chroma Lucky Block Mimic",
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {random = {}},
	fly = true,
	huge = true,
	thumbnail = "rbxassetid://14258635192",
	goldenThumbnail = "",
	darkMatterThumbnail = "",
	rarity = "Exclusive",
	isPremium = false, 
	tradeable = true, 
	thumbnailOverlay = "rbxassetid://14258635192",
	colorVariants = v1,
	preventGolden = true,
	strengthMin = 2,
	strengthMax = 3,
	colorReplacements = {
		[1] = {
			title = "Chroma",
			desc = "Comes in a Yellow color! (35%)",
			isUnique = true
		},
		[2] = {
			title = "Chroma",
			desc = "Comes in a Pink color! (30%)",
			isUnique = true
		},
		[3] = {
			title = "Chroma",
			desc = "Comes in a Blue color! (20%)",
			isUnique = true
		},
		[4] = {
			title = "Chroma",
			desc = "Comes in a Orange color! (10%)",
			isUnique = true
		},
		[5] = {
			title = "Chroma",
			desc = "Comes in a Red color! (4%)",
			isUnique = true
		},
		[6] = {
			title = "Chroma",
			desc = "Comes in a Purple color! (1%)",
			isUnique = true
		}
	}
}

  -  Editar
  04:54:13.629    -  Editar
  04:54:13.629  ----- [1831] ReplicatedStorage.__DIRECTORY.Pets.599 - Lucki Tiger.Pet Data (Lucki Tiger) -----  -  Editar
  04:54:13.629  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.599 - Lucki Tiger.Pet Data (Lucki Tiger)
return {name = "Lucki Tiger", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, thumbnail = "rbxassetid://13426857029", goldenThumbnail = "rbxassetid://13426857214", darkMatterThumbnail = "rbxassetid://13426857363", rarity = "Mythical", isPremium = false, tradeable = true, strengthMin = 3.3e+15, strengthMax = 3.35e+15}  -  Editar
  04:54:13.629    -  Editar
  04:54:13.629  ----- [1832] ReplicatedStorage.__DIRECTORY.Pets.1030 - Exclusive Egg 13.Exclusive Egg 13 -----  -  Editar
  04:54:13.629  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.1030 - Exclusive Egg 13.Exclusive Egg 13
return {name = "Exclusive Egg 13", isGift = true, giftEggId = "Exclusive Egg 13", giftCallback = (function(a1, a2) -- giftCallback

end), thumbnail = "rbxassetid://13356892618", rarity = "Exclusive", isPremium = true, canAuction = true, tradeable = true}  -  Editar
  04:54:13.629    -  Editar
  04:54:13.629  ----- [1833] ReplicatedStorage.__DIRECTORY.Pets.600 - Mosaic Cat.Pet Data (Mosaic Cat) -----  -  Editar
  04:54:13.629  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.600 - Mosaic Cat.Pet Data (Mosaic Cat)
return {name = "Mosaic Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478156278, 4478156615}}, fly = false, thumbnail = "rbxassetid://13542185647", goldenThumbnail = "rbxassetid://13542185735", darkMatterThumbnail = "rbxassetid://13542185789", rarity = "Exclusive", isPremium = true, tradeable = true, companionEnchantLevel = 2, hidden = true, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.629    -  Editar
  04:54:13.629  ----- [1834] ReplicatedStorage.__DIRECTORY.Pets.602 - Mosaic Elephant.Pet Data (Mosaic Elephant) -----  -  Editar
  04:54:13.629  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.602 - Mosaic Elephant.Pet Data (Mosaic Elephant)
return {name = "Mosaic Elephant", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13542185495", goldenThumbnail = "rbxassetid://13542185555", darkMatterThumbnail = "rbxassetid://13542185596", rarity = "Exclusive", isPremium = true, tradeable = true, companionEnchantLevel = 2, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.629    -  Editar
  04:54:13.629  ----- [1835] ReplicatedStorage.__DIRECTORY.Pets.603 - Mosaic Lamb.Pet Data (Mosaic Lamb) -----  -  Editar
  04:54:13.630  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.603 - Mosaic Lamb.Pet Data (Mosaic Lamb)
return {name = "Mosaic Lamb", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13542185359", goldenThumbnail = "rbxassetid://13542185416", darkMatterThumbnail = "rbxassetid://13542185450", rarity = "Exclusive", isPremium = true, tradeable = true, companionEnchantLevel = 2, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.630    -  Editar
  04:54:13.630  ----- [1836] ReplicatedStorage.__DIRECTORY.Pets.604 - Firefighter Dalmatian.Pet Data (Firefighter Dalmatian) -----  -  Editar
  04:54:13.630  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.604 - Firefighter Dalmatian.Pet Data (Firefighter Dalmatian)
return {name = "Firefighter Dalmatian", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = false, thumbnail = "rbxassetid://13542186376", goldenThumbnail = "rbxassetid://13542186429", darkMatterThumbnail = "rbxassetid://13542186512", rarity = "Legendary", isPremium = false, tradeable = true, strengthMin = 1.18e+15, strengthMax = 1.21e+15}  -  Editar
  04:54:13.630    -  Editar
  04:54:13.630  ----- [1837] ReplicatedStorage.__DIRECTORY.Pets.605 - Umbrella Dog.Pet Data (Umbrella Dog) -----  -  Editar
  04:54:13.630  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.605 - Umbrella Dog.Pet Data (Umbrella Dog)
return {name = "Umbrella Dog", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = true, flyHeight = 1, flyHeightChange = 4, flySpeed = 0.4, weld = true, thumbnail = "rbxassetid://13542183249", goldenThumbnail = "rbxassetid://13542183294", darkMatterThumbnail = "rbxassetid://13542183366", rarity = "Rare", isPremium = false, tradeable = true, strengthMin = 3.65e+14, strengthMax = 3.67e+14}  -  Editar
  04:54:13.630    -  Editar
  04:54:13.630  ----- [1838] ReplicatedStorage.__DIRECTORY.Pets.606 - Basketball Retriever.Pet Data (Basketball Retriever) -----  -  Editar
  04:54:13.630  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.606 - Basketball Retriever.Pet Data (Basketball Retriever)
return {name = "Basketball Retriever", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = false, weld = true, thumbnail = "rbxassetid://13542186930", goldenThumbnail = "rbxassetid://13542186982", darkMatterThumbnail = "rbxassetid://13542187025", rarity = "Legendary", isPremium = false, tradeable = true, strengthMin = 1.55e+15, strengthMax = 1.58e+15}  -  Editar
  04:54:13.630    -  Editar
  04:54:13.630  ----- [1839] ReplicatedStorage.__DIRECTORY.Pets.607 - Skateboard Bulldog.Pet Data (Skateboard Bulldog) -----  -  Editar
  04:54:13.630  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.607 - Skateboard Bulldog.Pet Data (Skateboard Bulldog)
return {name = "Skateboard Bulldog", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, weld = true, fly = true, flyHeight = 0.025, flyHeightChange = 0, swerve = true, swerveAggression = 1, swerveMaxAngle = 60, thumbnail = "rbxassetid://13542184511", goldenThumbnail = "rbxassetid://13542184602", darkMatterThumbnail = "rbxassetid://13542184696", rarity = "Epic", isPremium = false, tradeable = true, strengthMin = 8.65e+14, strengthMax = 8.67e+14}  -  Editar
  04:54:13.631    -  Editar
  04:54:13.631  ----- [1840] ReplicatedStorage.__DIRECTORY.Pets.608 - Bubble Dog.Pet Data (Bubble Dog) -----  -  Editar
  04:54:13.631  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.608 - Bubble Dog.Pet Data (Bubble Dog)
return {name = "Bubble Dog", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = true, balloon = true, thumbnail = "rbxassetid://13542594915", goldenThumbnail = "rbxassetid://13542594977", darkMatterThumbnail = "rbxassetid://13542596268", rarity = "Legendary", isPremium = false, tradeable = true, strengthMin = 1e+15, strengthMax = 1.03e+15}  -  Editar
  04:54:13.631    -  Editar
  04:54:13.631  ----- [1841] ReplicatedStorage.__DIRECTORY.Pets.609 - Detective Terrier.Pet Data (Detective Terrier) -----  -  Editar
  04:54:13.631  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.609 - Detective Terrier.Pet Data (Detective Terrier)
return {name = "Detective Terrier", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = false, thumbnail = "rbxassetid://13542186693", goldenThumbnail = "rbxassetid://13542186777", darkMatterThumbnail = "rbxassetid://13542186869", rarity = "Basic", isPremium = false, tradeable = true, strengthMin = 2.4e+14, strengthMax = 2.42e+14}  -  Editar
  04:54:13.631    -  Editar
  04:54:13.631  ----- [1842] ReplicatedStorage.__DIRECTORY.Pets.610 - Robber Pug.Pet Data (Robber Pug) -----  -  Editar
  04:54:13.631  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.610 - Robber Pug.Pet Data (Robber Pug)
return {name = "Robber Pug", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = false, thumbnail = "rbxassetid://13542184753", goldenThumbnail = "rbxassetid://13542184816", darkMatterThumbnail = "rbxassetid://13542184897", rarity = "Epic", isPremium = false, tradeable = true, strengthMin = 7.25e+14, strengthMax = 7.27e+14}  -  Editar
  04:54:13.631    -  Editar
  04:54:13.631  ----- [1843] ReplicatedStorage.__DIRECTORY.Pets.611 - Punksky.Pet Data (Punksky) -----  -  Editar
  04:54:13.631  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.611 - Punksky.Pet Data (Punksky)
return {name = "Punksky", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = false, thumbnail = "rbxassetid://13542184969", goldenThumbnail = "rbxassetid://13542185044", darkMatterThumbnail = "rbxassetid://13542185114", rarity = "Rare", isPremium = false, tradeable = true, strengthMin = 3e+14, strengthMax = 3.02e+14}  -  Editar
  04:54:13.632    -  Editar
  04:54:13.632  ----- [1844] ReplicatedStorage.__DIRECTORY.Pets.612 - Wizard Westie.Pet Data (Wizard Westie) -----  -  Editar
  04:54:13.632  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.612 - Wizard Westie.Pet Data (Wizard Westie)
return {name = "Wizard Westie", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = false, thumbnail = "rbxassetid://13542183056", goldenThumbnail = "rbxassetid://13542183107", darkMatterThumbnail = "rbxassetid://13542183195", rarity = "Basic", isPremium = false, tradeable = true, strengthMin = 1.35e+14, strengthMax = 1.37e+14}  -  Editar
  04:54:13.632    -  Editar
  04:54:13.632  ----- [1845] ReplicatedStorage.__DIRECTORY.Pets.613 - Torpedo Shepherd.Pet Data (Torpedo Shepherd) -----  -  Editar
  04:54:13.632  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.613 - Torpedo Shepherd.Pet Data (Torpedo Shepherd)
return {name = "Torpedo Shepherd", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = true, flyHeightChange = 0.15, thumbnail = "rbxassetid://13542183420", goldenThumbnail = "rbxassetid://13542183483", darkMatterThumbnail = "rbxassetid://13542183574", rarity = "Epic", isPremium = false, tradeable = true, strengthMin = 4.65e+14, strengthMax = 4.67e+14}  -  Editar
  04:54:13.632    -  Editar
  04:54:13.632  ----- [1846] ReplicatedStorage.__DIRECTORY.Pets.614 - Atomic Corgi.Pet Data (Atomic Corgi) -----  -  Editar
  04:54:13.632  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.614 - Atomic Corgi.Pet Data (Atomic Corgi)
return {name = "Atomic Corgi", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = true, weld = true, thumbnail = "rbxassetid://13542187098", goldenThumbnail = "rbxassetid://13542187211", darkMatterThumbnail = "rbxassetid://13542187340", rarity = "Secret", isPremium = false, tradeable = true, strengthMin = 1.6e+16, strengthMax = 1.65e+16}  -  Editar
  04:54:13.632    -  Editar
  04:54:13.632  ----- [1847] ReplicatedStorage.__DIRECTORY.Pets.615 - Nerd Collie.Pet Data (Nerd Collie) -----  -  Editar
  04:54:13.633  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.615 - Nerd Collie.Pet Data (Nerd Collie)
return {name = "Nerd Collie", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = false, thumbnail = "rbxassetid://13542185154", goldenThumbnail = "rbxassetid://13542185225", darkMatterThumbnail = "rbxassetid://13542185319", rarity = "Rare", isPremium = false, tradeable = true, strengthMin = 4.55e+14, strengthMax = 4.57e+14}  -  Editar
  04:54:13.633    -  Editar
  04:54:13.633  ----- [1848] ReplicatedStorage.__DIRECTORY.Pets.616 - Hot Dog.Pet Data (Hot Dog) -----  -  Editar
  04:54:13.633  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.616 - Hot Dog.Pet Data (Hot Dog)
return {name = "Hot Dog", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = false, thumbnail = "rbxassetid://13542185844", goldenThumbnail = "rbxassetid://13542185894", darkMatterThumbnail = "rbxassetid://13542185983", rarity = "Mythical", isPremium = false, tradeable = true, strengthMin = 6.4e+15, strengthMax = 6.45e+15}  -  Editar
  04:54:13.633    -  Editar
  04:54:13.633  ----- [1849] ReplicatedStorage.__DIRECTORY.Pets.2133 - Huge Tiedye Bunny.Pet Data (Huge Tiedye Bunny) -----  -  Editar
  04:54:13.633  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2133 - Huge Tiedye Bunny.Pet Data (Huge Tiedye Bunny)
return {name = "Huge Tiedye Bunny", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, huge = true, thumbnail = "rbxassetid://13542474740", goldenThumbnail = "rbxassetid://13542474833", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.633    -  Editar
  04:54:13.633  ----- [1850] ReplicatedStorage.__DIRECTORY.Pets.2134 - Huge Tiedye Axolotl.Pet Data (Huge Tiedye Axolotl) -----  -  Editar
  04:54:13.633  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2134 - Huge Tiedye Axolotl.Pet Data (Huge Tiedye Axolotl)
return {name = "Huge Tiedye Axolotl", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, huge = true, thumbnail = "rbxassetid://13542475116", goldenThumbnail = "rbxassetid://13542475179", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.633    -  Editar
  04:54:13.634  ----- [1851] ReplicatedStorage.__DIRECTORY.Pets.2135 - Huge Mosaic Lamb.Pet Data (Huge Mosaic Lamb) -----  -  Editar
  04:54:13.634  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2135 - Huge Mosaic Lamb.Pet Data (Huge Mosaic Lamb)
return {name = "Huge Mosaic Lamb", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, huge = true, thumbnail = "rbxassetid://13542474942", goldenThumbnail = "rbxassetid://13542475029", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.634    -  Editar
  04:54:13.634  ----- [1852] ReplicatedStorage.__DIRECTORY.Pets.2136 - Huge Stealth Bobcat.Pet Data (Huge Stealth Bobcat) -----  -  Editar
  04:54:13.634  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2136 - Huge Stealth Bobcat.Pet Data (Huge Stealth Bobcat)
return {name = "Huge Stealth Bobcat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, huge = true, thumbnail = "rbxassetid://13558116682", goldenThumbnail = "rbxassetid://13558116954", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.634    -  Editar
  04:54:13.634  ----- [1853] ReplicatedStorage.__DIRECTORY.Pets.617 - Gamer Shiba.Pet Data (Gamer Shiba) -----  -  Editar
  04:54:13.634  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.617 - Gamer Shiba.Pet Data (Gamer Shiba)
return {name = "Gamer Shiba", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = false, thumbnail = "rbxassetid://13542186121", goldenThumbnail = "rbxassetid://13542186220", darkMatterThumbnail = "rbxassetid://13542186328", rarity = "Epic", isPremium = false, tradeable = true, strengthMin = 7.9e+14, strengthMax = 7.92e+14}  -  Editar
  04:54:13.634    -  Editar
  04:54:13.634  ----- [1854] ReplicatedStorage.__DIRECTORY.Pets.618 - Tiedye Dog.Pet Data (Tiedye Dog) -----  -  Editar
  04:54:13.634  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.618 - Tiedye Dog.Pet Data (Tiedye Dog)
return {name = "Tiedye Dog", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = false, thumbnail = "rbxassetid://13542183860", goldenThumbnail = "rbxassetid://13542183895", darkMatterThumbnail = "rbxassetid://13542183941", rarity = "Exclusive", isPremium = true, tradeable = true, companionEnchantLevel = 2, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.634    -  Editar
  04:54:13.634  ----- [1855] ReplicatedStorage.__DIRECTORY.Pets.619 - Tiedye Bunny.Pet Data (Tiedye Bunny) -----  -  Editar
  04:54:13.635  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.619 - Tiedye Bunny.Pet Data (Tiedye Bunny)
return {name = "Tiedye Bunny", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13542184011", goldenThumbnail = "rbxassetid://13542184098", darkMatterThumbnail = "rbxassetid://13542184232", rarity = "Exclusive", isPremium = true, tradeable = true, companionEnchantLevel = 2, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.635    -  Editar
  04:54:13.635  ----- [1856] ReplicatedStorage.__DIRECTORY.Pets.620 - Tiedye Axolotl.Pet Data (Tiedye Axolotl) -----  -  Editar
  04:54:13.635  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.620 - Tiedye Axolotl.Pet Data (Tiedye Axolotl)
return {name = "Tiedye Axolotl", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13542184301", goldenThumbnail = "rbxassetid://13542184390", darkMatterThumbnail = "rbxassetid://13542184453", rarity = "Exclusive", isPremium = true, tradeable = true, companionEnchantLevel = 2, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.635    -  Editar
  04:54:13.635  ----- [1857] ReplicatedStorage.__DIRECTORY.Pets.621 - Tiedye Griffin.Pet Data (Tiedye Griffin) -----  -  Editar
  04:54:13.635  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.621 - Tiedye Griffin.Pet Data (Tiedye Griffin)
return {name = "Tiedye Griffin", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, thumbnail = "rbxassetid://13542183665", goldenThumbnail = "rbxassetid://13542183730", darkMatterThumbnail = "rbxassetid://13542183796", rarity = "Exclusive", isPremium = true, tradeable = true, companionEnchantLevel = 2, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.635    -  Editar
  04:54:13.635  ----- [1858] ReplicatedStorage.__DIRECTORY.Pets.622 - Bluebird.Pet Data (Bluebird) -----  -  Editar
  04:54:13.635  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.622 - Bluebird.Pet Data (Bluebird)
return {name = "Bluebird", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, thumbnail = "rbxassetid://13542311745", goldenThumbnail = "rbxassetid://13542311829", darkMatterThumbnail = "rbxassetid://13542311921", rarity = "Exclusive", isPremium = false, tradeable = true, companionEnchantLevel = 2, hidden = true, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.635    -  Editar
  04:54:13.635  ----- [1859] ReplicatedStorage.__DIRECTORY.Pets.2137 - Huge Bluebird.Pet Data (Huge Bluebird) -----  -  Editar
  04:54:13.635  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2137 - Huge Bluebird.Pet Data (Huge Bluebird)
return {name = "Huge Bluebird", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, huge = true, thumbnail = "rbxassetid://13542475383", goldenThumbnail = "rbxassetid://13542475325", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, hidden = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.636    -  Editar
  04:54:13.636  ----- [1860] ReplicatedStorage.__DIRECTORY.Pets.2138 - Huge Pixel Corgi.Pet Data (Huge Pixel Corgi) -----  -  Editar
  04:54:13.636  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2138 - Huge Pixel Corgi.Pet Data (Huge Pixel Corgi)
return {name = "Huge Pixel Corgi", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = false, huge = true, thumbnail = "rbxassetid://13550342765", goldenThumbnail = "rbxassetid://13550342933", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.636    -  Editar
  04:54:13.636  ----- [1861] ReplicatedStorage.__DIRECTORY.Pets.2139 - Huge Cyborg Cat.Pet Data (Huge Cyborg Cat) -----  -  Editar
  04:54:13.636  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2139 - Huge Cyborg Cat.Pet Data (Huge Cyborg Cat)
return {name = "Huge Cyborg Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478156278, 4478156615}}, fly = false, huge = true, thumbnail = "rbxassetid://13550343642", goldenThumbnail = "rbxassetid://13550343707", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.636    -  Editar
  04:54:13.636  ----- [1862] ReplicatedStorage.__DIRECTORY.Pets.2140 - Huge Pixel Wolf.Pet Data (Huge Pixel Wolf) -----  -  Editar
  04:54:13.636  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2140 - Huge Pixel Wolf.Pet Data (Huge Pixel Wolf)
return {name = "Huge Pixel Wolf", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, huge = true, thumbnail = "rbxassetid://13550342349", goldenThumbnail = "rbxassetid://13550342477", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.636    -  Editar
  04:54:13.636  ----- [1863] ReplicatedStorage.__DIRECTORY.Pets.2141 - Huge Cyborg Dragon.Pet Data (Huge Cyborg Dragon) -----  -  Editar
  04:54:13.636  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2141 - Huge Cyborg Dragon.Pet Data (Huge Cyborg Dragon)
return {name = "Huge Cyborg Dragon", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, huge = true, thumbnail = "rbxassetid://13550343498", goldenThumbnail = "rbxassetid://13550343580", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.637    -  Editar
  04:54:13.637  ----- [1864] ReplicatedStorage.__DIRECTORY.Pets.2142 - Huge Pixel Dragon.Pet Data (Huge Pixel Dragon) -----  -  Editar
  04:54:13.637  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2142 - Huge Pixel Dragon.Pet Data (Huge Pixel Dragon)
return {name = "Huge Pixel Dragon", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, huge = true, thumbnail = "rbxassetid://13550342589", goldenThumbnail = "rbxassetid://13550342678", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.637    -  Editar
  04:54:13.637  ----- [1865] ReplicatedStorage.__DIRECTORY.Pets.2143 - Huge Ghost.Pet Data (Huge Ghost) -----  -  Editar
  04:54:13.637  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2143 - Huge Ghost.Pet Data (Huge Ghost)
return {name = "Huge Ghost", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, huge = true, thumbnail = "rbxassetid://13550343033", goldenThumbnail = "rbxassetid://13550343124", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.637    -  Editar
  04:54:13.637  ----- [1866] ReplicatedStorage.__DIRECTORY.Pets.2144 - Huge Doodle Snow Owl.Pet Data (Huge Doodle Snow Owl) -----  -  Editar
  04:54:13.637  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2144 - Huge Doodle Snow Owl.Pet Data (Huge Doodle Snow Owl)
return {name = "Huge Doodle Snow Owl", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, huge = true, thumbnail = "rbxassetid://13550343435", goldenThumbnail = "rbxassetid://13550343370", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.637    -  Editar
  04:54:13.637  ----- [1867] ReplicatedStorage.__DIRECTORY.Pets.2145 - Huge Mimic Tech Chest.Pet Data (Huge Mimic Tech Chest) -----  -  Editar
  04:54:13.637  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2145 - Huge Mimic Tech Chest.Pet Data (Huge Mimic Tech Chest)
return {name = "Huge Tech Chest Mimic", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, huge = true, thumbnail = "rbxassetid://13560272936", goldenThumbnail = "rbxassetid://13560273050", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.638    -  Editar
  04:54:13.638  ----- [1868] ReplicatedStorage.__DIRECTORY.Pets.2148 - Huge Basketball Retriever.Pet Data (Huge Basketball Retriever) -----  -  Editar
  04:54:13.638  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2148 - Huge Basketball Retriever.Pet Data (Huge Basketball Retriever)
return {name = "Huge Basketball Retriever", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, huge = true, weld = true, thumbnail = "rbxassetid://13548447800", goldenThumbnail = "rbxassetid://13548447901", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.638    -  Editar
  04:54:13.638  ----- [1869] ReplicatedStorage.__DIRECTORY.Pets.3020 - Titanic Pink Balloon.Pet Data (Titanic Pink Balloon) -----  -  Editar
  04:54:13.638  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.3020 - Titanic Pink Balloon.Pet Data (Titanic Pink Balloon)
return {name = "Titanic Pink Balloon", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {"rbxassetid://11604085784", "rbxassetid://11604085865"}}, fly = true, titanic = true, balloon = true, thumbnail = "rbxassetid://13550341805", goldenThumbnail = "rbxassetid://13550341927", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, hidden = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.638    -  Editar
  04:54:13.638  ----- [1870] ReplicatedStorage.__DIRECTORY.Pets.3021 - Titanic Sad Cat.Pet Data (Titanic Sad Cat) -----  -  Editar
  04:54:13.638  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.3021 - Titanic Sad Cat.Pet Data (Titanic Sad Cat)
return {name = "Titanic Sad Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478156278, 4478156615}}, fly = false, titanic = true, thumbnail = "rbxassetid://13550341590", goldenThumbnail = "rbxassetid://13550341687", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, hidden = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.638    -  Editar
  04:54:13.639  ----- [1871] ReplicatedStorage.__DIRECTORY.Pets.3022 - Titanic Axolotl.Pet Data (Titanic Axolotl) -----  -  Editar
  04:54:13.639  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.3022 - Titanic Axolotl.Pet Data (Titanic Axolotl)
return {name = "Titanic Axolotl", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, titanic = true, thumbnail = "rbxassetid://13550342001", goldenThumbnail = "rbxassetid://13550342094", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, hidden = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.639    -  Editar
  04:54:13.639  ----- [1872] ReplicatedStorage.__DIRECTORY.Pets.2146 - Huge Empyrean Agony.Pet Data (Huge Empyrean Agony) -----  -  Editar
  04:54:13.639  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2146 - Huge Empyrean Agony.Pet Data (Huge Empyrean Agony)
return {name = "Huge Empyrean Agony", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, huge = true, thumbnail = "rbxassetid://13550343210", goldenThumbnail = "rbxassetid://13560187146", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.639    -  Editar
  04:54:13.639  ----- [1873] ReplicatedStorage.__DIRECTORY.Pets.2147 - Huge Firefighter Dalmatian.Pet Data (Huge Firefighter Dalmatian) -----  -  Editar
  04:54:13.639  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2147 - Huge Firefighter Dalmatian.Pet Data (Huge Firefighter Dalmatian)
return {name = "Huge Firefighter Dalmation", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, huge = true, thumbnail = "rbxassetid://13548467495", goldenThumbnail = "rbxassetid://13548467625", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.639    -  Editar
  04:54:13.639  ----- [1874] ReplicatedStorage.__DIRECTORY.Pets.2149 - Huge Purple Balloon Cat.Pet Data (Huge Purple Balloon Cat) -----  -  Editar
  04:54:13.639  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2149 - Huge Purple Balloon Cat.Pet Data (Huge Purple Balloon Cat)
return {name = "Huge Purple Balloon Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {"rbxassetid://11604085784", "rbxassetid://11604085865"}}, fly = true, huge = true, balloon = true, thumbnail = "rbxassetid://13550342177", goldenThumbnail = "rbxassetid://11452579968", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, hidden = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.639    -  Editar
  04:54:13.639  ----- [1875] ReplicatedStorage.__DIRECTORY.Pets.2150 - Huge Black Balloon Cat.Pet Data (Huge Black Balloon Cat) -----  -  Editar
  04:54:13.640  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2150 - Huge Black Balloon Cat.Pet Data (Huge Black Balloon Cat)
return {name = "Huge Black Balloon Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {"rbxassetid://11604085784", "rbxassetid://11604085865"}}, fly = true, huge = true, balloon = true, thumbnail = "rbxassetid://13550343763", goldenThumbnail = "rbxassetid://11452579968", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, hidden = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.640    -  Editar
  04:54:13.640  ----- [1876] ReplicatedStorage.__DIRECTORY.Pets.2153 - Huge Nightmare Kraken.Pet Data (Huge Nightmare Kraken) -----  -  Editar
  04:54:13.640  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2153 - Huge Nightmare Kraken.Pet Data (Huge Nightmare Kraken)
return {name = "Huge Nightmare Kraken", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, huge = true, fly = true, flyHeight = -0.06, flyHeightChange = 0, swerve = true, swerveAggression = 1, swerveMaxAngle = 60, weld = true, thumbnail = "rbxassetid://13561649041", goldenThumbnail = "rbxassetid://13561649197", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.640    -  Editar
  04:54:13.640  ----- [1877] ReplicatedStorage.__DIRECTORY.Pets.623 - Hot Dooooog.Pet Data (Hot Dooooog) -----  -  Editar
  04:54:13.640  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.623 - Hot Dooooog.Pet Data (Hot Dooooog)
return {name = "Hot Dooooog", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = false, thumbnail = "rbxassetid://13559015857", goldenThumbnail = "rbxassetid://13559015956", darkMatterThumbnail = "rbxassetid://13559016104", rarity = "Exclusive", isPremium = false, tradeable = true, companionEnchantLevel = 2, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.640    -  Editar
  04:54:13.640  ----- [1878] ReplicatedStorage.__DIRECTORY.Pets.1032 - Season 2 Basic Gift.Season 2 Basic Gift -----  -  Editar
  04:54:13.640  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.1032 - Season 2 Basic Gift.Season 2 Basic Gift
return {name = "Season 2 Basic Gift", isGift = true, giftEggId = "Season 2 Basic Gift", giftCallback = (function(a1, a2) -- giftCallback
local L_Library_1 = game:GetService("ServerScriptService"):WaitForChild("Library")
require(L_Library_1.Achievements).Add(a1, "Open Giftboxes", 1)
local v1 = {{50000000, 100}, {75000000, 60}, {100000000, 40}, {150000000, 30}}
local v2 = require(game:GetService("ReplicatedStorage"):WaitForChild("Library").Functions).Lottery(v1)
require(L_Library_1.Give).GiveCurrency(a1, "Diamonds", v2, "gift")
end), thumbnail = "rbxassetid://13559508205", rarity = "Exclusive", isPremium = true, canAuction = true, tradeable = true}  -  Editar
  04:54:13.640    -  Editar
  04:54:13.640  ----- [1879] ReplicatedStorage.__DIRECTORY.Pets.1033 - Season 2 Rare Gift.Season 2 Rare Gift -----  -  Editar
  04:54:13.641  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.1033 - Season 2 Rare Gift.Season 2 Rare Gift
return {name = "Season 2 Rare Gift", isGift = true, giftEggId = "Season 2 Rare Gift", giftCallback = (function(a1, a2) -- giftCallback
local L_Library_1 = game:GetService("ServerScriptService"):WaitForChild("Library")
require(L_Library_1.Achievements).Add(a1, "Open Giftboxes", 1)
local v1 = {{100000000, 100}, {150000000, 60}, {200000000, 40}, {250000000, 30}}
local v2 = require(game:GetService("ReplicatedStorage"):WaitForChild("Library").Functions).Lottery(v1)
require(L_Library_1.Give).GiveCurrency(a1, "Diamonds", v2, "gift")
end), thumbnail = "rbxassetid://13559508840", rarity = "Exclusive", isPremium = true, canAuction = true, tradeable = true}  -  Editar
  04:54:13.641    -  Editar
  04:54:13.641  ----- [1880] ReplicatedStorage.__DIRECTORY.Pets.1034 - Season 2 Epic Gift.Season 2 Epic Gift -----  -  Editar
  04:54:13.641  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.1034 - Season 2 Epic Gift.Season 2 Epic Gift
return {name = "Season 2 Epic Gift", isGift = true, giftEggId = "Season 2 Epic Gift", giftCallback = (function(a1, a2) -- giftCallback
local L_Library_1 = game:GetService("ServerScriptService"):WaitForChild("Library")
require(L_Library_1.Achievements).Add(a1, "Open Giftboxes", 1)
local v1 = {{150000000, 100}, {200000000, 60}, {250000000, 40}, {300000000, 30}}
local v2 = require(game:GetService("ReplicatedStorage"):WaitForChild("Library").Functions).Lottery(v1)
require(L_Library_1.Give).GiveCurrency(a1, "Diamonds", v2, "gift")
end), thumbnail = "rbxassetid://13559508333", rarity = "Exclusive", isPremium = true, canAuction = true, tradeable = true}  -  Editar
  04:54:13.641    -  Editar
  04:54:13.641  ----- [1881] ReplicatedStorage.__DIRECTORY.Pets.1035 - Season 2 Legendary Gift.Season 2 Legendary Gift -----  -  Editar
  04:54:13.641  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.1035 - Season 2 Legendary Gift.Season 2 Legendary Gift
return {name = "Season 2 Legendary Gift", isGift = true, giftEggId = "Season 2 Legendary Gift", giftCallback = (function(a1, a2) -- giftCallback
local L_Library_1 = game:GetService("ServerScriptService"):WaitForChild("Library")
require(L_Library_1.Achievements).Add(a1, "Open Giftboxes", 1)
local v1 = {{250000000, 100}, {325000000, 60}, {400000000, 40}, {600000000, 30}}
local v2 = require(game:GetService("ReplicatedStorage"):WaitForChild("Library").Functions).Lottery(v1)
require(L_Library_1.Give).GiveCurrency(a1, "Diamonds", v2, "gift")
end), thumbnail = "rbxassetid://13559508446", rarity = "Exclusive", isPremium = true, canAuction = true, tradeable = true}  -  Editar
  04:54:13.641    -  Editar
  04:54:13.641  ----- [1882] ReplicatedStorage.__DIRECTORY.Pets.1036 - Season 2 Mythical Gift.Season 2 Mythical Gift -----  -  Editar
  04:54:13.641  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.1036 - Season 2 Mythical Gift.Season 2 Mythical Gift
return {name = "Season 2 Mythical Gift",
	isGift = true, giftEggId = "Season 2 Mythical Gift",
	giftCallback = (function(a1, a2) -- giftCallback
local L_Library_1 = game:GetService("ServerScriptService"):WaitForChild("Library")
require(L_Library_1.Achievements).Add(a1, "Open Giftboxes", 1)
local v1 = {{375000000, 100}, {600000000, 60}, {750000000, 40}, {1000000000, 30}}
local v2 = require(game:GetService("ReplicatedStorage"):WaitForChild("Library").Functions).Lottery(v1)
require(L_Library_1.Give).GiveCurrency(a1, "Diamonds", v2, "gift")
	end), 
	thumbnail = "rbxassetid://13559508641", 
	rarity = "Exclusive",
	isPremium = true,
	canAuction = true,
	tradeable = true}  -  Editar
  04:54:13.641    -  Editar
  04:54:13.641  ----- [1883] ReplicatedStorage.__DIRECTORY.Pets.624 - Nightmare Cat.Pet Data (Nightmare Cat) -----  -  Editar
  04:54:13.641  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.624 - Nightmare Cat.Pet Data (Nightmare Cat)
return {name = "Nightmare Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13559653069", goldenThumbnail = "rbxassetid://13559653176", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, hidden = true, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.642    -  Editar
  04:54:13.642  ----- [1884] ReplicatedStorage.__DIRECTORY.Pets.625 - Nightmare Spirit.Pet Data (Nightmare Spirit) -----  -  Editar
  04:54:13.642  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.625 - Nightmare Spirit.Pet Data (Nightmare Spirit)
return {name = "Nightmare Spirit", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, weld = true, thumbnail = "rbxassetid://13561656658", goldenThumbnail = "rbxassetid://13561656762", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, companionEnchantLevel = 1, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.642    -  Editar
  04:54:13.642  ----- [1885] ReplicatedStorage.__DIRECTORY.Pets.626 - Nightmare Bear.Pet Data (Nightmare Bear) -----  -  Editar
  04:54:13.642  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.626 - Nightmare Bear.Pet Data (Nightmare Bear)
return {name = "Nightmare Bear", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13559854724", goldenThumbnail = "rbxassetid://13559855127", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, companionEnchantLevel = 2, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.642    -  Editar
  04:54:13.642  ----- [1886] ReplicatedStorage.__DIRECTORY.Pets.627 - Nightmare Kraken.Pet Data (Nightmare Kraken) -----  -  Editar
  04:54:13.642  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.627 - Nightmare Kraken.Pet Data (Nightmare Kraken)
return {name = "Nightmare Kraken", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, flyHeight = -0.06, flyHeightChange = 0, swerve = true, swerveAggression = 1, swerveMaxAngle = 60, weld = true, thumbnail = "rbxassetid://13561545465", goldenThumbnail = "rbxassetid://13561545643", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, companionEnchantLevel = 3, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.642    -  Editar
  04:54:13.642  ----- [1887] ReplicatedStorage.__DIRECTORY.Pets.3023 - Titanic Nightmare Cat.Pet Data (Titanic Nightmare Cat) -----  -  Editar
  04:54:13.643  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.3023 - Titanic Nightmare Cat.Pet Data (Titanic Nightmare Cat)
return {
	name = "Titanic Nightmare Cat",
	model = script.Parent:FindFirstChild("Pet"),
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {random = {4478156278, 4478156615}}, 
	fly = false,
	titanic = true, 
	balloon = true, 
	balloonSpeed = 0.25,
	balloonScale = Vector3.new(0, 0, 1),
	thumbnail = "rbxassetid://13561599143", 
	goldenThumbnail = "rbxassetid://13561599239", 
	darkMatterThumbnail = "", rarity = "Exclusive", 
	isPremium = true, 
	tradeable = true,
	strengthMin = 2,
	strengthMax = 3
}  -  Editar
  04:54:13.643    -  Editar
  04:54:13.643  ----- [1888] ReplicatedStorage.__DIRECTORY.Pets.2151 - Huge Beans Balloon Cat.Pet Data (Huge Beans Balloon Cat) -----  -  Editar
  04:54:13.643  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2151 - Huge Beans Balloon Cat.Pet Data (Huge Beans Balloon Cat)
return {name = "Huge Beans Balloon Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {"rbxassetid://11604085784", "rbxassetid://11604085865"}}, fly = true, huge = true, balloon = true, thumbnail = "rbxassetid://13550343860", goldenThumbnail = "rbxassetid://11452579968", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, hidden = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.643    -  Editar
  04:54:13.643  ----- [1889] ReplicatedStorage.__DIRECTORY.Pets.2152 - Huge Nightmare Spirit.Pet Data (Huge Nightmare Spirit) -----  -  Editar
  04:54:13.643  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2152 - Huge Nightmare Spirit.Pet Data (Huge Nightmare Spirit)
return {name = "Huge Nightmare Spirit", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, huge = true, weld = true, thumbnail = "rbxassetid://13563372548", goldenThumbnail = "rbxassetid://13563372761", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.643    -  Editar
  04:54:13.643  ----- [1890] ReplicatedStorage.__DIRECTORY.Pets.628 - Floatie Ducky.Pet Data (Floatie Ducky) -----  -  Editar
  04:54:13.643  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.628 - Floatie Ducky.Pet Data (Floatie Ducky)
return {name = "Floatie Ducky", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13704693719", goldenThumbnail = "rbxassetid://13704693822", darkMatterThumbnail = "rbxassetid://13704754317", rarity = "Basic", isPremium = false, tradeable = true, strengthMin = 1.25e+14, strengthMax = 1.27e+14}  -  Editar
  04:54:13.643    -  Editar
  04:54:13.643  ----- [1891] ReplicatedStorage.__DIRECTORY.Pets.629 - Floatie Flamingo.Pet Data (Floatie Flamingo) -----  -  Editar
  04:54:13.643  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.629 - Floatie Flamingo.Pet Data (Floatie Flamingo)
return {name = "Floatie Flamingo", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13704693446", goldenThumbnail = "rbxassetid://13704693587", darkMatterThumbnail = "rbxassetid://13704754211", rarity = "Rare", isPremium = false, tradeable = true, strengthMin = 2.8e+14, strengthMax = 2.82e+14}  -  Editar
  04:54:13.643    -  Editar
  04:54:13.644  ----- [1892] ReplicatedStorage.__DIRECTORY.Pets.630 - Beach Ball Monkey.Pet Data (Beach Ball Monkey) -----  -  Editar
  04:54:13.644  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.630 - Beach Ball Monkey.Pet Data (Beach Ball Monkey)
return {name = "Beach Ball Monkey", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, weld = true, thumbnail = "rbxassetid://13704844890", goldenThumbnail = "rbxassetid://13704843654", darkMatterThumbnail = "rbxassetid://13704843735", rarity = "Rare", isPremium = false, tradeable = true, strengthMin = 3.45e+14, strengthMax = 3.47e+14}  -  Editar
  04:54:13.644    -  Editar
  04:54:13.644  ----- [1893] ReplicatedStorage.__DIRECTORY.Pets.631 - Beach Ball Dolphin.Pet Data (Beach Ball Dolphin) -----  -  Editar
  04:54:13.644  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.631 - Beach Ball Dolphin.Pet Data (Beach Ball Dolphin)
return {name = "Beach Ball Dolphin", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, weld = true, thumbnail = "rbxassetid://13704843843", goldenThumbnail = "rbxassetid://13704844031", darkMatterThumbnail = "rbxassetid://13704844262", rarity = "Epic", isPremium = false, tradeable = true, strengthMin = 4.35e+14, strengthMax = 4.37e+14}  -  Editar
  04:54:13.644    -  Editar
  04:54:13.644  ----- [1894] ReplicatedStorage.__DIRECTORY.Pets.632 - Surfboard Axolotl.Pet Data (Surfboard Axolotl) -----  -  Editar
  04:54:13.644  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.632 - Surfboard Axolotl.Pet Data (Surfboard Axolotl)
return {name = "Surfboard Axolotl", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, flyHeight = 0.025, flyHeightChange = 0.025, swerve = true, swerveAggression = 1, swerveMaxAngle = 60, thumbnail = "rbxassetid://13704691202", goldenThumbnail = "rbxassetid://13704691355", darkMatterThumbnail = "rbxassetid://13704753600", rarity = "Legendary", isPremium = false, tradeable = true, strengthMin = 9e+14, strengthMax = 9.3e+14}  -  Editar
  04:54:13.644    -  Editar
  04:54:13.644  ----- [1895] ReplicatedStorage.__DIRECTORY.Pets.633 - Surfboard Corgi.Pet Data (Surfboard Corgi) -----  -  Editar
  04:54:13.644  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.633 - Surfboard Corgi.Pet Data (Surfboard Corgi)
return {name = "Surfboard Corgi", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = true, flyHeight = 0.025, flyHeightChange = 0.025, swerve = true, swerveAggression = 1, swerveMaxAngle = 60, thumbnail = "rbxassetid://13704690961", goldenThumbnail = "rbxassetid://13704691057", darkMatterThumbnail = "rbxassetid://13704753523", rarity = "Epic", isPremium = false, tradeable = true, strengthMin = 5e+14, strengthMax = 5.02e+14}  -  Editar
  04:54:13.644    -  Editar
  04:54:13.644  ----- [1896] ReplicatedStorage.__DIRECTORY.Pets.2156 - Huge Pirate Parrot.Pet Data (Huge Pirate Parrot) -----  -  Editar
  04:54:13.645  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2156 - Huge Pirate Parrot.Pet Data (Huge Pirate Parrot)
return {name = "Huge Pirate Parrot", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, huge = true, thumbnail = "rbxassetid://13704692837", goldenThumbnail = "rbxassetid://13704693015", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.645    -  Editar
  04:54:13.645  ----- [1897] ReplicatedStorage.__DIRECTORY.Pets.634 - Pineapple Cat.Pet Data (Pineapple Cat) -----  -  Editar
  04:54:13.645  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.634 - Pineapple Cat.Pet Data (Pineapple Cat)
return {name = "Pineapple Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478156278, 4478156615}}, thumbnail = "rbxassetid://13704692212", goldenThumbnail = "rbxassetid://13704692260", darkMatterThumbnail = "rbxassetid://13704754117", rarity = "Mythical", isPremium = false, tradeable = true, strengthMin = 6.55e+15, strengthMax = 6.6e+15}  -  Editar
  04:54:13.645    -  Editar
  04:54:13.645  ----- [1898] ReplicatedStorage.__DIRECTORY.Pets.635 - Sailor Shark.Pet Data (Sailor Shark) -----  -  Editar
  04:54:13.645  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.635 - Sailor Shark.Pet Data (Sailor Shark)
return {name = "Sailor Shark", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13704691636", goldenThumbnail = "rbxassetid://13704691708", darkMatterThumbnail = "rbxassetid://13704753702", rarity = "Event", isPremium = false, tradeable = true, companionEnchantLevel = 1, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.645    -  Editar
  04:54:13.645  ----- [1899] ReplicatedStorage.__DIRECTORY.Pets.636 - Pirate Panda.Pet Data (Pirate Panda) -----  -  Editar
  04:54:13.645  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.636 - Pirate Panda.Pet Data (Pirate Panda)
return {name = "Pirate Panda", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13704692042", goldenThumbnail = "rbxassetid://13704692140", darkMatterThumbnail = "rbxassetid://13704753871", rarity = "Event", isPremium = false, tradeable = true, companionEnchantLevel = 2, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.645    -  Editar
  04:54:13.645  ----- [1900] ReplicatedStorage.__DIRECTORY.Pets.637 - Pirate Parrot.Pet Data (Pirate Parrot) -----  -  Editar
  04:54:13.645  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.637 - Pirate Parrot.Pet Data (Pirate Parrot)
return {name = "Pirate Parrot", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, thumbnail = "rbxassetid://13704691837", goldenThumbnail = "rbxassetid://13704691942", darkMatterThumbnail = "rbxassetid://13704754027", rarity = "Event", isPremium = false, tradeable = true, companionEnchantLevel = 3, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.645    -  Editar
  04:54:13.646  ----- [1901] ReplicatedStorage.__DIRECTORY.Pets.2154 - Huge Pineapple Cat.Pet Data (Huge Pineapple Cat) -----  -  Editar
  04:54:13.646  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2154 - Huge Pineapple Cat.Pet Data (Huge Pineapple Cat)
return {name = "Huge Pineapple Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478156278, 4478156615}}, huge = true, thumbnail = "rbxassetid://13704693162", goldenThumbnail = "rbxassetid://13704693350", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.646    -  Editar
  04:54:13.646  ----- [1902] ReplicatedStorage.__DIRECTORY.Pets.2155 - Huge Sailor Shark.Pet Data (Huge Sailor Shark) -----  -  Editar
  04:54:13.646  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2155 - Huge Sailor Shark.Pet Data (Huge Sailor Shark)
return {name = "Huge Sailor Shark", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, huge = true, thumbnail = "rbxassetid://13704692434", goldenThumbnail = "rbxassetid://13704692625", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.646    -  Editar
  04:54:13.646  ----- [1903] ReplicatedStorage.__DIRECTORY.Pets.1042 - Sandcastle Egg.Sandcastle Egg -----  -  Editar
  04:54:13.646  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.1042 - Sandcastle Egg.Sandcastle Egg
return {name = "Sandcastle Egg", isGift = true, giftEggId = "Sandcastle Egg", giftCallback = (function(a1, a2) -- giftCallback

end), thumbnail = "rbxassetid://13992192890", rarity = "Exclusive", isPremium = true, canAuction = true, tradeable = true}  -  Editar
  04:54:13.646    -  Editar
  04:54:13.646  ----- [1904] ReplicatedStorage.__DIRECTORY.Pets.1038 - Sailor Egg.Sailor Egg -----  -  Editar
  04:54:13.646  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.1038 - Sailor Egg.Sailor Egg
return {name = "Sailor Egg", isGift = true, giftEggId = "Sailor Egg", giftCallback = (function(a1, a2) -- giftCallback

end), thumbnail = "rbxassetid://13708864551", rarity = "Exclusive", isPremium = true, canAuction = true, tradeable = true}  -  Editar
  04:54:13.646    -  Editar
  04:54:13.647  ----- [1905] ReplicatedStorage.__DIRECTORY.Pets.3024 - Titanic Hot Dooooog.Pet Data (Titanic Hot Dooooog) -----  -  Editar
  04:54:13.647  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.3024 - Titanic Hot Dooooog.Pet Data (Titanic Hot Dooooog)
return {name = "Titanic Hot Dooooog", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = false, titanic = true, thumbnail = "rbxassetid://13705053903", goldenThumbnail = "rbxassetid://13705054032", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, hidden = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.647    -  Editar
  04:54:13.647  ----- [1906] ReplicatedStorage.__DIRECTORY.Pets.2159 - Huge Butterfly.Pet Data (Huge Butterfly) -----  -  Editar
  04:54:13.647  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2159 - Huge Butterfly.Pet Data (Huge Butterfly)
return {name = "Huge Butterfly", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, huge = true, thumbnail = "rbxassetid://13843920818", goldenThumbnail = "rbxassetid://13843920949", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.647    -  Editar
  04:54:13.647  ----- [1907] ReplicatedStorage.__DIRECTORY.Pets.638 - Scuba Dog.Pet Data (Scuba Dog) -----  -  Editar
  04:54:13.647  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.638 - Scuba Dog.Pet Data (Scuba Dog)
return {name = "Scuba Dog", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = false, thumbnail = "rbxassetid://13813314212", goldenThumbnail = "rbxassetid://13813314353", darkMatterThumbnail = "rbxassetid://13813314523", rarity = "Rare", isPremium = false, tradeable = true, strengthMin = 3.9e+14, strengthMax = 3.93e+14}  -  Editar
  04:54:13.647    -  Editar
  04:54:13.647  ----- [1908] ReplicatedStorage.__DIRECTORY.Pets.639 - Luau Cat.Pet Data (Luau Cat) -----  -  Editar
  04:54:13.647  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.639 - Luau Cat.Pet Data (Luau Cat)
return {name = "Luau Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478156278, 4478156615}}, fly = false, thumbnail = "rbxassetid://13813315339", goldenThumbnail = "rbxassetid://13813315523", darkMatterThumbnail = "rbxassetid://13813315636", rarity = "Epic", isPremium = false, tradeable = true, strengthMin = 7e+14, strengthMax = 7.03e+14}  -  Editar
  04:54:13.647    -  Editar
  04:54:13.647  ----- [1909] ReplicatedStorage.__DIRECTORY.Pets.640 - Luau Seal.Pet Data (Luau Seal) -----  -  Editar
  04:54:13.647  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.640 - Luau Seal.Pet Data (Luau Seal)
return {name = "Luau Seal", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13813314958", goldenThumbnail = "rbxassetid://13813315119", darkMatterThumbnail = "rbxassetid://13813315237", rarity = "Epic", isPremium = false, tradeable = true, strengthMin = 6.1e+14, strengthMax = 6.13e+14}  -  Editar
  04:54:13.647    -  Editar
  04:54:13.648  ----- [1910] ReplicatedStorage.__DIRECTORY.Pets.641 - Pufferfish.Pet Data (Pufferfish) -----  -  Editar
  04:54:13.648  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.641 - Pufferfish.Pet Data (Pufferfish)
return {name = "Pufferfish", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, balloon = true, thumbnail = "rbxassetid://13813314618", goldenThumbnail = "rbxassetid://13813314723", darkMatterThumbnail = "rbxassetid://13813314842", rarity = "Legendary", isPremium = false, tradeable = true, strengthMin = 1.25e+15, strengthMax = 1.28e+15}  -  Editar
  04:54:13.648    -  Editar
  04:54:13.648  ----- [1911] ReplicatedStorage.__DIRECTORY.Pets.642 - Tiki Dominus.Pet Data (Tiki Dominus) -----  -  Editar
  04:54:13.648  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.642 - Tiki Dominus.Pet Data (Tiki Dominus)
return {name = "Tiki Dominus", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13813313349", goldenThumbnail = "rbxassetid://13813313586", darkMatterThumbnail = "rbxassetid://13813313750", rarity = "Mythical", isPremium = false, tradeable = true, strengthMin = 8.8e+15, strengthMax = 8.85e+15}  -  Editar
  04:54:13.648    -  Editar
  04:54:13.648  ----- [1912] ReplicatedStorage.__DIRECTORY.Pets.2157 - Huge Gamer Shiba.Pet Data (Huge Gamer Shiba) -----  -  Editar
  04:54:13.648  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2157 - Huge Gamer Shiba.Pet Data (Huge Gamer Shiba)
return {name = "Huge Gamer Shiba", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, huge = true, thumbnail = "rbxassetid://13705579928", goldenThumbnail = "rbxassetid://13705580031", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.648    -  Editar
  04:54:13.648  ----- [1913] ReplicatedStorage.__DIRECTORY.Pets.643 - Scuba Shark.Pet Data (Scuba Shark) -----  -  Editar
  04:54:13.648  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.643 - Scuba Shark.Pet Data (Scuba Shark)
return {name = "Scuba Shark", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13813313874", goldenThumbnail = "rbxassetid://13813313993", darkMatterThumbnail = "rbxassetid://13813314106", rarity = "Basic", isPremium = false, tradeable = true, strengthMin = 1.75e+14, strengthMax = 1.78e+14}  -  Editar
  04:54:13.648    -  Editar
  04:54:13.649  ----- [1914] ReplicatedStorage.__DIRECTORY.Pets.644 - Ladybug.Pet Data (Ladybug) -----  -  Editar
  04:54:13.649  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.644 - Ladybug.Pet Data (Ladybug)
return {name = "Ladybug", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13843079663", goldenThumbnail = "rbxassetid://13843079790", darkMatterThumbnail = "rbxassetid://13843085331", rarity = "Rare", isPremium = false, tradeable = true, strengthMin = 3.3e+14, strengthMax = 3.33e+14}  -  Editar
  04:54:13.649    -  Editar
  04:54:13.649  ----- [1915] ReplicatedStorage.__DIRECTORY.Pets.645 - Firefly.Pet Data (Firefly) -----  -  Editar
  04:54:13.649  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.645 - Firefly.Pet Data (Firefly)
return {name = "Firefly", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, thumbnail = "rbxassetid://13843091074", goldenThumbnail = "rbxassetid://13843091222", darkMatterThumbnail = "rbxassetid://13843094368", rarity = "Legendary", isPremium = false, tradeable = true, strengthMin = 1e+15, strengthMax = 1.03e+15}  -  Editar
  04:54:13.649    -  Editar
  04:54:13.649  ----- [1916] ReplicatedStorage.__DIRECTORY.Pets.646 - Butterfly.Pet Data (Butterfly) -----  -  Editar
  04:54:13.649  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.646 - Butterfly.Pet Data (Butterfly)
return {name = "Butterfly", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, thumbnail = "rbxassetid://13843097342", goldenThumbnail = "rbxassetid://13843097485", darkMatterThumbnail = "rbxassetid://13843101888", rarity = "Mythical", isPremium = false, tradeable = true, strengthMin = 7e+15, strengthMax = 7.05e+15}  -  Editar
  04:54:13.649    -  Editar
  04:54:13.649  ----- [1917] ReplicatedStorage.__DIRECTORY.Pets.647 - Atlantean Orca.Pet Data (Atlantean Orca) -----  -  Editar
  04:54:13.649  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.647 - Atlantean Orca.Pet Data (Atlantean Orca)
return {name = "Atlantean Orca", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, weld = true, thumbnail = "rbxassetid://13845301730", goldenThumbnail = "rbxassetid://13845301925", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, companionEnchantLevel = 1, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.649    -  Editar
  04:54:13.650  ----- [1918] ReplicatedStorage.__DIRECTORY.Pets.2158 - Huge Tiki Dominus.Pet Data (Huge Tiki Dominus) -----  -  Editar
  04:54:13.650  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2158 - Huge Tiki Dominus.Pet Data (Huge Tiki Dominus)
return {name = "Huge Tiki Dominus", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, huge = true, thumbnail = "rbxassetid://13813315811", goldenThumbnail = "rbxassetid://13813316061", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.650    -  Editar
  04:54:13.650  ----- [1919] ReplicatedStorage.__DIRECTORY.Pets.648 - Atlantean Dolphin.Pet Data (Atlantean Dolphin) -----  -  Editar
  04:54:13.650  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.648 - Atlantean Dolphin.Pet Data (Atlantean Dolphin)
return {name = "Atlantean Dolphin", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, weld = true, thumbnail = "rbxassetid://13845302244", goldenThumbnail = "rbxassetid://13845302340", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, companionEnchantLevel = 3, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.650    -  Editar
  04:54:13.650  ----- [1920] ReplicatedStorage.__DIRECTORY.Pets.2160 - Huge Pufferflish.Pet Data (Huge Pufferfish) -----  -  Editar
  04:54:13.650  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2160 - Huge Pufferflish.Pet Data (Huge Pufferfish)
return {name = "Huge Pufferfish", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, huge = true, balloon = true, thumbnail = "rbxassetid://13842488067", goldenThumbnail = "rbxassetid://13842488204", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.650    -  Editar
  04:54:13.650  ----- [1921] ReplicatedStorage.__DIRECTORY.Pets.3025 - Titanic Atlantean Jellyfish.Pet Data (Titanic Atlantean Jellyfish) -----  -  Editar
  04:54:13.650  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.3025 - Titanic Atlantean Jellyfish.Pet Data (Titanic Atlantean Jellyfish)
return {name = "Titanic Atlantean Jellyfish", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, titanic = true, flyHeight = 2.2, ridingGravity = 65.3346, weld = true, swerve = true, swerveMaxAngle = 45, ridingCameraOffset = Vector3.new(0, 7.5, 0), thumbnail = "rbxassetid://13845300429", goldenThumbnail = "rbxassetid://13845300688", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.650    -  Editar
  04:54:13.651  ----- [1922] ReplicatedStorage.__DIRECTORY.Pets.649 - Atlantean Jellyfish.Pet Data (Atlantean Jellyfish) -----  -  Editar
  04:54:13.651  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.649 - Atlantean Jellyfish.Pet Data (Atlantean Jellyfish)
return {name = "Atlantean Jellyfish", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, weld = true, thumbnail = "rbxassetid://13845302064", goldenThumbnail = "rbxassetid://13845302141", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, hidden = true, companionEnchantLevel = 3, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.651    -  Editar
  04:54:13.651  ----- [1923] ReplicatedStorage.__DIRECTORY.Pets.650 - Atlantean Stingray.Pet Data (Atlantean Stingray) -----  -  Editar
  04:54:13.651  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.650 - Atlantean Stingray.Pet Data (Atlantean Stingray)
return {name = "Atlantean Stingray", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, weld = true, thumbnail = "rbxassetid://13845301433", goldenThumbnail = "rbxassetid://13845301599", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, companionEnchantLevel = 2, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.651    -  Editar
  04:54:13.651  ----- [1924] ReplicatedStorage.__DIRECTORY.Pets.2161 - Huge Atlantean Orca.Pet Data (Huge Atlantean Orca) -----  -  Editar
  04:54:13.651  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2161 - Huge Atlantean Orca.Pet Data (Huge Atlantean Orca)
return {name = "Huge Atlantean Orca", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, huge = true, weld = true, thumbnail = "rbxassetid://13845300815", goldenThumbnail = "rbxassetid://13845301004", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.651    -  Editar
  04:54:13.651  ----- [1925] ReplicatedStorage.__DIRECTORY.Pets.2162 - Huge Atlantean Dolphin.Pet Data (Huge Atlantean Dolphin) -----  -  Editar
  04:54:13.651  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2162 - Huge Atlantean Dolphin.Pet Data (Huge Atlantean Dolphin)
return {name = "Huge Atlantean Dolphin", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, weld = true, huge = true, thumbnail = "rbxassetid://13845301163", goldenThumbnail = "rbxassetid://13845301303", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.651    -  Editar
  04:54:13.651  ----- [1926] ReplicatedStorage.__DIRECTORY.Pets.1037 - Exclusive Egg 14.Exclusive Egg 14 -----  -  Editar
  04:54:13.652  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.1037 - Exclusive Egg 14.Exclusive Egg 14
return {
	name = "Exclusive Egg 14", 
	isGift = true, 
	giftEggId = "Exclusive Egg 14",
	giftCallback = (function(a1, a2) -- giftCallback

	end),
	thumbnail = "rbxassetid://13565042806", 
	rarity = "Exclusive",
	isPremium = true,
	canAuction = true,
	tradeable = true
}  -  Editar
  04:54:13.652    -  Editar
  04:54:13.652  ----- [1927] ReplicatedStorage.__DIRECTORY.Pets.2170 - Huge Shadow Griffin.Pet Data (Huge Shadow Griffin) -----  -  Editar
  04:54:13.652  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2170 - Huge Shadow Griffin.Pet Data (Huge Shadow Griffin)
return {name = "Huge Shadow Griffin", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, huge = true, thumbnail = "rbxassetid://13981165602", goldenThumbnail = "rbxassetid://13981165683", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.652    -  Editar
  04:54:13.652  ----- [1928] ReplicatedStorage.__DIRECTORY.Pets.1040 - Exclusive Egg 15.Exclusive Egg 15 -----  -  Editar
  04:54:13.652  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.1040 - Exclusive Egg 15.Exclusive Egg 15
return {name = "Exclusive Egg 15", isGift = true, giftEggId = "Exclusive Egg 15", giftCallback = (function(a1, a2) -- giftCallback

end), thumbnail = "rbxassetid://13845602539", rarity = "Exclusive", isPremium = true, canAuction = true, tradeable = true}  -  Editar
  04:54:13.652    -  Editar
  04:54:13.652  ----- [1929] ReplicatedStorage.__DIRECTORY.Pets.3026 - Titanic Purrari.Pet Data (Titanic Purrari) -----  -  Editar
  04:54:13.652  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.3026 - Titanic Purrari.Pet Data (Titanic Purrari)
return {name = "Titanic Purrari", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, titanic = true, weld = true, fly = true, flyHeight = 0.23, flyHeightChange = 0, swerve = true, swerveAggression = 0.01, swerveMaxAngle = 1, thumbnail = "rbxassetid://13981163083", goldenThumbnail = "rbxassetid://13981163083", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, hidden = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.652    -  Editar
  04:54:13.652  ----- [1930] ReplicatedStorage.__DIRECTORY.Pets.651 - Sandcastle Cat.Pet Data (Sandcastle Cat) -----  -  Editar
  04:54:13.652  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.651 - Sandcastle Cat.Pet Data (Sandcastle Cat)
return {name = "Sandcastle Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478156278, 4478156615}}, fly = false, thumbnail = "rbxassetid://13981164259", goldenThumbnail = "rbxassetid://13981164340", darkMatterThumbnail = "rbxassetid://13981164450", rarity = "Basic", isPremium = false, tradeable = true, isVanity = true, strengthMin = 2.2e+14, strengthMax = 2.23e+14}  -  Editar
  04:54:13.653    -  Editar
  04:54:13.653  ----- [1931] ReplicatedStorage.__DIRECTORY.Pets.652 - Sandcastle Dog.Pet Data (Sandcastle Dog) -----  -  Editar
  04:54:13.653  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.652 - Sandcastle Dog.Pet Data (Sandcastle Dog)
return {name = "Sandcastle Dog", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = false, thumbnail = "rbxassetid://13981163871", goldenThumbnail = "rbxassetid://13981164032", darkMatterThumbnail = "rbxassetid://13981164147", rarity = "Rare", isPremium = false, tradeable = true, isVanity = true, strengthMin = 5e+14, strengthMax = 5.03e+14}  -  Editar
  04:54:13.653    -  Editar
  04:54:13.653  ----- [1932] ReplicatedStorage.__DIRECTORY.Pets.653 - Flower Gecko.Pet Data (Flower Gecko) -----  -  Editar
  04:54:13.653  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.653 - Flower Gecko.Pet Data (Flower Gecko)
return {name = "Flower Gecko", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13981163241", goldenThumbnail = "rbxassetid://13981163375", darkMatterThumbnail = "rbxassetid://13981163490", rarity = "Legendary", isPremium = false, tradeable = true, isVanity = true, strengthMin = 1.65e+15, strengthMax = 1.68e+15}  -  Editar
  04:54:13.653    -  Editar
  04:54:13.653  ----- [1933] ReplicatedStorage.__DIRECTORY.Pets.654 - Fish in a Bucket.Pet Data (Fish in a Bucket) -----  -  Editar
  04:54:13.653  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.654 - Fish in a Bucket.Pet Data (Fish in a Bucket)
return {name = "Fish in a Bucket", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13981168201", goldenThumbnail = "rbxassetid://13981168334", darkMatterThumbnail = "rbxassetid://13981168435", rarity = "Epic", isPremium = false, tradeable = true, isVanity = true, strengthMin = 7.95e+14, strengthMax = 7.98e+14}  -  Editar
  04:54:13.653    -  Editar
  04:54:13.653  ----- [1934] ReplicatedStorage.__DIRECTORY.Pets.655 - Turtle in a Bucket.Pet Data (Turtle in a Bucket) -----  -  Editar
  04:54:13.653  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.655 - Turtle in a Bucket.Pet Data (Turtle in a Bucket)
return {name = "Turtle in a Bucket", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://13981162693", goldenThumbnail = "rbxassetid://13981162833", darkMatterThumbnail = "rbxassetid://13981162944", rarity = "Epic", isPremium = false, tradeable = true, isVanity = true, strengthMin = 9.1e+14, strengthMax = 9.13e+14}  -  Editar
  04:54:13.654    -  Editar
  04:54:13.654  ----- [1935] ReplicatedStorage.__DIRECTORY.Pets.656 - Sun Angelus.Pet Data (Sun Angelus) -----  -  Editar
  04:54:13.654  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.656 - Sun Angelus.Pet Data (Sun Angelus)
return {name = "Sun Angelus", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, thumbnail = "rbxassetid://13981169559", goldenThumbnail = "rbxassetid://13981163662", darkMatterThumbnail = "rbxassetid://13981163774", rarity = "Mythical", isPremium = false, tradeable = true, isVanity = true, strengthMin = 1.14e+16, strengthMax = 1.19e+16}  -  Editar
  04:54:13.654    -  Editar
  04:54:13.655  ----- [1936] ReplicatedStorage.__DIRECTORY.Pets.2163 - Huge Luau Cat.Pet Data (Huge Luau Cat) -----  -  Editar
  04:54:13.655  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2163 - Huge Luau Cat.Pet Data (Huge Luau Cat)
return {name = "Huge Luau Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478156278, 4478156615}}, fly = false, huge = true, thumbnail = "rbxassetid://13874758093", goldenThumbnail = "rbxassetid://13874758220", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.655    -  Editar
  04:54:13.655  ----- [1937] ReplicatedStorage.__DIRECTORY.Pets.2164 - Huge Bear.Pet Data (Huge Bear) -----  -  Editar
  04:54:13.655  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2164 - Huge Bear.Pet Data (Huge Bear)
return {name = "Huge Bear", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, huge = true, thumbnail = "rbxassetid://13981167535", goldenThumbnail = "rbxassetid://13981167625", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.655    -  Editar
  04:54:13.655  ----- [1938] ReplicatedStorage.__DIRECTORY.Pets.2165 - Huge Cow.Pet Data (Huge Cow) -----  -  Editar
  04:54:13.655  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2165 - Huge Cow.Pet Data (Huge Cow)
return {name = "Huge Cow", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, huge = true, thumbnail = "rbxassetid://13981167347", goldenThumbnail = "rbxassetid://13981167437", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.655    -  Editar
  04:54:13.655  ----- [1939] ReplicatedStorage.__DIRECTORY.Pets.2166 - Huge Fox.Pet Data (Huge Fox) -----  -  Editar
  04:54:13.655  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2166 - Huge Fox.Pet Data (Huge Fox)
return {name = "Huge Fox", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, huge = true, thumbnail = "rbxassetid://13981166570", goldenThumbnail = "rbxassetid://13981166702", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.655    -  Editar
  04:54:13.656  ----- [1940] ReplicatedStorage.__DIRECTORY.Pets.2167 - Huge Husky.Pet Data (Huge Husky) -----  -  Editar
  04:54:13.656  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2167 - Huge Husky.Pet Data (Huge Husky)
return {name = "Huge Husky", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, huge = true, thumbnail = "rbxassetid://13981166360", goldenThumbnail = "rbxassetid://13981166468", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.656    -  Editar
  04:54:13.656  ----- [1941] ReplicatedStorage.__DIRECTORY.Pets.2168 - Huge Fairy.Pet Data (Huge Fairy) -----  -  Editar
  04:54:13.656  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2168 - Huge Fairy.Pet Data (Huge Fairy)
return {name = "Huge Fairy", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, huge = true, thumbnail = "rbxassetid://13981166857", goldenThumbnail = "rbxassetid://13981166970", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.656    -  Editar
  04:54:13.656  ----- [1942] ReplicatedStorage.__DIRECTORY.Pets.2169 - Huge White Tiger.Pet Data (Huge White Tiger) -----  -  Editar
  04:54:13.656  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2169 - Huge White Tiger.Pet Data (Huge White Tiger)
return {name = "Huge White Tiger", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, huge = true, thumbnail = "rbxassetid://13981164552", goldenThumbnail = "rbxassetid://13981164666", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.656    -  Editar
  04:54:13.656  ----- [1943] ReplicatedStorage.__DIRECTORY.Pets.2177 - Huge Arcade Cat.Pet Data (Huge Arcade Cat) -----  -  Editar
  04:54:13.656  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2177 - Huge Arcade Cat.Pet Data (Huge Arcade Cat)
return {name = "Huge Arcade Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478156278, 4478156615}}, huge = true, thumbnail = "rbxassetid://13991740414", goldenThumbnail = "rbxassetid://13991740556", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, flipbookAnimation = {"rbxassetid://13982245778", "rbxassetid://13982466934"}, flipbookAnimationGold = {"rbxassetid://13982245670", "rbxassetid://13982466789"}, flipbookAnimationSpeed = 1, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.656    -  Editar
  04:54:13.656  ----- [1944] ReplicatedStorage.__DIRECTORY.Pets.2171 - Huge Shark.Pet Data (Huge Shark) -----  -  Editar
  04:54:13.657  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2171 - Huge Shark.Pet Data (Huge Shark)
return {name = "Huge Shark", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, huge = true, thumbnail = "rbxassetid://13981165161", goldenThumbnail = "rbxassetid://13981165392", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.657    -  Editar
  04:54:13.657  ----- [1945] ReplicatedStorage.__DIRECTORY.Pets.2172 - Huge Balloon Monkey.Pet Data (Huge Balloon Monkey) -----  -  Editar
  04:54:13.657  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2172 - Huge Balloon Monkey.Pet Data (Huge Balloon Monkey)
return {name = "Huge Balloon Monkey", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, huge = true, balloon = true, thumbnail = "rbxassetid://13981167723", goldenThumbnail = "rbxassetid://13981167862", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.657    -  Editar
  04:54:13.657  ----- [1946] ReplicatedStorage.__DIRECTORY.Pets.2173 - Huge Dove.Pet Data (Huge Dove) -----  -  Editar
  04:54:13.657  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2173 - Huge Dove.Pet Data (Huge Dove)
return {name = "Huge Dove", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, huge = true, thumbnail = "rbxassetid://13981167082", goldenThumbnail = "rbxassetid://13981167235", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.657    -  Editar
  04:54:13.657  ----- [1947] ReplicatedStorage.__DIRECTORY.Pets.2178 - Huge Sandcastle Cat.Pet Data (Huge Sandcastle Cat) -----  -  Editar
  04:54:13.657  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2178 - Huge Sandcastle Cat.Pet Data (Huge Sandcastle Cat)
return {name = "Huge Sandcastle Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478156278, 4478156615}}, fly = false, huge = true, thumbnail = "rbxassetid://13993539393", goldenThumbnail = "rbxassetid://13993539483", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.657    -  Editar
  04:54:13.657  ----- [1948] ReplicatedStorage.__DIRECTORY.Pets.2176 - Huge Sun Angelus.Pet Data (Huge Sun Angelus) -----  -  Editar
  04:54:13.657  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2176 - Huge Sun Angelus.Pet Data (Huge Sun Angelus)
return {name = "Huge Sun Angelus", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, huge = true, flyHeight = 2.5, thumbnail = "rbxassetid://13981164880", goldenThumbnail = "rbxassetid://13981165062", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = false, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.657    -  Editar
  04:54:13.658  ----- [1949] ReplicatedStorage.__DIRECTORY.Pets.657 - Arcade Cat.Pet Data (Arcade Cat) -----  -  Editar
  04:54:13.658  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.657 - Arcade Cat.Pet Data (Arcade Cat)
return {name = "Arcade Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478156278, 4478156615}}, fly = false, thumbnail = "rbxassetid://13991741680", goldenThumbnail = "rbxassetid://13991741782", darkMatterThumbnail = "rbxassetid://13991741861", rarity = "Legendary", isPremium = false, tradeable = true, strengthMin = 1.7e+15, strengthMax = 1.73e+15}  -  Editar
  04:54:13.658    -  Editar
  04:54:13.658  ----- [1950] ReplicatedStorage.__DIRECTORY.Pets.658 - Arcade Dog.Pet Data (Arcade Dog) -----  -  Editar
  04:54:13.658  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.658 - Arcade Dog.Pet Data (Arcade Dog)
return {name = "Arcade Dog", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = false, thumbnail = "rbxassetid://13991741245", goldenThumbnail = "rbxassetid://13991741439", darkMatterThumbnail = "rbxassetid://13991741578", rarity = "Mythical", isPremium = false, tradeable = true, strengthMin = 1.18e+16, strengthMax = 1.23e+16}  -  Editar
  04:54:13.658    -  Editar
  04:54:13.658  ----- [1951] ReplicatedStorage.__DIRECTORY.Pets.2175 - Huge Masked Owl.Pet Data (Huge Masked Owl) -----  -  Editar
  04:54:13.658  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.2175 - Huge Masked Owl.Pet Data (Huge Masked Owl)
return {name = "Huge Masked Owl", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, huge = true, thumbnail = "rbxassetid://13981166075", goldenThumbnail = "rbxassetid://13981166263", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, isVanity = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.658    -  Editar
  04:54:13.658  ----- [1952] ReplicatedStorage.__DIRECTORY.Pets.659 - Arcade Dragon.Pet Data (Arcade Dragon) -----  -  Editar
  04:54:13.658  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.659 - Arcade Dragon.Pet Data (Arcade Dragon)
return {name = "Arcade Dragon", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, thumbnail = "rbxassetid://13991740709", goldenThumbnail = "rbxassetid://13991740877", darkMatterThumbnail = "rbxassetid://13991741031", rarity = "Event", isPremium = false, tradeable = true, companionEnchantLevel = 2, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.658    -  Editar
  04:54:13.658  ----- [1953] ReplicatedStorage.__DIRECTORY.Pets.1041 - Tiki Egg.Tiki Egg -----  -  Editar
  04:54:13.659  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.1041 - Tiki Egg.Tiki Egg
return {name = "Tiki Egg", isGift = true, giftEggId = "Tiki Egg", giftCallback = (function(a1, a2) -- giftCallback

end), thumbnail = "rbxassetid://13874893890", rarity = "Exclusive", isPremium = true, canAuction = true, tradeable = true}  -  Editar
  04:54:13.659    -  Editar
  04:54:13.659  ----- [1954] ReplicatedStorage.__DIRECTORY.Pets.299 - Fancy Axolotl.Pet Data (Fancy Axolotl) -----  -  Editar
  04:54:13.659  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Fancy Axolotl", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	thumbnail = "rbxassetid://8760045154", 
	goldenThumbnail = "rbxassetid://8760045312", 
	darkMatterThumbnail = "rbxassetid://8760099785", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 87500000000, 
	strengthMax = 90000000000
};
  -  Editar
  04:54:13.659    -  Editar
  04:54:13.659  ----- [1955] ReplicatedStorage.__DIRECTORY.Pets.670 - Red Dragon.Pet Data (Red Dragon) -----  -  Editar
  04:54:13.659  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.670 - Red Dragon.Pet Data (Red Dragon)
return {name = "Red Dragon", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, thumbnail = "", goldenThumbnail = "", darkMatterThumbnail = "", rarity = "Event", isPremium = false, tradeable = true, hidden = true, companionEnchantLevel = 2, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.659    -  Editar
  04:54:13.659  ----- [1956] ReplicatedStorage.__DIRECTORY.Pets.671 - Toilet Cat.Pet Data (Toilet Cat) -----  -  Editar
  04:54:13.659  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.671 - Toilet Cat.Pet Data (Toilet Cat)
return {
	name = "Toilet Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {4478156278, 4478156615}
	},
	fly = false, 
	weld = true, 
	thumbnail = "rbxassetid://14078717715",
	goldenThumbnail = "rbxassetid://14078717850",
	darkMatterThumbnail = "rbxassetid://14078718076",
	rarity = "Secret", 
	isPremium = false,
	tradeable = true, 
	yeetPower = 80000000, 
	strengthMin = 3.5e+16,
	strengthMax = 3.6e+16
}  -  Editar
  04:54:13.660    -  Editar
  04:54:13.660  ----- [1957] ReplicatedStorage.__DIRECTORY.Pets.3027 - Titanic Toilet Cat.Pet Data (Titanic Toilet Cat) -----  -  Editar
  04:54:13.660  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.3027 - Titanic Toilet Cat.Pet Data (Titanic Toilet Cat)
return {name = "Titanic Toilet Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, titanic = true, hidden = true, weld = true, thumbnail = "rbxassetid://14078717461", goldenThumbnail = "rbxassetid://14078717553", darkMatterThumbnail = "", rarity = "Exclusive", isPremium = true, tradeable = true, strengthMin = 2, strengthMax = 3}  -  Editar
  04:54:13.660    -  Editar
  04:54:13.660  ----- [1958] ReplicatedStorage.__DIRECTORY.Pets.672 - Rocket Shark.Pet Data (Rocket Shark) -----  -  Editar
  04:54:13.660  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.672 - Rocket Shark.Pet Data (Rocket Shark)
return {name = "Rocket Shark", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, thumbnail = "rbxassetid://14134155312", goldenThumbnail = "rbxassetid://14134155543", darkMatterThumbnail = "rbxassetid://14134155783", rarity = "Rare", isPremium = false, tradeable = true, yeetPower = 1700000, strengthMin = 5.85e+14, strengthMax = 5.88e+14}  -  Editar
  04:54:13.660    -  Editar
  04:54:13.660  ----- [1959] ReplicatedStorage.__DIRECTORY.Pets.673 - Jetpack Tiger.Pet Data (Jetpack Tiger) -----  -  Editar
  04:54:13.660  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.673 - Jetpack Tiger.Pet Data (Jetpack Tiger)
return {name = "Jetpack Tiger", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478156278, 4478156615}}, fly = true, thumbnail = "rbxassetid://14134157772", goldenThumbnail = "rbxassetid://14134157943", darkMatterThumbnail = "rbxassetid://14134158176", rarity = "Rare", isPremium = false, tradeable = true, yeetPower = 2500000, strengthMin = 8.25e+14, strengthMax = 8.28e+14}  -  Editar
  04:54:13.660    -  Editar
  04:54:13.660  ----- [1960] ReplicatedStorage.__DIRECTORY.Pets.674 - Parachute Monkey.Pet Data (Parachute Monkey) -----  -  Editar
  04:54:13.660  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.674 - Parachute Monkey.Pet Data (Parachute Monkey)
return {name = "Parachute Monkey", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, thumbnail = "rbxassetid://14134157117", goldenThumbnail = "rbxassetid://14134157319", darkMatterThumbnail = "rbxassetid://14134157528", rarity = "Basic", isPremium = false, tradeable = true, yeetPower = 900000, strengthMin = 3.1e+14, strengthMax = 3.13e+14}  -  Editar
  04:54:13.661    -  Editar
  04:54:13.661  ----- [1961] ReplicatedStorage.__DIRECTORY.Pets.675 - Plane Dragon.Pet Data (Plane Dragon) -----  -  Editar
  04:54:13.661  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.675 - Plane Dragon.Pet Data (Plane Dragon)
return {name = "Plane Dragon", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, thumbnail = "rbxassetid://14134156111", goldenThumbnail = "rbxassetid://14134156240", darkMatterThumbnail = "rbxassetid://14134156440", rarity = "Epic", isPremium = false, tradeable = true, yeetPower = 900000, strengthMin = 6.6e+14, strengthMax = 6.63e+14}  -  Editar
  04:54:13.661    -  Editar
  04:54:13.661  ----- [1962] ReplicatedStorage.__DIRECTORY.Pets.676 - Springy Axolotl.Pet Data (Springy Axolotl) -----  -  Editar
  04:54:13.661  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.676 - Springy Axolotl.Pet Data (Springy Axolotl)
return {name = "Springy Axolotl", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://14134154837", goldenThumbnail = "rbxassetid://14134155021", darkMatterThumbnail = "rbxassetid://14134155159", rarity = "Basic", isPremium = false, tradeable = true, yeetPower = 300000, strengthMin = 2.2e+14, strengthMax = 2.23e+14}  -  Editar
  04:54:13.661    -  Editar
  04:54:13.661  ----- [1963] ReplicatedStorage.__DIRECTORY.Pets.677 - Hot Air Balloon Dog.Pet Data (Hot Air Balloon Dog) -----  -  Editar
  04:54:13.661  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.677 - Hot Air Balloon Dog.Pet Data (Hot Air Balloon Dog)
return {name = "Hot Air Balloon Dog", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = true, thumbnail = "rbxassetid://14134158428", goldenThumbnail = "rbxassetid://14134158709", darkMatterThumbnail = "rbxassetid://14134159017", rarity = "Basic", isPremium = false, tradeable = true, yeetPower = 330000, strengthMin = 2.3e+14, strengthMax = 2.33e+14}  -  Editar
  04:54:13.661    -  Editar
  04:54:13.661  ----- [1964] ReplicatedStorage.__DIRECTORY.Pets.678 - Crash Dummy Noob.Pet Data (Crash Dummy Noob) -----  -  Editar
  04:54:13.661  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.678 - Crash Dummy Noob.Pet Data (Crash Dummy Noob)
return {name = "Crash Dummy Noob", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://14134159832", goldenThumbnail = "rbxassetid://14134160074", darkMatterThumbnail = "rbxassetid://14134160302", rarity = "Rare", isPremium = false, tradeable = true, yeetPower = 570000, strengthMin = 4.15e+14, strengthMax = 4.18e+14}  -  Editar
  04:54:13.661    -  Editar
  04:54:13.662  ----- [1965] ReplicatedStorage.__DIRECTORY.Pets.679 - Stunt Corgi.Pet Data (Stunt Corgi) -----  -  Editar
  04:54:13.662  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.679 - Stunt Corgi.Pet Data (Stunt Corgi)
return {name = "Stunt Corgi", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478157336, 4478159184}}, fly = false, thumbnail = "rbxassetid://14134153325", goldenThumbnail = "rbxassetid://14134153486", darkMatterThumbnail = "rbxassetid://14134153625", rarity = "Epic", isPremium = false, tradeable = true, yeetPower = 4250000, strengthMin = 1.3e+15, strengthMax = 1.33e+15}  -  Editar
  04:54:13.662    -  Editar
  04:54:13.662  ----- [1966] ReplicatedStorage.__DIRECTORY.Pets.680 - Stunt Cat.Pet Data (Stunt Cat) -----  -  Editar
  04:54:13.662  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.680 - Stunt Cat.Pet Data (Stunt Cat)
return {name = "Stunt Cat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {4478156278, 4478156615}}, fly = false, thumbnail = "rbxassetid://14134154071", goldenThumbnail = "rbxassetid://14134154331", darkMatterThumbnail = "rbxassetid://14134154512", rarity = "Epic", isPremium = false, tradeable = true, yeetPower = 2800000, strengthMin = 9.3e+14, strengthMax = 9.33e+14}  -  Editar
  04:54:13.662    -  Editar
  04:54:13.662  ----- [1967] ReplicatedStorage.__DIRECTORY.Pets.683 - Stunt Chick.Pet Data (Stunt Chick) -----  -  Editar
  04:54:13.662  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.683 - Stunt Chick.Pet Data (Stunt Chick)
return {name = "Stunt Chick", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://14134153833", goldenThumbnail = "rbxassetid://14134153833", darkMatterThumbnail = "rbxassetid://14134153833", rarity = "Exclusive", isPremium = false, tradeable = true, companionEnchantLevel = 1, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.662    -  Editar
  04:54:13.663  ----- [1968] ReplicatedStorage.__DIRECTORY.Pets.684 - Stunt Bobcat.Pet Data (Stunt Bobcat) -----  -  Editar
  04:54:13.663  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.684 - Stunt Bobcat.Pet Data (Stunt Bobcat)
return {name = "Stunt Bobcat", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = false, thumbnail = "rbxassetid://14134154684", goldenThumbnail = "rbxassetid://14134154684", darkMatterThumbnail = "rbxassetid://14134154684", rarity = "Exclusive", isPremium = false, tradeable = true, companionEnchantLevel = 2, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.663    -  Editar
  04:54:13.663  ----- [1969] ReplicatedStorage.__DIRECTORY.Pets.685 - Stunt Unicorn.Pet Data (Stunt Unicorn) -----  -  Editar
  04:54:13.663  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.685 - Stunt Unicorn.Pet Data (Stunt Unicorn)
return {name = "Stunt Unicorn", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, thumbnail = "rbxassetid://14134153150", goldenThumbnail = "rbxassetid://14134153150", darkMatterThumbnail = "rbxassetid://14134153150", rarity = "Exclusive", isPremium = false, tradeable = true, companionEnchantLevel = 3, strengthMin = 0, strengthMax = 0}  -  Editar
  04:54:13.663    -  Editar
  04:54:13.663  ----- [1970] ReplicatedStorage.__DIRECTORY.Pets.681 - Wild Fire Agony.Pet Data (Wild Fire Agony) -----  -  Editar
  04:54:13.663  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.681 - Wild Fire Agony.Pet Data (Wild Fire Agony)
return {name = "Wild Fire Agony", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, thumbnail = "rbxassetid://14134152412", goldenThumbnail = "rbxassetid://14134152580", darkMatterThumbnail = "rbxassetid://14134152854", rarity = "Legendary", isPremium = false, tradeable = true, yeetPower = 9000000, strengthMin = 2.75e+15, strengthMax = 2.78e+15}  -  Editar
  04:54:13.663    -  Editar
  04:54:13.663  ----- [1971] ReplicatedStorage.__DIRECTORY.Pets.682 - Wild Frost Agony.Pet Data (Wild Frost Agony) -----  -  Editar
  04:54:13.663  
-- @localonex FIXED THIS | Path: ReplicatedStorage.__DIRECTORY.Pets.682 - Wild Frost Agony.Pet Data (Wild Frost Agony)
return {name = "Wild Frost Agony", model = script.Parent:FindFirstChild("Pet"), modelGold = script.Parent:FindFirstChild("Golden"), sounds = {random = {}}, fly = true, thumbnail = "rbxassetid://14134151888", goldenThumbnail = "rbxassetid://14134152165", darkMatterThumbnail = "rbxassetid://14134152314", rarity = "Legendary", isPremium = false, tradeable = true, yeetPower = 6000000, strengthMin = 1.95e+15, strengthMax = 1.98e+15}  -  Editar
  04:54:13.663    -  Editar
  04:54:13.663  ----- [1972] ReplicatedStorage.__DIRECTORY.Pets.2108 - Huge Kraken.Pet Data (Huge Kraken) -----  -  Editar
  04:54:13.663  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Kraken", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://13180252730", 
	goldenThumbnail = "rbxassetid://13180252788", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.664    -  Editar
  04:54:13.664  ----- [1973] ReplicatedStorage.__DIRECTORY.Pets.2107 - Huge Amethyst Dragon.Pet Data (Huge Amethyst Dragon) -----  -  Editar
  04:54:13.664  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Amethyst Dragon", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	huge = true, 
	thumbnail = "rbxassetid://13132943014", 
	goldenThumbnail = "rbxassetid://13132943164", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.664    -  Editar
  04:54:13.664  ----- [1974] ReplicatedStorage.__DIRECTORY.Pets.2106 - Huge Redstone Cat.Pet Data (Huge Redstone Cat) -----  -  Editar
  04:54:13.664  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Redstone Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://13132920250", 
	goldenThumbnail = "rbxassetid://13132920419", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.664    -  Editar
  04:54:13.664  ----- [1975] ReplicatedStorage.__DIRECTORY.Pets.2105 - Huge Easter Yeti.Pet Data (Huge Easter Yeti) -----  -  Editar
  04:54:13.664  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Easter Yeti", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://13128571880", 
	goldenThumbnail = "rbxassetid://13128571999", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.664    -  Editar
  04:54:13.664  ----- [1976] ReplicatedStorage.__DIRECTORY.Pets.2104 - Huge Pink Balloon Cat.Pet Data (Huge Pink Balloon Cat) -----  -  Editar
  04:54:13.664  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Pink Balloon Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { "rbxassetid://11604085784", "rbxassetid://11604085865" }
	}, 
	fly = true, 
	huge = true, 
	balloon = true, 
	thumbnail = "rbxassetid://13084899264", 
	goldenThumbnail = "", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = true, 
	tradeable = false, 
	ugc = true, 
	hidden = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.665    -  Editar
  04:54:13.665  ----- [1977] ReplicatedStorage.__DIRECTORY.Pets.2103 - Huge Marshmellow Agony.Pet Data (Huge Marshmellow Agony) -----  -  Editar
  04:54:13.665  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Marshmallow Agony", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	huge = true, 
	thumbnail = "rbxassetid://13023518717", 
	goldenThumbnail = "rbxassetid://13023518830", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.665    -  Editar
  04:54:13.665  ----- [1978] ReplicatedStorage.__DIRECTORY.Pets.2102 - Huge Easter Dominus.Pet Data (Huge Easter Dominus) -----  -  Editar
  04:54:13.665  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Easter Dominus", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://13023768933", 
	goldenThumbnail = "rbxassetid://13023769067", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.665    -  Editar
  04:54:13.665  ----- [1979] ReplicatedStorage.__DIRECTORY.Pets.2101 - Huge Easter Bunny.Pet Data (Huge Easter Bunny) -----  -  Editar
  04:54:13.665  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Easter Bunny", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://13023285695", 
	goldenThumbnail = "rbxassetid://13023285820", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.665    -  Editar
  04:54:13.665  ----- [1980] ReplicatedStorage.__DIRECTORY.Pets.2100 - Huge Painted Cat.Pet Data (Huge Painted Cat) -----  -  Editar
  04:54:13.665  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Painted Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://13023223468", 
	goldenThumbnail = "rbxassetid://13023223564", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.666    -  Editar
  04:54:13.666  ----- [1981] ReplicatedStorage.__DIRECTORY.Pets.2099 - Huge Error Cat.Pet Data (Huge Error Cat) -----  -  Editar
  04:54:13.666  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Error Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://12955560957", 
	goldenThumbnail = "rbxassetid://12955561104", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.666    -  Editar
  04:54:13.666  ----- [1982] ReplicatedStorage.__DIRECTORY.Pets.2098 - Huge Gecko.Pet Data (Huge Gecko) -----  -  Editar
  04:54:13.666  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Gecko", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://12944287367", 
	goldenThumbnail = "rbxassetid://12944287577", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.666    -  Editar
  04:54:13.666  ----- [1983] ReplicatedStorage.__DIRECTORY.Pets.2097 - Huge Rainbow Slime.Pet Data (Huge Rainbow Slime) -----  -  Editar
  04:54:13.666  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Rainbow Slime", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://12940103329", 
	goldenThumbnail = "rbxassetid://12940103394", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.666    -  Editar
  04:54:13.666  ----- [1984] ReplicatedStorage.__DIRECTORY.Pets.2096 - Huge Goblin.Pet Data (Huge Goblin) -----  -  Editar
  04:54:13.666  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Huge Goblin", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = false, 
	huge = true, 
	thumbnail = "rbxassetid://12939952545", 
	goldenThumbnail = "rbxassetid://12939952635", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = false, 
	tradeable = true, 
	strengthMin = 2, 
	strengthMax = 3
};
  -  Editar
  04:54:13.666    -  Editar
  04:54:13.666  ----- [1985] ReplicatedStorage.__DIRECTORY.Pets.210 - Dominus Darkwing.Pet Data (Dominus Darkwing) -----  -  Editar
  04:54:13.666  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Dominus Darkwing", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = {}
	}, 
	fly = true, 
	thumbnail = "rbxassetid://7795322636", 
	goldenThumbnail = "", 
	darkMatterThumbnail = "", 
	rarity = "Exclusive", 
	isPremium = true, 
	tradeable = true, 
	convertPoints = 5, 
	strengthMin = 0, 
	strengthMax = 0
};
  -  Editar
  04:54:13.667    -  Editar
  04:54:13.667  ----- [1986] ReplicatedStorage.__DIRECTORY.Pets.6741 - Turkey.Pet Data (Cat) -----  -  Editar
  04:54:13.667  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.667    -  Editar
  04:54:13.667  ----- [1987] ReplicatedStorage.__DIRECTORY.Pets.6751 - Scorpion.Pet Data (Cat) -----  -  Editar
  04:54:13.667  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.667    -  Editar
  04:54:13.667  ----- [1988] ReplicatedStorage.__DIRECTORY.Pets.6761 - Mushroom Raccoon.Pet Data (Cat) -----  -  Editar
  04:54:13.667  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.668    -  Editar
  04:54:13.668  ----- [1989] ReplicatedStorage.__DIRECTORY.Pets.6771 - Platypus.Pet Data (Cat) -----  -  Editar
  04:54:13.668  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.668    -  Editar
  04:54:13.668  ----- [1990] ReplicatedStorage.__DIRECTORY.Pets.6781 - Narwhal.Pet Data (Cat) -----  -  Editar
  04:54:13.668  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.668    -  Editar
  04:54:13.669  ----- [1991] ReplicatedStorage.__DIRECTORY.Pets.6791 - Moose.Pet Data (Cat) -----  -  Editar
  04:54:13.669  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.669    -  Editar
  04:54:13.669  ----- [1992] ReplicatedStorage.__DIRECTORY.Pets.6801 - Yeehaw Dog.Pet Data (Cat) -----  -  Editar
  04:54:13.670  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.670    -  Editar
  04:54:13.670  ----- [1993] ReplicatedStorage.__DIRECTORY.Pets.6811 - Mine Dog.Pet Data (Cat) -----  -  Editar
  04:54:13.670  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.670    -  Editar
  04:54:13.670  ----- [1994] ReplicatedStorage.__DIRECTORY.Pets.6821 - Desert Bighorn.Pet Data (Cat) -----  -  Editar
  04:54:13.670  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.670    -  Editar
  04:54:13.670  ----- [1995] ReplicatedStorage.__DIRECTORY.Pets.6831 - Bee.Pet Data (Cat) -----  -  Editar
  04:54:13.670  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = true,
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.670    -  Editar
  04:54:13.670  ----- [1996] ReplicatedStorage.__DIRECTORY.Pets.6841 - Dolphin.Pet Data (Cat) -----  -  Editar
  04:54:13.670  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.670    -  Editar
  04:54:13.670  ----- [1997] ReplicatedStorage.__DIRECTORY.Pets.6851 - Sloth.Pet Data (Cat) -----  -  Editar
  04:54:13.670  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.671    -  Editar
  04:54:13.671  ----- [1998] ReplicatedStorage.__DIRECTORY.Pets.6861 - Sailor Seal.Pet Data (Cat) -----  -  Editar
  04:54:13.671  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.671    -  Editar
  04:54:13.671  ----- [1999] ReplicatedStorage.__DIRECTORY.Pets.6871 - Hippo.Pet Data (Cat) -----  -  Editar
  04:54:13.671  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.671    -  Editar
  04:54:13.671  ----- [2000] ReplicatedStorage.__DIRECTORY.Pets.6881 - Sailor Dolphin.Pet Data (Cat) -----  -  Editar
  04:54:13.671  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.671    -  Editar
  04:54:13.671  ----- [2001] ReplicatedStorage.__DIRECTORY.Pets.6891 - Chimpanzee.Pet Data (Cat) -----  -  Editar
  04:54:13.671  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.671    -  Editar
  04:54:13.671  ----- [2002] ReplicatedStorage.__DIRECTORY.Pets.6901 - Dino Cat.Pet Data (Cat) -----  -  Editar
  04:54:13.671  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.672    -  Editar
  04:54:13.672  ----- [2003] ReplicatedStorage.__DIRECTORY.Pets.6911 - Rhino.Pet Data (Cat) -----  -  Editar
  04:54:13.672  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.672    -  Editar
  04:54:13.672  ----- [2004] ReplicatedStorage.__DIRECTORY.Pets.6921 - Lemur.Pet Data (Cat) -----  -  Editar
  04:54:13.672  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.672    -  Editar
  04:54:13.672  ----- [2005] ReplicatedStorage.__DIRECTORY.Pets.6931 - Cheetah.Pet Data (Cat) -----  -  Editar
  04:54:13.672  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.672    -  Editar
  04:54:13.672  ----- [2006] ReplicatedStorage.__DIRECTORY.Pets.6941 - Gorilla.Pet Data (Cat) -----  -  Editar
  04:54:13.672  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.673    -  Editar
  04:54:13.673  ----- [2007] ReplicatedStorage.__DIRECTORY.Pets.6951 - Jaguar.Pet Data (Cat) -----  -  Editar
  04:54:13.673  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.673    -  Editar
  04:54:13.673  ----- [2008] ReplicatedStorage.__DIRECTORY.Pets.6961 - Puma.Pet Data (Cat) -----  -  Editar
  04:54:13.673  -- Decompiled with the Synapse X Luau decompiler.

return {
	name = "Cat", 
	model = script.Parent:FindFirstChild("Pet"), 
	modelGold = script.Parent:FindFirstChild("Golden"), 
	sounds = {
		random = { 4478156278, 4478156615 }
	}, 
	fly = false, 
	thumbnail = "rbxassetid://4360069887", 
	goldenThumbnail = "rbxassetid://4360069758", 
	darkMatterThumbnail = "rbxassetid://7430183836", 
	rarity = "Basic", 
	isPremium = false, 
	tradeable = true, 
	isVanity = false, 
	strengthMin = 2, 
	strengthMax = 3
};

  -  Editar
  04:54:13.673    -  Editar
  04:54:13.673  ----- [2009] ReplicatedStorage.Library -----  -  Editar
  04:54:13.673  --[[
                                                                     ,╓╓╖╖╥╥@@@,,,╓╖╖╖
                                                            ,,╓╓╖╖╖@@@╢╢║╢╢╣▒▒▒▒▒▒▒▒▒
                                          ,,,╓╖╖╖╥@@@╢╢╢╢╢▒▒▒╢╢╜╜╙````"╙╜╢╣▒▒▒▒▒▒▒▒▒▒
                         ,,,╓╖╖╥@@@@╢║╢╢▒▒╢╢╢Ñ╨╨╨▒▒▒▒▒▒▒▒▒╢╜`              ╙╢▒▒▒▒▒▒▒▒
        ,,╓╖╖╖╥@@@╢╢╢╢╢▒▒╢╢╢╢╢╢╢▒▒▒▒▒▒▒▒▒▒       ╢▒▒▒▒▒▒▒╜                   ╙╢▒▒▒▒▒▒
        ]▒▒▒▒▒╜╜╙"``              ╙╢▒▒▒▒▒▒░      ║▒▒▒▒▒▒╜       ╥@╣╢╢@╖       ,╢▒▒▒▒▒▒
         ▒▒▒▒▒L                     ╙╢▒▒▒▒▒      ]▒▒▒▒▒▒      ,╣▒▒▒▒▒▒▒╢╖,╓@╣╢▒▒▒▒▒▒▒▒
         ║▒▒▒▒▒        ,,,╓╓╓,       ]▒▒▒▒╣       ╢▒▒▒▒       ║▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
         ║▒▒▒▒▒       ╢▒▒▒▒▒▒▒@       ▒▒▒▒▒       ║▒▒▒▒       ╢▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
         ]▒▒▒▒▒       ║▒▒▒▒▒▒▒Ñ      ,▒▒▒▒▒▒      ]▒▒▒▒       ╢▒▒▒▒▒╜╜╜╙"``     └▒▒▒▒▒▒s
          ▒▒▒▒▒▒      ╙╝╨╜╜╜╙       ╓╢▒▒▒▒▒▒      └▒▒▒▒       ║▒▒▒▒▒             ╢▒▒▒▒▒
          ║▒▒▒▒▒                   ╙╨╢▒▒▒▒▒╢       ║▒▒▒H      ╙▒▒▒▒▒▒            ║▒▒▒▒▒░
          ]▒▒▒▒▒                      ╙╢▒▒▒▒       ║▒▒▒╢       ║▒▒▒▒╢@@@╣╢C      ]▒▒▒▒▒▒
           ▒▒▒▒▒~      ╓╖╥@@@@@@,      `╢▒▒▒▒      ]▒▒▒▒H       ╙╣▒▒▒▒▒▒▒╜        ▒▒▒▒▒▒
           ║▒▒▒▒▒      ]▒▒▒▒▒▒▒▒▒∩      ║▒▒▒╣       ▒▒▒▒▒╖        ╙╨╝╝╜╜          ║▒▒▒▒▒
           ║▒▒▒▒╣       ╢▒▒▒▒▒▒▒▒░      ]▒▒▒▒       ║▒▒▒▒▒Ñ                       ╠▒▒▒▒▒∩
           └▒▒▒▒▒       ║▒▒╢╢╢╝╜`       ║▒▒▒▒▒      ]▒▒▒▒▒▒▒@╖             ╓╣.,,,╓║▒▒▒▒▒▒
            ╢▒▒▒▒▒                     ║▒▒▒▒▒▒      └▒▒▒▒▒▒▒▒▒╣╢@╥╖╖╖╖╖@@╢▒▒▒▒▒╢╢╢╝╨╜╜╜╙"
            ║▒▒▒▒▒                  ╓@╢▒▒▒▒▒▒▒╖╓╖╖╥@@▒▒▒▒▒▒▒▒▒╢╢╢╨╜╜╜╜╙╙``
            ]▒▒▒▒▒        ,,,╓╓╖@@╣╢▒▒▒▒▒▒▒▒▒╢║╨╨╜╜╜╙╙"``        ,,╓╓╖╥╗   ,@╢▒▒▒╣╣╗
             ▒▒▒▒▒Ñ@╣╢╢╣▒▒▒╢╢║╨╨╜╜╜╙╙`'        ,,,╓╖,    ║╣╢   ╢▒▒▒▒▒▒╢╢H ╓▒▒╢╙``╙╨Ñ
             ╨╜╜╜╜╙"``            ╓╥@@@╥╖    ║▒▒▒▒▒▒▒▒N  ║▒▒[  ║▒▒U       ]▒▒╢╖,,
                     ╓╣╢▒▒╢╣╖   ╓╢▒▒Ñ╨╣▒▒╢,  ║▒▒[   ║▒▒H ]▒▒╢  ]▒▒║╖╖╥╗╖   ╙╢▒▒▒▒▒╣╣╖
                    ╢▒▒╜""╙▒▒Ñ  ╢▒▒     ╢▒╣  ]▒▒▒   ║▒▒▒  ▒▒▒   ▒▒▒╢╢Ñ╝╨       `"╙╢▒▒H
                   ]▒▒▒    `    ▒▒▒     ╠▒▒[  ▒▒▒╢╣▒▒▒╝   ║▒▒∩  ║▒▒        ╓╣╖,,,╓╢▒▒`
                   ║▒▒▒         ╢▒▒     ]▒▒[  ║▒▒╜``      ]▒▒▒  ]▒▒N@@Ñ╣╣╢ ╙╢▒▒▒▒▒▒Ñ`
                   └▒▒╢     ╖╖, ╙▒▒╢    ║▒▒┘  ║▒▒▒         ▒▒╢  ]╢╢╢╝╝╨╜╜╙
                    ╙▒▒╣╖,,╥▒▒Ñ  ╙╢▒▒╢╢▒▒╢╜   └╢╢▒
                     ╙╢▒▒▒▒▒╢╜      ╙╜
                                 

	BIG Copies rbx.lua Framework [2023] - [2023]
	Written by OneX - 1037898275229020250
    Developed with keyboards and pixie dust.
	
	-+-+-+- SPECIFICS -+-+-+-
	_L
	===========
	Holds everything under Modules (and other stuff like Directory). The number before the module name represents the loading priority - very useful when a module
	references another module. (how would you reference a module that hasan't loaded, yet?)
	
	Keep out of reach.
	===========
]]
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--- Settings
local Debug = true

--- Settings
local Debug = true

--- Main
local Library = {
	Loaded = false,
	Game = game:GetService("ReplicatedStorage"):WaitForChild("Game"),
	Debris = workspace:WaitForChild("__DEBRIS"),
	Things = workspace:WaitForChild("__THINGS"),
	Assets = game:GetService("ReplicatedStorage"):WaitForChild("Assets"),
	AnalyticsService = game:GetService("AnalyticsService"),
	AssetService = game:GetService("AssetService"),
	BadgeService = game:GetService("BadgeService"),
	Chat = game:GetService("Chat"),
	CollectionService = game:GetService("CollectionService"),
	ContentProvider = game:GetService("ContentProvider"),
	ContextActionService = game:GetService("ContextActionService"),
	ControllerService = game:GetService("ControllerService"),
	DataStoreService = require(game.ReplicatedStorage.__DATASTORE), --game:GetService("DataStoreService"),
	FriendService = game:GetService("FriendService"),
	GamepadService = game:GetService("GamepadService"),
	GamePassService = game:GetService("GamePassService"),
	GroupService = game:GetService("GroupService"),
	GuiService = game:GetService("GuiService"),
	HapticService = game:GetService("HapticService"),
	HttpService = game:GetService("HttpService"),
	InsertService = game:GetService("InsertService"),
	JointsService = game:GetService("JointsService"),
	KeyboardService = game:GetService("KeyboardService"),
	Lighting = game:GetService("Lighting"),
	LocalizationService = game:GetService("LocalizationService"),
	LoginService = game:GetService("LoginService"),
	LogService = game:GetService("LogService"),
	MarketplaceService = game:GetService("MarketplaceService"),
	MaterialService = game:GetService("MaterialService"),
	MessagingService = game:GetService("MessagingService"),
	MouseService = game:GetService("MouseService"),
	NotificationService = game:GetService("NotificationService"),
	PathfindingService = game:GetService("PathfindingService"),
	PermissionsService = game:GetService("PermissionsService"),
	PhysicsService = game:GetService("PhysicsService"),
	Players = game:GetService("Players"),
	PointsService = game:GetService("PointsService"),
	PolicyService = game:GetService("PolicyService"),
	ProximityPromptService = game:GetService("ProximityPromptService"),
	ReplicatedFirst = game:GetService("ReplicatedFirst"),
	ReplicatedStorage = game:GetService("ReplicatedStorage"),
	RunService = game:GetService("RunService"),
	SocialService = game:GetService("SocialService"),
	SoundService = game:GetService("SoundService"),
	StarterGui = game:GetService("StarterGui"),
	StarterPack = game:GetService("StarterPack"),
	StarterPlayer = game:GetService("StarterPlayer"),
	Teams = game:GetService("Teams"),
	TeleportService = game:GetService("TeleportService"),
	TextChatService = game:GetService("TextChatService"),
	TextService = game:GetService("TextService"),
	TouchInputService = game:GetService("TouchInputService"),
	TweenService = game:GetService("TweenService"),
	UserInputService = game:GetService("UserInputService"),
	UserService = game:GetService("UserService"),
	VoiceChatService = game:GetService("VoiceChatService"),
	VRService = game:GetService("VRService"),
	DebrisService = game:GetService("Debris"),
	Heartbeat = function(arg) 
		for index1 = 1, arg or 1 do
			game:GetService("RunService").Heartbeat:Wait()
		end
	end,
	Stepped = function(arg) 
		for index2 = 1, arg or 1 do
			game:GetService("RunService").Stepped:Wait()
		end
	end,
	RenderStepped = function(arg) 
		for index3 = 1, arg or 1 do
			game:GetService("RunService").RenderStepped:Wait()
		end
	end,
	LocalPlayer = game.Players.LocalPlayer,
	Random = require(script:WaitForChild("Modules").Random).R,
	Services = require(script.Services),
	Functions = require(script.Functions),
	Asserts = require(script.Asserts),
	Print = require(script.Print),
	Types = require(script.Types),
	Modules = require(script.Modules),
	Signal = require(script.Signal),
	Network = require(script.Network),
	Variables = require(script.Variables),
	Shared = require(script.Shared),
	Player = require(script.Player),
	Audio = require(script.Audio),
	Directory = require(script.Directory),
	RAPShared = require(script.RAPShared)
}

--- References
local isServer = game:GetService("RunService"):IsServer()

--- Variables
local debugTag = (isServer and "SERVER" or "CLIENT")


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--- Client specific stuff
if not isServer then
	--- Wait on intro to finish
	repeat game:GetService("RunService").RenderStepped:Wait() until _G.IntroDone
	
	---- Wait for GUIs to load (if intro is disabled)
	local PlayerGui = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
	PlayerGui:WaitForChild("Message")
end

-- Debug timer
local _startInitTick = tick()

local IsLoaded
if isServer then
	Library.ServerScriptService = game:GetService("ServerScriptService")
	Library.ServerStorage = game:GetService("ServerStorage")
	local Server = require(game:GetService("ServerScriptService"):WaitForChild("Library"))
	Library.Network = Server.Network
	setmetatable(Library, { __index = Server })

	IsLoaded = function() 
		return Server.Loaded
	end
else
	local Client = require(script.Client)
	Library.Network = Client.Network
	setmetatable(Library, { __index = Client })

	IsLoaded = function() 
		return Client.Loaded
	end
end

task.spawn(function() 
	local lateLoading = false
	
	-- Iterate through all child modules
	for _, moduleScript in ipairs(script:GetChildren()) do
		-- Check if the module is a ModuleScript and not already loaded
		if moduleScript:IsA("ModuleScript") and Library[moduleScript.Name] == nil and moduleScript.Name ~= "Client" then
			if not lateLoading then
				-- Delay the first late-loading module by one frame to improve performance
				lateLoading = true
				task.wait()
			end

			print("Library (Shared) - Late loading: ", moduleScript)
			Library[moduleScript.Name] = require(moduleScript)
		end
	end
	
	-- Wait for Client/Server Modules to load
	while not IsLoaded() do
		task.wait()
	end
		
	--- Done!
	Library.Loaded = true
	
	--- Debug
	if Debug then		
		print(string.format("✅ %s | _L took %dms to initialize!", debugTag, math.round((tick() - _startInitTick) * 1000)))
	end	
end)

function Library.Load() 
	while not Library.Loaded do
		task.wait()
	end
end


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

return Library  -  Editar
  04:54:13.673    -  Editar
  04:54:13.673  ----- [2010] ReplicatedStorage.Library.Directory -----  -  Editar
  04:54:13.674  --[[    
                                                                   ,,╓╓╖╖╥╥@@@,,,╓╖╖╖
                                                            ,,╓╓╖╖╖@@@╢╢║╢╢╣▒▒▒▒▒▒▒▒▒
                                          ,,,╓╖╖╖╥@@@╢╢╢╢╢▒▒▒╢╢╜╜╙````"╙╜╢╣▒▒▒▒▒▒▒▒▒▒
                         ,,,╓╖╖╥@@@@╢║╢╢▒▒╢╢╢Ñ╨╨╨▒▒▒▒▒▒▒▒▒╢╜`              ╙╢▒▒▒▒▒▒▒▒
        ,,╓╖╖╖╥@@@╢╢╢╢╢▒▒╢╢╢╢╢╢╢▒▒▒▒▒▒▒▒▒▒       ╢▒▒▒▒▒▒▒╜                   ╙╢▒▒▒▒▒▒
        ]▒▒▒▒▒╜╜╙"``              ╙╢▒▒▒▒▒▒░      ║▒▒▒▒▒▒╜       ╥@╣╢╢@╖       ,╢▒▒▒▒▒▒
         ▒▒▒▒▒L                     ╙╢▒▒▒▒▒      ]▒▒▒▒▒▒      ,╣▒▒▒▒▒▒▒╢╖,╓@╣╢▒▒▒▒▒▒▒▒
         ║▒▒▒▒▒        ,,,╓╓╓,       ]▒▒▒▒╣       ╢▒▒▒▒       ║▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
         ║▒▒▒▒▒       ╢▒▒▒▒▒▒▒@       ▒▒▒▒▒       ║▒▒▒▒       ╢▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
         ]▒▒▒▒▒       ║▒▒▒▒▒▒▒Ñ      ,▒▒▒▒▒▒      ]▒▒▒▒       ╢▒▒▒▒▒╜╜╜╙"``     └▒▒▒▒▒▒s
          ▒▒▒▒▒▒      ╙╝╨╜╜╜╙       ╓╢▒▒▒▒▒▒      └▒▒▒▒       ║▒▒▒▒▒             ╢▒▒▒▒▒
          ║▒▒▒▒▒                   ╙╨╢▒▒▒▒▒╢       ║▒▒▒H      ╙▒▒▒▒▒▒            ║▒▒▒▒▒░
          ]▒▒▒▒▒                      ╙╢▒▒▒▒       ║▒▒▒╢       ║▒▒▒▒╢@@@╣╢C      ]▒▒▒▒▒▒
           ▒▒▒▒▒~      ╓╖╥@@@@@@,      `╢▒▒▒▒      ]▒▒▒▒H       ╙╣▒▒▒▒▒▒▒╜        ▒▒▒▒▒▒
           ║▒▒▒▒▒      ]▒▒▒▒▒▒▒▒▒∩      ║▒▒▒╣       ▒▒▒▒▒╖        ╙╨╝╝╜╜          ║▒▒▒▒▒
           ║▒▒▒▒╣       ╢▒▒▒▒▒▒▒▒░      ]▒▒▒▒       ║▒▒▒▒▒Ñ                       ╠▒▒▒▒▒∩
           └▒▒▒▒▒       ║▒▒╢╢╢╝╜`       ║▒▒▒▒▒      ]▒▒▒▒▒▒▒@╖             ╓╣.,,,╓║▒▒▒▒▒▒
            ╢▒▒▒▒▒                     ║▒▒▒▒▒▒      └▒▒▒▒▒▒▒▒▒╣╢@╥╖╖╖╖╖@@╢▒▒▒▒▒╢╢╢╝╨╜╜╜╙"
            ║▒▒▒▒▒                  ╓@╢▒▒▒▒▒▒▒╖╓╖╖╥@@▒▒▒▒▒▒▒▒▒╢╢╢╨╜╜╜╜╙╙``
            ]▒▒▒▒▒        ,,,╓╓╖@@╣╢▒▒▒▒▒▒▒▒▒╢║╨╨╜╜╜╙╙"``        ,,╓╓╖╥╗   ,@╢▒▒▒╣╣╗
             ▒▒▒▒▒Ñ@╣╢╢╣▒▒▒╢╢║╨╨╜╜╜╙╙`'        ,,,╓╖,    ║╣╢   ╢▒▒▒▒▒▒╢╢H ╓▒▒╢╙``╙╨Ñ
             ╨╜╜╜╜╙"``            ╓╥@@@╥╖    ║▒▒▒▒▒▒▒▒N  ║▒▒[  ║▒▒U       ]▒▒╢╖,,
                     ╓╣╢▒▒╢╣╖   ╓╢▒▒Ñ╨╣▒▒╢,  ║▒▒[   ║▒▒H ]▒▒╢  ]▒▒║╖╖╥╗╖   ╙╢▒▒▒▒▒╣╣╖
                    ╢▒▒╜""╙▒▒Ñ  ╢▒▒     ╢▒╣  ]▒▒▒   ║▒▒▒  ▒▒▒   ▒▒▒╢╢Ñ╝╨       `"╙╢▒▒H
                   ]▒▒▒    `    ▒▒▒     ╠▒▒[  ▒▒▒╢╣▒▒▒╝   ║▒▒∩  ║▒▒        ╓╣╖,,,╓╢▒▒`
                   ║▒▒▒         ╢▒▒     ]▒▒[  ║▒▒╜``      ]▒▒▒  ]▒▒N@@Ñ╣╣╢ ╙╢▒▒▒▒▒▒Ñ`
                   └▒▒╢     ╖╖, ╙▒▒╢    ║▒▒┘  ║▒▒▒         ▒▒╢  ]╢╢╢╝╝╨╜╜╙
                    ╙▒▒╣╖,,╥▒▒Ñ  ╙╢▒▒╢╢▒▒╢╜   └╢╢▒
                     ╙╢▒▒▒▒▒╢╜      ╙╜
                                 

	BIG Copies rbx.lua Framework [2023] - [2023]
	Written by OneX - 1037898275229020250
	Developed with a keyboard and pixie dust.
	
	-+-+-+- SPECIFICS -+-+-+-
	_L.Directory
	===========
	The directory is esentially a library of information. Use this for ANY read-only information.
	===========
--]]
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


local debugInit = false

----------------------

local Directory = {}

----------------------

local modules = game:GetService("ReplicatedStorage"):WaitForChild("Library"):WaitForChild("Modules")
local Pets = require(modules.Pets)
local Areas = require(modules.Areas)

--- Iterate through (physical) directory
for _, dirFolder in ipairs(game:GetService("ReplicatedStorage"):WaitForChild("__DIRECTORY"):GetChildren()) do
	--- Debug
	if debugInit then  
		print('-----------------------------------------------')  
	end
	
	--- Setup directory
	local dirName = dirFolder.Name
	Directory[dirName] = {}
	local dirData = Directory[dirName]
	
	--- Folder? Scan it!
	for _, module in ipairs(dirFolder:GetChildren()) do
		if module.ClassName == "ModuleScript" and not module:GetAttribute("NOLOAD") then
			--- Add module to directory
			local moduleData = require(module)
			for key, value in pairs(moduleData) do
				dirData[key] = value
				if debugInit then  print(key, value)  end
			end
		end	
	end
	
	--- Debug
	if debugInit then  
		print('-----------------------------------------------\nLOADED '.. dirName)  
	end
end

function starts_with(p1, p2)
	if #p1 < #p2 then
		return false
	end
	
	if p2 == "" then
		return true
	end
	
	if p1:sub(1, #p2) == p2 then
		return true
	end
	return false
end

----------------------

return Directory
  -  Editar
  04:54:13.674    -  Editar
  04:54:13.674  ----- [2011] ReplicatedStorage.Library.Services -----  -  Editar
  04:54:13.674  --[[    
                                                                   ,,╓╓╖╖╥╥@@@,,,╓╖╖╖
                                                            ,,╓╓╖╖╖@@@╢╢║╢╢╣▒▒▒▒▒▒▒▒▒
                                          ,,,╓╖╖╖╥@@@╢╢╢╢╢▒▒▒╢╢╜╜╙````"╙╜╢╣▒▒▒▒▒▒▒▒▒▒
                         ,,,╓╖╖╥@@@@╢║╢╢▒▒╢╢╢Ñ╨╨╨▒▒▒▒▒▒▒▒▒╢╜`              ╙╢▒▒▒▒▒▒▒▒
        ,,╓╖╖╖╥@@@╢╢╢╢╢▒▒╢╢╢╢╢╢╢▒▒▒▒▒▒▒▒▒▒       ╢▒▒▒▒▒▒▒╜                   ╙╢▒▒▒▒▒▒
        ]▒▒▒▒▒╜╜╙"``              ╙╢▒▒▒▒▒▒░      ║▒▒▒▒▒▒╜       ╥@╣╢╢@╖       ,╢▒▒▒▒▒▒
         ▒▒▒▒▒L                     ╙╢▒▒▒▒▒      ]▒▒▒▒▒▒      ,╣▒▒▒▒▒▒▒╢╖,╓@╣╢▒▒▒▒▒▒▒▒
         ║▒▒▒▒▒        ,,,╓╓╓,       ]▒▒▒▒╣       ╢▒▒▒▒       ║▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
         ║▒▒▒▒▒       ╢▒▒▒▒▒▒▒@       ▒▒▒▒▒       ║▒▒▒▒       ╢▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
         ]▒▒▒▒▒       ║▒▒▒▒▒▒▒Ñ      ,▒▒▒▒▒▒      ]▒▒▒▒       ╢▒▒▒▒▒╜╜╜╙"``     └▒▒▒▒▒▒s
          ▒▒▒▒▒▒      ╙╝╨╜╜╜╙       ╓╢▒▒▒▒▒▒      └▒▒▒▒       ║▒▒▒▒▒             ╢▒▒▒▒▒
          ║▒▒▒▒▒                   ╙╨╢▒▒▒▒▒╢       ║▒▒▒H      ╙▒▒▒▒▒▒            ║▒▒▒▒▒░
          ]▒▒▒▒▒                      ╙╢▒▒▒▒       ║▒▒▒╢       ║▒▒▒▒╢@@@╣╢C      ]▒▒▒▒▒▒
           ▒▒▒▒▒~      ╓╖╥@@@@@@,      `╢▒▒▒▒      ]▒▒▒▒H       ╙╣▒▒▒▒▒▒▒╜        ▒▒▒▒▒▒
           ║▒▒▒▒▒      ]▒▒▒▒▒▒▒▒▒∩      ║▒▒▒╣       ▒▒▒▒▒╖        ╙╨╝╝╜╜          ║▒▒▒▒▒
           ║▒▒▒▒╣       ╢▒▒▒▒▒▒▒▒░      ]▒▒▒▒       ║▒▒▒▒▒Ñ                       ╠▒▒▒▒▒∩
           └▒▒▒▒▒       ║▒▒╢╢╢╝╜`       ║▒▒▒▒▒      ]▒▒▒▒▒▒▒@╖             ╓╣.,,,╓║▒▒▒▒▒▒
            ╢▒▒▒▒▒                     ║▒▒▒▒▒▒      └▒▒▒▒▒▒▒▒▒╣╢@╥╖╖╖╖╖@@╢▒▒▒▒▒╢╢╢╝╨╜╜╜╙"
            ║▒▒▒▒▒                  ╓@╢▒▒▒▒▒▒▒╖╓╖╖╥@@▒▒▒▒▒▒▒▒▒╢╢╢╨╜╜╜╜╙╙``
            ]▒▒▒▒▒        ,,,╓╓╖@@╣╢▒▒▒▒▒▒▒▒▒╢║╨╨╜╜╜╙╙"``        ,,╓╓╖╥╗   ,@╢▒▒▒╣╣╗
             ▒▒▒▒▒Ñ@╣╢╢╣▒▒▒╢╢║╨╨╜╜╜╙╙`'        ,,,╓╖,    ║╣╢   ╢▒▒▒▒▒▒╢╢H ╓▒▒╢╙``╙╨Ñ
             ╨╜╜╜╜╙"``            ╓╥@@@╥╖    ║▒▒▒▒▒▒▒▒N  ║▒▒[  ║▒▒U       ]▒▒╢╖,,
                     ╓╣╢▒▒╢╣╖   ╓╢▒▒Ñ╨╣▒▒╢,  ║▒▒[   ║▒▒H ]▒▒╢  ]▒▒║╖╖╥╗╖   ╙╢▒▒▒▒▒╣╣╖
                    ╢▒▒╜""╙▒▒Ñ  ╢▒▒     ╢▒╣  ]▒▒▒   ║▒▒▒  ▒▒▒   ▒▒▒╢╢Ñ╝╨       `"╙╢▒▒H
                   ]▒▒▒    `    ▒▒▒     ╠▒▒[  ▒▒▒╢╣▒▒▒╝   ║▒▒∩  ║▒▒        ╓╣╖,,,╓╢▒▒`
                   ║▒▒▒         ╢▒▒     ]▒▒[  ║▒▒╜``      ]▒▒▒  ]▒▒N@@Ñ╣╣╢ ╙╢▒▒▒▒▒▒Ñ`
                   └▒▒╢     ╖╖, ╙▒▒╢    ║▒▒┘  ║▒▒▒         ▒▒╢  ]╢╢╢╝╝╨╜╜╙
                    ╙▒▒╣╖,,╥▒▒Ñ  ╙╢▒▒╢╢▒▒╢╜   └╢╢▒
                     ╙╢▒▒▒▒▒╢╜      ╙╜
                                 

	BIG Copies rbx.lua Framework [2023] - [2023]
	Written by OneX - 1037898275229020250
	Developed with a keyboard and pixie dust.
	
	-+-+-+- SPECIFICS -+-+-+-
	_L.Services
	===========
	Hold a reference for every service that would be indexed normally with GetService. Why? I don't know. Conformity I guess.
	===========
--]]
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-- | load library | --
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Library = ReplicatedStorage:WaitForChild("Library")
local ClientLibrary = Library:WaitForChild("Client")
local Modules = Library:WaitForChild("Modules")
local Types = Library:WaitForChild("Types")

-- | shared modules | --

--------|       Top       |--------
local Services = {}

--------|     Setting     |--------

--------|    Reference    |--------
local RunService = game:GetService('RunService')
local isStudio = RunService:IsStudio()

--------|    Variables    |--------

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--- All the (>level 2) services all at EOS to same memory and typing strokes :D
Services.AnalyticsService =                     game:GetService("AnalyticsService")
Services.AssetService =                         game:GetService("AssetService")
Services.BadgeService =                         game:GetService("BadgeService")
Services.Chat =                                 game:GetService("Chat")
Services.CollectionService =                    game:GetService("CollectionService")
Services.ContentProvider =                      game:GetService("ContentProvider")
Services.ContextActionService =                 game:GetService("ContextActionService")
Services.ControllerService =                    game:GetService("ControllerService")
Services.DataStoreService =                     game:GetService("DataStoreService")
Services.FriendService =                        game:GetService("FriendService")
Services.GamepadService =                       game:GetService("GamepadService")
Services.GamePassService =                      game:GetService("GamePassService")
Services.GroupService =                         game:GetService("GroupService")
Services.GuiService =                           game:GetService("GuiService")
Services.HapticService =                        game:GetService("HapticService")
Services.HttpService =                          game:GetService("HttpService")
Services.InsertService =                        game:GetService("InsertService")
Services.JointsService =                        game:GetService("JointsService")
Services.KeyboardService =                      game:GetService("KeyboardService")
Services.Lighting =                             game:GetService("Lighting")
Services.LocalizationService =                  game:GetService("LocalizationService")
Services.LoginService =                         game:GetService("LoginService")
Services.LogService =                           game:GetService("LogService")
Services.MarketplaceService =                   game:GetService("MarketplaceService")
Services.MaterialService =                      game:GetService("MaterialService")
Services.MessagingService =                     game:GetService("MessagingService")
Services.MouseService =                         game:GetService("MouseService")
Services.NotificationService =                  game:GetService("NotificationService")
Services.PathfindingService =                   game:GetService("PathfindingService")
Services.PermissionsService =                   game:GetService("PermissionsService")
Services.PhysicsService =                       game:GetService("PhysicsService")
Services.Players =                              game:GetService("Players")
Services.PointsService =                        game:GetService("PointsService")
Services.PolicyService =                        game:GetService("PolicyService")
Services.ProximityPromptService =               game:GetService("ProximityPromptService")
Services.ReplicatedFirst =                      game:GetService("ReplicatedFirst")
Services.ReplicatedStorage =                    game:GetService("ReplicatedStorage")
Services.RunService =                           game:GetService("RunService")
Services.SocialService =                        game:GetService("SocialService")
Services.SoundService =                         game:GetService("SoundService")
Services.StarterGui =                           game:GetService("StarterGui")
Services.StarterPack =                          game:GetService("StarterPack")
Services.StarterPlayer =                        game:GetService("StarterPlayer")
Services.Teams =                                game:GetService("Teams")
Services.TeleportService =                      game:GetService("TeleportService")
Services.TextChatService =                      game:GetService("TextChatService")
Services.TextService =                          game:GetService("TextService")
Services.TouchInputService =                    game:GetService("TouchInputService")
Services.TweenService =                         game:GetService("TweenService")
Services.UserInputService =                     game:GetService("UserInputService")
Services.UserService =                          game:GetService("UserService")
Services.VoiceChatService =                     game:GetService("VoiceChatService")
Services.VRService =                            game:GetService("VRService")
Services.Debris =                               game:GetService("Debris")

if isStudio then
	Services.ServerScriptService =              game:GetService("ServerScriptService");
	Services.ServerStorage =                    game:GetService("ServerStorage");
	return Services
end

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

return Services  -  Editar
  04:54:13.674    -  Editar
  04:54:13.674  ----- [2012] ReplicatedStorage.Library.Functions -----  -  Editar
  04:54:13.674  --[[    
                                                                   ,,╓╓╖╖╥╥@@@,,,╓╖╖╖
                                                            ,,╓╓╖╖╖@@@╢╢║╢╢╣▒▒▒▒▒▒▒▒▒
                                          ,,,╓╖╖╖╥@@@╢╢╢╢╢▒▒▒╢╢╜╜╙````"╙╜╢╣▒▒▒▒▒▒▒▒▒▒
                         ,,,╓╖╖╥@@@@╢║╢╢▒▒╢╢╢Ñ╨╨╨▒▒▒▒▒▒▒▒▒╢╜`              ╙╢▒▒▒▒▒▒▒▒
        ,,╓╖╖╖╥@@@╢╢╢╢╢▒▒╢╢╢╢╢╢╢▒▒▒▒▒▒▒▒▒▒       ╢▒▒▒▒▒▒▒╜                   ╙╢▒▒▒▒▒▒
        ]▒▒▒▒▒╜╜╙"``              ╙╢▒▒▒▒▒▒░      ║▒▒▒▒▒▒╜       ╥@╣╢╢@╖       ,╢▒▒▒▒▒▒
         ▒▒▒▒▒L                     ╙╢▒▒▒▒▒      ]▒▒▒▒▒▒      ,╣▒▒▒▒▒▒▒╢╖,╓@╣╢▒▒▒▒▒▒▒▒
         ║▒▒▒▒▒        ,,,╓╓╓,       ]▒▒▒▒╣       ╢▒▒▒▒       ║▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
         ║▒▒▒▒▒       ╢▒▒▒▒▒▒▒@       ▒▒▒▒▒       ║▒▒▒▒       ╢▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
         ]▒▒▒▒▒       ║▒▒▒▒▒▒▒Ñ      ,▒▒▒▒▒▒      ]▒▒▒▒       ╢▒▒▒▒▒╜╜╜╙"``     └▒▒▒▒▒▒s
          ▒▒▒▒▒▒      ╙╝╨╜╜╜╙       ╓╢▒▒▒▒▒▒      └▒▒▒▒       ║▒▒▒▒▒             ╢▒▒▒▒▒
          ║▒▒▒▒▒                   ╙╨╢▒▒▒▒▒╢       ║▒▒▒H      ╙▒▒▒▒▒▒            ║▒▒▒▒▒░
          ]▒▒▒▒▒                      ╙╢▒▒▒▒       ║▒▒▒╢       ║▒▒▒▒╢@@@╣╢C      ]▒▒▒▒▒▒
           ▒▒▒▒▒~      ╓╖╥@@@@@@,      `╢▒▒▒▒      ]▒▒▒▒H       ╙╣▒▒▒▒▒▒▒╜        ▒▒▒▒▒▒
           ║▒▒▒▒▒      ]▒▒▒▒▒▒▒▒▒∩      ║▒▒▒╣       ▒▒▒▒▒╖        ╙╨╝╝╜╜          ║▒▒▒▒▒
           ║▒▒▒▒╣       ╢▒▒▒▒▒▒▒▒░      ]▒▒▒▒       ║▒▒▒▒▒Ñ                       ╠▒▒▒▒▒∩
           └▒▒▒▒▒       ║▒▒╢╢╢╝╜`       ║▒▒▒▒▒      ]▒▒▒▒▒▒▒@╖             ╓╣.,,,╓║▒▒▒▒▒▒
            ╢▒▒▒▒▒                     ║▒▒▒▒▒▒      └▒▒▒▒▒▒▒▒▒╣╢@╥╖╖╖╖╖@@╢▒▒▒▒▒╢╢╢╝╨╜╜╜╙"
            ║▒▒▒▒▒                  ╓@╢▒▒▒▒▒▒▒╖╓╖╖╥@@▒▒▒▒▒▒▒▒▒╢╢╢╨╜╜╜╜╙╙``
            ]▒▒▒▒▒        ,,,╓╓╖@@╣╢▒▒▒▒▒▒▒▒▒╢║╨╨╜╜╜╙╙"``        ,,╓╓╖╥╗   ,@╢▒▒▒╣╣╗
             ▒▒▒▒▒Ñ@╣╢╢╣▒▒▒╢╢║╨╨╜╜╜╙╙`'        ,,,╓╖,    ║╣╢   ╢▒▒▒▒▒▒╢╢H ╓▒▒╢╙``╙╨Ñ
             ╨╜╜╜╜╙"``            ╓╥@@@╥╖    ║▒▒▒▒▒▒▒▒N  ║▒▒[  ║▒▒U       ]▒▒╢╖,,
                     ╓╣╢▒▒╢╣╖   ╓╢▒▒Ñ╨╣▒▒╢,  ║▒▒[   ║▒▒H ]▒▒╢  ]▒▒║╖╖╥╗╖   ╙╢▒▒▒▒▒╣╣╖
                    ╢▒▒╜""╙▒▒Ñ  ╢▒▒     ╢▒╣  ]▒▒▒   ║▒▒▒  ▒▒▒   ▒▒▒╢╢Ñ╝╨       `"╙╢▒▒H
                   ]▒▒▒    `    ▒▒▒     ╠▒▒[  ▒▒▒╢╣▒▒▒╝   ║▒▒∩  ║▒▒        ╓╣╖,,,╓╢▒▒`
                   ║▒▒▒         ╢▒▒     ]▒▒[  ║▒▒╜``      ]▒▒▒  ]▒▒N@@Ñ╣╣╢ ╙╢▒▒▒▒▒▒Ñ`
                   └▒▒╢     ╖╖, ╙▒▒╢    ║▒▒┘  ║▒▒▒         ▒▒╢  ]╢╢╢╝╝╨╜╜╙
                    ╙▒▒╣╖,,╥▒▒Ñ  ╙╢▒▒╢╢▒▒╢╜   └╢╢▒
                     ╙╢▒▒▒▒▒╢╜      ╙╜
                                 

	BIG Copies rbx.lua Framework [2023] - [2023]
	Written by OneX - 1037898275229020250
	Developed with a keyboard and pixie dust.
	
	-+-+-+- SPECIFICS -+-+-+-
	_L.Functions
	===========
	And in-house library of helpful functions and QOL stuff like FastTween, GetProductInfo, Commas - down to things that aren't already
	implemented natively by Roblox like ScaleModel. The functions individually can be found as children under this module.
	===========
--]]
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-- | load library | --
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Library = ReplicatedStorage:WaitForChild("Library")
local ClientLibrary = Library:WaitForChild("Client")
local Modules = Library:WaitForChild("Modules")
local Types = Library:WaitForChild("Types")

-- | shared modules | --

--------|       Top       |--------
local Functions = {
	FormatTime = require(script.FormatTime), 
	Animation = require(script.Animation), 
	Base64 = require(script.Base64), 
	Clicked = require(script.Clicked), 
	CloneTable = require(script.CloneTable), 
	Commas = require(script.Commas), 
	CompareTable = require(script.CompareTable), 
	Compress = require(script.Compress), 
	CreateParticleHost = require(script.CreateParticleHost), 
	DictionaryLength = require(script.DictionaryLength), 
	DrawRaycast = require(script.DrawRaycast), 
	Easing = require(script.Easing), 
	Tween = require(script.Tween), 
	FindFirstChildCustom = require(script.FindFirstChildCustom), 
	GenerateCustomUUID = require(script.GenerateCustomUUID), 
	GetGamepassInfo = require(script.GetGamepassInfo), 
	GetPrice = require(script.GetPrice), 
	GetProductInfo = require(script.GetProductInfo), 
	GetTouchingParts = require(script.GetTouchingParts), 
	HasUserdata = require(script.HasUserdata), 
	IsArray = require(script.IsArray), 
	Lottery = require(script.Lottery), 
	NumberShorten = require(script.NumberShorten), 
	PlayerDist = require(script.PlayerDist), 
	QuickValue = require(script.QuickValue), 
	RandomizeTable = require(script.RandomizeTable), 
	ResolutionScale = require(script.ResolutionScale), 
	Weld = require(script.Weld), 
	ScaleModel = require(script.ScaleModel), 
	ScaleParticle = require(script.ScaleParticle), 
	SearchArray = require(script.SearchArray), 
	SearchDictionary = require(script.SearchDictionary), 
	SolveIK = require(script.SolveIK), 
	StringByte = require(script.StringByte), 
	TextStyles = require(script.TextStyles), 
	TimeString = require(script.TimeString), 
	UserIdToUsername = require(script.UserIdToUsername), 
	Wait = require(script.Wait), 
	RemoveTable = require(script.RemoveTable), 
	ToRomanNum = require(script.ToRomanNum), 
	PatchTable = require(script.PatchTable), 
	GetFriends = require(script.GetFriends), 
	TimerString = require(script.TimerString), 
	FormatChance = require(script.FormatChance), 
	FormatAbbreviated = require(script.FormatAbbreviated), 
	IsNaN = require(script.IsNaN), 
	FormatPercent = require(script.FormatPercent), 
	FormatOdds = require(script.FormatOdds), 
	IsInf = require(script.IsInf), 
	IsFinite = require(script.IsFinite), 
	Lerp = require(script.Lerp), 
	DegNorm = require(script.DegNorm), 
	RadNorm = require(script.RadNorm), 
	DegDeltaUnsafeVec = require(script.DegDeltaUnsafeVec), 
	DegDeltaUnsafe = require(script.DegDeltaUnsafe), 
	RadDelta = require(script.RadDelta), 
	RadDeltaUnsafe = require(script.RadDeltaUnsafe), 
	Sigmoid = require(script.Sigmoid), 
	GetUserId = require(script.GetUserId), 
	RemoveIf = require(script.RemoveIf), 
	CumulativeProbability = require(script.CumulativeProbability), 
	ContainsAABBPoint = require(script.ContainsAABBPoint), 
	RegexEscape = require(script.RegexEscape), 
	VecMin = require(script.VecMin), 
	LotteryStruct = require(script.LotteryStruct), 
	Erfc = require(script.Erfc), 
	KeepIf = require(script.KeepIf), 
	Erf = require(script.Erf), 
	AutoUIScaling = require(script.AutoUIScaling), 
	AddDebris = require(script.AddDebris), 
	DistAABBPoint = require(script.DistAABBPoint), 
	DeepCopy = require(script.DeepCopy), 
	FormatTimeShort = require(script.FormatTimeShort), 
	DeepEquals = require(script.DeepEquals), 
	AngleOfReach = require(script.AngleOfReach), 
	GetNextUpdateTime = require(script.GetNextUpdateTime), 
	AbsDifferenceFromNextUpdateTime = require(script.AbsDifferenceFromNextUpdateTime), 
	VerifyPlayerMagnitude = require(script.VerifyPlayerMagnitude), 
	GenerateUID = require(script.GenerateUID), 
	LotteryCustom = require(script.LotteryCustom), 
	FireInterval = require(script.FireInterval), 
	ErfInv = require(script.ErfInv), 
	ScaleNumberSequence = require(script.ScaleNumberSequence), 
	ParseNumberSmart = require(script.ParseNumberSmart), 
	IsEmpty = require(script.IsEmpty), 
	FireAt = require(script.FireAt), 
	RadDeltaVec = require(script.RadDeltaVec), 
	RadDeltaUnsafeVec = require(script.RadDeltaUnsafeVec), 
	DegDeltaVec = require(script.DegDeltaVec), 
	DegDelta = require(script.DegDelta), 
	VecMax = require(script.VecMax), 
	IsASCII = require(script.IsASCII), 
	CheckRectangleIntersection = require(script.CheckRectangleIntersection), 
	IsGuiClipped = require(script.IsGuiClipped), 
	BuildQueryString = require(script.BuildQueryString), 
	BuildSortedQueryString = require(script.BuildSortedQueryString), 
	DeepCopyUnsafe = require(script.DeepCopyUnsafe), 
	DeepEqualsUnsafe = require(script.DeepEqualsUnsafe), 
	ShallowEqualsUnsafe = require(script.ShallowEqualsUnsafe), 
	DistOBBPoint = require(script.DistOBBPoint), 
	ComputeAABBCustom = require(script.ComputeAABBCustom), 
	ComputeAABBModel = require(script.ComputeAABBModel), 
	VecToColor = require(script.VecToColor), 
	VecToColorClamped = require(script.VecToColorClamped), 
	ColorToVec = require(script.ColorToVec), 
	EvalColorSequence = require(script.EvalColorSequence), 
	EvalSequence = require(script.EvalSequence), 
	AsColorSequence = require(script.AsColorSequence), 
	IsFiniteCFrame = require(script.IsFiniteCFrame), 
	IsFiniteVec = require(script.IsFiniteVec), 
	IsFiniteVec2 = require(script.IsFiniteVec2), 
	RenderStepped = require(script.RenderStepped), 
	Scaler = require(script.Scaler), 
	Comb = require(script.Comb), 
	Factorial = require(script.Factorial), 
	Bezier = require(script.Bezier), 
	Emit = require(script.Emit), 
	Transparency = require(script.Transparency), 
	GetCurrentDay = require(script.GetCurrentDay), 
	GetCurrentMonth = require(script.GetCurrentMonth), 
	Bezier2 = require(script.Bezier2), 
	Map = require(script.Map), 
	Map2 = require(script.Map2), 
	Map3 = require(script.Map3), 
	PlaceInsideRect = require(script.PlaceInsideRect), 
	Gauss = require(script.Gauss), 
	PolyVal = require(script.PolyVal), 
	PolyFit = require(script.PolyFit), 
	PolyVal2 = require(script.PolyVal2), 
	PolyFit2 = require(script.PolyFit2), 
	PolyVal3 = require(script.PolyVal3), 
	PolyFit3 = require(script.PolyFit3), 
	SplineFit = require(script.SplineFit), 
	ExpFit = require(script.ExpFit), 
	LotteryCurve = require(script.LotteryCurve), 
	wcall = require(script.wcall), 
	tcall = require(script.tcall), 
	twcall = require(script.twcall), 
	Tasks = require(script.Tasks), 
	UnpackColor = require(script.UnpackColor), 
	PackColor = require(script.PackColor), 
	GlobalSpawner = require(script.GlobalSpawner), 
	Shuffle = require(script.Shuffle), 
	GetNextScavengerTime = require(script.GetNextScavengerTime), 
	GetNextScavengerSeed = require(script.GetNextScavengerSeed), 
	ObjectDebounce = require(script.ObjectDebounce), 
	Debounce = require(script.Debounce), 
	LevDist = require(script.LevDist), 
	GetNameFromUserIdAsync = require(script.GetNameFromUserIdAsync), 
	GetDateTable = require(script.GetDateTable), 
	AddOrdinalSuffix = require(script.AddOrdinalSuffix), 
	FormatDate = require(script.FormatDate), 
	ColorDist = require(script.ColorDist), 
	Recolor = require(script.Recolor), 
	ParseAssetId = require(script.ParseAssetId), 
	PreloadAssets = require(script.PreloadAssets), 
	PreloadSounds = require(script.PreloadSounds), 
	SphereCast = require(script.SphereCast), 
	Tracker = require(script.Tracker), 
	ReverseArray = require(script.ReverseArray), 
	Heartbeat = require(script.Heartbeat), 
	Leaderstat = require(script.Leaderstat), 
	ToHSL = require(script.ToHSL), 
	FromHSL = require(script.FromHSL), 
	HSLToHSV = require(script.HSLToHSV), 
	HSVToHSL = require(script.HSVToHSL), 
	InverseLerp = require(script.InverseLerp), 
	RobloxSaturation = require(script.RobloxSaturation), 
	InverseRobloxSaturation = require(script.InverseRobloxSaturation), 
	CompareColor = require(script.CompareColor), 
	Grayscale = require(script.Grayscale), 
	CorrectColor = require(script.CorrectColor), 
	ClampColor = require(script.ClampColor),
	FaceSize = require(script.FaceSize),
}

--------|     Setting     |--------

--------|    Reference    |--------

--------|    Variables    |--------
local unaddedEntries = ""

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

for _, module in ipairs(script:GetChildren()) do
	if module:IsA("ModuleScript") and Functions[module.Name] == nil then
		unaddedEntries = unaddedEntries .. string.format("%s = require(script.%s),\n", module.Name, module.Name)
	end	
end

if #unaddedEntries > 0 then
	warn(string.format("Unadded entries: \n\n%s\n", unaddedEntries))
end

for index, v in pairs(Functions) do
	if not script:FindFirstChild(index) then
		warn(string.format("Unknown entry: %s", tostring(index)))
	end	
end

for _, module in ipairs(script:GetChildren()) do
	if module:IsA("ModuleScript") and Functions[module.Name] == nil then
		Functions[module.Name] = require(module)
	end	
end


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

return Functions
  -  Editar
  04:54:13.675    -  Editar
  04:54:13.675  ----- [2013] ReplicatedStorage.Library.Functions.AddDebris -----  -  Editar
  04:54:13.675  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local Debris = game:GetService("Debris");
local ReplicatedStorage = game:GetService("ReplicatedStorage");
local X = ReplicatedStorage:WaitForChild("X");
local u1 = require(X:WaitForChild("Util").LeftistHeap).new(function(p4, p5) -- Line: 11
	return p4 - p5;
end);
local table1 = {};
local u2 = 0;
game:GetService("RunService").Stepped:Connect(function(_, p1) -- Line: 16
	--[[
		Upvalues:
			[1] = u2
			[2] = u1
			[3] = table1
			[4] = Debris
	--]]
	debug.profilebegin("AddDebris.Stepped");
	u2 = u2 + p1;
	while true do
		local v4, v5 = u1.tryMin();
		if not v4 or u2 < v5 then break end
		u1.popFast();
		local v6 = table1[v5];
		if v6 then
			for _, val1 in ipairs(v6) do
				if not val1 then continue end
				pcall(function() -- Line: 30
					--[[
						Upvalues:
							[1] = Debris
							[2] = val1
					--]]
					Debris:AddItem(val1, 0);
				end);
			end
		end
	end
	debug.profileend();
end);
return function(p2, p3) -- Line: 39
	--[[
		Upvalues:
			[1] = u2
			[2] = table1
			[3] = u1
	--]]
	assert(typeof(p2) == "Instance");
	local v1 = 0;
	if p3 ~= nil then
		assert(typeof(p3) == "number");
		assert(p3 == p3);
		v1 = math.max(0, p3);
		if v1 == math.huge then return end
	end
	local v2 = u2 + v1;
	local v3 = table1[v2];
	if v3 then
		table.insert(v3, p2);
		return;
	end
	local table2 = {p2};
	table1[v2] = table2;
	u1.insert(v2);
end;
  -  Editar
  04:54:13.676    -  Editar
  04:54:13.676  ----- [2014] ReplicatedStorage.Library.Functions.AngleOfReach -----  -  Editar
  04:54:13.676  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2, p3) -- Line: 16
	local t_Gravity = game.Workspace.Gravity;
	local v1 = math.atan((p3 ^ 2 + math.sqrt(p3 ^ 4 - t_Gravity * (t_Gravity * p1 ^ 2 + p2 * 2 * p3 ^ 2))) / (t_Gravity * p1));
	if v1 ~= v1 then
		v1 = math.pi / 4;
	end
	return v1;
end;
  -  Editar
  04:54:13.676    -  Editar
  04:54:13.676  ----- [2015] ReplicatedStorage.Library.Functions.Animation -----  -  Editar
  04:54:13.676  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local table1 = {
	function(p4) -- Line: 17
		return p4:IsA("Humanoid") and p4 or nil;
	end,
	function(p5) -- Line: 20
		return p5:FindFirstChildOfClass("Humanoid");
	end,
	function(p6) -- Line: 23
		return p6:IsA("Animator") and p6 or nil;
	end,
	function(p7) -- Line: 26
		return p7:FindFirstChildOfClass("Animator");
	end,
	function(p8) -- Line: 29
		return p8:IsA("AnimationController") and p8 or nil;
	end,
	function(p9) -- Line: 32
		return p9:FindFirstChildOfClass("AnimationController");
	end,
	function(p10) -- Line: 35
		if p10:IsA("Player") then
			local t_Character = p10.Character;
			if t_Character then
				return t_Character:FindFirstChildOfClass("Humanoid");
			end
		end
		return nil;
	end
};
return function(p1, p2, p3) -- Line: 46
	--[[
		Upvalues:
			[1] = table1
	--]]
	p3 = p3 or 1;
	for _, val1 in ipairs(table1) do
		local v1 = val1(p2);
		if not v1 then continue end
		local Animation = Instance.new("Animation");
		Animation.AnimationId = "rbxassetid://12997497513" .. tostring(p1);
		local LoadAnimation_ret = v1:LoadAnimation(Animation);
		LoadAnimation_ret:Play(nil, nil, p3);
		return LoadAnimation_ret;
	end
	error("No way to animate!");
end;
  -  Editar
  04:54:13.676    -  Editar
  04:54:13.676  ----- [2016] ReplicatedStorage.Library.Functions.AutoUIScaling -----  -  Editar
  04:54:13.676  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 3
	assert(typeof(p1) == "Instance" and p1:IsA("ScrollingFrame") or false);
	local u1 = p1:FindFirstChildOfClass("UIListLayout") or p1:FindFirstChildOfClass("UIGridLayout");
	assert(u1);
	local UIPadding = p1:FindFirstChildOfClass("UIPadding");
	local function isVisible(p2) -- Line: 18
		--[[
			Upvalues:
				[1] = isVisible
		--]]
		if p2 then
			if p2:IsA("LayerCollector") then
				return p2.Enabled;
			end
			if p2:IsA("GuiObject") and not p2.Visible then
				return false;
			end
			return isVisible(p2.Parent);
		end
		return false;
	end
	local bool1 = false;
	local u3 = p1 and (p1:IsA("LayerCollector") and p1.Enabled or (not p1:IsA("GuiObject") or p1.Visible) and isVisible(p1.Parent) or false) or false;
	local function update() -- Line: 39
		--[[
			Upvalues:
				[1] = u3
				[2] = bool1
				[3] = p1
				[4] = u1
				[5] = UIPadding
		--]]
		if not u3 then return end
		if not bool1 then return end
		bool1 = false;
		local t_AbsoluteWindowSize = p1.AbsoluteWindowSize;
		local v1 = u1.AbsoluteContentSize;
		if UIPadding then
			v1 = v1 + Vector2.new(UIPadding.PaddingLeft.Offset, UIPadding.PaddingTop.Offset) + Vector2.new(UIPadding.PaddingRight.Offset, UIPadding.PaddingBottom.Offset) + t_AbsoluteWindowSize * Vector2.new(UIPadding.PaddingLeft.Scale, UIPadding.PaddingTop.Scale) + t_AbsoluteWindowSize * Vector2.new(UIPadding.PaddingRight.Scale, UIPadding.PaddingBottom.Scale);
		end
		if p1.ScrollingDirection == Enum.ScrollingDirection.X then
			v1 = Vector2.new(v1.X, t_AbsoluteWindowSize.Y);
		elseif p1.ScrollingDirection == Enum.ScrollingDirection.Y then
			v1 = Vector2.new(t_AbsoluteWindowSize.X, v1.Y);
		end
		p1.CanvasSize = UDim2.new(0, v1.X, 0, v1.Y);
	end
	local function lazyUpdate() -- Line: 73
		--[[
			Upvalues:
				[1] = u3
				[2] = p1
				[3] = isVisible
				[4] = bool1
		--]]
		local v2 = p1;
		u3 = v2 and (v2:IsA("LayerCollector") and v2.Enabled or (not v2:IsA("GuiObject") or v2.Visible) and isVisible(v2.Parent) or false) or false;
		bool1 = true;
	end
	game:GetService("RunService").RenderStepped:Connect(function(_) -- Line: 79
		--[[
			Upvalues:
				[1] = update
		--]]
		update();
	end);
	u1:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function() -- Line: 84
		--[[
			Upvalues:
				[1] = u3
				[2] = p1
				[3] = isVisible
				[4] = bool1
		--]]
		local v3 = p1;
		u3 = v3 and (v3:IsA("LayerCollector") and v3.Enabled or (not v3:IsA("GuiObject") or v3.Visible) and isVisible(v3.Parent) or false) or false;
		bool1 = true;
	end);
	p1:GetPropertyChangedSignal("AbsoluteWindowSize"):Connect(function() -- Line: 93
		--[[
			Upvalues:
				[1] = u3
				[2] = p1
				[3] = isVisible
				[4] = bool1
		--]]
		local v4 = p1;
		u3 = v4 and (v4:IsA("LayerCollector") and v4.Enabled or (not v4:IsA("GuiObject") or v4.Visible) and isVisible(v4.Parent) or false) or false;
		bool1 = true;
	end);
	workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(function() -- Line: 98
		--[[
			Upvalues:
				[1] = u3
				[2] = p1
				[3] = isVisible
				[4] = bool1
		--]]
		local v5 = p1;
		u3 = v5 and (v5:IsA("LayerCollector") and v5.Enabled or (not v5:IsA("GuiObject") or v5.Visible) and isVisible(v5.Parent) or false) or false;
		bool1 = true;
	end);
	update();
	local t_Parent = p1.Parent;
	while t_Parent do
		if t_Parent:IsA("BillboardGui") then
			local u5 = t_Parent;
			t_Parent:GetPropertyChangedSignal("Enabled"):Connect(function() -- Line: 111
				--[[
					Upvalues:
						[1] = u5
						[2] = u3
						[3] = p1
						[4] = isVisible
						[5] = bool1
				--]]
				if u5.Enabled then
					local v6 = p1;
					u3 = v6 and (v6:IsA("LayerCollector") and v6.Enabled or (not v6:IsA("GuiObject") or v6.Visible) and isVisible(v6.Parent) or false) or false;
					bool1 = true;
				end
			end);
			break;
		end
		if t_Parent:IsA("ScreenGui") then
			local u6 = t_Parent;
			t_Parent:GetPropertyChangedSignal("Enabled"):Connect(function() -- Line: 121
				--[[
					Upvalues:
						[1] = u6
						[2] = u3
						[3] = p1
						[4] = isVisible
						[5] = bool1
				--]]
				if u6.Enabled then
					local v7 = p1;
					u3 = v7 and (v7:IsA("LayerCollector") and v7.Enabled or (not v7:IsA("GuiObject") or v7.Visible) and isVisible(v7.Parent) or false) or false;
					bool1 = true;
				end
			end);
			break;
		end
		if t_Parent:IsA("Frame") then
			local u7 = t_Parent;
			t_Parent:GetPropertyChangedSignal("Visible"):Connect(function() -- Line: 131
				--[[
					Upvalues:
						[1] = u7
						[2] = u3
						[3] = p1
						[4] = isVisible
						[5] = bool1
				--]]
				if u7.Visible then
					local v8 = p1;
					u3 = v8 and (v8:IsA("LayerCollector") and v8.Enabled or (not v8:IsA("GuiObject") or v8.Visible) and isVisible(v8.Parent) or false) or false;
					bool1 = true;
				end
			end);
		end
		t_Parent = t_Parent.Parent;
	end
end;
  -  Editar
  04:54:13.676    -  Editar
  04:54:13.676  ----- [2017] ReplicatedStorage.Library.Functions.Base64 -----  -  Editar
  04:54:13.676  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

function Encode(p1) -- Line: 17
	return (p1:gsub(".", function(p6) -- Line: 18
		local v5 = "";
		local byte_ret = p6:byte();
		for index4 = 8, 1, -1 do
			v5 = v5 .. (byte_ret % 2 ^ index4 - byte_ret % 2 ^ (index4 - 1) > 0 and "1" or "0");
		end
		return v5;
	end) .. "0000"):gsub("%d%d%d?%d?%d?%d?", function(p5) -- Line: 24
		if #p5 < 6 then
			return "";
		end
		local v4 = 0;
		for index3 = 1, 6 do
			v4 = v4 + (p5:sub(index3, index3) == "1" and 2 ^ (6 - index3) or 0);
		end
		return ("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"):sub(v4 + 1, v4 + 1);
	end) .. ({
		"",
		"==",
		"="
	})[#p1 % 3 + 1];
end
function Decode(p2) -- Line: 35
	p2 = string.gsub(p2, "[^" .. "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/" .. "=]", "");
	local gsub_ret = p2:gsub(".", function(p3) -- Line: 37
		if p3 == "=" then
			return "";
		end
		local find_ret = ("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"):find(p3);
		local v1 = "";
		local v2 = find_ret - 1;
		for index1 = 6, 1, -1 do
			v1 = v1 .. (v2 % 2 ^ index1 - v2 % 2 ^ (index1 - 1) > 0 and "1" or "0");
		end
		return v1;
	end);
	return gsub_ret:gsub("%d%d%d?%d?%d?%d?%d?%d?", function(p4) -- Line: 43
		if #p4 ~= 8 then
			return "";
		end
		local v3 = 0;
		for index2 = 1, 8 do
			v3 = v3 + (p4:sub(index2, index2) == "1" and 2 ^ (8 - index2) or 0);
		end
		return string.char(v3);
	end);
end
return {
	Encode = Encode,
	Decode = Decode
};
  -  Editar
  04:54:13.676    -  Editar
  04:54:13.676  ----- [2018] ReplicatedStorage.Library.Functions.Clicked -----  -  Editar
  04:54:13.677  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local _ = require(script.Parent.IsEmpty);
local Players = game:GetService("Players");
local table1 = {};
local bool1 = false;
function Create(p1, p2) -- Line: 22
	--[[
		Upvalues:
			[1] = table1
	--]]
	p2 = p2:lower();
	if p2 ~= "mouse1down" and p2 ~= "mouse1up" and p2 ~= "mouse1click" and p2 ~= "mouse2down" and p2 ~= "mouse2up" and p2 ~= "mouse2click" then
		error('_L.Functions.Clicked - "' .. p2 .. '" is an invalid event type. Check spelling!');
	end
	local v1 = table1[p1];
	if not v1 then
		v1 = {};
		table1[p1] = v1;
	end
	local v2 = v1[p2];
	if v2 then
		return v2;
	end
	local BindableEvent = Instance.new("BindableEvent");
	v1[p2] = BindableEvent;
	return BindableEvent;
end
function Fire(p3) -- Line: 45
	--[[
		Upvalues:
			[1] = Players
			[2] = table1
	--]]
	p3 = p3:lower();
	local t_Target = Players.LocalPlayer.GetMouse().Target;
	local v3 = t_Target.ClassName == "Folder" and true or t_Target.ClassName == "Model";
	if t_Target and t_Target.Parent then
		for key1, val1 in pairs(table1) do
			if (not v3 or (key1.ClassName ~= "Folder" or not true) and key1.ClassName ~= "Model" or not t_Target:IsDescendantOf(key1)) and t_Target ~= key1 or not val1[p3] then continue end
			val1[p3]:Fire();
			return;
		end
	end
end
function Init() -- Line: 64
	--[[
		Upvalues:
			[1] = bool1
			[2] = Players
	--]]
	bool1 = true;
	local Mouse = Players.LocalPlayer.GetMouse();
	Mouse.Button1Down:Connect(function() -- Line: 68
		--[[
			Upvalues:
				[1] = Mouse
		--]]
		Fire("mouse1down");
		Mouse.Button1Up:Wait();
		Fire("mouse1click");
	end);
	Mouse.Button1Up:Connect(function() -- Line: 74
		Fire("mouse1up");
	end);
	Mouse.Button2Down:Connect(function() -- Line: 78
		--[[
			Upvalues:
				[1] = Mouse
		--]]
		Fire("mouse2down");
		Mouse.Button2Up:Wait();
		Fire("mouse2click");
	end);
	Mouse.Button2Up:Connect(function() -- Line: 84
		Fire("mouse2up");
	end);
end
return function(p4, p5) -- Line: 90
	--[[
		Upvalues:
			[1] = bool1
	--]]
	if not bool1 then
		Init();
	end
	return Create(p4, p5 or "mouse1click");
end;
  -  Editar
  04:54:13.677    -  Editar
  04:54:13.677  ----- [2019] ReplicatedStorage.Library.Functions.CloneTable -----  -  Editar
  04:54:13.677  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local HttpService = game:GetService("HttpService");
local function deepcopy(p1, p2) -- Line: 19
	--[[
		Upvalues:
			[1] = deepcopy
	--]]
	p2 = p2 or {};
	if type(p1) == "table" then
		if p2[p1] then
			return p2[p1];
		end
		local table1 = {};
		p2[p1] = table1;
		for key1, val1 in next, p1 do
			table1[deepcopy(key1, p2)] = deepcopy(val1, p2);
		end
		setmetatable(table1, (deepcopy(getmetatable(p1), p2)));
		return table1;
	end
	return p1;
end
return function(p3, p4) -- Line: 41
	--[[
		Upvalues:
			[1] = deepcopy
			[2] = HttpService
	--]]
	if p4 then
		return deepcopy(p3);
	end
	return HttpService:JSONDecode(HttpService:JSONEncode(p3));
end;
  -  Editar
  04:54:13.677    -  Editar
  04:54:13.677  ----- [2020] ReplicatedStorage.Library.Functions.Commas -----  -  Editar
  04:54:13.677  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 27
	assert(typeof(p1) == "number");
	local v1 = "";
	if p1 ~= p1 then
		return "NaN";
	end
	if p1 == math.huge then
		return "Infinity";
	end
	if p1 == -math.huge then
		return "-Infinity";
	end
	if p1 < 0 then
		v1 = v1 .. "-";
		p1 = -p1;
	end
	p1 = math.round(p1);
	local tostring_ret = tostring(p1);
	local v2 = 1;
	local v3 = #tostring_ret % 3;
	if v3 > 0 then
		v1 = v1 .. tostring_ret:sub(v2, v2 + v3 - 1);
		v2 = v2 + v3;
	end
	while v2 <= #tostring_ret do
		if v2 > 1 then
			v1 = v1 .. ",";
		end
		v1 = v1 .. tostring_ret:sub(v2, v2 + 2);
		v2 = v2 + 3;
	end
	return v1;
end;
  -  Editar
  04:54:13.677    -  Editar
  04:54:13.677  ----- [2021] ReplicatedStorage.Library.Functions.CompareTable -----  -  Editar
  04:54:13.677  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

function CompareTable(p1, p2, p3) -- Line: 16
	local type_ret = type(p1);
	local type_ret2 = type(p2);
	if type_ret ~= type_ret2 then
		return false;
	end
	if type_ret ~= "table" and type_ret2 ~= "table" then
		return p1 == p2;
	end
	local metatable = getmetatable(p1);
	if not p3 and metatable and metatable.__eq then
		return p1 == p2;
	end
	for key1, val1 in pairs(p1) do
		local v1 = p2[key1];
		if v1 ~= nil and CompareTable(val1, v1) then continue end
		return false;
	end
	for key2, val2 in pairs(p2) do
		local v2 = p1[key2];
		if v2 ~= nil and CompareTable(v2, val2) then continue end
		return false;
	end
	return true;
end
return CompareTable;
  -  Editar
  04:54:13.677    -  Editar
  04:54:13.677  ----- [2022] ReplicatedStorage.Library.Functions.GetNextScavengerSeed -----  -  Editar
  04:54:13.677  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function() -- Line: 19
	local os_time_ret = os.time();
	local v1 = math.floor((os_time_ret - 1617235200) / 604800) * 604800 + 1617235200;
	if tonumber(os.date("%w", os_time_ret)) >= 3 then
		v1 = v1 + 604800;
	end
	return v1;
end;
  -  Editar
  04:54:13.677    -  Editar
  04:54:13.677  ----- [2023] ReplicatedStorage.Library.Functions.ContainsAABBPoint -----  -  Editar
  04:54:13.677  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2) -- Line: 3
	if p2.X < -p1.X or p2.X > p1.X then
		return false;
	end
	if p2.Y < -p1.Y or p2.Y > p1.Y then
		return false;
	end
	if p2.Z < -p1.Z or p2.Z > p1.Z then
		return false;
	end
	return true;
end;
  -  Editar
  04:54:13.678    -  Editar
  04:54:13.678  ----- [2024] ReplicatedStorage.Library.Functions.CreateParticleHost -----  -  Editar
  04:54:13.678  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 13
	local v1 = typeof(p1) == "CFrame" and p1 or CFrame.new(p1);
	local host = Instance.new("Part");
	host.Anchored = true;
	host.CanCollide = false;
	host.Transparency = 1;
	host.Material = Enum.Material.SmoothPlastic;
	host.CastShadow = false;
	host.Size = Vector3.new();
	host.CFrame = v1;
	host.Name = "host";
	local Attachment = Instance.new("Attachment");
	Attachment.Parent = host;
	host.Parent = workspace:WaitForChild("__DEBRIS");
	return host, Attachment;
end;
  -  Editar
  04:54:13.678    -  Editar
  04:54:13.678  ----- [2025] ReplicatedStorage.Library.Functions.CumulativeProbability -----  -  Editar
  04:54:13.678  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Erfc = require(script.Parent.Erfc);
return function(p1, p2, p3) -- Line: 11
	--[[
		Upvalues:
			[1] = m_Erfc
	--]]
	local v1 = p1 - p2;
	if math.abs(v1) > p3 * 40 then
		if v1 < 0 then
			return 0;
		end
		return 1;
	end
	return m_Erfc(-v1 / (p3 * 1.4142135623730951)) * 0.5;
end;
  -  Editar
  04:54:13.678    -  Editar
  04:54:13.678  ----- [2026] ReplicatedStorage.Library.Functions.CheckRectangleIntersection -----  -  Editar
  04:54:13.678  local function rectangle_intersection(p1, p2, p3, p4, p5, p6, p7, p8)
	if p3 < p1 then
		p1, p3 = p3, p1
	end
	if p4 < p2 then
		p2, p4 = p4, p2
	end
	if p7 < p5 then
		p5, p7 = p7, p5
	end
	if p8 < p6 then
		p6, p8 = p8, p6
	end
	local math_max_ret = math.max(p1, p5)
	local math_max_ret2 = math.max(p2, p6)
	local math_min_ret = math.min(p3, p7)
	local math_min_ret2 = math.min(p4, p8)
	if math_max_ret < math_min_ret and math_max_ret2 < math_min_ret2 then
		return true
	end
	return false
end

return function(p9, p10, p11, p12)
	return rectangle_intersection(p9.X, p9.Y, p10.X, p10.Y, p11.X, p11.Y, p12.X, p12.Y)
end
  -  Editar
  04:54:13.678    -  Editar
  04:54:13.678  ----- [2027] ReplicatedStorage.Library.Functions.DeepEquals -----  -  Editar
  04:54:13.678  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

function deep_equals(p1, p2, p3) -- Line: 3
	if p1 == p2 then
		return true;
	end
	if type(p1) ~= "table" or type(p2) ~= "table" then
		return false;
	end
	local v1 = p3 or {};
	if not v1[p1] then
		v1[p1] = {};
	end
	if v1[p1][p2] then
		return true;
	end
	if not v1[p2] then
		v1[p2] = {};
	end
	if v1[p2][p1] then
		return true;
	end
	v1[p1][p2] = true;
	v1[p2][p1] = true;
	local metatable = getmetatable(p1);
	if metatable and metatable.__eq then
		return p1 == p2;
	end
	local metatable2 = getmetatable(p2);
	if metatable2 and metatable.__eq then
		return p1 == p2;
	end
	if #p1 ~= #p2 then
		return false;
	end
	for key1, val1 in pairs(p1) do
		local v2 = p2[key1];
		if v2 ~= nil and deep_equals(val1, v2) then continue end
		return false;
	end
	for key2, val2 in pairs(p2) do
		local v3 = p2[key2];
		if v3 ~= nil and deep_equals(val2, v3) then continue end
		return false;
	end
	return true;
end
return deep_equals;
  -  Editar
  04:54:13.678    -  Editar
  04:54:13.678  ----- [2028] ReplicatedStorage.Library.Functions.DegDelta -----  -  Editar
  04:54:13.678  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_DegDeltaUnsafe = require(script.Parent.DegDeltaUnsafe);
local m_DegNorm = require(script.Parent.DegNorm);
return function(p1, p2) -- Line: 10
	--[[
		Upvalues:
			[1] = m_DegDeltaUnsafe
			[2] = m_DegNorm
	--]]
	return m_DegDeltaUnsafe(m_DegNorm(p1), m_DegNorm(p2));
end;
  -  Editar
  04:54:13.678    -  Editar
  04:54:13.679  ----- [2029] ReplicatedStorage.Library.Functions.DegDeltaUnsafe -----  -  Editar
  04:54:13.679  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2) -- Line: 8
	local v1 = p2 - p1;
	if v1 > 180 then
		return v1 - 360;
	end
	if v1 < -180 then
		v1 = v1 + 360;
	end
	return v1;
end;
  -  Editar
  04:54:13.679    -  Editar
  04:54:13.679  ----- [2030] ReplicatedStorage.Library.Functions.DegDeltaUnsafeVec -----  -  Editar
  04:54:13.679  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_DegDeltaUnsafe = require(script.Parent.DegDeltaUnsafe);
return function(p1, p2) -- Line: 9
	--[[
		Upvalues:
			[1] = m_DegDeltaUnsafe
	--]]
	return Vector3.new(m_DegDeltaUnsafe(p1.X, p2.X), m_DegDeltaUnsafe(p1.Y, p2.Y), m_DegDeltaUnsafe(p1.Z, p2.Z));
end;
  -  Editar
  04:54:13.679    -  Editar
  04:54:13.679  ----- [2031] ReplicatedStorage.Library.Functions.DegDeltaVec -----  -  Editar
  04:54:13.679  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_DegDeltaUnsafe = require(script.Parent.DegDeltaUnsafe);
local m_DegNorm = require(script.Parent.DegNorm);
return function(p1, p2) -- Line: 10
	--[[
		Upvalues:
			[1] = m_DegDeltaUnsafe
			[2] = m_DegNorm
	--]]
	return Vector3.new(m_DegDeltaUnsafe(m_DegNorm(p1.X), m_DegNorm(p2.X)), m_DegDeltaUnsafe(m_DegNorm(p1.Y), m_DegNorm(p2.Y)), m_DegDeltaUnsafe(m_DegNorm(p1.Z), m_DegNorm(p2.Z)));
end;
  -  Editar
  04:54:13.679    -  Editar
  04:54:13.679  ----- [2032] ReplicatedStorage.Library.Functions.DegNorm -----  -  Editar
  04:54:13.679  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 7
	if p1 < 0 then
		p1 = p1 + math.ceil(-p1 / 360) * 360;
	end
	return p1 % 360;
end;
  -  Editar
  04:54:13.679    -  Editar
  04:54:13.679  ----- [2033] ReplicatedStorage.Library.Functions.DictionaryLength -----  -  Editar
  04:54:13.680  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 3
	local v1 = 0;
	for _, _ in pairs(p1) do
		v1 = v1 + 1;
	end
	return v1;
end;
  -  Editar
  04:54:13.680    -  Editar
  04:54:13.680  ----- [2034] ReplicatedStorage.Library.Functions.DistAABBPoint -----  -  Editar
  04:54:13.680  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2) -- Line: 5
	local v1 = 0;
	local v2 = p2.X;
	local v3 = p2.Y;
	local v4 = p2.Z;
	local v5 = 0;
	if p2.X < -p1.X then
		local v6 = v2 + p1.X;
		v1 = v1 + v6 * v6;
		v2 = -p1.X;
	elseif p2.X > p1.X then
		local v9 = v2 - p1.X;
		v1 = v1 + v9 * v9;
		v2 = p1.X;
	else
		v5 = v5 + 1;
	end
	if p2.Y < -p1.Y then
		local v7 = v3 + p1.Y;
		v1 = v1 + v7 * v7;
		v3 = -p1.Y;
	elseif p2.Y > p1.Y then
		local v10 = v3 - p1.Y;
		v1 = v1 + v10 * v10;
		v3 = p1.Y;
	else
		v5 = v5 + 1;
	end
	if p2.Z < -p1.Z then
		local v8 = v4 + p1.Z;
		v1 = v1 + v8 * v8;
		v4 = -p1.Z;
	elseif p2.Z > p1.Z then
		local v11 = v4 - p1.Z;
		v1 = v1 + v11 * v11;
		v4 = p1.Z;
	else
		v5 = v5 + 1;
	end
	return math.sqrt(v1), Vector3.new(v2, v3, v4), v5 >= 3;
end;
  -  Editar
  04:54:13.680    -  Editar
  04:54:13.680  ----- [2035] ReplicatedStorage.Library.Functions.DrawRaycast -----  -  Editar
  04:54:13.680  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Tween = require(script.Parent.Tween);
return function(p1, p2, p3) -- Line: 18
	--[[
		Upvalues:
			[1] = m_Tween
	--]]
	if not p3 then
		p3 = 0.1;
	end
	local v1 = typeof(p1) == "CFrame" and p1 or CFrame.new(p1);
	local function MakePart() -- Line: 30
		local Part = Instance.new("Part");
		Part.Anchored = true;
		Part.CanCollide = false;
		Part.Transparency = 0.65;
		Part.Color = Color3.fromRGB(255, 255, 255);
		Part.Material = Enum.Material.SmoothPlastic;
		return Part;
	end
	local v2 = v1 + p2;
	local Part2 = Instance.new("Part");
	Part2.Anchored = true;
	Part2.CanCollide = false;
	Part2.Transparency = 0.65;
	Part2.Color = Color3.fromRGB(255, 255, 255);
	Part2.Material = Enum.Material.SmoothPlastic;
	local t_Magnitude = (v1.Position - v2.Position).Magnitude;
	Part2.Size = Vector3.new(0.075, 0.075, t_Magnitude);
	Part2.CFrame = CFrame.new(v1.Position, v2.Position) * CFrame.new(0, 0, -t_Magnitude / 2);
	Part2.Parent = game.Workspace.CurrentCamera;
	local Part3 = Instance.new("Part");
	Part3.Anchored = true;
	Part3.CanCollide = false;
	Part3.Transparency = 0.65;
	Part3.Color = Color3.fromRGB(255, 255, 255);
	Part3.Material = Enum.Material.SmoothPlastic;
	Part3.Color = Color3.fromRGB(46, 255, 10);
	Part3.Transparency = 0;
	Part3.Size = Vector3.new(0.2, 0.2, 0.2);
	Part3.CFrame = v1;
	Part3.Parent = game.Workspace.CurrentCamera;
	local Part4 = Instance.new("Part");
	Part4.Anchored = true;
	Part4.CanCollide = false;
	Part4.Transparency = 0.65;
	Part4.Color = Color3.fromRGB(255, 255, 255);
	Part4.Material = Enum.Material.SmoothPlastic;
	Part4.Color = Color3.fromRGB(255, 16, 16);
	Part4.Transparency = 0;
	Part4.Size = Vector3.new(0.2, 0.2, 0.2);
	Part4.CFrame = CFrame.new(v2.Position);
	Part4.Parent = game.Workspace.CurrentCamera;
	m_Tween({
		Part2,
		Part3,
		Part4
	}, {Transparency = 1}, {p3}).Completed:Connect(function() -- Line: 63
		--[[
			Upvalues:
				[1] = Part2
		--]]
		Part2:Destroy();
	end);
end;
  -  Editar
  04:54:13.680    -  Editar
  04:54:13.680  ----- [2036] ReplicatedStorage.Library.Functions.Easing -----  -  Editar
  04:54:13.680  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local table1 = {};
function Get(p1, p2, p3) -- Line: 39
	--[[
		Upvalues:
			[1] = table1
	--]]
	local v1 = p2 == nil and "Sine" or typeof(p2) == "string" and p2 or p2.Name;
	local v2 = p3 == nil and "Sine" or typeof(p3) == "string" and p3 or p3.Name;
	if type(v1) ~= "string" then
		v1 = string.sub(tostring(v1), 18);
	end
	if type(v2) ~= "string" then
		v2 = string.sub(tostring(v2), 22);
	end
	if v1 == "Circular" then
		v1 = "Circ";
	elseif v1 == "Exponential" then
		v1 = "Expo";
	end
	if v1 == "Linear" then
		return p1;
	end
	local v3 = table1[v1 .. v2];
	if v3 then
		return v3(p1);
	end
	error("Tween function '" .. v1 .. "." .. v2 .. "' doesn't exist.");
end
function table1.QuadIn(p4) -- Anonymous function at line 99
	p4 = p4 / 1;
	return math.pow(p4, 2) * 1 + 0;
end
function table1.QuadOut(p5) -- Anonymous function at line 105
	p5 = p5 / 1;
	return p5 * -1 * (p5 - 2) + 0;
end
function table1.QuadInOut(p6) -- Anonymous function at line 111
	p6 = p6 / 1 * 2;
	if p6 < 1 then
		return math.pow(p6, 2) * 0.5 + 0;
	end
	return ((p6 - 1) * (p6 - 3) - 1) * -0.5 + 0;
end
function table1.QuadOutIn(p7) -- Anonymous function at line 121
	--[[
		Upvalues:
			[1] = table1
	--]]
	if p7 < 0.5 then
		return table1.QuadOut(p7 * 2);
	end
	return table1.QuadIn(p7 * 2 - 1);
end
function table1.CubicIn(p8) -- Anonymous function at line 130
	p8 = p8 / 1;
	return math.pow(p8, 3) * 1 + 0;
end
function table1.CubicOut(p9) -- Anonymous function at line 136
	p9 = p9 / 1 - 1;
	return (math.pow(p9, 3) + 1) * 1 + 0;
end
function table1.CubicInOut(p10) -- Anonymous function at line 142
	p10 = p10 / 1 * 2;
	if p10 < 1 then
		return p10 * 0.5 * p10 * p10 + 0;
	end
	p10 = p10 - 2;
	return (p10 * p10 * p10 + 2) * 0.5 + 0;
end
function table1.CubicOutIn(p11) -- Anonymous function at line 153
	--[[
		Upvalues:
			[1] = table1
	--]]
	if p11 < 0.5 then
		return table1.CubicOut(p11 * 2);
	end
	return table1.CubicIn(p11 * 2 - 1);
end
function table1.QuartIn(p12) -- Anonymous function at line 162
	p12 = p12 / 1;
	return math.pow(p12, 4) * 1 + 0;
end
function table1.QuartOut(p13) -- Anonymous function at line 168
	p13 = p13 / 1 - 1;
	return (math.pow(p13, 4) - 1) * -1 + 0;
end
function table1.QuartInOut(p14) -- Anonymous function at line 174
	p14 = p14 / 1 * 2;
	if p14 < 1 then
		return math.pow(p14, 4) * 0.5 + 0;
	end
	p14 = p14 - 2;
	return (math.pow(p14, 4) - 2) * -0.5 + 0;
end
function table1.QuartOutIn(p15) -- Anonymous function at line 185
	--[[
		Upvalues:
			[1] = table1
	--]]
	if p15 < 0.5 then
		return table1.QuartOut(p15 * 2);
	end
	return table1.QuartIn(p15 * 2 - 1);
end
function table1.QuintIn(p16) -- Anonymous function at line 194
	p16 = p16 / 1;
	return math.pow(p16, 5) * 1 + 0;
end
function table1.QuintOut(p17) -- Anonymous function at line 200
	p17 = p17 / 1 - 1;
	return (math.pow(p17, 5) + 1) * 1 + 0;
end
function table1.QuintInOut(p18) -- Anonymous function at line 206
	p18 = p18 / 1 * 2;
	if p18 < 1 then
		return math.pow(p18, 5) * 0.5 + 0;
	end
	p18 = p18 - 2;
	return (math.pow(p18, 5) + 2) * 0.5 + 0;
end
function table1.QuintOutIn(p19) -- Anonymous function at line 217
	--[[
		Upvalues:
			[1] = table1
	--]]
	if p19 < 0.5 then
		return table1.QuintOut(p19 * 2);
	end
	return table1.QuintIn(p19 * 2 - 1);
end
function table1.SineIn(p20) -- Anonymous function at line 226
	return math.cos(p20 / 1 * (math.pi / 2)) * -1 + 1 + 0;
end
function table1.SineOut(p21) -- Anonymous function at line 231
	return math.sin(p21 / 1 * (math.pi / 2)) * 1 + 0;
end
function table1.SineInOut(p22) -- Anonymous function at line 236
	return (math.cos(math.pi * p22 / 1) - 1) * -0.5 + 0;
end
function table1.SineOutIn(p23) -- Anonymous function at line 241
	--[[
		Upvalues:
			[1] = table1
	--]]
	if p23 < 0.5 then
		return table1.SineOut(p23 * 2);
	end
	return table1.SineIn(p23 * 2);
end
function table1.ExpoIn(p24) -- Anonymous function at line 250
	if p24 == 0 then
		return 0;
	end
	return math.pow(2, (p24 / 1 - 1) * 10) * 1 + 0 - 0.001;
end
function table1.ExpoOut(p25) -- Anonymous function at line 259
	if p25 == 1 then
		return 1;
	end
	return (-math.pow(2, p25 * -10 / 1) + 1) * 1.001 + 0;
end
function table1.ExpoInOut(p26) -- Anonymous function at line 268
	if p26 == 0 then
		return 0;
	end
	if p26 == 1 then
		return 1;
	end
	p26 = p26 / 1 * 2;
	if p26 < 1 then
		return math.pow(2, (p26 - 1) * 10) * 0.5 + 0 - 0.0005;
	end
	p26 = p26 - 1;
	return (-math.pow(2, p26 * -10) + 2) * 0.50025 + 0;
end
function table1.ExpoOutIn(p27) -- Anonymous function at line 281
	--[[
		Upvalues:
			[1] = table1
	--]]
	if p27 < 0.5 then
		return table1.ExpoOut(p27 * 2);
	end
	return table1.ExpoIn(p27 * 2 - 1);
end
function table1.CircIn(p28) -- Anonymous function at line 290
	p28 = p28 / 1;
	return (math.sqrt(1 - math.pow(p28, 2)) - 1) * -1 + 0;
end
function table1.CircOut(p29) -- Anonymous function at line 296
	p29 = p29 / 1 - 1;
	return math.sqrt(1 - math.pow(p29, 2)) * 1 + 0;
end
function table1.CircInOut(p30) -- Anonymous function at line 302
	p30 = p30 / 1 * 2;
	if p30 < 1 then
		return (math.sqrt(1 - p30 * p30) - 1) * -0.5 + 0;
	end
	p30 = p30 - 2;
	return (math.sqrt(1 - p30 * p30) + 1) * 0.5 + 0;
end
function table1.CircOutIn(p31) -- Anonymous function at line 313
	--[[
		Upvalues:
			[1] = table1
	--]]
	if p31 < 0.5 then
		return table1.CircOut(p31 * 2);
	end
	return table1.CircIn(p31 * 2 - 1);
end
function table1.ElasticIn(p32) -- Anonymous function at line 322
	if p32 == 0 then
		return 0;
	end
	p32 = p32 / 1;
	if p32 == 1 then
		return 1;
	end
	local num1 = nil;
	local num2 = nil;
	if not num1 then
		num1 = 0.3;
	end
	local v5;
	if not num2 or num2 < 1 then
		num2 = 1;
		v5 = num1 / 4;
	else
		v5 = num1 / (math.pi * 2) * math.asin(1 / num2);
	end
	p32 = p32 - 1;
	return -(num2 * math.pow(2, p32 * 10) * math.sin((p32 * 1 - v5) * (math.pi * 2) / num1)) + 0;
end
function table1.ElasticOut(p33) -- Anonymous function at line 344
	if p33 == 0 then
		return 0;
	end
	p33 = p33 / 1;
	if p33 == 1 then
		return 1;
	end
	local num3 = nil;
	local num4 = nil;
	if not num3 then
		num3 = 0.3;
	end
	local v6;
	if not num4 or num4 < 1 then
		num4 = 1;
		v6 = num3 / 4;
	else
		v6 = num3 / (math.pi * 2) * math.asin(1 / num4);
	end
	return num4 * math.pow(2, p33 * -10) * math.sin((p33 * 1 - v6) * (math.pi * 2) / num3) + 1 + 0;
end
function table1.ElasticInOut(p34) -- Anonymous function at line 364
	if p34 == 0 then
		return 0;
	end
	p34 = p34 / 1 * 2;
	if p34 == 2 then
		return 1;
	end
	local num5 = nil;
	local num6 = nil;
	if not num5 then
		num5 = 0.44999999999999996;
	end
	if not num6 then
		num6 = 0;
	end
	local v7;
	if not num6 or num6 < 1 then
		num6 = 1;
		v7 = num5 / 4;
	else
		v7 = num5 / (math.pi * 2) * math.asin(1 / num6);
	end
	if p34 < 1 then
		p34 = p34 - 1;
		return num6 * math.pow(2, p34 * 10) * math.sin((p34 * 1 - v7) * (math.pi * 2) / num5) * -0.5 + 0;
	end
	p34 = p34 - 1;
	return num6 * math.pow(2, p34 * -10) * math.sin((p34 * 1 - v7) * (math.pi * 2) / num5) * 0.5 + 1 + 0;
end
function table1.ElasticOutIn(p35) -- Anonymous function at line 392
	--[[
		Upvalues:
			[1] = table1
	--]]
	if p35 < 0.5 then
		return table1.ElasticOut(p35 * 2);
	end
	return table1.ElasticIn(p35 * 2 - 1);
end
function table1.BackIn(p36) -- Anonymous function at line 401
	p36 = p36 / 1;
	return p36 * 1 * p36 * (p36 * 2.70158 - 1.70158) + 0;
end
function table1.BackOut(p37) -- Anonymous function at line 408
	p37 = p37 / 1 - 1;
	return (p37 * p37 * (p37 * 2.70158 + 1.70158) + 1) * 1 + 0;
end
function table1.BackInOut(p38) -- Anonymous function at line 415
	local v4 = 1.70158 * 1.525;
	p38 = p38 / 1 * 2;
	if p38 < 1 then
		return p38 * p38 * ((v4 + 1) * p38 - v4) * 0.5 + 0;
	end
	p38 = p38 - 2;
	return (p38 * p38 * ((v4 + 1) * p38 + v4) + 2) * 0.5 + 0;
end
function table1.BackOutIn(p39) -- Anonymous function at line 428
	--[[
		Upvalues:
			[1] = table1
	--]]
	if p39 < 0.5 then
		return table1.BackOut(p39 * 2);
	end
	return table1.BackIn(p39 * 2 - 1);
end
function table1.BounceOut(p40) -- Anonymous function at line 437
	p40 = p40 / 1;
	if p40 < 4 / 11 then
		return p40 * 7.5625 * p40 * 1 + 0;
	end
	if p40 < 8 / 11 then
		p40 = p40 - 6 / 11;
		return (p40 * 7.5625 * p40 + 0.75) * 1 + 0;
	end
	if p40 < 10 / 11 then
		p40 = p40 - 9 / 11;
		return (p40 * 7.5625 * p40 + 0.9375) * 1 + 0;
	end
	p40 = p40 - 21 / 22;
	return (p40 * 7.5625 * p40 + 0.984375) * 1 + 0;
end
function table1.BounceIn(p41) -- Anonymous function at line 454
	--[[
		Upvalues:
			[1] = table1
	--]]
	return 1 - table1.BounceOut(1 - p41) + 0;
end
function table1.BounceInOut(p42) -- Anonymous function at line 459
	--[[
		Upvalues:
			[1] = table1
	--]]
	if p42 < 0.5 then
		return table1.BounceIn(p42 * 2) * 0.5 + 0;
	end
	return table1.BounceOut(p42 * 2 - 1) * 0.5 + 0.5 + 0;
end
function table1.BounceOutIn(p43) -- Anonymous function at line 468
	--[[
		Upvalues:
			[1] = table1
	--]]
	if p43 < 0.5 then
		return table1.BounceOut(p43 * 2);
	end
	return table1.BounceIn(p43 * 2 - 1);
end
return Get;
  -  Editar
  04:54:13.680    -  Editar
  04:54:13.681  ----- [2037] ReplicatedStorage.Library.Functions.Erf -----  -  Editar
  04:54:13.681  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Erfc = require(script.Parent.Erfc);
return function(p1) -- Line: 5
	--[[
		Upvalues:
			[1] = m_Erfc
	--]]
	return 1 - m_Erfc(p1);
end;
  -  Editar
  04:54:13.681    -  Editar
  04:54:13.681  ----- [2038] ReplicatedStorage.Library.Functions.ErfInv -----  -  Editar
  04:54:13.683  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Erf = require(script.Parent.Erf);
return function(p1) -- Line: 6
	--[[
		Upvalues:
			[1] = m_Erf
	--]]
	if p1 > 1 or p1 < -1 then
		return 0;
	end
	local table1 = {
		[1] = 0.886226899,
		[2] = -1.645349621,
		[3] = 0.914624893,
		[4] = -0.140543331
	};
	local table2 = {
		[1] = -2.118377725,
		[2] = 1.442710462,
		[3] = -0.329097515,
		[4] = 0.012229801
	};
	local table3 = {
		[1] = -1.970840454,
		[2] = -1.624906493,
		[3] = 3.429567803,
		[4] = 1.641345311
	};
	local table4 = {
		[1] = 3.5438892,
		[2] = 1.6370678
	};
	local v2;
	if math.abs(p1) == 1 then
		v2 = -p1 * -(1/0);
	elseif p1 < -0.7 then
		local math_sqrt_ret2 = math.sqrt(-math.log((p1 + 1) / 2));
		v2 = -(((table3[4] * math_sqrt_ret2 + table3[3]) * math_sqrt_ret2 + table3[2]) * math_sqrt_ret2 + table3[1]) / ((table4[2] * math_sqrt_ret2 + table4[1]) * math_sqrt_ret2 + 1);
	elseif p1 < 0.7 then
		local v3 = p1 * p1;
		v2 = p1 * (((table1[4] * v3 + table1[3]) * v3 + table1[2]) * v3 + table1[1]) / ((((table2[4] * v3 + table2[4]) * v3 + table2[2]) * v3 + table2[1]) * v3 + 1);
	else
		local math_sqrt_ret = math.sqrt(-math.log((1 - p1) / 2));
		v2 = (((table3[4] * math_sqrt_ret + table3[3]) * math_sqrt_ret + table3[2]) * math_sqrt_ret + table3[1]) / ((table4[2] * math_sqrt_ret + table4[1]) * math_sqrt_ret + 1);
	end
	local v1 = v2 - (m_Erf(v2) - p1) / (2 / math.sqrt(math.pi) * math.exp(-v2 * v2));
	return v1 - (m_Erf(v1) - p1) / (2 / math.sqrt(math.pi) * math.exp(-v1 * v1));
end;
  -  Editar
  04:54:13.683    -  Editar
  04:54:13.683  ----- [2039] ReplicatedStorage.Library.Functions.Erfc -----  -  Editar
  04:54:13.683  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 3
	local v1 = 1 / (p1 * 0.5 + 1);
	local v2 = v1 * math.exp(-p1 * p1 - 1.26551223 + v1 * (v1 * (v1 * (v1 * (v1 * (v1 * (v1 * (v1 * (v1 * 0.17087277 + -0.82215223) + 1.48851587) + -1.13520398) + 0.27886807) + -0.18628806) + 0.09678418) + 0.37409196) + 1.00002368));
	if p1 >= 0 then
		return v2;
	end
	return 2 - v2;
end;
  -  Editar
  04:54:13.683    -  Editar
  04:54:13.683  ----- [2040] ReplicatedStorage.Library.Functions.FindFirstChildCustom -----  -  Editar
  04:54:13.683  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2) -- Line: 14
	assert(typeof(p2) == "function");
	if typeof(p1) == "Instance" then
		local Children = p1:GetChildren();
		for _, val1 in ipairs(Children) do
			if not p2(val1) then continue end
			return val1;
		end
	else
		assert(typeof(p1) == "table");
		for _, val2 in ipairs(p1) do
			assert(typeof(val2) == "Instance");
			if not p2(val2) then continue end
			return val2;
		end
	end
	return nil;
end;
  -  Editar
  04:54:13.683    -  Editar
  04:54:13.684  ----- [2041] ReplicatedStorage.Library.Functions.GetCurrentDay -----  -  Editar
  04:54:13.684  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function() -- Line: 3
	local ServerTimeNow = workspace:GetServerTimeNow();
	return DateTime.fromUnixTimestamp(ServerTimeNow):ToUniversalTime().Day;
end;
  -  Editar
  04:54:13.684    -  Editar
  04:54:13.684  ----- [2042] ReplicatedStorage.Library.Functions.FireInterval -----  -  Editar
  04:54:13.684  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2, p3, p4, p5) -- Line: 3
	assert(typeof(p1) == "number");
	assert(typeof(p2) == "number");
	assert(typeof(p3) == "function");
	while workspace:GetServerTimeNow() > p1 do
		p1 = p1 + p2;
	end
	local u1 = p1;
	local u2 = p1 - p4;
	local bool1 = false;
	local _ = game:GetService("RunService").Heartbeat:Connect(function(_) -- Line: 19
		--[[
			Upvalues:
				[1] = u1
				[2] = p3
				[3] = p2
				[4] = u2
				[5] = p4
				[6] = bool1
				[7] = p5
		--]]
		task.spawn(function() -- Line: 20
			--[[
				Upvalues:
					[1] = u1
					[2] = p3
					[3] = p2
					[4] = u2
					[5] = p4
					[6] = bool1
			--]]
			if workspace:GetServerTimeNow() < u1 then return end
			local success, pcall_ret2 = pcall(p3);
			if success then
				if not pcall_ret2 then return end
			else
				warn(tostring(pcall_ret2));
			end
			u1 = workspace:GetServerTimeNow() + p2;
			u2 = workspace:GetServerTimeNow() + (p2 - p4);
			bool1 = false;
		end);
		task.spawn(function() -- Line: 44
			--[[
				Upvalues:
					[1] = p5
					[2] = bool1
					[3] = u2
			--]]
			if not p5 or bool1 then return end
			if workspace:GetServerTimeNow() < u2 then return end
			local success2, pcall_ret2_2 = pcall(p5);
			if success2 then
				if not pcall_ret2_2 then return end
			else
				warn(tostring(pcall_ret2_2));
			end
			bool1 = true;
		end);
	end);
end;
  -  Editar
  04:54:13.684    -  Editar
  04:54:13.684  ----- [2043] ReplicatedStorage.Library.Functions.FormatAbbreviated -----  -  Editar
  04:54:13.684  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local table1 = {
	"k",
	"m",
	"b",
	"t",
	"q",
	"Qt",
	"Sx"
};
return function(p1, p2, p3) -- Line: 19
	--[[
		Upvalues:
			[1] = table1
	--]]
	local v1 = p2 or 3;
	local v2 = p3 or 0;
	local math_max_ret = math.max(math.abs(p1), (math.pow(10, -(#table1) * 3)));
	local math_ceil_ret = math.ceil((math.log10(math_max_ret)));
	local v3 = 10 ^ (math.min(math_ceil_ret, #table1 * 3 + v1) - v2 - v1);
	local v4 = math.round(math_max_ret / v3) * v3;
	local math_floor_ret = math.floor(math.log10((math.max(v4, 1))) / 3);
	local math_min_ret = math.min(math_floor_ret, #table1);
	local v5 = v4 * math.sign(p1) / 10 ^ (math_min_ret * 3);
	local string_format_ret = string.format("%f", v5);
	local gsub_ret = string_format_ret:gsub("%.?0+$", "");
	if math_min_ret >= 1 then
		return gsub_ret .. table1[math_min_ret];
	end
	return gsub_ret;
end;
  -  Editar
  04:54:13.684    -  Editar
  04:54:13.684  ----- [2044] ReplicatedStorage.Library.Functions.FormatChance -----  -  Editar
  04:54:13.684  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_FormatOdds = require(script.Parent.FormatOdds);
local m_FormatPercent = require(script.Parent.FormatPercent);
return function(p1, p2) -- Line: 19
	--[[
		Upvalues:
			[1] = m_FormatOdds
			[2] = m_FormatPercent
	--]]
	local math_clamp_ret = math.clamp(p2 or p1, 0, 1);
	p1 = math.clamp(p1, 0, 1);
	if math_clamp_ret <= 0.0002 and p1 <= 0.001 then
		return m_FormatOdds(p1);
	end
	return m_FormatPercent(p1);
end;
  -  Editar
  04:54:13.684    -  Editar
  04:54:13.684  ----- [2045] ReplicatedStorage.Library.Functions.FormatOdds -----  -  Editar
  04:54:13.684  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_FormatAbbreviated = require(script.Parent.FormatAbbreviated);
return function(p1) -- Line: 17
	--[[
		Upvalues:
			[1] = m_FormatAbbreviated
	--]]
	return "1/" .. m_FormatAbbreviated(1 / p1);
end;
  -  Editar
  04:54:13.685    -  Editar
  04:54:13.685  ----- [2046] ReplicatedStorage.Library.Functions.FormatPercent -----  -  Editar
  04:54:13.685  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_FormatAbbreviated = require(script.Parent.FormatAbbreviated);
return function(p1) -- Line: 17
	--[[
		Upvalues:
			[1] = m_FormatAbbreviated
	--]]
	p1 = p1 * 100;
	local v1 = math.max(1, 10 ^ (math.ceil(-math.log10((math.abs(p1)))) + 1));
	if v1 == math.huge then
		v1 = 1;
	end
	p1 = math.round(p1 * v1) / v1;
	return m_FormatAbbreviated(p1) .. "%";
end;
  -  Editar
  04:54:13.685    -  Editar
  04:54:13.685  ----- [2047] ReplicatedStorage.Library.Functions.AddOrdinalSuffix -----  -  Editar
  04:54:13.685  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 3
	local tostring_ret = tostring(p1);
	local sub_ret = tostring_ret:sub(-1);
	local sub_ret2 = tostring_ret:sub(-2, -2);
	if sub_ret == "1" and sub_ret2 ~= "1" then
		return tostring_ret .. "st";
	end
	if sub_ret == "2" and sub_ret2 ~= "1" then
		return tostring_ret .. "nd";
	end
	if sub_ret == "3" and sub_ret2 ~= "1" then
		return tostring_ret .. "rd";
	end
	return tostring_ret .. "th";
end;
  -  Editar
  04:54:13.685    -  Editar
  04:54:13.685  ----- [2048] ReplicatedStorage.Library.Functions.FormatTimeShort -----  -  Editar
  04:54:13.685  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2, p3) -- Line: 3
	p1 = math.round(p1);
	local math_floor_ret = math.floor(p1 / 60);
	local math_floor_ret2 = math.floor(p1 - math_floor_ret * 60);
	local math_floor_ret3 = math.floor(math_floor_ret / 60);
	local math_floor_ret4 = math.floor(math_floor_ret3 / 24);
	local v1 = math_floor_ret - math_floor_ret3 * 60;
	local v2 = math_floor_ret3 - math_floor_ret4 * 24;
	local v3 = "";
	if p2 then
		v3 = math_floor_ret2 .. "s";
		if p3 then
			v3 = " " .. v3;
		end
	end
	local v4 = v1 .. "m" .. v3;
	if p3 then
		v4 = " " .. v4;
	end
	if v2 > 0 then
		v4 = v2 .. "hr" .. v4;
		if p3 then
			v4 = " " .. v4;
		end
	end
	if math_floor_ret4 > 0 then
		v4 = math_floor_ret4 .. "d" .. v4;
	end
	return v4;
end;
  -  Editar
  04:54:13.685    -  Editar
  04:54:13.686  ----- [2049] ReplicatedStorage.Library.Functions.GenerateCustomUUID -----  -  Editar
  04:54:13.686  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local HttpService = game:GetService("HttpService");
local ReplicatedStorage = game:GetService("ReplicatedStorage");
local X = ReplicatedStorage:WaitForChild("X");
local m_MD5 = require(X:WaitForChild("Util").MD5);
return function(p1, p2, p3, p4) -- Line: 11
	--[[
		Upvalues:
			[1] = m_MD5
			[2] = HttpService
	--]]
	local v1;
	if p4 then
		v1 = m_MD5.sumhexa(tostring(p4));
		if not p3 then
			v1 = v1:upper();
		end
		if p2 then
			v1 = v1:sub(1, 8) .. "-" .. v1:sub(9, 12) .. "-" .. v1:sub(13, 16) .. "-" .. v1:sub(17, 20) .. "-" .. v1:sub(21, 32);
		end
		if p1 then
			return "{" .. v1 .. "}";
		end
	else
		v1 = HttpService:GenerateGUID(p1);
		if not p2 then
			v1 = v1:gsub("%-", "");
		end
		if p3 then
			v1 = v1:lower();
		end
	end
	return v1;
end;
  -  Editar
  04:54:13.686    -  Editar
  04:54:13.686  ----- [2050] ReplicatedStorage.Library.Functions.GenerateUID -----  -  Editar
  04:54:13.686  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local HttpService = game:GetService("HttpService");
return function()  
	local GenerateGUID_ret = HttpService:GenerateGUID(false);
	local string_gsub_ret = string.gsub(GenerateGUID_ret, "-", "");
	return string_gsub_ret;
end;

  -  Editar
  04:54:13.686    -  Editar
  04:54:13.686  ----- [2051] ReplicatedStorage.Library.Functions.GetFriends -----  -  Editar
  04:54:13.686  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local Players = game:GetService("Players");
return function(p1) -- Line: 11
	--[[
		Upvalues:
			[1] = Players
	--]]
	local table1 = {};
	for _, val1 in ipairs(Players:GetPlayers()) do
		if p1 == val1 then continue end
		local u1 = false;
		pcall(function() -- Line: 17
			--[[
				Upvalues:
					[1] = u1
					[2] = p1
					[3] = val1
			--]]
			u1 = p1:IsFriendsWith(val1.UserId);
		end);
		if u1 then
			table.insert(table1, val1);
		end
	end
	return table1;
end;
  -  Editar
  04:54:13.686    -  Editar
  04:54:13.686  ----- [2052] ReplicatedStorage.Library.Functions.GetGamepassInfo -----  -  Editar
  04:54:13.686  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local ReplicatedStorage = game:GetService("ReplicatedStorage");
local m_ProductCache = require(ReplicatedStorage:WaitForChild("X").ProductCache);
return function(p1, p2) -- Line: 18
	--[[
		Upvalues:
			[1] = m_ProductCache
	--]]
	return m_ProductCache.getProductInfo(p1, p2 or Enum.InfoType.GamePass).Info;
end;
  -  Editar
  04:54:13.687    -  Editar
  04:54:13.687  ----- [2053] ReplicatedStorage.Library.Functions.AbsDifferenceFromNextUpdateTime -----  -  Editar
  04:54:13.687  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function() -- Line: 19
	local ServerTimeNow = workspace:GetServerTimeNow();
	local ToUniversalTime_ret = DateTime.fromUnixTimestamp(ServerTimeNow + (14 - os.date("!*t").wday) % 7 * 86400):ToUniversalTime();
	local v1 = os.time({
		year = ToUniversalTime_ret.Year,
		month = ToUniversalTime_ret.Month,
		day = ToUniversalTime_ret.Day
	}) + 18000;
	if v1 < ServerTimeNow then
		v1 = v1 + 604800;
	end
	return math.abs(v1 - workspace:GetServerTimeNow());
end;
  -  Editar
  04:54:13.687    -  Editar
  04:54:13.687  ----- [2054] ReplicatedStorage.Library.Functions.GetPrice -----  -  Editar
  04:54:13.687  -- | load library | --
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Library = ReplicatedStorage:WaitForChild("Library")
local ClientLibrary = Library:WaitForChild("Client")
local Modules = Library:WaitForChild("Modules")
local Types = Library:WaitForChild("Types")

-- | shared modules | --

--------|     Setting     |--------

--------|    Reference    |--------

--------|    Variables    |--------
local cachedProductInfo = {}
local ProductCache = require(game:GetService("ReplicatedStorage"):WaitForChild("X").ProductCache)

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


--- Returns market robux price for item ID (price, onSale)


return function(id, product)
	if id == 0 then
		return 0, false
	end
	
	local productInfo = ProductCache.getProductInfo(id, product and Enum.InfoType.Product or Enum.InfoType.GamePass).Info
	
	if productInfo then
		if not productInfo.IsForSale then
			return 0, false
		else
			return productInfo.PriceInRobux, true
		end
	end
	
	warn("Failed to grab price for ID (" .. id .. ")")
	return 0, false
end
  -  Editar
  04:54:13.687    -  Editar
  04:54:13.687  ----- [2055] ReplicatedStorage.Library.Functions.GetProductInfo -----  -  Editar
  04:54:13.687  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local ReplicatedStorage = game:GetService("ReplicatedStorage");
local m_ProductCache = require(ReplicatedStorage:WaitForChild("X").ProductCache);
return function(p1, p2) -- Line: 18
	--[[
		Upvalues:
			[1] = m_ProductCache
	--]]
	return m_ProductCache.getProductInfo(p1, p2 or Enum.InfoType.Product).Info;
end;
  -  Editar
  04:54:13.687    -  Editar
  04:54:13.687  ----- [2056] ReplicatedStorage.Library.Functions.GetTouchingParts -----  -  Editar
  04:54:13.687  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 14
	local Connect_ret = p1.Touched:Connect(function() -- Line: 16
	end);
	local TouchingParts = p1:GetTouchingParts();
	Connect_ret:Disconnect();
	return TouchingParts;
end;
  -  Editar
  04:54:13.688    -  Editar
  04:54:13.688  ----- [2057] ReplicatedStorage.Library.Functions.GetUserId -----  -  Editar
  04:54:13.688  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local Players = game:GetService("Players");
local table1 = {};
local table2 = {};
return function(p1, p2, p3, p4) -- Line: 8
	--[[
		Upvalues:
			[1] = table1
			[2] = Players
			[3] = table2
	--]]
	assert(typeof(p1) == "string");
	local match_ret = p1:match("^#(.*)");
	if match_ret then
		local tonumber_ret = tonumber(match_ret);
		if tonumber_ret then
			return tonumber_ret;
		end
		return nil, string.format("Invalid User ID: '%s'", match_ret);
	end
	local match_ret2 = p1:match("^@(.*)");
	if match_ret2 then
		p1 = match_ret2;
		p3 = false;
		p2 = false;
	end
	local lower_ret = p1:lower();
	local v1 = table1[lower_ret];
	if v1 then
		return v1;
	end
	for _, val1 in ipairs(Players:GetPlayers()) do
		if val1.Name:lower() ~= lower_ret then continue end
		local t_UserId2 = val1.UserId;
		table1[lower_ret] = t_UserId2;
		return t_UserId2;
	end
	if p2 then
		local v2 = table2[lower_ret];
		if v2 then
			return v2;
		end
		for _, val2 in ipairs(Players:GetPlayers()) do
			if val2.DisplayName:lower() ~= lower_ret then continue end
			local t_UserId = val2.UserId;
			table2[lower_ret] = t_UserId;
			return t_UserId;
		end
	end
	if p3 then
		local table3 = {};
		for _, val3 in ipairs(Players:GetPlayers()) do
			local t_Name = val3.Name;
			if #t_Name < #lower_ret or t_Name:sub(1, #lower_ret):lower() ~= lower_ret then continue end
			table.insert(table3, val3.UserId);
		end
		if p2 then
			for _, val4 in ipairs(Players:GetPlayers()) do
				local t_DisplayName = val4.DisplayName;
				if #t_DisplayName < #lower_ret or t_DisplayName:sub(1, #lower_ret):lower() ~= lower_ret then continue end
				table.insert(table3, val4.UserId);
			end
		end
		if #table3 > 0 then
			if #table3 == 1 then
				return table3[1];
			end
			return nil, string.format("Multiple players match '%s'", lower_ret);
		end
	end
	if p4 then
		local success, pcall_ret2 = pcall(function() -- Line: 92
			--[[
				Upvalues:
					[1] = Players
					[2] = p1
			--]]
			return Players:GetUserIdFromNameAsync(p1);
		end);
		if success and typeof(pcall_ret2) == "number" then
			table1[lower_ret] = pcall_ret2;
			return pcall_ret2;
		end
		return nil, string.format("Error while looking up '%s': '%s'", p1, tostring(pcall_ret2));
	end
	return nil, string.format("Unknown player: '%s'", p1);
end;
  -  Editar
  04:54:13.688    -  Editar
  04:54:13.688  ----- [2058] ReplicatedStorage.Library.Functions.HasUserdata -----  -  Editar
  04:54:13.688  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 13
	local bool1 = false;
	local function Scan(p2) -- Line: 18
		--[[
			Upvalues:
				[1] = bool1
				[2] = Scan
		--]]
		if bool1 then return end
		for key1, val1 in pairs(p2) do
			if bool1 then return end
			if type(val1) == "userdata" or type(key1) == "userdata" then
				bool1 = true;
				return;
			end
			if type(val1) ~= "table" then continue end
			Scan(val1);
		end
	end
	Scan(p1);
	return bool1;
end;
  -  Editar
  04:54:13.688    -  Editar
  04:54:13.688  ----- [2059] ReplicatedStorage.Library.Functions.IsArray -----  -  Editar
  04:54:13.688  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 13
	if typeof(p1) == "table" then
		if #p1 > 0 then
			return true;
		end
		local pairs_ret1, pairs_ret2, pairs_ret3 = pairs(p1);
		local v1, _ = pairs_ret1(pairs_ret2, pairs_ret3);
		if --[[generic for]] v1 then
			return false;
		end
		return true;
	end
	return false;
end;
  -  Editar
  04:54:13.688    -  Editar
  04:54:13.688  ----- [2060] ReplicatedStorage.Library.Functions.IsEmpty -----  -  Editar
  04:54:13.688  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 3
	local pairs_ret1, pairs_ret2, pairs_ret3 = pairs(p1);
	local v1, _ = pairs_ret1(pairs_ret2, pairs_ret3);
	if --[[generic for]] v1 then
		return false;
	end
	return true;
end;
  -  Editar
  04:54:13.688    -  Editar
  04:54:13.688  ----- [2061] ReplicatedStorage.Library.Functions.IsFinite -----  -  Editar
  04:54:13.688  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_IsNaN = require(script.Parent.IsNaN);
local m_IsInf = require(script.Parent.IsInf);
return function(p1) -- Line: 10
	--[[
		Upvalues:
			[1] = m_IsNaN
			[2] = m_IsInf
	--]]
	return not m_IsNaN(p1) and not m_IsInf(p1);
end;
  -  Editar
  04:54:13.689    -  Editar
  04:54:13.689  ----- [2062] ReplicatedStorage.Library.Functions.IsInf -----  -  Editar
  04:54:13.689  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 7
	return p1 == math.huge and true or p1 == -math.huge;
end;
  -  Editar
  04:54:13.689    -  Editar
  04:54:13.689  ----- [2063] ReplicatedStorage.Library.Functions.IsNaN -----  -  Editar
  04:54:13.689  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 7
	return p1 ~= p1;
end;
  -  Editar
  04:54:13.689    -  Editar
  04:54:13.689  ----- [2064] ReplicatedStorage.Library.Functions.KeepIf -----  -  Editar
  04:54:13.689  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2) -- Line: 3
	local v1 = 1;
	local v2 = #p1;
	while v1 <= v2 do
		if not p2(p1[v1]) then
			table.remove(p1, v1);
			v2 = v2 - 1;
		else
			v1 = v1 + 1;
		end
	end
end;
  -  Editar
  04:54:13.689    -  Editar
  04:54:13.689  ----- [2065] ReplicatedStorage.Library.Functions.Lerp -----  -  Editar
  04:54:13.690  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2, p3) -- Line: 7
	return (p2 - p1) * p3 + p1;
end;
  -  Editar
  04:54:13.690    -  Editar
  04:54:13.690  ----- [2066] ReplicatedStorage.Library.Functions.Lottery -----  -  Editar
  04:54:13.690  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_LotteryCustom = require(script.Parent.LotteryCustom);
return function(...) -- Line: 28
	--[[
		Upvalues:
			[1] = m_LotteryCustom
	--]]
	return m_LotteryCustom(nil, ...);
end;
  -  Editar
  04:54:13.690    -  Editar
  04:54:13.690  ----- [2067] ReplicatedStorage.Library.Functions.LotteryCustom -----  -  Editar
  04:54:13.690  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local Random_new_ret = Random.new();
return function(p1, ...) -- Line: 29
	--[[
		Upvalues:
			[1] = Random_new_ret
	--]]
	local v1 = p1 or Random_new_ret;
	local v2 = {...};
	if #v2 == 1 and typeof(v2[1]) == "table" and typeof(v2[1][2]) ~= "number" then
		v2 = v2[1];
	end
	local v3 = 0;
	local v4 = 0;
	local v5 = 0;
	for key1, val1 in ipairs(v2) do
		local v7 = val1[2];
		assert(typeof(v7) == "number");
		if v7 <= 0 or v7 ~= v7 or v7 == math.huge then continue end
		v3 = v3 + 1;
		v4 = v4 + v7;
		v5 = key1;
	end
	if v3 == 0 then
		return nil, 0, 0, 0;
	end
	local NextNumber_ret = v1:NextNumber(0, v4);
	local v6 = NextNumber_ret;
	for key2, val2 in ipairs(v2) do
		local v8 = val2[2];
		if v8 <= 0 or v8 ~= v8 or v8 == math.huge then continue end
		v6 = v6 - v8;
		if v6 > 0 and key2 ~= v5 then continue end
		return val2[1], NextNumber_ret / v4, v8 / v4, key2;
	end
	error("impossible");
end;
  -  Editar
  04:54:13.690    -  Editar
  04:54:13.690  ----- [2068] ReplicatedStorage.Library.Functions.LotteryStruct -----  -  Editar
  04:54:13.690  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local Random_new_ret = Random.new();
return function(p1) -- Line: 32
	--[[
		Upvalues:
			[1] = Random_new_ret
	--]]
	assert(typeof(p1) == "table");
	if #p1 == 0 then
		return nil, 0, 0, 0;
	end
	local v1 = 0;
	local v2 = 0;
	local v3 = -1;
	for key1, val1 in ipairs(p1) do
		local t_chance2 = val1.chance;
		if t_chance2 <= 0 or t_chance2 ~= t_chance2 or t_chance2 == math.huge then continue end
		v1 = v1 + 1;
		v2 = v2 + t_chance2;
		v3 = key1;
	end
	if v1 == 0 then
		return nil, 0, 0, 0;
	end
	local NextNumber_ret = Random_new_ret:NextNumber(0, v2);
	local v4 = NextNumber_ret;
	for key2, val2 in ipairs(p1) do
		local t_chance = val2.chance;
		if t_chance <= 0 or t_chance ~= t_chance or t_chance == math.huge then continue end
		v4 = v4 - t_chance;
		if v4 > 0 and key2 ~= v3 then continue end
		return val2.value, NextNumber_ret / v2, t_chance / v2, key2;
	end
	error("impossible");
end;
  -  Editar
  04:54:13.690    -  Editar
  04:54:13.691  ----- [2069] ReplicatedStorage.Library.Functions.NumberShorten -----  -  Editar
  04:54:13.691  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Commas = require(script.Parent.Commas);
return function(p1, p2) -- Line: 5
	--[[
		Upvalues:
			[1] = m_Commas
	--]]
	if p2 == nil then
		p2 = true;
	end
	local str1 = "";
	local function RoundNumber(p3) -- Line: 13
		--[[
			Upvalues:
				[1] = p2
		--]]
		if not p2 then
			return string.format("%.2f", p3);
		end
		if p3 >= 100 then
			if p3 % 10 == 0 then
				return string.format("%.2f", p3);
			end
			return string.format("%.0f", p3);
		end
		if p3 >= 10 and p3 % 1 ~= 0 then
			if p3 % 1 == 0 then
				return string.format("%.2f", p3);
			end
			return string.format("%.1f", p3);
		end
		return string.format("%.2f", p3);
	end
	local v3;
	if p1 >= 1.e+21 then
		v3 = RoundNumber(p1 / 1.e+21);
		str1 = "Sx";
	elseif p1 >= 1000000000000000000 then
		v3 = RoundNumber(p1 / 1000000000000000000);
		str1 = "Qt";
	elseif p1 >= 1000000000000000 then
		v3 = RoundNumber(p1 / 1000000000000000);
		str1 = "q";
	elseif p1 >= 1000000000000 then
		v3 = RoundNumber(p1 / 1000000000000);
		str1 = "t";
	elseif p1 >= 1000000000 then
		v3 = RoundNumber(p1 / 1000000000);
		str1 = "b";
	elseif p1 >= 1000000 then
		v3 = RoundNumber(p1 / 1000000);
		str1 = "m";
	elseif p1 > 1000 then
		v3 = RoundNumber(p1 / 1000);
		str1 = "k";
	else
		v3 = m_Commas(p1);
	end
	if p1 > 1000 then
		while #v3 > 1 and string.find(v3, "%.") ~= nil and v3:sub(#v3, #v3) == "0" do
			v3 = v3:sub(1, #v3 - 1);
		end
		if v3:sub(#v3, #v3) == "." then
			v3 = v3:sub(1, #v3 - 1);
		end
	end
	local v2 = v3 .. str1;
	if v2 == "1000m" then
		return "1b";
	end
	if v2 == "1000k" then
		return "1m";
	end
	if v2 ~= "1000b" then
		return v2;
	end
	return "1t";
end;
  -  Editar
  04:54:13.691    -  Editar
  04:54:13.691  ----- [2070] ReplicatedStorage.Library.Functions.ParseNumberSmart -----  -  Editar
  04:54:13.691  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local table1 = {
	k = 1000,
	m = 1000000,
	b = 1000000000,
	t = 1000000000000,
	q = 1000000000000000
};
return function(p1) -- Line: 11
	--[[
		Upvalues:
			[1] = table1
	--]]
	local v1 = 1;
	if typeof(p1) == "string" then
		p1 = p1:gsub("[,%s%c%z]", "");
		if #p1 > 0 then
			local v3 = table1[p1:sub(#p1):lower()];
			if v3 then
				v1 = v3;
				p1 = p1:sub(1, #p1 - 1);
			end
		end
	end
	local v2 = tonumber(p1);
	if v2 then
		v2 = v2 * v1;
	end
	return v2;
end;
  -  Editar
  04:54:13.691    -  Editar
  04:54:13.691  ----- [2071] ReplicatedStorage.Library.Functions.PatchTable -----  -  Editar
  04:54:13.691  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 9
	if typeof(p1) == "table" then
		local table1 = {};
		for _, val1 in pairs(p1) do
			table.insert(table1, val1);
		end
		return table1;
	end
	return nil;
end;
  -  Editar
  04:54:13.691    -  Editar
  04:54:13.691  ----- [2072] ReplicatedStorage.Library.Functions.PlayerDist -----  -  Editar
  04:54:13.691  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2) -- Line: 14
	if p1 and p2 then
		local t_Character = p1.Character;
		local t_Character2 = p2.Character;
		if t_Character and t_Character2 then
			local t_PrimaryPart = t_Character.PrimaryPart;
			local t_PrimaryPart2 = t_Character2.PrimaryPart;
			if t_PrimaryPart and t_PrimaryPart2 then
				return (t_PrimaryPart2.Position - t_PrimaryPart.Position).Magnitude;
			end
		end
	end
	return nil;
end;
  -  Editar
  04:54:13.691    -  Editar
  04:54:13.691  ----- [2073] ReplicatedStorage.Library.Functions.QuickValue -----  -  Editar
  04:54:13.691  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local table1 = {
	boolean = "BoolValue",
	number = "NumberValue",
	string = "StringValue",
	BrickColor = "BrickColorValue",
	CFrame = "CFrameValue",
	Color3 = "Color3Value",
	Ray = "RayValue",
	Vector3 = "Vector3Value",
	Instance = "InstanceValue"
};
return function(p1, p2) -- Line: 24
	--[[
		Upvalues:
			[1] = table1
	--]]
	local v1 = table1[typeof(p1)];
	if not v1 then
		error("Value type not supported: " .. typeof(p1));
		return;
	end
	local Instance_new_ret = Instance.new(v1);
	Instance_new_ret.Value = p1;
	if p2 then
		Instance_new_ret.Parent = p2;
	end
	return Instance_new_ret;
end;
  -  Editar
  04:54:13.692    -  Editar
  04:54:13.692  ----- [2074] ReplicatedStorage.Library.Functions.RadDelta -----  -  Editar
  04:54:13.692  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_RadDeltaUnsafe = require(script.Parent.RadDeltaUnsafe);
local m_RadNorm = require(script.Parent.RadNorm);
return function(p1, p2) -- Line: 10
	--[[
		Upvalues:
			[1] = m_RadDeltaUnsafe
			[2] = m_RadNorm
	--]]
	return m_RadDeltaUnsafe(m_RadNorm(p1), m_RadNorm(p2));
end;
  -  Editar
  04:54:13.692    -  Editar
  04:54:13.692  ----- [2075] ReplicatedStorage.Library.Functions.RadDeltaUnsafe -----  -  Editar
  04:54:13.692  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local math_pi = math.pi;
local u1 = math.pi * 2;
return function(p1, p2) -- Line: 11
	--[[
		Upvalues:
			[1] = math_pi
			[2] = u1
	--]]
	local v1 = p2 - p1;
	if math_pi < v1 then
		return v1 - u1;
	end
	if v1 < -math_pi then
		v1 = v1 + u1;
	end
	return v1;
end;
  -  Editar
  04:54:13.692    -  Editar
  04:54:13.692  ----- [2076] ReplicatedStorage.Library.Functions.RadDeltaUnsafeVec -----  -  Editar
  04:54:13.692  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_RadDeltaUnsafe = require(script.Parent.RadDeltaUnsafe);
return function(p1, p2) -- Line: 9
	--[[
		Upvalues:
			[1] = m_RadDeltaUnsafe
	--]]
	return Vector3.new(m_RadDeltaUnsafe(p1.X, p2.X), m_RadDeltaUnsafe(p1.Y, p2.Y), m_RadDeltaUnsafe(p1.Z, p2.Z));
end;
  -  Editar
  04:54:13.692    -  Editar
  04:54:13.692  ----- [2077] ReplicatedStorage.Library.Functions.RadDeltaVec -----  -  Editar
  04:54:13.692  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_RadDeltaUnsafe = require(script.Parent.RadDeltaUnsafe);
local m_RadNorm = require(script.Parent.RadNorm);
return function(p1, p2) -- Line: 11
	--[[
		Upvalues:
			[1] = m_RadDeltaUnsafe
			[2] = m_RadNorm
	--]]
	return Vector3.new(m_RadDeltaUnsafe(m_RadNorm(p1.X), m_RadNorm(p2.X)), m_RadDeltaUnsafe(m_RadNorm(p1.Y), m_RadNorm(p2.Y)), m_RadDeltaUnsafe(m_RadNorm(p1.Z), m_RadNorm(p2.Z)));
end;
  -  Editar
  04:54:13.693    -  Editar
  04:54:13.693  ----- [2078] ReplicatedStorage.Library.Functions.RadNorm -----  -  Editar
  04:54:13.693  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local u1 = math.pi * 2;
return function(p1) -- Line: 10
	--[[
		Upvalues:
			[1] = u1
	--]]
	if p1 < 0 then
		p1 = p1 + math.ceil(-p1 / u1) * u1;
	end
	return p1 % u1;
end;
  -  Editar
  04:54:13.693    -  Editar
  04:54:13.693  ----- [2079] ReplicatedStorage.Library.Functions.RandomizeTable -----  -  Editar
  04:54:13.693  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local Random_new_ret = Random.new();
return function(p1) -- Line: 5
	--[[
		Upvalues:
			[1] = Random_new_ret
	--]]
	for index1 = #p1, 2, -1 do
		local NextInteger_ret = Random_new_ret:NextInteger(1, index1);
		local v1 = p1[NextInteger_ret];
		local v2 = p1[index1];
		p1[index1] = v1;
		p1[NextInteger_ret] = v2;
	end
	return p1;
end;
  -  Editar
  04:54:13.693    -  Editar
  04:54:13.693  ----- [2080] ReplicatedStorage.Library.Functions.RegexEscape -----  -  Editar
  04:54:13.693  return function(_string)
	return _string:gsub("[%(%)%.%%%+%-%*%?%[%^%$%]]", "%%%1")
end
  -  Editar
  04:54:13.693    -  Editar
  04:54:13.693  ----- [2081] ReplicatedStorage.Library.Functions.RemoveIf -----  -  Editar
  04:54:13.694  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2) -- Line: 3
	local v1 = 1;
	local v2 = #p1;
	while v1 <= v2 do
		if p2(p1[v1]) then
			table.remove(p1, v1);
			v2 = v2 - 1;
		else
			v1 = v1 + 1;
		end
	end
end;
  -  Editar
  04:54:13.694    -  Editar
  04:54:13.694  ----- [2082] ReplicatedStorage.Library.Functions.RemoveTable -----  -  Editar
  04:54:13.694  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2) -- Line: 15
	local table_find_ret = table.find(p1, p2);
	if table_find_ret then
		table.remove(p1, table_find_ret);
	end
	return p1;
end;
  -  Editar
  04:54:13.694    -  Editar
  04:54:13.694  ----- [2083] ReplicatedStorage.Library.Functions.ResolutionScale -----  -  Editar
  04:54:13.694  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local t_CurrentCamera = game.Workspace.CurrentCamera;
local u1 = nil;
local u2 = nil;
return function() -- Line: 25
	--[[
		Upvalues:
			[1] = t_CurrentCamera
			[2] = u2
			[3] = u1
	--]]
	local t_ViewportSize = t_CurrentCamera.ViewportSize;
	if t_ViewportSize == u2 then
		return u1;
	end
	local math_clamp_ret = math.clamp(t_ViewportSize.Magnitude / 1800, 0.33, 2);
	u1 = math_clamp_ret;
	u2 = t_ViewportSize;
	return math_clamp_ret;
end;
  -  Editar
  04:54:13.694    -  Editar
  04:54:13.694  ----- [2084] ReplicatedStorage.Library.Functions.ScaleModel -----  -  Editar
  04:54:13.694  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_ScaleParticle = require(script.Parent.ScaleParticle);
return function(p1, p2) -- Line: 20
	--[[
		Upvalues:
			[1] = m_ScaleParticle
	--]]
	for _, val1 in ipairs(typeof(p1) == "table" and p1 or p1:GetChildren()) do
		local v1 = nil;
		local t_CFrame = nil;
		if val1:IsA("Model") then
			local t_PrimaryPart = val1.PrimaryPart;
			if t_PrimaryPart then
				v1 = t_PrimaryPart;
				t_CFrame = t_PrimaryPart.CFrame;
			end
		elseif val1:IsA("BasePart") then
			v1 = val1;
			t_CFrame = val1.CFrame;
			val1.Size = val1.Size * p2;
		end
		for _, descendant2 in pairs(val1:GetDescendants()) do
			if descendant2:IsA("BasePart") then
				descendant2.Size = descendant2.Size * p2;
				if v1 then
					assert(t_CFrame);
					descendant2.CFrame = (t_CFrame + t_CFrame:Inverse() * descendant2.CFrame.Position * p2) * CFrame.fromEulerAnglesXYZ(descendant2.CFrame:ToEulerAnglesXYZ());
					continue;
				end
				v1 = descendant2;
				t_CFrame = descendant2.CFrame;
				continue;
			end
			if descendant2:IsA("Attachment") then
				descendant2.Position = descendant2.Position * p2;
				continue;
			end
			if descendant2:IsA("ParticleEmitter") then
				m_ScaleParticle(descendant2, p2);
				continue;
			end
			if not descendant2:IsA("SpecialMesh") then continue end
			descendant2.Scale = descendant2.Scale * p2;
		end
	end
end;
  -  Editar
  04:54:13.694    -  Editar
  04:54:13.694  ----- [2085] ReplicatedStorage.Library.Functions.ScaleNumberSequence -----  -  Editar
  04:54:13.694  -- Decompiled using Krnl
return function(p1, p2)
	local v2 = {}
	for v16, v11 in ipairs(p1.Keypoints) do
		table.insert(v2, NumberSequenceKeypoint.new(v11.Time, (v11.Value) * p2, (v11.Envelope) * p2))
	end
	return NumberSequence.new(v2)
end
  -  Editar
  04:54:13.695    -  Editar
  04:54:13.695  ----- [2086] ReplicatedStorage.Library.Functions.ScaleParticle -----  -  Editar
  04:54:13.695  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2) -- Line: 14
	for _, val1 in ipairs(typeof(p1) == "table" and p1 or {p1}) do
		local table1 = {};
		for _, val2 in ipairs(val1.Size.Keypoints) do
			table.insert(table1, NumberSequenceKeypoint.new(val2.Time, val2.Value * p2, val2.Envelope * p2));
		end
		val1.Size = NumberSequence.new(table1);
		val1.Drag = val1.Drag * p2;
		val1.VelocityInheritance = val1.VelocityInheritance * p2;
		val1.Speed = NumberRange.new(val1.Speed.Min * p2, val1.Speed.Max * p2);
		val1.Acceleration = Vector3.new(val1.Acceleration.X * p2, val1.Acceleration.Y * p2, val1.Acceleration.Z * p2);
		val1.ZOffset = val1.ZOffset * p2;
	end
end;
  -  Editar
  04:54:13.695    -  Editar
  04:54:13.695  ----- [2087] ReplicatedStorage.Library.Functions.SearchArray -----  -  Editar
  04:54:13.695  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2) -- Line: 16
	return table.find(p1, p2) ~= nil;
end;
  -  Editar
  04:54:13.695    -  Editar
  04:54:13.695  ----- [2088] ReplicatedStorage.Library.Functions.SearchDictionary -----  -  Editar
  04:54:13.695  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2) -- Line: 14
	for key1, val1 in pairs(p1) do
		if val1 ~= p2 then continue end
		return key1;
	end
	return nil;
end;
  -  Editar
  04:54:13.696    -  Editar
  04:54:13.696  ----- [2089] ReplicatedStorage.Library.Functions.Sigmoid -----  -  Editar
  04:54:13.696  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2, p3) -- Line: 6
	if p1 <= 0.000001 then
		return 0;
	end
	if p1 >= 0.999999 then
		return 1;
	end
	local v1 = p2 or 2.718281828459045;
	local v2 = v1 ^ (p3 or 0);
	return v2 / (v2 + (p1 / (1 - p1)) ^ (-v1));
end;
  -  Editar
  04:54:13.696    -  Editar
  04:54:13.696  ----- [2090] ReplicatedStorage.Library.Functions.SolveIK -----  -  Editar
  04:54:13.696  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2, p3, p4) -- Line: 16
	local PointToObjectSpace_ret = p1:PointToObjectSpace(p2);
	local t_Unit = PointToObjectSpace_ret.Unit;
	local t_Magnitude = PointToObjectSpace_ret.Magnitude;
	local Cross_ret = Vector3.new(0, 0, -1):Cross(t_Unit);
	local math_acos_ret = math.acos(-t_Unit.Z);
	local v1 = p1 * CFrame.fromAxisAngle(Cross_ret, math_acos_ret);
	if math.max(p4, p3) - math.min(p4, p3) > t_Magnitude then
		return v1 * CFrame.new(0, 0, math.max(p4, p3) - math.min(p4, p3) - t_Magnitude), -math.pi / 2, math.pi;
	end
	if p3 + p4 < t_Magnitude then
		return v1, math.pi / 2, 0;
	end
	local v2 = -math.acos((-(p4 * p4) + p3 * p3 + t_Magnitude * t_Magnitude) / (p3 * 2 * t_Magnitude));
	return v1, v2 + math.pi / 2, math.acos((p4 * p4 - p3 * p3 + t_Magnitude * t_Magnitude) / (p4 * 2 * t_Magnitude)) - v2;
end;
  -  Editar
  04:54:13.696    -  Editar
  04:54:13.696  ----- [2091] ReplicatedStorage.Library.Functions.StringByte -----  -  Editar
  04:54:13.696  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 13
	local v1 = 0;
	for index1 = 1, string.len(p1) do
		v1 = v1 + string.byte((string.sub(p1, index1, index1)));
	end
	return v1;
end;
  -  Editar
  04:54:13.696    -  Editar
  04:54:13.697  ----- [2092] ReplicatedStorage.Library.Functions.TextStyles -----  -  Editar
  04:54:13.697  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_styles = require(script:WaitForChild("styles"));
local IsStudio_ret = game:GetService("RunService"):IsStudio();
function UTF8sub(p1, p2, p3) -- Line: 22
	p2 = utf8.offset(p1, p2);
	p3 = utf8.offset(p1, p3 + 1) - 1;
	return string.sub(p1, p2, p3);
end
return function(p4, p5) -- Line: 30
	--[[
		Upvalues:
			[1] = IsStudio_ret
			[2] = m_styles
	--]]
	if not IsStudio_ret then
		for key1, _ in pairs(m_styles) do
			local v2 = "%[" .. tostring(key1) .. "]";
			local v3 = "%[/" .. tostring(key1) .. "]";
			p4 = string.gsub(p4, v2, "");
			p4 = string.gsub(p4, v3, "");
		end
		return p4;
	end
	local function Replace(p6, p7) -- Line: 45
		--[[
			Upvalues:
				[1] = m_styles
		--]]
		local v1 = m_styles[p7];
		for index1 = 1, 62 do
			local string_sub_ret = string.sub("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789", index1, index1);
			local UTF8sub_ret = UTF8sub(v1, index1, index1);
			p6 = string.gsub(p6, string_sub_ret, UTF8sub_ret);
		end
		return p6;
	end
	if p5 then
		p4 = Replace(p4, p5);
	end
	if not p5 then
		for key2, _ in pairs(m_styles) do
			local u2 = "%[" .. tostring(key2) .. "]";
			local u3 = "%[/" .. tostring(key2) .. "]";
			local v4 = u2 .. "-.-" .. u3;
			p4 = string.gsub(p4, v4, function(p8) -- Line: 71
				--[[
					Upvalues:
						[1] = Replace
						[2] = u2
						[3] = u3
						[4] = key2
				--]]
				return Replace(string.gsub(string.gsub(p8, u2, ""), u3, ""), key2);
			end);
		end
	end
	return p4;
end;
  -  Editar
  04:54:13.697    -  Editar
  04:54:13.697  ----- [2093] ReplicatedStorage.Library.Functions.TextStyles.styles -----  -  Editar
  04:54:13.697  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local table1 = {
	["blocks"] = "🄰🄱🄲🄳🄴🄵🄶🄷🄸🄹🄺🄻🄼🄽🄾🄿🅀🅁🅂🅃🅄🅅🅆🅇🅈🅉🄰🄱🄲🄳🄴🄵🄶🄷🄸🄹🄺🄻🄼🄽🄾🄿🅀🅁🅂🅃🅄🅅🅆🅇🅈🅉0123456789",
	["bold"] = "𝗮𝗯𝗰𝗱𝗲𝗳𝗴𝗵𝗶𝗷𝗸𝗹𝗺𝗻𝗼𝗽𝗾𝗿𝘀𝘁𝘂𝘃𝘄𝘅𝘆𝘇𝗔𝗕𝗖𝗗𝗘𝗙𝗚𝗛𝗜𝗝𝗞𝗟𝗠𝗡𝗢𝗣𝗤𝗥𝗦𝗧𝗨𝗩𝗪𝗫𝗬𝗭𝟬𝟭𝟮𝟯𝟰𝟱𝟲𝟳𝟴𝟵",
	["circles"] = "ⓐⓑⓒⓓⓔⓕⓖⓗⓘⓙⓚⓛⓜⓝⓞⓟⓠⓡⓢⓣⓤⓥⓦⓧⓨⓩⒶⒷⒸⒹⒺⒻⒼⒽⒾⒿⓀⓁⓂⓃⓄⓅⓆⓇⓈⓉⓊⓋⓌⓍⓎⓏ⓪①②③④⑤⑥⑦⑧⑨",
	["cursive"] = "𝒶𝒷𝒸𝒹𝑒𝒻𝑔𝒽𝒾𝒿𝓀𝓁𝓂𝓃𝑜𝓅𝓆𝓇𝓈𝓉𝓊𝓋𝓌𝓍𝓎𝓏𝒜𝐵𝒞𝒟𝐸𝐹𝒢𝐻𝐼𝒥𝒦𝐿𝑀𝒩𝒪𝒫𝒬𝑅𝒮𝒯𝒰𝒱𝒲𝒳𝒴𝒵𝟢𝟣𝟤𝟥𝟦𝟧𝟨𝟩𝟪𝟫",
	["cursivebold"] = "𝓪𝓫𝓬𝓭𝓮𝓯𝓰𝓱𝓲𝓳𝓴𝓵𝓶𝓷𝓸𝓹𝓺𝓻𝓼𝓽𝓾𝓿𝔀𝔁𝔂𝔃𝓐𝓑𝓒𝓓𝓔𝓕𝓖𝓗𝓘𝓙𝓚𝓛𝓜𝓝𝓞𝓟𝓠𝓡𝓢𝓣𝓤𝓥𝓦𝓧𝓨𝓩0123456789",
	["double"] = "𝕒𝕓𝕔𝕕𝕖𝕗𝕘𝕙𝕚𝕛𝕜𝕝𝕞𝕟𝕠𝕡𝕢𝕣𝕤𝕥𝕦𝕧𝕨𝕩𝕪𝕫𝔸𝔹ℂ𝔻𝔼𝔽𝔾ℍ𝕀𝕁𝕂𝕃𝕄ℕ𝕆ℙℚℝ𝕊𝕋𝕌𝕍𝕎𝕏𝕐ℤ𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡",
	["italic"] = "𝘢𝘣𝘤𝘥𝘦𝘧𝘨𝘩𝘪𝘫𝘬𝘭𝘮𝘯𝘰𝘱𝘲𝘳𝘴𝘵𝘶𝘷𝘸𝘹𝘺𝘻𝘈𝘉𝘊𝘋𝘌𝘍𝘎𝘏𝘐𝘑𝘒𝘓𝘔𝘕𝘖𝘗𝘘𝘙𝘚𝘛𝘜𝘝𝘞𝘟𝘠𝘡0123456789",
	["italicbold"] = "𝙖𝙗𝙘𝙙𝙚𝙛𝙜𝙝𝙞𝙟𝙠𝙡𝙢𝙣𝙤𝙥𝙦𝙧𝙨𝙩𝙪𝙫𝙬𝙭𝙮𝙯𝘼𝘽𝘾𝘿𝙀𝙁𝙂𝙃𝙄𝙅𝙆𝙇𝙈𝙉𝙊𝙋𝙌𝙍𝙎𝙏𝙐𝙑𝙒𝙓𝙔𝙕0123456789",
	["medieval"] = "𝖆𝖇𝖈𝖉𝖊𝖋𝖌𝖍𝖎𝖏𝖐𝖑𝖒𝖓𝖔𝖕𝖖𝖗𝖘𝖙𝖚𝖛𝖜𝖝𝖞𝖟𝕬𝕭𝕮𝕯𝕰𝕱𝕲𝕳𝕴𝕵𝕶𝕷𝕸𝕹𝕺𝕻𝕼𝕽𝕾𝕿𝖀𝖁𝖂𝖃𝖄𝖅0123456789",
	["thin"] = "𝚊𝚋𝚌𝚍𝚎𝚏𝚐𝚑𝚒𝚓𝚔𝚕𝚖𝚗𝚘𝚙𝚚𝚛𝚜𝚝𝚞𝚟𝚠𝚡𝚢𝚣𝙰𝙱𝙲𝙳𝙴𝙵𝙶𝙷𝙸𝙹𝙺𝙻𝙼𝙽𝙾𝙿𝚀𝚁𝚂𝚃𝚄𝚅𝚆𝚇𝚈𝚉𝟶𝟷𝟸𝟹𝟺𝟻𝟼𝟽𝟾𝟿",
	["type"] = "ａｂｃｄｅｆｇｈｉｊｋｌｍｎｏｐｑｒｓｔｕｖｗｘｙｚＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷＸＹＺ０１２３４５６７８９"
};
return table1;
  -  Editar
  04:54:13.697    -  Editar
  04:54:13.697  ----- [2094] ReplicatedStorage.Library.Functions.TimeString -----  -  Editar
  04:54:13.697  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2) -- Line: 16
	local math_round_ret = math.round(p1 / 60 / 60 / 24 - 0.5);
	local math_round_ret2 = math.round(p1 / 60 / 60 % 24 - 0.5);
	local math_round_ret3 = math.round(p1 / 60 % 60 - 0.5);
	local math_round_ret4 = math.round(p1 % 60);
	if p2 then
		if math_round_ret >= 1 then
			return math_round_ret .. "d";
		end
		if math_round_ret2 >= 1 then
			return math_round_ret2 .. "hr";
		end
		if math_round_ret3 >= 1 then
			return math_round_ret3 .. "m";
		end
		return math_round_ret4 .. "s";
	end
	if math_round_ret >= 1 then
		return math_round_ret .. (math_round_ret > 1 and " Days" or " Day");
	end
	if math_round_ret2 >= 1 then
		return math_round_ret2 .. (math_round_ret2 > 1 and " Hours" or " Hour");
	end
	if math_round_ret3 >= 1 then
		return math_round_ret3 .. (math_round_ret3 > 1 and " Minutes" or " Minute");
	end
	return math_round_ret4 .. (math_round_ret4 > 1 and " Seconds" or " Second");
end;
  -  Editar
  04:54:13.697    -  Editar
  04:54:13.697  ----- [2095] ReplicatedStorage.Library.Functions.TimerString -----  -  Editar
  04:54:13.697  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 20
	local v1 = os.date("!%X", p1);
	if p1 <= 3600 then
		v1 = v1:sub(4);
	end
	return v1;
end;
  -  Editar
  04:54:13.697    -  Editar
  04:54:13.697  ----- [2096] ReplicatedStorage.Library.Functions.ToRomanNum -----  -  Editar
  04:54:13.697  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local table1 = {
	"I",
	"V",
	"X",
	"L",
	"C",
	"D",
	"M"
};
local table2 = {
	1,
	5,
	10,
	50,
	100,
	500,
	1000
};
local _ = {
	I = 1,
	V = 5,
	X = 10,
	L = 50,
	C = 100,
	D = 500,
	M = 1000
};
return function(p1) -- Line: 26
	--[[
		Upvalues:
			[1] = table2
			[2] = table1
	--]]
	local tonumber_ret = tonumber(p1);
	if not tonumber_ret or tonumber_ret ~= tonumber_ret then
		error("Unable to convert to number");
	end
	assert(tonumber_ret);
	if tonumber_ret == math.huge then
		error("Unable to convert infinity");
	end
	local v1 = math.floor(tonumber_ret);
	if v1 <= 0 then
		return tostring(v1);
	end
	local v2 = "";
	for index1 = #table2, 1, -1 do
		local v3 = table2[index1];
		while v1 - v3 >= 0 and v1 > 0 do
			v2 = v2 .. table1[index1];
			v1 = v1 - v3;
		end
		for index2 = 1, index1 - 1 do
			local v4 = table2[index2];
			if v1 - (v3 - v4) >= 0 and v1 < v3 and v1 > 0 and v3 - v4 ~= v4 then
				v2 = v2 .. table1[index2] .. table1[index1];
				v1 = v1 - (v3 - v4);
				break;
			end
		end
	end
	return v2;
end;
  -  Editar
  04:54:13.698    -  Editar
  04:54:13.698  ----- [2097] ReplicatedStorage.Library.Functions.Tween -----  -  Editar
  04:54:13.698  --------|     Setting     |--------

--------|    Reference    |--------

--------|    Variables    |--------

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


--[[
	
	Quicker (and limited) way to use TweenService since the default synax takes up a paragraph. Supports tuple of instances.
	
	Functions.Tween(
		instance,				<-- |REQ| 	Instance that will be tweened
		{property = 300},		<-- |REQ|	Dictionary of properties and their values 			
		{speed, style, dir}		<-- |REQ|	Array: Speed (sec), Style (str), Direction (str)	[defaults to: {1, "Sine", "InOut"}]
	)
	
--]]

local TweenService = game:GetService("TweenService");
return function(p1, p2, p3, p4) -- Line: 18
	--[[
		Upvalues:
			[1] = TweenService
	--]]
	local v1 = typeof(p1) == "table" and p1 or {p1};
	local table1 = {};
	for _, val1 in ipairs(v1) do
		local v2;
		if p3 == nil then
			local table2 = {
				1,
				Enum.EasingStyle.Linear,
				Enum.EasingDirection.Out
			};
			v2 = table2;
		else
			v2 = p3;
			if v2[2] == nil then
				v2[2] = Enum.EasingStyle.Sine;
			elseif type(v2[2]) == "string" then
				if string.lower(v2[2]) == "expo" then
					v2[2] = Enum.EasingStyle.Exponential;
				else
					v2[2] = Enum.EasingStyle[v2[2]];
				end
			end
			if v2[3] == nil then
				v2[3] = Enum.EasingDirection.InOut;
			elseif type(v2[3]) == "string" then
				v2[3] = Enum.EasingDirection[v2[3]];
			end
		end
		local TweenInfo_new_ret = TweenInfo.new(unpack(v2));
		local Create_ret = TweenService:Create(val1, TweenInfo_new_ret, p2);
		if p4 then
			task.delay(p4, function() -- Line: 73
				--[[
					Upvalues:
						[1] = Create_ret
				--]]
				Create_ret:Play();
			end);
		else
			Create_ret:Play();
		end
		table.insert(table1, Create_ret);
	end
	
	return unpack(table1);
end;
  -  Editar
  04:54:13.698    -  Editar
  04:54:13.698  ----- [2098] ReplicatedStorage.Library.Functions.UserIdToUsername -----  -  Editar
  04:54:13.698  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local Players = game:GetService("Players");
local table1 = {};
return function(p1) -- Line: 17
	--[[
		Upvalues:
			[1] = table1
			[2] = Players
	--]]
	local v1 = table1[p1];
	if v1 then
		return v1;
	end
	local success, pcall_ret2 = pcall(function() -- Line: 23
		--[[
			Upvalues:
				[1] = Players
				[2] = p1
		--]]
		return Players:GetNameFromUserIdAsync(p1);
	end);
	if not success then
		return "??";
	end
	if pcall_ret2 then
		table1[p1] = pcall_ret2;
		return pcall_ret2;
	end
	return "???";
end;
  -  Editar
  04:54:13.698    -  Editar
  04:54:13.698  ----- [2099] ReplicatedStorage.Library.Functions.VecMax -----  -  Editar
  04:54:13.698  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 3
	return math.max(p1.X, (math.max(p1.Y, p1.Z)));
end;
  -  Editar
  04:54:13.698    -  Editar
  04:54:13.698  ----- [2100] ReplicatedStorage.Library.Functions.VecMin -----  -  Editar
  04:54:13.698  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 3
	return math.min(p1.X, (math.min(p1.Y, p1.Z)));
end;
  -  Editar
  04:54:13.698    -  Editar
  04:54:13.698  ----- [2101] ReplicatedStorage.Library.Functions.VerifyPlayerMagnitude -----  -  Editar
  04:54:13.698  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2, p3) -- Line: 9
	local v1 = p3 or 10;
	if p2 then
		local t_Character = p1.Character;
		if t_Character then
			local t_PrimaryPart = t_Character.PrimaryPart;
			if t_PrimaryPart then
				return (t_PrimaryPart.Position - p2).Magnitude < v1;
			end
		end
	end
	return false;
end;
  -  Editar
  04:54:13.699    -  Editar
  04:54:13.699  ----- [2102] ReplicatedStorage.Library.Functions.Wait -----  -  Editar
  04:54:13.699  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local Random_new_ret = Random.new();
return function(p1, p2) -- Line: 22
	--[[
		Upvalues:
			[1] = Random_new_ret
	--]]
	if p2 then
		p1 = Random_new_ret:NextNumber(p1, p2);
	end
	task.wait(p1);
end;
  -  Editar
  04:54:13.699    -  Editar
  04:54:13.699  ----- [2103] ReplicatedStorage.Library.Functions.Weld -----  -  Editar
  04:54:13.699  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2, p3) -- Line: 17
	local v1 = p3 and "ManualWeld" or "WeldConstraint";
	if p1.Anchored or p2.Anchored then
		v1 = "Motor6D";
	end
	local Instance_new_ret = Instance.new(v1);
	Instance_new_ret.Part0 = p1;
	Instance_new_ret.Part1 = p2;
	if v1 ~= "WeldConstraint" then
		Instance_new_ret.C0 = p1.CFrame:Inverse() * p2.CFrame;
	end
	Instance_new_ret.Parent = p1;
	return Instance_new_ret;
end;
  -  Editar
  04:54:13.699    -  Editar
  04:54:13.699  ----- [2104] ReplicatedStorage.Library.Functions.IsASCII -----  -  Editar
  04:54:13.699  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 3
	assert(typeof(p1) == "string");
	for index1 = 1, #p1 do
		local byte_ret = p1:byte(index1);
		if byte_ret < 32 or byte_ret > 126 then
			return false;
		end
	end
	return true;
end;
  -  Editar
  04:54:13.699    -  Editar
  04:54:13.699  ----- [2105] ReplicatedStorage.Library.Functions.DeepCopyUnsafe -----  -  Editar
  04:54:13.699  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

function deep_copy(p1) -- Line: 3
	if typeof(p1) ~= "table" then
		return p1;
	end
	local table1 = {};
	local v1 = #p1;
	if v1 > 0 then
		for index1 = 1, v1 do
			table.insert(table1, deep_copy(p1[index1]));
		end
	else
		for key1, val1 in next, p1 do
			table1[deep_copy(key1)] = deep_copy(val1);
		end
	end
	return table1;
end
return deep_copy;
  -  Editar
  04:54:13.700    -  Editar
  04:54:13.700  ----- [2106] ReplicatedStorage.Library.Functions.IsGuiClipped -----  -  Editar
  04:54:13.700  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

function isClipped(p1) -- Line: 1
	local t_Parent = p1.Parent;
	local t_AbsolutePosition = t_Parent.AbsolutePosition;
	local v1 = t_AbsolutePosition + t_Parent.AbsoluteSize;
	local t_AbsolutePosition2 = p1.AbsolutePosition;
	local v2 = t_AbsolutePosition2 + p1.AbsoluteSize;
	local function cmpVectors(p2, p3) -- Line: 9
		return p2.X < p3.X and true or p2.Y < p3.Y;
	end
	return t_AbsolutePosition2.X < t_AbsolutePosition.X and true or t_AbsolutePosition2.Y < t_AbsolutePosition.Y or v1.X < v2.X and true or v1.Y < v2.Y;
end
return isClipped;
  -  Editar
  04:54:13.700    -  Editar
  04:54:13.700  ----- [2107] ReplicatedStorage.Library.Functions.BuildQueryString -----  -  Editar
  04:54:13.700  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local HttpService = game:GetService("HttpService");
return function(p1) -- Line: 5
	--[[
		Upvalues:
			[1] = HttpService
	--]]
	local v1 = "?";
	for key1, val1 in pairs(p1) do
		assert(typeof(key1) == "string");
		assert(typeof(val1) == "string");
		v1 = v1 .. HttpService:UrlEncode(key1) .. "=" .. HttpService:UrlEncode(val1) .. "&";
	end
	return v1:sub(1, v1:len() - 1);
end;
  -  Editar
  04:54:13.700    -  Editar
  04:54:13.700  ----- [2108] ReplicatedStorage.Library.Functions.BuildSortedQueryString -----  -  Editar
  04:54:13.700  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local HttpService = game:GetService("HttpService");
return function(p1) -- Line: 5
	--[[
		Upvalues:
			[1] = HttpService
	--]]
	local table1 = {};
	for key1, val1 in pairs(p1) do
		assert(typeof(key1) == "string");
		assert(typeof(val1) == "string" and true or typeof(val1) == "number" and true or typeof(val1) == "boolean");
		table.insert(table1, {
			key1,
			tostring(val1)
		});
	end
	table.sort(table1, function(p2, p3) -- Line: 13
		return p2[1] < p3[1];
	end);
	local v1 = "?";
	for _, val2 in ipairs(table1) do
		v1 = v1 .. HttpService:UrlEncode(val2[1]) .. "=" .. HttpService:UrlEncode(val2[2]) .. "&";
	end
	return v1:sub(1, v1:len() - 1);
end;
  -  Editar
  04:54:13.700    -  Editar
  04:54:13.700  ----- [2109] ReplicatedStorage.Library.Functions.DeepEqualsUnsafe -----  -  Editar
  04:54:13.701  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

function deep_equals(p1, p2) -- Line: 3
	if p1 == p2 then
		return true;
	end
	if type(p1) ~= "table" or type(p2) ~= "table" then
		return false;
	end
	if #p1 ~= #p2 then
		return false;
	end
	for key1, val1 in next, p1 do
		local v1 = p2[key1];
		if v1 ~= nil and deep_equals(val1, v1) then continue end
		return false;
	end
	for key2, _ in next, p2 do
		if p1[key2] ~= nil then continue end
		return false;
	end
	return true;
end
return deep_equals;
  -  Editar
  04:54:13.701    -  Editar
  04:54:13.701  ----- [2110] ReplicatedStorage.Library.Functions.DeepCopy -----  -  Editar
  04:54:13.701  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local function deep_copy(p1, p2) -- Line: 3
	--[[
		Upvalues:
			[1] = deep_copy
	--]]
	if typeof(p1) ~= "table" then
		return p1;
	end
	local table1;
	if p2 then
		local v2 = p2[p1];
		if v2 ~= nil then
			return v2;
		end
		table1 = {};
		p2[p1] = table1;
	else
		table1 = {};
		local table2 = {[p1] = table1};
		p2 = table2;
	end
	local v1 = #p1;
	if v1 > 0 then
		for index1 = 1, v1 do
			table.insert(table1, deep_copy(p1[index1], p2));
		end
	else
		for key1, val1 in next, p1 do
			table1[deep_copy(key1, p2)] = deep_copy(val1, p2);
		end
	end
	local metatable = getmetatable(p1);
	if metatable then
		setmetatable(table1, (deep_copy(metatable, p2)));
	end
	return table1;
end
return deep_copy;
  -  Editar
  04:54:13.701    -  Editar
  04:54:13.701  ----- [2111] ReplicatedStorage.Library.Functions.DistOBBPoint -----  -  Editar
  04:54:13.701  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_DistAABBPoint = require(script.Parent.DistAABBPoint);
return function(p1, p2, p3) -- Line: 7
	--[[
		Upvalues:
			[1] = m_DistAABBPoint
	--]]
	local PointToObjectSpace_ret = p1:PointToObjectSpace(p3);
	local v1, v2, v3 = m_DistAABBPoint(p2, PointToObjectSpace_ret);
	local PointToWorldSpace_ret = p1:PointToWorldSpace(v2);
	return v1, PointToWorldSpace_ret, v3;
end;
  -  Editar
  04:54:13.701    -  Editar
  04:54:13.701  ----- [2112] ReplicatedStorage.Library.Functions.ComputeAABBCustom -----  -  Editar
  04:54:13.701  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2) -- Line: 4
	local t_X = p2.X;
	local t_Y = p2.Y;
	local t_Z = p2.Z;
	local GetComponents_ret1, GetComponents_ret2, GetComponents_ret3, GetComponents_ret4, GetComponents_ret5, GetComponents_ret6, GetComponents_ret7, GetComponents_ret8, GetComponents_ret9, GetComponents_ret10, GetComponents_ret11, GetComponents_ret12 = p1:GetComponents();
	local v1 = (math.abs(GetComponents_ret4) * t_X + math.abs(GetComponents_ret5) * t_Y + math.abs(GetComponents_ret6) * t_Z) * 0.5;
	local v2 = (math.abs(GetComponents_ret7) * t_X + math.abs(GetComponents_ret8) * t_Y + math.abs(GetComponents_ret9) * t_Z) * 0.5;
	local v3 = (math.abs(GetComponents_ret10) * t_X + math.abs(GetComponents_ret11) * t_Y + math.abs(GetComponents_ret12) * t_Z) * 0.5;
	local v4 = GetComponents_ret1 - v1;
	local v5 = GetComponents_ret2 - v2;
	local v6 = GetComponents_ret3 - v3;
	local v7 = GetComponents_ret1 + v1;
	local v8 = GetComponents_ret2 + v2;
	local v9 = GetComponents_ret3 + v3;
	return Vector3.new(v4, v5, v6), Vector3.new(v7, v8, v9);
end;
  -  Editar
  04:54:13.701    -  Editar
  04:54:13.701  ----- [2113] ReplicatedStorage.Library.Functions.ComputeAABBModel -----  -  Editar
  04:54:13.701  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 4
	local v1 = math.huge;
	local v2 = math.huge;
	local v3 = math.huge;
	local v4 = -math.huge;
	local v5 = -math.huge;
	local v6 = -math.huge;
	for _, descendant1 in pairs(p1:GetDescendants()) do
		if not descendant1:IsA("BasePart") then continue end
		local t_CFrame = descendant1.CFrame;
		local t_Size = descendant1.Size;
		local t_X = t_Size.X;
		local t_Y = t_Size.Y;
		local t_Z = t_Size.Z;
		local GetComponents_ret1, GetComponents_ret2, GetComponents_ret3, GetComponents_ret4, GetComponents_ret5, GetComponents_ret6, GetComponents_ret7, GetComponents_ret8, GetComponents_ret9, GetComponents_ret10, GetComponents_ret11, GetComponents_ret12 = t_CFrame:GetComponents();
		local v7 = (math.abs(GetComponents_ret4) * t_X + math.abs(GetComponents_ret5) * t_Y + math.abs(GetComponents_ret6) * t_Z) * 0.5;
		local v8 = (math.abs(GetComponents_ret7) * t_X + math.abs(GetComponents_ret8) * t_Y + math.abs(GetComponents_ret9) * t_Z) * 0.5;
		local v9 = (math.abs(GetComponents_ret10) * t_X + math.abs(GetComponents_ret11) * t_Y + math.abs(GetComponents_ret12) * t_Z) * 0.5;
		if GetComponents_ret1 - v7 < v1 then
			v1 = GetComponents_ret1 - v7;
		end
		if GetComponents_ret2 - v8 < v2 then
			v2 = GetComponents_ret2 - v8;
		end
		if GetComponents_ret3 - v9 < v3 then
			v3 = GetComponents_ret3 - v9;
		end
		if v4 < GetComponents_ret1 + v7 then
			v4 = GetComponents_ret1 + v7;
		end
		if v5 < GetComponents_ret2 + v8 then
			v5 = GetComponents_ret2 + v8;
		end
		if v6 >= GetComponents_ret3 + v9 then continue end
		v6 = GetComponents_ret3 + v9;
	end
	if v1 == math.huge then
		return Vector3.new(), Vector3.new();
	end
	return Vector3.new(v1, v2, v3), Vector3.new(v4, v5, v6);
end;
  -  Editar
  04:54:13.701    -  Editar
  04:54:13.701  ----- [2114] ReplicatedStorage.Library.Functions.VecToColor -----  -  Editar
  04:54:13.701  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 3
	return Color3.new(math.clamp(p1.X, 0, 1), math.clamp(p1.Y, 0, 1), (math.clamp(p1.Z, 0, 1)));
end;
  -  Editar
  04:54:13.702    -  Editar
  04:54:13.702  ----- [2115] ReplicatedStorage.Library.Functions.ColorToVec -----  -  Editar
  04:54:13.702  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 3
	return Vector3.new(p1.R, p1.B, p1.G);
end;
  -  Editar
  04:54:13.702    -  Editar
  04:54:13.702  ----- [2116] ReplicatedStorage.Library.Functions.EvalColorSequence -----  -  Editar
  04:54:13.702  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local _ = Random.new();
return function(p1, p2) -- Line: 5
	local t_Keypoints = p1.Keypoints;
	if #t_Keypoints == 0 then
		return Color3.new();
	end
	p2 = math.clamp(p2, 0, 1);
	if p2 < 1 then
		for index1 = 1, #t_Keypoints - 1 do
			local v1 = t_Keypoints[index1];
			local v2 = t_Keypoints[index1 + 1];
			if v1.Time <= p2 and p2 < v2.Time then
				local v3 = (p2 - v1.Time) / (v2.Time - v1.Time);
				return Color3.new(v1.Value.R + (v2.Value.R - v1.Value.R) * v3, v1.Value.G + (v2.Value.G - v1.Value.G) * v3, v1.Value.B + (v2.Value.B - v1.Value.B) * v3);
			end
		end
	end
	return t_Keypoints[#t_Keypoints].Value;
end;
  -  Editar
  04:54:13.702    -  Editar
  04:54:13.702  ----- [2117] ReplicatedStorage.Library.Functions.EvalSequence -----  -  Editar
  04:54:13.702  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local Random_new_ret = Random.new();
return function(p1, p2) -- Line: 5
	--[[
		Upvalues:
			[1] = Random_new_ret
	--]]
	local t_Keypoints = p1.Keypoints;
	if #t_Keypoints == 0 then
		return 0;
	end
	p2 = math.clamp(p2, 0, 1);
	if p2 < 1 then
		for index1 = 1, #t_Keypoints - 1 do
			local v1 = t_Keypoints[index1];
			local v2 = t_Keypoints[index1 + 1];
			if v1.Time > p2 or p2 >= v2.Time then continue end
			local v3 = (p2 - v1.Time) / (v2.Time - v1.Time);
			local v4 = v1.Value + (v2.Value - v1.Value) * v3;
			local v5 = v1.Envelope + (v2.Envelope - v1.Envelope) * v3;
			if v5 > 0 then
				v4 = v4 + Random_new_ret:NextNumber(-v5, v5);
			end
			return v4;
		end
	end
	return t_Keypoints[#t_Keypoints].Value;
end;
  -  Editar
  04:54:13.702    -  Editar
  04:54:13.702  ----- [2118] ReplicatedStorage.Library.Functions.AsColorSequence -----  -  Editar
  04:54:13.703  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 3
	if typeof(p1) == "Color3" then
		return ColorSequence.new(p1);
	end
	return p1;
end;
  -  Editar
  04:54:13.703    -  Editar
  04:54:13.703  ----- [2119] ReplicatedStorage.Library.Functions.IsFiniteVec2 -----  -  Editar
  04:54:13.703  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_IsFinite = require(script.Parent.IsFinite);
return function(p1) -- Line: 5
	--[[
		Upvalues:
			[1] = m_IsFinite
	--]]
	return m_IsFinite(p1.X) and m_IsFinite(p1.Y);
end;
  -  Editar
  04:54:13.703    -  Editar
  04:54:13.703  ----- [2120] ReplicatedStorage.Library.Functions.IsFiniteVec -----  -  Editar
  04:54:13.703  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_IsFinite = require(script.Parent.IsFinite);
return function(p1) -- Line: 5
	--[[
		Upvalues:
			[1] = m_IsFinite
	--]]
	return m_IsFinite(p1.X) and m_IsFinite(p1.Y) and m_IsFinite(p1.Z);
end;
  -  Editar
  04:54:13.703    -  Editar
  04:54:13.703  ----- [2121] ReplicatedStorage.Library.Functions.IsFiniteCFrame -----  -  Editar
  04:54:13.703  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_IsFinite = require(script.Parent.IsFinite);
return function(p1) -- Line: 5
	--[[
		Upvalues:
			[1] = m_IsFinite
	--]]
	local GetComponents_ret1, GetComponents_ret2, GetComponents_ret3, GetComponents_ret4, GetComponents_ret5, GetComponents_ret6, GetComponents_ret7, GetComponents_ret8, GetComponents_ret9, GetComponents_ret10, GetComponents_ret11, GetComponents_ret12 = p1:GetComponents();
	return m_IsFinite(GetComponents_ret1) and m_IsFinite(GetComponents_ret2) and m_IsFinite(GetComponents_ret3) and m_IsFinite(GetComponents_ret4) and m_IsFinite(GetComponents_ret5) and m_IsFinite(GetComponents_ret6) and m_IsFinite(GetComponents_ret7) and m_IsFinite(GetComponents_ret8) and m_IsFinite(GetComponents_ret9) and m_IsFinite(GetComponents_ret10) and m_IsFinite(GetComponents_ret11) and m_IsFinite(GetComponents_ret12);
end;
  -  Editar
  04:54:13.703    -  Editar
  04:54:13.703  ----- [2122] ReplicatedStorage.Library.Functions.RenderStepped -----  -  Editar
  04:54:13.704  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local RunService = game:GetService("RunService");
return function(p1, p2, p3, p4) -- Line: 5
	--[[
		Upvalues:
			[1] = RunService
	--]]
	assert(typeof(p1) == "function");
	if p2 ~= nil then
		assert(typeof(p2) == "number");
		assert(p2 > 0);
		assert(p2 == p2);
	end
	local table1 = {};
	local u1 = p2 or math.huge;
	local u2 = 0;
	local table2 = {};
	local Connect_ret = nil;
	function table1.Disconnect(_) -- Line: 31
		--[[
			Upvalues:
				[1] = Connect_ret
				[2] = table2
		--]]
		local v1 = Connect_ret;
		if v1 then
			Connect_ret = nil;
			v1:Disconnect();
		end
		local v2 = table2;
		if #v2 > 0 then
			table2 = {};
			for _, val1 in ipairs(v2) do
				val1();
			end
		end
	end
	function table1.IsConnected(_) -- Line: 49
		--[[
			Upvalues:
				[1] = Connect_ret
		--]]
		return Connect_ret ~= nil;
	end
	function table1.Then(p1, p5) -- Line: 53
		--[[
			Upvalues:
				[1] = Connect_ret
				[2] = table2
		--]]
		assert(typeof(p5) == "function");
		if Connect_ret then
			table.insert(table2, p5);
			return p1
		end
		return p5();
	end
	function table1.Wait(p6) -- Line: 65
		while p6:IsConnected() do
			task.wait();
		end
	end
	Connect_ret = RunService.RenderStepped:Connect(function(p7) -- Line: 72
		--[[
			Upvalues:
				[1] = p4
				[2] = u1
				[3] = u2
				[4] = p3
				[5] = p1
				[6] = table1
		--]]
		if not p4 then
			p7 = math.min(p7, u1 - u2);
		end
		u2 = u2 + p7;
		if not p4 then
			u2 = math.min(u2, u1);
		end
		local v3 = p7;
		local v4 = u2;
		if p3 and u1 ~= math.huge then
			v3 = v3 / u1;
			v4 = v4 / u1;
			if not p4 then
				v3 = math.min(v3, 1 - v4);
				v4 = math.min(v4, 1);
			end
		end
		local v5 = p1(v3, v4);
		if v5 or u1 <= u2 then
			table1:Disconnect();
		end
	end);
	return table1;
end;
  -  Editar
  04:54:13.704    -  Editar
  04:54:13.704  ----- [2123] ReplicatedStorage.Library.Functions.Scaler -----  -  Editar
  04:54:13.704  -- !strict

--------|     Setting     |--------

--------|    Reference    |--------

--------|    Variables    |--------
local ScaleNumberSequence = require(script.Parent.ScaleNumberSequence)

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

return function()
	local u2 = {}
	
	local function original(p1, p2, p3)
		local v1 = u2[p1]
		if not v1 then
			v1 = {}
			u2[p1] = v1
		end
		assert(v1)
		local v2 = v1[p2]
		if v2 == nil then
			v2 = p3()
			v1[p2] = v2
		end
		assert(v2 ~= nil)
		return v2
	end
	
	local function apply(p4, p5, p6)
		if p4:IsA("BasePart") then
			local v3 = nil
			local v4 = p4:FindFirstAncestorWhichIsA("Model")
			if v4 then
				v3 = v4.PrimaryPart
			end
			if not v3 then
				v3 = p4.AssemblyRootPart
			end
			local v5 = v3 or p4
			local v6 = v5:GetPivot()
			local l__Size__5 = v5.Size
			local u6 = p4:GetPivot()
			local v7 = original(p4, "ObjectCFrame", function()
				return v6:ToObjectSpace(u6)
			end)
			p4:PivotTo(((v6 * CFrame.new(l__Size__5 * p6) * CFrame.new(original(v5, "Size", function()
				return l__Size__5
			end) * p5 * -p6)):ToWorldSpace(v7 - v7.Position + v7.Position * p5)))
			local l__Size__7 = p4.Size
			p4.Size = original(p4, "Size", function()
				return l__Size__7
			end) * p5
		elseif p4:IsA("SpecialMesh") then
			p4.Scale = original(p4, "Scale", function()
				return p4.Scale
			end) * p5
			p4.Offset = original(p4, "Offset", function()
				return p4.Offset
			end) * p5
		elseif p4:IsA("ParticleEmitter") then
			local TEST = nil
			if typeof(p5) == "Vector3" then
				TEST = (p5.X + p5.Y + p5.Z) / 3
			else
				TEST = p5
			end			
			p4.Size = ScaleNumberSequence(original(p4, "Size", function()
				return p4.Size
			end), TEST) 
			p4.Drag = original(p4, "Drag", function()
				return p4.Drag
			end) * TEST
			p4.VelocityInheritance = original(p4, "VelocityInheritance", function()
				return p4.VelocityInheritance
			end) * TEST
			local v8 = original(p4, "Speed", function()
				return p4.Speed
			end)
			p4.Speed = NumberRange.new(v8.Min * TEST, v8.Max * TEST)
			p4.Acceleration = original(p4, "Acceleration", function()
				return p4.Acceleration
			end) * TEST
			p4.ZOffset = original(p4, "ZOffset", function()
				return p4.ZOffset
			end) * TEST
		elseif p4:IsA("Attachment") then
			local v9 = original(p4, "CFrame", function()
				return p4.CFrame
			end)
			p4.CFrame = v9 - v9.Position + v9.Position * p5
		elseif p4:IsA("BillboardGui") then

		end
		for v10, v11 in ipairs(p4:GetChildren()) do
			apply(v11, p5, p6)		
		end
	end
	
	return function(p7, p8, p9)
		return apply(p7, p8, p9 or Vector3.new())
	end
end  -  Editar
  04:54:13.704    -  Editar
  04:54:13.704  ----- [2124] ReplicatedStorage.Library.Functions.Bezier2 -----  -  Editar
  04:54:13.704  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Comb = require(script.Parent.Comb);
return function(...) -- Line: 5
	--[[
		Upvalues:
			[1] = m_Comb
	--]]
	local table_pack_ret = table.pack(...);
	local u1 = #table_pack_ret - 1;
	local table1 = {};
	for index1 = 0, u1 do
		table.insert(table1, m_Comb(u1, index1));
	end
	return function(p1) -- Line: 25
		--[[
			Upvalues:
				[1] = u1
				[2] = table1
				[3] = table_pack_ret
		--]]
		local v1 = Vector2.new();
		for index2 = 0, u1 do
			v1 = v1 + table_pack_ret[index2 + 1] * (table1[index2 + 1] * math.pow(1 - p1, u1 - index2) * math.pow(p1, index2));
		end
		return v1;
	end;
end;
  -  Editar
  04:54:13.704    -  Editar
  04:54:13.704  ----- [2125] ReplicatedStorage.Library.Functions.Comb -----  -  Editar
  04:54:13.704  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Factorial = require(script.Parent.Factorial);
return function(p1, p2) -- Line: 6
	--[[
		Upvalues:
			[1] = m_Factorial
	--]]
	return m_Factorial(p1) / (m_Factorial(p2) * m_Factorial(p1 - p2));
end;
  -  Editar
  04:54:13.704    -  Editar
  04:54:13.704  ----- [2126] ReplicatedStorage.Library.Functions.Factorial -----  -  Editar
  04:54:13.704  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 4
	local v1 = 1;
	for index1 = 2, p1 do
		v1 = v1 * index1;
	end
	return v1;
end;
  -  Editar
  04:54:13.705    -  Editar
  04:54:13.705  ----- [2127] ReplicatedStorage.Library.Functions.Emit -----  -  Editar
  04:54:13.705  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2, ...) -- Line: 3
	local table1 = {};
	local v1 = 0;
	for _, val1 in ipairs(table.pack(...)) do
		local Clone_ret = val1:Clone();
		Clone_ret.Enabled = false;
		if p2 then
			p2(Clone_ret);
		end
		Clone_ret.Parent = p1;
		table.insert(table1, Clone_ret);
		local v2 = Clone_ret:GetAttribute("EmitCount") or Clone_ret.Rate;
		v1 = math.max(v1, (Clone_ret:GetAttribute("EmitDelay") or 0) + Clone_ret.Lifetime.Max);
		Clone_ret:Emit(v2);
	end
	return table1, v1;
end;
  -  Editar
  04:54:13.705    -  Editar
  04:54:13.705  ----- [2128] ReplicatedStorage.Library.Functions.Transparency -----  -  Editar
  04:54:13.705  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

function applyNumberSequence(p1, p2, p3) -- Line: 3
	local table1 = {};
	for _, val1 in ipairs(p1.Keypoints) do
		local v1 = val1.Value * (1 - p3) + p2 * p3;
		local math_min_ret = math.min(val1.Envelope, (math.max(0, (math.min(v1, 1 - v1)))));
		table.insert(table1, NumberSequenceKeypoint.new(val1.Time, v1, math_min_ret));
	end
	return NumberSequence.new(table1);
end
return function() -- Line: 14
	local table2 = {};
	local function original(p4, p5) -- Line: 16
		--[[
			Upvalues:
				[1] = table2
		--]]
		local v2 = table2[p4];
		if v2 == nil then
			v2 = p5();
			table2[p4] = v2;
		end
		assert(v2 ~= nil);
		return v2;
	end
	local function apply(p6, p7, p8) -- Line: 26
		--[[
			Upvalues:
				[1] = table2
				[2] = apply
		--]]
		if p6:IsA("BasePart") then
			local function v3() -- Anonymous function at line 28
				--[[
					Upvalues:
						[1] = p6
				--]]
				return p6.Transparency;
			end
			local v4 = table2[p6];
			if v4 == nil then
				v4 = v3();
				table2[p6] = v4;
			end
			assert(v4 ~= nil);
			p6.Transparency = v4 * (1 - p8) + p7 * p8;
		elseif p6:IsA("Frame") then
			local function v5() -- Anonymous function at line 31
				--[[
					Upvalues:
						[1] = p6
				--]]
				return p6.Transparency;
			end
			local v6 = table2[p6];
			if v6 == nil then
				v6 = v5();
				table2[p6] = v6;
			end
			assert(v6 ~= nil);
			p6.Transparency = v6 * (1 - p8) + p7 * p8;
		elseif p6:IsA("ParticleEmitter") then
			local function v7() -- Anonymous function at line 34
				--[[
					Upvalues:
						[1] = p6
				--]]
				return p6.Transparency;
			end
			local v8 = table2[p6];
			if v8 == nil then
				v8 = v7();
				table2[p6] = v8;
			end
			assert(v8 ~= nil);
			p6.Transparency = applyNumberSequence(v8, p7, p8);
		elseif p6:IsA("Trail") then
			local function v9() -- Anonymous function at line 37
				--[[
					Upvalues:
						[1] = p6
				--]]
				return p6.Transparency;
			end
			local v10 = table2[p6];
			if v10 == nil then
				v10 = v9();
				table2[p6] = v10;
			end
			assert(v10 ~= nil);
			p6.Transparency = applyNumberSequence(v10, p7, p8);
		end
		for _, child2 in ipairs(p6:GetChildren()) do
			apply(child2, p7, p8);
		end
	end
	return apply;
end;
  -  Editar
  04:54:13.705    -  Editar
  04:54:13.705  ----- [2129] ReplicatedStorage.Library.Functions.FireAt -----  -  Editar
  04:54:13.705  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2, p3) -- Line: 3
	assert(typeof(p1) == "number");
	assert(typeof(p2) == "function");
	if not p3 and workspace:GetServerTimeNow() > p1 then return end
	local bool1 = false;
	local Connect_ret = nil;
	Connect_ret = game:GetService("RunService").Heartbeat:Connect(function(_) -- Line: 15
		--[[
			Upvalues:
				[1] = bool1
				[2] = p1
				[3] = p2
				[4] = Connect_ret
		--]]
		if bool1 then return end
		if workspace:GetServerTimeNow() < p1 then return end
		local success, pcall_ret2 = pcall(p2);
		if success then
			if not pcall_ret2 then return end
		else
			warn(tostring(pcall_ret2));
		end
		bool1 = true;
		Connect_ret:Disconnect();
	end);
end;
  -  Editar
  04:54:13.705    -  Editar
  04:54:13.705  ----- [2130] ReplicatedStorage.Library.Functions.GetCurrentMonth -----  -  Editar
  04:54:13.705  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function() -- Line: 3
	local ServerTimeNow = workspace:GetServerTimeNow();
	return DateTime.fromUnixTimestamp(ServerTimeNow):ToUniversalTime().Month;
end;
  -  Editar
  04:54:13.705    -  Editar
  04:54:13.705  ----- [2131] ReplicatedStorage.Library.Functions.Bezier -----  -  Editar
  04:54:13.706  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Comb = require(script.Parent.Comb);
return function(...) -- Line: 5
	--[[
		Upvalues:
			[1] = m_Comb
	--]]
	local table_pack_ret = table.pack(...);
	local u1 = #table_pack_ret - 1;
	local table1 = {};
	for index1 = 0, u1 do
		table.insert(table1, m_Comb(u1, index1));
	end
	return function(p1) -- Line: 25
		--[[
			Upvalues:
				[1] = u1
				[2] = table1
				[3] = table_pack_ret
		--]]
		local v1 = Vector3.new();
		for index2 = 0, u1 do
			v1 = v1 + table_pack_ret[index2 + 1] * (table1[index2 + 1] * math.pow(1 - p1, u1 - index2) * math.pow(p1, index2));
		end
		return v1;
	end;
end;
  -  Editar
  04:54:13.706    -  Editar
  04:54:13.706  ----- [2132] ReplicatedStorage.Library.Functions.Map -----  -  Editar
  04:54:13.706  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2, p3, p4, p5) -- Line: 4
	return p4 + (p1 - p2) * (p5 - p4) / (p3 - p2);
end;
  -  Editar
  04:54:13.706    -  Editar
  04:54:13.706  ----- [2133] ReplicatedStorage.Library.Functions.Map3 -----  -  Editar
  04:54:13.706  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2, p3, p4, p5) -- Line: 4
	return p4 + (p1 - p2) * (p5 - p4) / (p3 - p2);
end;
  -  Editar
  04:54:13.706    -  Editar
  04:54:13.706  ----- [2134] ReplicatedStorage.Library.Functions.Map2 -----  -  Editar
  04:54:13.706  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2, p3, p4, p5) -- Line: 4
	return p4 + (p1 - p2) * (p5 - p4) / (p3 - p2);
end;
  -  Editar
  04:54:13.706    -  Editar
  04:54:13.706  ----- [2135] ReplicatedStorage.Library.Functions.PlaceInsideRect -----  -  Editar
  04:54:13.707  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2) -- Line: 19
	local v1 = p2.Min.X + p2.Width / 2;
	local v2 = p2.Min.Y + p2.Height / 2;
	local v3 = v1;
	local v4 = v2;
	if v1 < p1.Min.X then
		v3 = p1.Min.X;
	elseif p1.Max.X < v1 then
		v3 = p1.Max.X;
	end
	if v2 < p1.Min.Y then
		v4 = p1.Min.Y;
	elseif p1.Max.Y < v2 then
		v4 = p1.Max.Y;
	end
	local v5 = v3 - v1;
	local v6 = v4 - v2;
	return Rect.new(p2.Min.X + v5, p2.Min.Y + v6, p2.Max.X + v5, p2.Max.Y + v6);
end;
  -  Editar
  04:54:13.707    -  Editar
  04:54:13.707  ----- [2136] ReplicatedStorage.Library.Functions.Gauss -----  -  Editar
  04:54:13.707  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2) -- Line: 3
	local v1 = #p1;
	p1 = table.clone(p1);
	for key1, val1 in ipairs(p1) do
		p1[key1] = table.clone(val1);
	end
	p2 = table.clone(p2);
	for index1 = 1, v1 - 1 do
		local v2 = index1;
		for index3 = index1 + 1, v1 do
			if math.abs(p1[index3][index1]) > math.abs(p1[v2][index1]) then
				v2 = index3;
			end
		end
		if index1 ~= v2 then
			local v3 = p1[v2];
			local v4 = p1[index1];
			p1[index1] = v3;
			p1[v2] = v4;
			local v5 = p2[v2];
			local v6 = p2[index1];
			p2[index1] = v5;
			p2[v2] = v6;
		end
		for index4 = index1 + 1, v1 do
			local v7 = p1[index4][index1] / p1[index1][index1];
			p2[index4] = p2[index4] - v7 * p2[index1];
			for index6 = index1, v1 do
				local v8 = p1[index4];
				v8[index6] = v8[index6] - v7 * p1[index1][index6];
			end
		end
	end
	local table_create_ret = table.create(v1, 0);
	for index2 = v1, 1, -1 do
		table_create_ret[index2] = p2[index2];
		for index5 = index2 + 1, v1 do
			table_create_ret[index2] = table_create_ret[index2] - p1[index2][index5] * table_create_ret[index5];
		end
		table_create_ret[index2] = table_create_ret[index2] / p1[index2][index2];
	end
	return table_create_ret;
end;
  -  Editar
  04:54:13.708    -  Editar
  04:54:13.708  ----- [2137] ReplicatedStorage.Library.Functions.PolyVal -----  -  Editar
  04:54:13.708  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2) -- Line: 3
	local v1 = 0;
	for index1 = 1, #p1 do
		v1 = v1 + p1[index1] * p2 ^ (index1 - 1);
	end
	return v1;
end;
  -  Editar
  04:54:13.709    -  Editar
  04:54:13.709  ----- [2138] ReplicatedStorage.Library.Functions.PolyFit -----  -  Editar
  04:54:13.709  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Gauss = require(script.Parent.Gauss);
return function(p1, p2, p3) -- Line: 5
	--[[
		Upvalues:
			[1] = m_Gauss
	--]]
	local v1 = #p1;
	assert(v1 == #p2);
	local v2 = p3 or v1;
	assert(v2 > 0);
	local table1 = {};
	for index1 = 1, v2 do
		local table_create_ret2 = table.create(v2, 0);
		for index3 = 1, v2 do
			local v4 = 0;
			for index5 = 1, v1 do
				v4 = v4 + p1[index5] ^ (index1 + index3 - 2);
			end
			table_create_ret2[index3] = v4;
		end
		table.insert(table1, table_create_ret2);
	end
	local table_create_ret = table.create(v2, 0);
	for index2 = 1, v2 do
		local v3 = 0;
		for index4 = 1, v1 do
			v3 = v3 + p2[index4] * p1[index4] ^ (index2 - 1);
		end
		table_create_ret[index2] = v3;
	end
	return m_Gauss(table1, table_create_ret);
end;
  -  Editar
  04:54:13.709    -  Editar
  04:54:13.710  ----- [2139] ReplicatedStorage.Library.Functions.PolyFit2 -----  -  Editar
  04:54:13.710  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Gauss = require(script.Parent.Gauss);
return function(p1, p2, p3) -- Line: 5
	--[[
		Upvalues:
			[1] = m_Gauss
	--]]
	local v1 = #p1;
	assert(v1 == #p2);
	local v2 = p3 or v1;
	assert(v2 > 0);
	local table1 = {};
	for index1 = 1, v2 do
		local table_create_ret3 = table.create(v2, 0);
		for index4 = 1, v2 do
			local v6 = 0;
			for index6 = 1, v1 do
				v6 = v6 + p1[index6] ^ (index1 + index4 - 2);
			end
			table_create_ret3[index4] = v6;
		end
		table.insert(table1, table_create_ret3);
	end
	local table_create_ret = table.create(v2, 0);
	local table_create_ret2 = table.create(v2, 0);
	for index2 = 1, v2 do
		local v5 = Vector2.new();
		for index5 = 1, v1 do
			v5 = v5 + p2[index5] * p1[index5] ^ (index2 - 1);
		end
		local t_X = v5.X;
		local t_Y = v5.Y;
		table_create_ret[index2] = t_X;
		table_create_ret2[index2] = t_Y;
	end
	local v3 = m_Gauss(table1, table_create_ret);
	local v4 = m_Gauss(table1, table_create_ret2);
	local table2 = {};
	for index3 = 1, v2 do
		table.insert(table2, Vector2.new(v3[index3], v4[index3]));
	end
	return table2;
end;
  -  Editar
  04:54:13.710    -  Editar
  04:54:13.710  ----- [2140] ReplicatedStorage.Library.Functions.PolyVal2 -----  -  Editar
  04:54:13.710  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2) -- Line: 3
	local v1 = Vector2.new();
	for index1 = 1, #p1 do
		v1 = v1 + p1[index1] * p2 ^ (index1 - 1);
	end
	return v1;
end;
  -  Editar
  04:54:13.710    -  Editar
  04:54:13.710  ----- [2141] ReplicatedStorage.Library.Functions.PolyVal3 -----  -  Editar
  04:54:13.710  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2) -- Line: 3
	local v1 = Vector3.new();
	for index1 = 1, #p1 do
		v1 = v1 + p1[index1] * p2 ^ (index1 - 1);
	end
	return v1;
end;
  -  Editar
  04:54:13.711    -  Editar
  04:54:13.711  ----- [2142] ReplicatedStorage.Library.Functions.PolyFit3 -----  -  Editar
  04:54:13.711  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local m_Gauss = require(script.Parent.Gauss);
return function(p1, p2, p3) -- Line: 5
	--[[
		Upvalues:
			[1] = m_Gauss
	--]]
	local v1 = #p1;
	assert(v1 == #p2);
	local v2 = p3 or v1;
	assert(v2 > 0);
	local table1 = {};
	for index1 = 1, v2 do
		local table_create_ret4 = table.create(v2, 0);
		for index4 = 1, v2 do
			local v7 = 0;
			for index6 = 1, v1 do
				v7 = v7 + p1[index6] ^ (index1 + index4 - 2);
			end
			table_create_ret4[index4] = v7;
		end
		table.insert(table1, table_create_ret4);
	end
	local table_create_ret = table.create(v2, 0);
	local table_create_ret2 = table.create(v2, 0);
	local table_create_ret3 = table.create(v2, 0);
	for index2 = 1, v2 do
		local v6 = Vector3.new();
		for index5 = 1, v1 do
			v6 = v6 + p2[index5] * p1[index5] ^ (index2 - 1);
		end
		local t_X = v6.X;
		local t_Y = v6.Y;
		local t_Z = v6.Z;
		table_create_ret[index2] = t_X;
		table_create_ret2[index2] = t_Y;
		table_create_ret3[index2] = t_Z;
	end
	local v3 = m_Gauss(table1, table_create_ret);
	local v4 = m_Gauss(table1, table_create_ret2);
	local v5 = m_Gauss(table1, table_create_ret3);
	local table2 = {};
	for index3 = 1, v2 do
		table.insert(table2, (Vector3.new(v3[index3], v4[index3], v5[index3])));
	end
	return table2;
end;
  -  Editar
  04:54:13.711    -  Editar
  04:54:13.711  ----- [2143] ReplicatedStorage.Library.Functions.ShallowEqualsUnsafe -----  -  Editar
  04:54:13.711  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

function shallow_equals(p1, p2) -- Line: 3
	if p1 == p2 then
		return true;
	end
	if type(p1) ~= "table" or type(p2) ~= "table" then
		return false;
	end
	if #p1 ~= #p2 then
		return false;
	end
	for key1, val1 in next, p1 do
		local v1 = p2[key1];
		if v1 ~= nil and val1 == v1 then continue end
		return false;
	end
	for key2, _ in next, p2 do
		if p1[key2] ~= nil then continue end
		return false;
	end
	return true;
end
return shallow_equals;
  -  Editar
  04:54:13.711    -  Editar
  04:54:13.711  ----- [2144] ReplicatedStorage.Library.Functions.GetNextScavengerTime -----  -  Editar
  04:54:13.711  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function() -- Line: 18
	local ServerTimeNow = workspace:GetServerTimeNow();
	local ToUniversalTime_ret = DateTime.fromUnixTimestamp(ServerTimeNow + (14 - os.date("!*t").wday) % 7 * 86400):ToUniversalTime();
	local v1 = os.time({
		year = ToUniversalTime_ret.Year,
		month = ToUniversalTime_ret.Month,
		day = ToUniversalTime_ret.Day
	}) + 18000 + 1800;
	if v1 < ServerTimeNow then
		v1 = v1 + 604800;
	end
	return v1 - 3600;
end;
  -  Editar
  04:54:13.711    -  Editar
  04:54:13.711  ----- [2145] ReplicatedStorage.Library.Functions.SplineFit -----  -  Editar
  04:54:13.712  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

function solve_tridiagonal(p1, p2, p3, p4) -- Line: 4
	local v1 = #p2;
	local table1 = {};
	local table2 = {};
	table1[1] = p4[1] / p2[1];
	table2[1] = p3[1] / p2[1];
	for index1 = 2, v1 - 1 do
		local v2 = 1 / (p2[index1] - p1[index1] * table2[index1 - 1]);
		table1[index1] = (p4[index1] - p1[index1] * table1[index1 - 1]) * v2;
		table2[index1] = p3[index1] * v2;
	end
	table1[v1] = (p4[v1] - p1[v1] * table1[v1 - 1]) / (p2[v1] - p1[v1] * table2[v1 - 1]);
	for index2 = v1 - 1, 1, -1 do
		table1[index2] = table1[index2] - table2[index2] * table1[index2 + 1];
	end
	return table1;
end
return function(p5, p6) -- Line: 28
	assert(#p5 == #p6, "x and y arrays must have the same length");
	local u1 = #p5;
	assert(u1 >= 2, "at least two data points are required");
	local table3 = {};
	local table4 = {};
	for index3 = 1, u1 - 1 do
		table3[index3] = p5[index3 + 1] - p5[index3];
		table4[index3] = (p6[index3 + 1] - p6[index3]) / table3[index3];
	end
	local table5 = {};
	local table6 = {};
	local table7 = {};
	local table8 = {};
	for index4 = 2, u1 - 1 do
		table5[index4] = table3[index4 - 1];
		table6[index4] = (table3[index4 - 1] + table3[index4]) * 2;
		table7[index4] = table3[index4];
		table8[index4] = (table4[index4] - table4[index4 - 1]) * 6;
	end
	table6[1] = 1;
	table7[1] = 0;
	table8[1] = 0;
	table5[u1] = 0;
	table6[u1] = 1;
	table8[u1] = 0;
	local solve_tridiagonal_ret = solve_tridiagonal(table5, table6, table7, table8);
	return function(p7) -- evaluate_spline (Line: 68)
		--[[
			Upvalues:
				[1] = p5
				[2] = u1
				[3] = p6
				[4] = solve_tridiagonal_ret
		--]]
		assert(p5[1] <= p7 and p7 <= p5[u1] or false, "t is outside the range of x values");
		if p7 <= p5[1] then
			return p6[1];
		end
		if p5[u1] <= p7 then
			return p6[u1];
		end
		local v3 = 1;
		while v3 < u1 and p5[v3 + 1] <= p7 do
			v3 = v3 + 1;
		end
		local v4 = p5[v3 + 1] - p5[v3];
		local v5 = (solve_tridiagonal_ret[v3 + 1] - solve_tridiagonal_ret[v3]) / (v4 * 6);
		local v6 = solve_tridiagonal_ret[v3] / 2;
		local v7 = (p6[v3 + 1] - p6[v3]) / v4 - v4 * (solve_tridiagonal_ret[v3] * 2 + solve_tridiagonal_ret[v3 + 1]) / 6;
		local v8 = p6[v3];
		local v9 = p7 - p5[v3];
		return v5 * v9 ^ 3 + v6 * v9 ^ 2 + v7 * v9 + v8;
	end;
end;
  -  Editar
  04:54:13.712    -  Editar
  04:54:13.712  ----- [2146] ReplicatedStorage.Library.Functions.ExpFit -----  -  Editar
  04:54:13.712  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

function sum(p1) -- Line: 4
	local v1 = 0;
	for index1 = 1, #p1 do
		v1 = v1 + p1[index1];
	end
	return v1;
end
return function(p2, p3) -- Line: 13
	assert(#p2 == #p3, "x and y arrays must have the same length");
	local v2 = #p2;
	assert(v2 >= 2, "at least two data points are required");
	local v3 = 0;
	for index2 = 1, v2 do
		assert(p3[index2] > 0, "y values must be positive for exponential curve fit");
		v3 = v3 + math.log(p3[index2]);
	end
	local v4 = 0;
	local v5 = 0;
	local v6 = 0;
	local v7 = 0;
	for index3 = 1, v2 do
		v4 = v4 + p2[index3];
		v5 = v5 + p2[index3] ^ 2;
		v6 = v6 + p2[index3] * math.log(p3[index3]);
		v7 = v7 + p3[index3];
	end
	local u1 = (v2 * v6 - v4 * v3) / (v2 * v5 - v4 ^ 2);
	local u2 = v7 / v2 / math.exp(u1 * v4 / v2);
	return function(p4) -- evaluate_curve (Line: 43)
		--[[
			Upvalues:
				[1] = u2
				[2] = u1
		--]]
		return u2 * math.exp(u1 * p4);
	end;
end;
  -  Editar
  04:54:13.712    -  Editar
  04:54:13.712  ----- [2147] ReplicatedStorage.Library.Functions.LotteryCurve -----  -  Editar
  04:54:13.712  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

function cubic_spline(p1, p2) -- Line: 3
	local u1 = #p1;
	local table1 = {};
	local table2 = {};
	local table3 = {};
	local table4 = {};
	local table5 = {};
	local table6 = {};
	local table7 = {};
	local table8 = {};
	for index1 = 1, u1 - 1 do
		table1[index1] = p1[index1 + 1] - p1[index1];
	end
	for index2 = 2, u1 - 1 do
		table2[index2] = (p2[index2 + 1] - p2[index2]) * 3 / table1[index2] - (p2[index2] - p2[index2 - 1]) * 3 / table1[index2 - 1];
	end
	table3[1] = 1;
	table4[1] = 0;
	table5[1] = 0;
	for index3 = 2, u1 - 1 do
		table3[index3] = (p1[index3 + 1] - p1[index3 - 1]) * 2 - table1[index3 - 1] * table4[index3 - 1];
		table4[index3] = table1[index3] / table3[index3];
		table5[index3] = (table2[index3] - table1[index3 - 1] * table5[index3 - 1]) / table3[index3];
	end
	table3[u1] = 1;
	table5[u1] = 0;
	table6[u1] = 0;
	for index4 = u1 - 1, 1, -1 do
		table6[index4] = table5[index4] - table4[index4] * table6[index4 + 1];
		table7[index4] = (p2[index4 + 1] - p2[index4]) / table1[index4] - table1[index4] * (table6[index4 + 1] + table6[index4] * 2) / 3;
		table8[index4] = (table6[index4 + 1] - table6[index4]) / (table1[index4] * 3);
	end
	return function(p5) -- Line: 45
		--[[
			Upvalues:
				[1] = p1
				[2] = p2
				[3] = u1
				[4] = table7
				[5] = table6
				[6] = table8
		--]]
		if p5 <= p1[1] then
			return p2[1];
		end
		if p1[u1] <= p5 then
			return p2[u1];
		end
		local v5 = 1;
		while p1[v5 + 1] < p5 do
			v5 = v5 + 1;
		end
		local v6 = p5 - p1[v5];
		return p2[v5] + table7[v5] * v6 + table6[v5] * v6 ^ 2 + table8[v5] * v6 ^ 3;
	end;
end
return function(p3, p4) -- SmoothedAmounts (Line: 62)
	local v1 = #p3;
	assert(v1 == #p4);
	local v2 = 0;
	for index5 = 1, v1 do
		local v3 = p4[index5];
		assert(v3 > 0);
		assert(v3 == v3);
		assert(v3 ~= math.huge);
		v2 = v2 + v3;
	end
	local table_create_ret = table.create(v1, 0);
	for index6 = 1, v1 do
		table_create_ret[index6] = index6;
	end
	table.sort(table_create_ret, function(p6, p7) -- Line: 82
		--[[
			Upvalues:
				[1] = p4
		--]]
		return p4[p6] > p4[p7];
	end);
	local table_create_ret2 = table.create(v1, 0);
	for index7 = 2, v1 do
		table_create_ret2[index7] = table_create_ret2[index7 - 1] + p4[table_create_ret[index7 - 1]] / v2;
	end
	local u2 = p3[table_create_ret[1]];
	local u3 = p3[table_create_ret[v1]];
	if u2 < u3 then
		local table_create_ret4 = table.create(v1, 0);
		for index10 = 2, v1 do
			assert(p3[table_create_ret[index10 - 1]] <= p3[table_create_ret[index10]]);
		end
		for index11 = 1, v1 do
			local v8 = p3[table_create_ret[index11]];
			assert(v8 == v8);
			assert(v8 ~= -math.huge);
			assert(v8 ~= math.huge);
			table_create_ret4[index11] = 1 / v8;
		end
		local cubic_spline_ret2 = cubic_spline(table_create_ret2, table_create_ret4);
		return function(p9) -- Line: 108
			--[[
				Upvalues:
					[1] = u2
					[2] = u3
					[3] = cubic_spline_ret2
			--]]
			local v9 = p9 or math.random();
			if v9 <= 0 then
				return u2;
			end
			if v9 >= 1 then
				return u3;
			end
			return 1 / cubic_spline_ret2(v9);
		end;
	end
	local table_create_ret3 = table.create(v1, 0);
	for index8 = 2, v1 do
		assert(p3[table_create_ret[index8 - 1]] >= p3[table_create_ret[index8]]);
	end
	for index9 = 1, v1 do
		local v4 = p3[table_create_ret[index9]];
		assert(v4 == v4);
		assert(v4 ~= -math.huge);
		assert(v4 ~= math.huge);
		table_create_ret3[index9] = v4;
	end
	local cubic_spline_ret = cubic_spline(table_create_ret2, table_create_ret3);
	return function(p8) -- Line: 135
		--[[
			Upvalues:
				[1] = u2
				[2] = u3
				[3] = cubic_spline_ret
		--]]
		local v7 = p8 or math.random();
		if v7 <= 0 then
			return u2;
		end
		if v7 >= 1 then
			return u3;
		end
		return cubic_spline_ret(v7);
	end;
end;
  -  Editar
  04:54:13.712    -  Editar
  04:54:13.712  ----- [2148] ReplicatedStorage.Library.Functions.Tasks -----  -  Editar
  04:54:13.712  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function() -- Line: 3
	local table1 = {};
	local table2 = {};
	function table1.track(p1) -- Anonymous function at line 8
		--[[
			Upvalues:
				[1] = table2
		--]]
		table2[p1] = true;
	end
	function table1.cleanup() -- Anonymous function at line 12
		--[[
			Upvalues:
				[1] = table2
		--]]
		for key1, _ in pairs(table2) do
			if coroutine.status(key1) ~= "dead" then continue end
			table2[key1] = nil;
		end
	end
	function table1.spawn(p2, ...) -- Anonymous function at line 20
		--[[
			Upvalues:
				[1] = table1
		--]]
		table1.track(task.spawn(p2, ...));
	end
	function table1.defer(p3, ...) -- Anonymous function at line 24
		--[[
			Upvalues:
				[1] = table1
		--]]
		table1.track(task.defer(p3, ...));
	end
	function table1.delay(p4, p5, ...) -- Anonymous function at line 28
		--[[
			Upvalues:
				[1] = table1
		--]]
		table1.track(task.delay(p4, p5, ...));
	end
	function table1.isDone() -- Anonymous function at line 32
		--[[
			Upvalues:
				[1] = table2
		--]]
		for key2, _ in pairs(table2) do
			if coroutine.status(key2) == "dead" then continue end
			return false;
		end
		return true;
	end
	function table1.wait() -- Anonymous function at line 41
		--[[
			Upvalues:
				[1] = table1
		--]]
		while not table1.isDone() do
			task.wait();
		end
	end
	function table1.waitFor(p6) -- Anonymous function at line 47
		--[[
			Upvalues:
				[1] = table1
		--]]
		local os_clock_ret = os.clock();
		while true do
			if not table1.isDone() then
				if os.clock() - os_clock_ret >= p6 then
					return false;
				end
				task.wait();
				continue;
			end
			return true;
		end
	end
	return table1;
end;
  -  Editar
  04:54:13.712    -  Editar
  04:54:13.712  ----- [2149] ReplicatedStorage.Library.Functions.wcall -----  -  Editar
  04:54:13.713  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, ...) -- Line: 3
	local tostring_ret = nil;
	local tostring_ret2 = nil;
	local table_pack_ret = table.pack(xpcall(p1, function(p2) -- Line: 9
		--[[
			Upvalues:
				[1] = tostring_ret
				[2] = tostring_ret2
		--]]
		tostring_ret = tostring(p2);
		tostring_ret2 = tostring(debug.traceback(nil, 3));
	end, ...));
	if table_pack_ret[1] ~= true then
		warn((("%*\nStack Begin\n%*Stack End"):format(tostring(tostring_ret), (tostring(tostring_ret2)))));
		return false;
	end
	return table.unpack(table_pack_ret);
end;
  -  Editar
  04:54:13.713    -  Editar
  04:54:13.713  ----- [2150] ReplicatedStorage.Library.Functions.twcall -----  -  Editar
  04:54:13.713  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2, ...) -- Line: 3
	local tostring_ret = nil;
	local tostring_ret2 = nil;
	local table_pack_ret = nil;
	local function v1(...) -- Anonymous function at line 11
		--[[
			Upvalues:
				[1] = table_pack_ret
				[2] = p2
				[3] = tostring_ret
				[4] = tostring_ret2
		--]]
		table_pack_ret = table.pack(xpcall(p2, function(p3) -- Line: 12
			--[[
				Upvalues:
					[1] = tostring_ret
					[2] = tostring_ret2
			--]]
			tostring_ret = tostring(p3);
			tostring_ret2 = tostring(debug.traceback(nil, 3));
		end, ...));
	end
	local coroutine_create_ret = coroutine.create(v1);
	local os_clock_ret = os.clock();
	local table_pack_ret2 = table.pack(coroutine.resume(coroutine_create_ret, ...));
	if not table_pack_ret2[1] then
		error(table.unpack(table_pack_ret2, 2));
	end
	while true do
		local coroutine_status_ret = coroutine.status(coroutine_create_ret);
		if table_pack_ret then
			if coroutine_status_ret == "dead" then break end
			local table_pack_ret4 = table.pack(coroutine.resume(coroutine_create_ret));
			coroutine.close(coroutine_create_ret);
			if table_pack_ret4[1] == true then break end
			error(table.unpack(table_pack_ret4, 2));
			break;
		end
		if coroutine_status_ret == "dead" then
			local table_pack_ret3 = table.pack(coroutine.resume(coroutine_create_ret));
			coroutine.close(coroutine_create_ret);
			if table_pack_ret3[1] ~= true then
				error(table.unpack(table_pack_ret3, 2));
			end
			error("died");
		end
		if os.clock() - os_clock_ret >= p1 then
			coroutine.close(coroutine_create_ret);
			return false;
		end
		task.wait();
	end
	coroutine.close(coroutine_create_ret);
	if table_pack_ret[1] ~= true then
		warn((("%*\nStack Begin\n%*Stack End"):format(tostring(tostring_ret), (tostring(tostring_ret2)))));
		return false;
	end
	return table.unpack(table_pack_ret);
end;
  -  Editar
  04:54:13.713    -  Editar
  04:54:13.713  ----- [2151] ReplicatedStorage.Library.Functions.tcall -----  -  Editar
  04:54:13.713  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1, p2, ...) -- Line: 3
	local tostring_ret = nil;
	local tostring_ret2 = nil;
	local table_pack_ret = nil;
	local function v1(...) -- Anonymous function at line 11
		--[[
			Upvalues:
				[1] = table_pack_ret
				[2] = p2
				[3] = tostring_ret
				[4] = tostring_ret2
		--]]
		table_pack_ret = table.pack(xpcall(p2, function(p3) -- Line: 12
			--[[
				Upvalues:
					[1] = tostring_ret
					[2] = tostring_ret2
			--]]
			tostring_ret = tostring(p3);
			tostring_ret2 = tostring(debug.traceback(nil, 3));
		end, ...));
	end
	local coroutine_create_ret = coroutine.create(v1);
	local os_clock_ret = os.clock();
	local table_pack_ret2 = table.pack(coroutine.resume(coroutine_create_ret, ...));
	if not table_pack_ret2[1] then
		error(table.unpack(table_pack_ret2, 2));
	end
	while true do
		local coroutine_status_ret = coroutine.status(coroutine_create_ret);
		if table_pack_ret then
			if coroutine_status_ret == "dead" then break end
			local table_pack_ret4 = table.pack(coroutine.resume(coroutine_create_ret));
			coroutine.close(coroutine_create_ret);
			if table_pack_ret4[1] == true then break end
			error(table.unpack(table_pack_ret4, 2));
			break;
		end
		if coroutine_status_ret == "dead" then
			local table_pack_ret3 = table.pack(coroutine.resume(coroutine_create_ret));
			coroutine.close(coroutine_create_ret);
			if table_pack_ret3[1] ~= true then
				error(table.unpack(table_pack_ret3, 2));
			end
			error("died");
		end
		if os.clock() - os_clock_ret >= p1 then
			coroutine.close(coroutine_create_ret);
			return false;
		end
		task.wait();
	end
	coroutine.close(coroutine_create_ret);
	if table_pack_ret[1] ~= true then
		error(("%*\nStack Begin\n%*Stack End"):format(tostring(tostring_ret), (tostring(tostring_ret2))), 0);
	end
	return table.unpack(table_pack_ret);
end;
  -  Editar
  04:54:13.713    -  Editar
  04:54:13.713  ----- [2152] ReplicatedStorage.Library.Functions.UnpackColor -----  -  Editar
  04:54:13.713  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 3
	assert(#p1 == 3);
	return Color3.new(p1[1], p1[2], p1[3]);
end;
  -  Editar
  04:54:13.713    -  Editar
  04:54:13.713  ----- [2153] ReplicatedStorage.Library.Functions.PackColor -----  -  Editar
  04:54:13.713  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 3
	return {
		p1.R,
		p1.B,
		p1.G
	};
end;
  -  Editar
  04:54:13.713    -  Editar
  04:54:13.713  ----- [2154] ReplicatedStorage.Library.Functions.GlobalSpawner -----  -  Editar
  04:54:13.714  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

local ReplicatedStorage = game:GetService("ReplicatedStorage");
local Players = game:GetService("Players");
local Library = ReplicatedStorage:WaitForChild("Library");
local m_Random = require(Library:WaitForChild("Modules").Random);
local m_wcall = require(script.Parent.wcall);
local _ = {};
return function(p1, p2, p3) -- Line: 15
	--[[
		Upvalues:
			[1] = m_Random
			[2] = Players
			[3] = m_wcall
	--]]
	assert(p1 > 0);
	p2 = math.max(p2, 1);
	local u1 = 1;
	if p1 < u1 then
		u1 = p1;
		p1 = u1;
	end
	local u2 = 1 / p1;
	local ServerTimeNow = workspace:GetServerTimeNow();
	local u3 = math.floor(ServerTimeNow / u1);
	task.defer(function() -- Line: 35
		--[[
			Upvalues:
				[1] = u3
				[2] = u3
				[3] = m_Random
				[4] = u2
				[5] = Players
				[6] = p2
				[7] = m_wcall
				[8] = p3
				[9] = u1
				[10] = ServerTimeNow
		--]]
		while true do
			if u3 > u3 then
				local math_max_ret = math.max(0, math.max(u3, u3 + 1) * u1 - ServerTimeNow);
				task.wait(math_max_ret);
				ServerTimeNow = workspace:GetServerTimeNow();
				u3 = math.floor(ServerTimeNow / u1);
				continue;
			end
			if m_Random.new(u3).number() < u2 and #Players:GetPlayers() / p2 > math.random() then
				m_wcall(p3);
			end
			u3 = u3 + 1;
		end
	end);
end;
  -  Editar
  04:54:13.714    -  Editar
  04:54:13.714  ----- [2155] ReplicatedStorage.Library.Functions.Shuffle -----  -  Editar
  04:54:13.714  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function(p1) -- Line: 4
	for index1 = #p1, 2, -1 do
		local math_random_ret = math.random(index1);
		local v1 = p1[math_random_ret];
		local v2 = p1[index1];
		p1[index1] = v1;
		p1[math_random_ret] = v2;
	end
	return p1;
end;
  -  Editar
  04:54:13.714    -  Editar
  04:54:13.714  ----- [2156] ReplicatedStorage.Library.Functions.GetNextUpdateTime -----  -  Editar
  04:54:13.714  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function() -- Line: 19
	local ServerTimeNow = workspace:GetServerTimeNow();
    local ToUniversalTime_ret = DateTime.fromUnixTimestamp(workspace:GetServerTimeNow() + (14 - os.date("!*t").wday) % 7 * 86400):ToUniversalTime();
	local v1 = os.time({
		year = ToUniversalTime_ret.Year,
		month = ToUniversalTime_ret.Month,
		day = ToUniversalTime_ret.Day
	}) + 18000;
	if v1 < ServerTimeNow then
		v1 = v1 + 604800;
	end
	return v1 - 3600;
end;
  -  Editar
  04:54:13.714    -  Editar
  04:54:13.714  ----- [2157] ReplicatedStorage.Library.Functions.Debounce -----  -  Editar
  04:54:13.714  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function() -- Line: 12
	local bool1 = false;
	return function(p1, p2) -- Line: 16
		--[[
			Upvalues:
				[1] = bool1
		--]]
		if bool1 then return end
		bool1 = true;
		task.delay(p1, function() -- Line: 21
			--[[
				Upvalues:
					[1] = bool1
			--]]
			bool1 = false;
		end);
		p2();
	end;
end;
  -  Editar
  04:54:13.714    -  Editar
  04:54:13.714  ----- [2158] ReplicatedStorage.Library.Functions.ObjectDebounce -----  -  Editar
  04:54:13.714  -- Decompiled with Synapse X v3.0 | https://github.com/synllc

return function() -- Line: 3
	local table1 = {};
	return function(p1, p2, p3) -- Line: 7
		--[[
			Upvalues:
				[1] = table1
		--]]
		if table1[p1] then return end
		table1[p1] = true;
		task.delay(p2, function() -- Line: 12
			--[[
				Upvalues:
					[1] = table1
					[2] = p1
			--]]
			table1[p1] = nil;
		end);
		p3();
	end;
end;
